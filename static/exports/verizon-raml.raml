#%RAML 0.8
title: Verizon
version: '1.3'
documentation:
- title: Verizon
  content: The Verizon Edge Discovery Service API can direct your application clients to connect to the optimal service endpoints for your Multi-access Edge Computing (MEC) applications for every session. The Edge Discovery Service takes into account the current location of a device, its IP anchor location, current network traffic and other factors to determine which 5G Edge platform a device should connect to.
baseUri: https://5gedge.verizon.com/api/mec/eds
securedBy:
- thingspace_oauth:
    scopes:
    - edge:discovery:read
    - edge:serviceprofile:read
    - edge:serviceprofile:write
    - edge:serviceregistry:read
    - edge:serviceregistry:write
    - ts.application.ro
    - ts.mec.fullaccess
    - ts.mec.limitaccess
- VZ-M2M-Token
protocols:
- HTTPS
baseUriParameters: {}
schemas:
- DeleteServiceProfileResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeleteServiceProfileResult",
      "title": "DeleteServiceProfileResult",
      "description": "Response on successful deletion of service profile.",
      "type": "object",
      "properties": {
        "status": {
          "example": "Success",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "message": {
          "example": "Service Profile Deleted",
          "type": "string",
          "maxLength": 32
        }
      }
    }
- UpdateServiceProfileResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UpdateServiceProfileResult",
      "title": "UpdateServiceProfileResult",
      "description": "Response on successful update of service profile.",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "example": "Success",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "message": {
          "description": "Service Profile that are updated or error details in case of an error.",
          "example": "Service Profile Updated",
          "type": "string",
          "maxLength": 32
        }
      }
    }
- ListServiceProfilesResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ListServiceProfilesResult",
      "title": "ListServiceProfilesResult",
      "description": "Response on successful retrieval of service profiles.",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "example": "Success",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "data": {
          "description": "A comma delimited list of all the service profiles registered under your API key.",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          },
          "maxItems": 100
        }
      }
    }
- CreateServiceProfileResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateServiceProfileResult",
      "title": "CreateServiceProfileResult",
      "description": "A successful request returns a serviceProfileId that you can use in subsequent requests.",
      "type": "object",
      "properties": {
        "serviceProfileId": {
          "description": "Unique identifier for a service profile.",
          "example": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
          "type": "string"
        }
      }
    }
- DeregisterServiceEndpointResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeregisterServiceEndpointResult",
      "title": "DeregisterServiceEndpointResult",
      "description": "Response to deregister an application's Service Endpoint from one or more Multi-access Edge Compute (MEC) Platforms.",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "example": "Success",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "message": {
          "description": "EdgeAppServicesID that are deleted or error details in case of an error.",
          "example": "EdgeAppServicesID Deleted",
          "type": "string",
          "maxLength": 32
        }
      }
    }
- UpdateServiceEndpointResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UpdateServiceEndpointResult",
      "title": "UpdateServiceEndpointResult",
      "description": "Response to update registered Service Endpoint information.",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "example": "Success",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "message": {
          "description": "EdgeAppServices are updated or error details in case of an error.",
          "example": "EdgeAppServices are updated",
          "type": "string",
          "maxLength": 64
        }
      }
    }
- ListAllServiceEndpointsResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ListAllServiceEndpointsResult",
      "title": "ListAllServiceEndpointsResult",
      "description": "Response on successful retrieval of all registered service endpoints.",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "type": "string",
          "default": "success",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "data": {
          "description": "A comma delimited list of all registered service endpoints.",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          },
          "maxItems": 100
        }
      }
    }
- RegisterServiceEndpointResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RegisterServiceEndpointResult",
      "title": "RegisterServiceEndpointResult",
      "description": "Response to register Service Endpoints of a deployed application to specified Muli-access Edge Compute (MEC) Platforms.",
      "type": "object",
      "properties": {
        "serviceEndpointsId": {
          "description": "A system-defined string identifier representing one or more registered Service Endpoints.",
          "example": "43f3f7bb-d6c5-4bad-b081-9a3a0df2db98",
          "readOnly": true,
          "type": "string"
        }
      }
    }
- ListOptimalServiceEndpointsResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ListOptimalServiceEndpointsResult",
      "title": "ListOptimalServiceEndpointsResult",
      "description": "Response on successful retrieval of optimal service endpoints for clients.",
      "type": "object",
      "properties": {
        "serviceEndpoints": {
          "description": "An array of optimal Service Endpoint IDs for clients to connect to.",
          "type": "array",
          "items": {
            "id": "ResourcesEdgeHostedService",
            "title": "ResourcesEdgeHostedService",
            "description": "Edge hosted service represented by Service Endpoint definition.",
            "type": "object",
            "properties": {
              "ern": {
                "description": "Edge Resource Name. A string identifier for a set of edge resources.",
                "example": "LASVEGAS_NV_WL",
                "type": "string",
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9-_]{3,32}$"
              },
              "serviceEndpoint": {
                "id": "ResourcesServiceEndpoint",
                "title": "ResourcesServiceEndpoint",
                "description": "Service Endpoint path, address, and port.",
                "type": "object",
                "properties": {
                  "URI": {
                    "description": "URI of Service Endpoint if available.",
                    "example": "http://base_path/some_segment/id",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "\\w+:(/?/?)[^\\s]+"
                  },
                  "FQDN": {
                    "description": "FQDN of Service Endpoint if available.",
                    "example": "thingtest.verizon.com",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9.]{3,32}$"
                  },
                  "IPv4Address": {
                    "description": "IPv4 Address of Service Endpoint if available.",
                    "example": "192.168.11.10",
                    "type": "string",
                    "maxLength": 32
                  },
                  "IPv6Address": {
                    "description": "IPv6 Address of Service Endpoint if available.",
                    "example": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                    "type": "string",
                    "maxLength": 64
                  },
                  "port": {
                    "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
                    "example": 1234,
                    "type": "integer",
                    "minimum": 1.0,
                    "maximum": 10000.0,
                    "format": "int32"
                  }
                }
              },
              "applicationServerProviderId": {
                "description": "Unique ID representing the Edge Application Provider.",
                "example": "AWS",
                "type": "string",
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "applicationId": {
                "description": "Unique ID representing the Edge Application.",
                "example": "IogspaceJan15",
                "type": "string",
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "serviceDescription": {
                "example": "ThieIt",
                "type": "string",
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- ListRegionsResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ListRegionsResult",
      "title": "ListRegionsResult",
      "description": "Response to return an array of all regions in the Verizon 5G Edge service. You can use the region IDs from the response to find optimal Edge platforms or service endpoints.",
      "type": "object",
      "properties": {
        "regions": {
          "description": "An array of all regions in the Verizon 5G Edge service.",
          "type": "array",
          "items": {
            "id": "Region",
            "title": "Region",
            "description": "Information representing a certain geographical or logical area where MEC resources and services are provided.",
            "type": "object",
            "properties": {
              "regionId": {
                "description": "The unique identifier of the region.",
                "example": "consectetur",
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "description": "A relevant and identifiable region name.",
                "example": "US_EAST_1",
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9_]{3,32}$"
              },
              "countryCode": {
                "description": "A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future functionality, so the value returned is 'null'.",
                "example": "nr",
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 3,
                "pattern": "^[A-Za-z0-9]{2,3}$"
              },
              "metro": {
                "description": "The metropolitan area or 'City' value.  This is future functionality, so the value returned is 'null'.",
                "example": "e1D",
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "area": {
                "description": "This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the value returned is 'null'.",
                "example": "IdUESF",
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- ListMECPlatformsResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ListMECPlatformsResult",
      "title": "ListMECPlatformsResult",
      "description": "Response to return the optimal 5G Edge platforms for deployment based on a region, service profile of the service that you want to deploy or user equipment.",
      "type": "object",
      "properties": {
        "MECPlatforms": {
          "description": "A list of optimal MEC Platforms where you can register your deployed application.",
          "type": "array",
          "items": {
            "id": "MECPlatformResource",
            "title": "MECPlatformResource",
            "description": "5G Edge platform used for deployment of a service. The ern of each platform contains the name of the matching AWS Wavelength zone that can be used when deploying.",
            "type": "object",
            "properties": {
              "ern": {
                "description": "Edge Resource Name. A string identifier for a set of edge resources.",
                "example": "5x4VBwmfZbzSL3",
                "type": "string",
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9-]{3,32}$"
              },
              "zone": {
                "description": "Unique identifier representing a zone. *Note:* This will have a null value as a placeholder.",
                "example": "e5oV52kMGjDLhnJSsLJZL",
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "region": {
                "description": "MEC region name. Current valid values are US_WEST_2 and US_EAST_1.",
                "example": "US_WEST_2",
                "type": "string"
              },
              "status": {
                "title": "MECPlatformStatus",
                "description": "Status of the MEC Platform (default is 'unknown')",
                "type": "string",
                "enum": [
                  "Active",
                  "Inactive",
                  "unknown"
                ]
              },
              "properties": {}
            }
          },
          "maxItems": 100
        }
      }
    }
- ClientType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ClientType",
      "description": "The category of application client.",
      "type": "string",
      "enum": [
        "V2X",
        "ComputerVision",
        "MachineLearning",
        "IoT",
        "Gaming",
        "AR",
        "VR",
        "Analytics",
        "Robotics"
      ]
    }
- ResourcesServiceProfile: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ResourcesServiceProfile",
      "title": "ResourcesServiceProfile",
      "description": "Information about the resource requirements and service characteristics of an edge application. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Does not include serviceProfileId",
      "type": "object",
      "properties": {
        "clientType": {
          "title": "ClientType",
          "description": "The category of application client.",
          "type": "string",
          "enum": [
            "V2X",
            "ComputerVision",
            "MachineLearning",
            "IoT",
            "Gaming",
            "AR",
            "VR",
            "Analytics",
            "Robotics"
          ]
        },
        "ecspFilter": {
          "description": "Identity of the preferred Edge Computing Service Provider.",
          "example": "Verizon",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "clientSchedule": {
          "description": "The expected operation schedule of the application client (e.g. time windows).",
          "example": "time windows",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        },
        "clientServiceArea": {
          "description": "The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.",
          "example": "BAY AREA",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        },
        "networkResources": {
          "id": "NetworkResourcesType",
          "title": "NetworkResourcesType",
          "description": "Network resources of a service profile.",
          "type": "object",
          "properties": {
            "maxLatencyMs": {
              "description": "Maximum response time or latency that the application can handle, in milliseconds. Note: this value must be in multiples of 5.",
              "example": 20,
              "type": "integer",
              "minimum": 5.0,
              "maximum": 1000.0,
              "format": "int32"
            },
            "minBandwidthKbits": {
              "description": "Minimum required connection bandwidth in Kbit/s for the application.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 10000.0,
              "format": "int32"
            },
            "serviceContinuitySupport": {
              "description": "Indicates if service continuity support is required or not for the application.",
              "example": true,
              "type": "boolean"
            },
            "maxRequestRate": {
              "description": "Maximum request rate that the application can handle.",
              "example": 15,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "minAvailability": {
              "description": "Minimum availability required for the server.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            }
          },
          "required": [
            "maxLatencyMs"
          ]
        },
        "computeResources": {
          "id": "ComputeResourcesType",
          "title": "ComputeResourcesType",
          "description": "Compute resources of a service profile.",
          "type": "object",
          "properties": {
            "GPU": {
              "id": "GPU",
              "title": "GPU",
              "description": "GPU resources of a service profile.",
              "type": "object",
              "properties": {
                "minCoreClockMHz": {
                  "description": "Minimum Core Clock value in megahertz.",
                  "example": 1,
                  "type": "integer",
                  "minimum": 1.0,
                  "maximum": 10000.0,
                  "format": "int32"
                },
                "minMemoryClockMHz": {
                  "description": "Minimum Memory Clock value in megahertz.",
                  "example": 35740,
                  "type": "integer",
                  "minimum": 1.0,
                  "maximum": 100000.0,
                  "format": "int32"
                },
                "minBandwidthGBs": {
                  "description": "Minimum GPU bandwidth in GB/s.",
                  "example": 588,
                  "type": "integer",
                  "minimum": 1.0,
                  "maximum": 1000.0,
                  "format": "int32"
                },
                "minTFLOPS": {
                  "description": "Minimum Floating Point Operations Per Second in Teraflops.",
                  "example": 33,
                  "type": "integer",
                  "minimum": 1.0,
                  "maximum": 100.0,
                  "format": "int32"
                }
              }
            },
            "minRAMGB": {
              "description": "Minimum RAM required in Gigabytes.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "minStorageGB": {
              "description": "Minimum storage requirement in Gigabytes.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            }
          }
        },
        "properties": {
          "id": "MECPlatformsAdditionalSupportInfo",
          "title": "MECPlatformsAdditionalSupportInfo",
          "description": "Additional service support information for the MEC platform.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of additional service support information for the MEC platform.",
              "type": "string",
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "data": {
              "id": "MECPlatformsAdditionalSupportInfoData",
              "title": "MECPlatformsAdditionalSupportInfoData",
              "description": "Data about additional service support information for the MEC platform.",
              "type": "object",
              "properties": {
                "additionalInfo": {
                  "type": "string",
                  "maxLength": 32
                }
              }
            }
          }
        }
      },
      "required": [
        "clientType"
      ]
    }
- ResourcesServiceProfileWithId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ResourcesServiceProfileWithId",
      "title": "ResourcesServiceProfileWithId",
      "description": "Information about the resource requirements and service characteristics of an edge application. Includes serviceProfileId. Used when retrieving a service profile.",
      "type": "object",
      "properties": {
        "clientType": {
          "title": "ClientType",
          "description": "The category of application client.",
          "type": "string",
          "enum": [
            "V2X",
            "ComputerVision",
            "MachineLearning",
            "IoT",
            "Gaming",
            "AR",
            "VR",
            "Analytics",
            "Robotics"
          ]
        },
        "serviceProfileId": {
          "description": "Unique identifier for a service profile.",
          "example": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
          "type": "string"
        },
        "ecspFilter": {
          "description": "Identity of the preferred Edge Computing Service Provider.",
          "example": "Verizon",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "clientSchedule": {
          "description": "The expected operation schedule of the application client (e.g. time windows).",
          "example": "time windows",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        },
        "clientServiceArea": {
          "description": "The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.",
          "example": "BAY AREA",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        },
        "networkResources": {
          "id": "NetworkResourcesType",
          "title": "NetworkResourcesType",
          "description": "Network resources of a service profile.",
          "type": "object",
          "properties": {
            "maxLatencyMs": {
              "description": "Maximum response time or latency that the application can handle, in milliseconds. Note: this value must be in multiples of 5.",
              "example": 20,
              "type": "integer",
              "minimum": 5.0,
              "maximum": 1000.0,
              "format": "int32"
            },
            "minBandwidthKbits": {
              "description": "Minimum required connection bandwidth in Kbit/s for the application.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 10000.0,
              "format": "int32"
            },
            "serviceContinuitySupport": {
              "description": "Indicates if service continuity support is required or not for the application.",
              "example": true,
              "type": "boolean"
            },
            "maxRequestRate": {
              "description": "Maximum request rate that the application can handle.",
              "example": 15,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "minAvailability": {
              "description": "Minimum availability required for the server.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            }
          },
          "required": [
            "maxLatencyMs"
          ]
        },
        "computeResources": {
          "id": "ComputeResourcesType",
          "title": "ComputeResourcesType",
          "description": "Compute resources of a service profile.",
          "type": "object",
          "properties": {
            "GPU": {
              "id": "GPU",
              "title": "GPU",
              "description": "GPU resources of a service profile.",
              "type": "object",
              "properties": {
                "minCoreClockMHz": {
                  "description": "Minimum Core Clock value in megahertz.",
                  "example": 1,
                  "type": "integer",
                  "minimum": 1.0,
                  "maximum": 10000.0,
                  "format": "int32"
                },
                "minMemoryClockMHz": {
                  "description": "Minimum Memory Clock value in megahertz.",
                  "example": 35740,
                  "type": "integer",
                  "minimum": 1.0,
                  "maximum": 100000.0,
                  "format": "int32"
                },
                "minBandwidthGBs": {
                  "description": "Minimum GPU bandwidth in GB/s.",
                  "example": 588,
                  "type": "integer",
                  "minimum": 1.0,
                  "maximum": 1000.0,
                  "format": "int32"
                },
                "minTFLOPS": {
                  "description": "Minimum Floating Point Operations Per Second in Teraflops.",
                  "example": 33,
                  "type": "integer",
                  "minimum": 1.0,
                  "maximum": 100.0,
                  "format": "int32"
                }
              }
            },
            "minRAMGB": {
              "description": "Minimum RAM required in Gigabytes.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "minStorageGB": {
              "description": "Minimum storage requirement in Gigabytes.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            }
          }
        },
        "properties": {
          "id": "MECPlatformsAdditionalSupportInfo",
          "title": "MECPlatformsAdditionalSupportInfo",
          "description": "Additional service support information for the MEC platform.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Type of additional service support information for the MEC platform.",
              "type": "string",
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "data": {
              "id": "MECPlatformsAdditionalSupportInfoData",
              "title": "MECPlatformsAdditionalSupportInfoData",
              "description": "Data about additional service support information for the MEC platform.",
              "type": "object",
              "properties": {
                "additionalInfo": {
                  "type": "string",
                  "maxLength": 32
                }
              }
            }
          }
        }
      },
      "required": [
        "clientType"
      ]
    }
- MECPlatformsAdditionalSupportInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECPlatformsAdditionalSupportInfo",
      "title": "MECPlatformsAdditionalSupportInfo",
      "description": "Additional service support information for the MEC platform.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of additional service support information for the MEC platform.",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "data": {
          "id": "MECPlatformsAdditionalSupportInfoData",
          "title": "MECPlatformsAdditionalSupportInfoData",
          "description": "Data about additional service support information for the MEC platform.",
          "type": "object",
          "properties": {
            "additionalInfo": {
              "type": "string",
              "maxLength": 32
            }
          }
        }
      }
    }
- MECPlatformsAdditionalSupportInfoData: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECPlatformsAdditionalSupportInfoData",
      "title": "MECPlatformsAdditionalSupportInfoData",
      "description": "Data about additional service support information for the MEC platform.",
      "type": "object",
      "properties": {
        "additionalInfo": {
          "type": "string",
          "maxLength": 32
        }
      }
    }
- ResourcesEdgeHostedService: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ResourcesEdgeHostedService",
      "title": "ResourcesEdgeHostedService",
      "description": "Edge hosted service represented by Service Endpoint definition.",
      "type": "object",
      "properties": {
        "ern": {
          "description": "Edge Resource Name. A string identifier for a set of edge resources.",
          "example": "LASVEGAS_NV_WL",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9-_]{3,32}$"
        },
        "serviceEndpoint": {
          "id": "ResourcesServiceEndpoint",
          "title": "ResourcesServiceEndpoint",
          "description": "Service Endpoint path, address, and port.",
          "type": "object",
          "properties": {
            "URI": {
              "description": "URI of Service Endpoint if available.",
              "example": "http://base_path/some_segment/id",
              "type": "string",
              "maxLength": 32,
              "pattern": "\\w+:(/?/?)[^\\s]+"
            },
            "FQDN": {
              "description": "FQDN of Service Endpoint if available.",
              "example": "thingtest.verizon.com",
              "type": "string",
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9.]{3,32}$"
            },
            "IPv4Address": {
              "description": "IPv4 Address of Service Endpoint if available.",
              "example": "192.168.11.10",
              "type": "string",
              "maxLength": 32
            },
            "IPv6Address": {
              "description": "IPv6 Address of Service Endpoint if available.",
              "example": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
              "type": "string",
              "maxLength": 64
            },
            "port": {
              "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
              "example": 1234,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 10000.0,
              "format": "int32"
            }
          }
        },
        "applicationServerProviderId": {
          "description": "Unique ID representing the Edge Application Provider.",
          "example": "AWS",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "applicationId": {
          "description": "Unique ID representing the Edge Application.",
          "example": "IogspaceJan15",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "serviceDescription": {
          "example": "ThieIt",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- ResourcesEdgeHostedServiceWithProfileId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ResourcesEdgeHostedServiceWithProfileId",
      "title": "ResourcesEdgeHostedServiceWithProfileId",
      "description": "Edge hosted service represented by Service Endpoint definition.",
      "type": "object",
      "properties": {
        "ern": {
          "description": "Edge Resource Name. A string identifier for a set of edge resources.",
          "example": "us-east-1-wl1-atl-wlz-1",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9-]{3,32}$"
        },
        "serviceEndpoint": {
          "id": "ResourcesServiceEndpoint",
          "title": "ResourcesServiceEndpoint",
          "description": "Service Endpoint path, address, and port.",
          "type": "object",
          "properties": {
            "URI": {
              "description": "URI of Service Endpoint if available.",
              "example": "http://base_path/some_segment/id",
              "type": "string",
              "maxLength": 32,
              "pattern": "\\w+:(/?/?)[^\\s]+"
            },
            "FQDN": {
              "description": "FQDN of Service Endpoint if available.",
              "example": "thingtest.verizon.com",
              "type": "string",
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9.]{3,32}$"
            },
            "IPv4Address": {
              "description": "IPv4 Address of Service Endpoint if available.",
              "example": "192.168.11.10",
              "type": "string",
              "maxLength": 32
            },
            "IPv6Address": {
              "description": "IPv6 Address of Service Endpoint if available.",
              "example": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
              "type": "string",
              "maxLength": 64
            },
            "port": {
              "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
              "example": 1234,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 10000.0,
              "format": "int32"
            }
          }
        },
        "applicationServerProviderId": {
          "description": "Unique ID representing the Edge Application Provider.",
          "example": "AWS",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "applicationId": {
          "description": "Unique ID representing the Edge Application.",
          "example": "IogspaceJan15",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "serviceDescription": {
          "example": "ThieIt",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "serviceProfileID": {
          "description": "The system assigned ID of the service profile.",
          "example": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
          "type": "string"
        }
      }
    }
- ResourcesServiceEndpoint: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ResourcesServiceEndpoint",
      "title": "ResourcesServiceEndpoint",
      "description": "Service Endpoint path, address, and port.",
      "type": "object",
      "properties": {
        "URI": {
          "description": "URI of Service Endpoint if available.",
          "example": "http://base_path/some_segment/id",
          "type": "string",
          "maxLength": 32,
          "pattern": "\\w+:(/?/?)[^\\s]+"
        },
        "FQDN": {
          "description": "FQDN of Service Endpoint if available.",
          "example": "thingtest.verizon.com",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9.]{3,32}$"
        },
        "IPv4Address": {
          "description": "IPv4 Address of Service Endpoint if available.",
          "example": "192.168.11.10",
          "type": "string",
          "maxLength": 32
        },
        "IPv6Address": {
          "description": "IPv6 Address of Service Endpoint if available.",
          "example": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
          "type": "string",
          "maxLength": 64
        },
        "port": {
          "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
          "example": 1234,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 10000.0,
          "format": "int32"
        }
      }
    }
- Region: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Region",
      "title": "Region",
      "description": "Information representing a certain geographical or logical area where MEC resources and services are provided.",
      "type": "object",
      "properties": {
        "regionId": {
          "description": "The unique identifier of the region.",
          "example": "consectetur",
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "description": "A relevant and identifiable region name.",
          "example": "US_EAST_1",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9_]{3,32}$"
        },
        "countryCode": {
          "description": "A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future functionality, so the value returned is 'null'.",
          "example": "nr",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 3,
          "pattern": "^[A-Za-z0-9]{2,3}$"
        },
        "metro": {
          "description": "The metropolitan area or 'City' value.  This is future functionality, so the value returned is 'null'.",
          "example": "e1D",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "area": {
          "description": "This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the value returned is 'null'.",
          "example": "IdUESF",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- MECPlatformStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "MECPlatformStatus",
      "description": "Status of the MEC Platform (default is 'unknown')",
      "type": "string",
      "enum": [
        "Active",
        "Inactive",
        "unknown"
      ]
    }
- MECPlatformResource: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECPlatformResource",
      "title": "MECPlatformResource",
      "description": "5G Edge platform used for deployment of a service. The ern of each platform contains the name of the matching AWS Wavelength zone that can be used when deploying.",
      "type": "object",
      "properties": {
        "ern": {
          "description": "Edge Resource Name. A string identifier for a set of edge resources.",
          "example": "5x4VBwmfZbzSL3",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9-]{3,32}$"
        },
        "zone": {
          "description": "Unique identifier representing a zone. *Note:* This will have a null value as a placeholder.",
          "example": "e5oV52kMGjDLhnJSsLJZL",
          "type": [
            "string",
            "null"
          ],
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "region": {
          "description": "MEC region name. Current valid values are US_WEST_2 and US_EAST_1.",
          "example": "US_WEST_2",
          "type": "string"
        },
        "status": {
          "title": "MECPlatformStatus",
          "description": "Status of the MEC Platform (default is 'unknown')",
          "type": "string",
          "enum": [
            "Active",
            "Inactive",
            "unknown"
          ]
        },
        "properties": {}
      }
    }
- NetworkResourcesType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "NetworkResourcesType",
      "title": "NetworkResourcesType",
      "description": "Network resources of a service profile.",
      "type": "object",
      "properties": {
        "maxLatencyMs": {
          "description": "Maximum response time or latency that the application can handle, in milliseconds. Note: this value must be in multiples of 5.",
          "example": 20,
          "type": "integer",
          "minimum": 5.0,
          "maximum": 1000.0,
          "format": "int32"
        },
        "minBandwidthKbits": {
          "description": "Minimum required connection bandwidth in Kbit/s for the application.",
          "example": 1,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 10000.0,
          "format": "int32"
        },
        "serviceContinuitySupport": {
          "description": "Indicates if service continuity support is required or not for the application.",
          "example": true,
          "type": "boolean"
        },
        "maxRequestRate": {
          "description": "Maximum request rate that the application can handle.",
          "example": 15,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "minAvailability": {
          "description": "Minimum availability required for the server.",
          "example": 1,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 100.0,
          "format": "int32"
        }
      },
      "required": [
        "maxLatencyMs"
      ]
    }
- ComputeResourcesType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ComputeResourcesType",
      "title": "ComputeResourcesType",
      "description": "Compute resources of a service profile.",
      "type": "object",
      "properties": {
        "GPU": {
          "id": "GPU",
          "title": "GPU",
          "description": "GPU resources of a service profile.",
          "type": "object",
          "properties": {
            "minCoreClockMHz": {
              "description": "Minimum Core Clock value in megahertz.",
              "example": 1,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 10000.0,
              "format": "int32"
            },
            "minMemoryClockMHz": {
              "description": "Minimum Memory Clock value in megahertz.",
              "example": 35740,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100000.0,
              "format": "int32"
            },
            "minBandwidthGBs": {
              "description": "Minimum GPU bandwidth in GB/s.",
              "example": 588,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 1000.0,
              "format": "int32"
            },
            "minTFLOPS": {
              "description": "Minimum Floating Point Operations Per Second in Teraflops.",
              "example": 33,
              "type": "integer",
              "minimum": 1.0,
              "maximum": 100.0,
              "format": "int32"
            }
          }
        },
        "minRAMGB": {
          "description": "Minimum RAM required in Gigabytes.",
          "example": 1,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "minStorageGB": {
          "description": "Minimum storage requirement in Gigabytes.",
          "example": 1,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 100.0,
          "format": "int32"
        }
      }
    }
- GPU: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GPU",
      "title": "GPU",
      "description": "GPU resources of a service profile.",
      "type": "object",
      "properties": {
        "minCoreClockMHz": {
          "description": "Minimum Core Clock value in megahertz.",
          "example": 1,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 10000.0,
          "format": "int32"
        },
        "minMemoryClockMHz": {
          "description": "Minimum Memory Clock value in megahertz.",
          "example": 35740,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 100000.0,
          "format": "int32"
        },
        "minBandwidthGBs": {
          "description": "Minimum GPU bandwidth in GB/s.",
          "example": 588,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 1000.0,
          "format": "int32"
        },
        "minTFLOPS": {
          "description": "Minimum Floating Point Operations Per Second in Teraflops.",
          "example": 33,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 100.0,
          "format": "int32"
        }
      }
    }
- EdgeDiscoveryResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "EdgeDiscoveryResult",
      "title": "EdgeDiscoveryResult",
      "description": "Base type for all errors.",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code or status of response.",
          "type": "string",
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "message": {
          "description": "Error details.",
          "type": "string",
          "maxLength": 32
        },
        "data": {
          "id": "EdgeDiscoveryResultData",
          "title": "EdgeDiscoveryResultData",
          "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
          "type": "object",
          "properties": {
            "additionalMessage": {
              "type": "string",
              "maxLength": 32
            }
          }
        }
      },
      "required": [
        "status",
        "message"
      ]
    }
- EdgeDiscoveryResultData: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "EdgeDiscoveryResultData",
      "title": "EdgeDiscoveryResultData",
      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
      "type": "object",
      "properties": {
        "additionalMessage": {
          "type": "string",
          "maxLength": 32
        }
      }
    }
- UserEquipmentIdentityType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "UserEquipmentIdentityType",
      "description": "Type of User Equipment identifier used in `UEIdentity`.",
      "example": "IPAddress",
      "type": "string",
      "enum": [
        "IPAddress"
      ]
    }
- Account: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Account",
      "title": "Account",
      "description": "Returns information about a specified account.",
      "example": {
        "accountName": "Chintan_CPNStaticBulk",
        "accountNumber": "1234567890-77777",
        "organizationName": "ChintanCPNBulk",
        "isProvisioningAllowed": true,
        "carriers": [
          "Verizon Wireless"
        ],
        "features": [
          "Static IP",
          "Dynamic IP",
          "Customer PN"
        ],
        "iPPools": [
          {
            "poolName": "ACMESTATIC001",
            "poolType": "Static IP",
            "isDefaultPool": true
          },
          {
            "poolName": "ACMEDYNAMIC001",
            "poolType": "Dynamic IP",
            "isDefaultPool": false
          }
        ],
        "servicePlans": [
          {
            "name": "",
            "code": "92876",
            "sizeKb": 1,
            "carrierServicePlanCode": "",
            "extendedAttributes": []
          },
          {
            "name": "",
            "code": "92876",
            "sizeKb": 1,
            "carrierServicePlanCode": "",
            "extendedAttributes": []
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the account.",
          "example": "Chintan_CPNStaticBulk",
          "type": "string"
        },
        "accountNumber": {
          "description": "The billing number of the account.",
          "example": "1234567890-77777",
          "type": "string"
        },
        "organizationName": {
          "description": "The name of the organization that the account is part of.",
          "example": "ChintanCPNBulk",
          "type": "string"
        },
        "isProvisioningAllowed": {
          "description": "True if devices can be added to the account and activated with a single request. False if devices must be added to the account before they can be activated.",
          "example": true,
          "type": "boolean"
        },
        "carriers": {
          "description": "The names of all carriers for the account.",
          "example": [
            "Verizon Wireless"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "features": {
          "description": "The names of features that are enabled for the account.",
          "example": [
            "Static IP",
            "Dynamic IP",
            "Customer PN"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "iPPools": {
          "description": "Array of IP pools that are available to the account.",
          "example": [
            {
              "poolName": "ACMESTATIC001",
              "poolType": "Static IP",
              "isDefaultPool": true
            },
            {
              "poolName": "ACMEDYNAMIC001",
              "poolType": "Dynamic IP",
              "isDefaultPool": false
            }
          ],
          "type": "array",
          "items": {
            "id": "IPPool",
            "title": "IPPool",
            "description": "IP pool that is available to the account.",
            "example": {
              "poolName": "ACMESTATIC001",
              "poolType": "Static IP",
              "isDefaultPool": true
            },
            "type": "object",
            "properties": {
              "poolName": {
                "description": "The name of the IP pool.",
                "example": "ACMESALES001",
                "type": "string"
              },
              "poolType": {
                "description": "The type of IP pool, such as “Static IP” or “Dynamic IP.”",
                "example": "Static IP",
                "type": "string"
              },
              "isDefaultPool": {
                "description": "True if this is the default IP pool for the account.",
                "example": true,
                "type": "boolean"
              }
            }
          }
        },
        "servicePlans": {
          "description": "Array of service plans that are available to the account.",
          "example": [
            {
              "name": "",
              "code": "92876",
              "sizeKb": 1,
              "carrierServicePlanCode": "",
              "extendedAttributes": []
            },
            {
              "name": "",
              "code": "92876",
              "sizeKb": 1,
              "carrierServicePlanCode": "",
              "extendedAttributes": []
            }
          ],
          "type": "array",
          "items": {
            "id": "ServicePlan",
            "title": "ServicePlan",
            "description": "Details of the service plan.",
            "example": {
              "name": "2MSHR5GB",
              "code": "M2MSHR5GB",
              "sizeKb": 0,
              "carrierServicePlanCode": "84638"
            },
            "type": "object",
            "properties": {
              "carrierServicePlanCode": {
                "description": "The code that is used by the carrier for the service plan.",
                "example": "84638",
                "type": "string"
              },
              "code": {
                "description": "The code of the service plan, which may not be the same as the name.",
                "example": "M2MSHR5GB",
                "type": "string"
              },
              "extendedAttributes": {
                "description": "Any extended attributes for the service plan, as Key and Value pairs.",
                "type": "array",
                "items": {
                  "id": "CustomFields",
                  "title": "CustomFields",
                  "description": "Custom data that can be included using key-value pairs.",
                  "example": {
                    "key": "CustomField2",
                    "value": "SuperVend"
                  },
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "The key for an extended attribute.",
                      "example": "CustomField2",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of an extended attribute.",
                      "example": "SuperVend",
                      "type": "string"
                    }
                  }
                }
              },
              "name": {
                "description": "The name of the service plan.",
                "example": "2MSHR5GB",
                "type": "string"
              },
              "sizeKb": {
                "description": "The size of the service plan in kilobytes.",
                "example": 0,
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      }
    }
- AddDevicesRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AddDevicesRequest",
      "title": "AddDevicesRequest",
      "description": "Request to add the devices.",
      "example": {
        "accountName": "0868924207-00001",
        "customFields": [
          {
            "key": "CustomField2",
            "value": "SuperVend"
          }
        ],
        "devicesToAdd": [
          {
            "deviceIds": [
              {
                "kind": "imei",
                "id": "990013907835573"
              },
              {
                "kind": "iccid",
                "id": "89141390780800784259"
              }
            ]
          },
          {
            "deviceIds": [
              {
                "kind": "imei",
                "id": "990013907884259"
              },
              {
                "kind": "iccid",
                "id": "89141390780800735573"
              }
            ]
          }
        ],
        "groupName": "West Region",
        "state": "preactive"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The billing account to which the devices are added.",
          "example": "0868924207-00001",
          "type": "string"
        },
        "customFields": {
          "description": "The names and values for any custom fields that you want set for the devices as they are added to the account.",
          "example": [
            {
              "key": "CustomField2",
              "value": "SuperVend"
            }
          ],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "devicesToAdd": {
          "description": "The devices that you want to add.",
          "example": [
            {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907884259"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800735573"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "groupName": {
          "description": "The name of a device group to add the devices to. They are added to the default device group if you don't include this parameter.",
          "example": "West Region",
          "type": "string"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM.",
          "type": "string"
        },
        "state": {
          "description": "The initial service state for the devices. The only valid state is “Preactive.”",
          "example": "preactive",
          "type": "string"
        },
        "smsrOid": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- AddDevicesResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AddDevicesResult",
      "title": "AddDevicesResult",
      "description": "Contains the device identifiers and a success or failure response for each device in the request.",
      "example": {
        "deviceIds": [
          {
            "id": "89148000000800784259",
            "kind": "iccid"
          }
        ],
        "response": "Success"
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "Identifiers for the device.",
          "example": [
            {
              "id": "89148000000800784259",
              "kind": "iccid"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "response": {
          "description": "The success message or error message for the current device.",
          "example": "Success",
          "type": "string"
        }
      }
    }
- Address: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Address",
      "title": "Address",
      "description": "The customer address for the line's primary place of use, for line usage taxation.",
      "example": {
        "addressLine1": "1600 Pennsylvania Ave NW",
        "city": "Washington",
        "state": "DC",
        "zip": "20500",
        "country": "USA"
      },
      "type": "object",
      "properties": {
        "addressLine1": {
          "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
          "example": "1600 Pennsylvania Ave NW",
          "type": "string"
        },
        "city": {
          "description": "The city for the line's primary place of use.",
          "example": "Washington",
          "type": "string"
        },
        "state": {
          "description": "The state for the line's primary place of use.",
          "example": "DC",
          "type": "string"
        },
        "zip": {
          "description": "The ZIP code for the line's primary place of use.",
          "example": "20500",
          "type": "string"
        },
        "country": {
          "description": "Either “US” or “USA” for the country of the line's primary place of use.",
          "example": "USA",
          "type": "string"
        },
        "addressLine2": {
          "description": "Optional additional street address information.",
          "type": "string"
        },
        "zip4": {
          "description": "The ZIP+4 for the line's primary place of use.",
          "type": "string"
        },
        "phone": {
          "description": "A phone number where the customer can be reached.",
          "type": "string"
        },
        "phoneType": {
          "description": "A single letter to indicate the customer phone type.",
          "type": "string"
        },
        "emailAddress": {
          "description": "An email address for the customer.",
          "type": "string"
        }
      },
      "required": [
        "addressLine1",
        "city",
        "state",
        "zip",
        "country"
      ]
    }
- ConnectivityManagementCallback: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConnectivityManagementCallback",
      "title": "ConnectivityManagementCallback",
      "description": "Includes callback listeners that were registered through the Connectivity Management API.",
      "example": {
        "accountName": "0252012345-00001",
        "password": "drowssap",
        "serviceName": "DeviceUsage",
        "url": "http://10.120.102.147:50569/CallbackListener/Usage.asmx",
        "username": "zaffod"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent.",
          "example": "0252012345-00001",
          "type": "string"
        },
        "password": {
          "description": "The password defined when a URL was registered for the callback service, or an empty string if no password was defined.",
          "example": "drowssap",
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "example": "DeviceUsage",
          "type": "string"
        },
        "url": {
          "description": "The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.",
          "example": "http://10.120.102.147:50569/CallbackListener/Usage.asmx",
          "type": "string"
        },
        "username": {
          "description": "The username defined when a URL was registered for the callback service, or an empty string if no username was defined.",
          "example": "zaffod",
          "type": "string"
        }
      }
    }
- CallbackActionResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CallbackActionResult",
      "title": "CallbackActionResult",
      "description": "Response to a callback action.",
      "example": {
        "accountName": "122333444-00002",
        "serviceName": "CarrierService"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account.",
          "example": "122333444-00002",
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service that was registered/deregistered.",
          "example": "CarrierService",
          "type": "string"
        }
      }
    }
- CarrierActionsRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CarrierActionsRequest",
      "title": "CarrierActionsRequest",
      "description": "Request for a carrier action.",
      "example": {
        "devices": [
          {
            "deviceIds": [
              {
                "id": "89148000000800139708",
                "kind": "iccid"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "example": "0868924207-00001",
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "example": [
            {
              "key": "CustomField2",
              "value": "SuperVend"
            }
          ],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "devices": {
          "description": "The devices for which you want to restore service, specified by device identifier.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "89148000000800139708",
                  "kind": "iccid"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "groupName": {
          "description": "The name of a device group, if you want to restore service for all devices in that group.",
          "example": "4G West",
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "example": "m2m_4G",
          "type": "string"
        }
      }
    }
- NotificationReportStatusRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "NotificationReportStatusRequest",
      "title": "NotificationReportStatusRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "example": "0868924207-00001",
          "type": "string"
        },
        "device": {
          "id": "DeviceId",
          "title": "DeviceId",
          "description": "An identifier for a single device.",
          "example": {
            "kind": "imei",
            "id": "990013907835573"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "The value of the device identifier.",
              "example": "990013907835573",
              "type": "string"
            },
            "kind": {
              "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
              "example": "imei",
              "type": "string"
            }
          }
        },
        "requestExpirationTime": {
          "description": "The time at which the request expires.",
          "type": "string"
        },
        "requestType": {
          "description": "The type of request.",
          "type": "string"
        }
      }
    }
- RetrieveMonitorsRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RetrieveMonitorsRequest",
      "title": "RetrieveMonitorsRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "example": "0868924207-00001",
          "type": "string"
        },
        "devices": {
          "description": "The devices for which you want to restore service, specified by device identifier.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "89148000000800139708",
                  "kind": "iccid"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "monitorType": {
          "description": "The name of a billing account.",
          "example": "monitorType",
          "type": "string"
        }
      }
    }
- CarrierActivateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CarrierActivateRequest",
      "title": "CarrierActivateRequest",
      "description": "Request for carrier activation.",
      "example": {
        "devices": [
          {
            "deviceIds": [
              {
                "kind": "imei",
                "id": "990013907835573"
              },
              {
                "kind": "iccid",
                "id": "89141390780800784259"
              }
            ]
          },
          {
            "deviceIds": [
              {
                "kind": "imei",
                "id": "990013907884259"
              },
              {
                "kind": "iccid",
                "id": "89141390780800735573"
              }
            ]
          }
        ],
        "accountName": "0868924207-00001",
        "servicePlan": "m2m_4G",
        "mdnZipCode": "98801",
        "customFields": [
          {
            "key": "CustomField2",
            "value": "SuperVend"
          }
        ],
        "groupName": "4G West",
        "primaryPlaceOfUse": {
          "customerName": {
            "title": "President",
            "firstName": "Zaffod",
            "lastName": "Beeblebrox"
          },
          "address": {
            "addressLine1": "1600 Pennsylvania Ave NW",
            "city": "Washington",
            "state": "DC",
            "zip": "20500",
            "country": "USA"
          }
        }
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "example": "0868924207-00001",
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "The private IP pool (Carrier Group Name) from which your device IP addresses will be derived.",
          "type": "string"
        },
        "carrierName": {
          "description": "The carrier that will perform the activation.",
          "type": "string"
        },
        "costCenterCode": {
          "description": "A string to identify the cost center that the device is associated with.",
          "type": "string"
        },
        "customFields": {
          "description": "A user-defined descriptive field, limited to 50 characters.",
          "example": [
            {
              "key": "CustomField2",
              "value": "SuperVend"
            }
          ],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "devices": {
          "description": "Up to 10,000 devices for which you want to activate service, specified by device identifier.",
          "example": [
            {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907884259"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800735573"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "groupName": {
          "description": "If you specify devices by ID in the devices parameters, this is the name of a device group that the devices should be added to.If you don't specify individual devices with the devices parameter, you can provide the name of a device group to activate all devices in that group.",
          "example": "4G West",
          "type": "string"
        },
        "leadId": {
          "description": "The ID of a “Qualified” or “Closed - Won” VPP customer lead, which is used with other values to determine MDN assignment, taxation, and compensation.",
          "type": "string"
        },
        "mdnZipCode": {
          "description": "The Zip code of the location where the line of service will primarily be used, or a Zip code that you have been told to use with these devices. For accounts that are configured for geographic numbering, this is the ZIP code from which the MDN will be derived.",
          "example": "98801",
          "type": "string"
        },
        "primaryPlaceOfUse": {
          "id": "PlaceOfUse",
          "title": "PlaceOfUse",
          "description": "The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.",
          "example": {
            "customerName": {
              "title": "President",
              "firstName": "Zaffod",
              "lastName": "Beeblebrox"
            },
            "address": {
              "addressLine1": "1600 Pennsylvania Ave NW",
              "city": "Washington",
              "state": "DC",
              "zip": "20500",
              "country": "USA"
            }
          },
          "type": "object",
          "properties": {
            "address": {
              "id": "Address",
              "title": "Address",
              "description": "The customer address for the line's primary place of use, for line usage taxation.",
              "example": {
                "addressLine1": "1600 Pennsylvania Ave NW",
                "city": "Washington",
                "state": "DC",
                "zip": "20500",
                "country": "USA"
              },
              "type": "object",
              "properties": {
                "addressLine1": {
                  "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                  "example": "1600 Pennsylvania Ave NW",
                  "type": "string"
                },
                "city": {
                  "description": "The city for the line's primary place of use.",
                  "example": "Washington",
                  "type": "string"
                },
                "state": {
                  "description": "The state for the line's primary place of use.",
                  "example": "DC",
                  "type": "string"
                },
                "zip": {
                  "description": "The ZIP code for the line's primary place of use.",
                  "example": "20500",
                  "type": "string"
                },
                "country": {
                  "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                  "example": "USA",
                  "type": "string"
                },
                "addressLine2": {
                  "description": "Optional additional street address information.",
                  "type": "string"
                },
                "zip4": {
                  "description": "The ZIP+4 for the line's primary place of use.",
                  "type": "string"
                },
                "phone": {
                  "description": "A phone number where the customer can be reached.",
                  "type": "string"
                },
                "phoneType": {
                  "description": "A single letter to indicate the customer phone type.",
                  "type": "string"
                },
                "emailAddress": {
                  "description": "An email address for the customer.",
                  "type": "string"
                }
              },
              "required": [
                "addressLine1",
                "city",
                "state",
                "zip",
                "country"
              ]
            },
            "customerName": {
              "id": "CustomerName",
              "title": "CustomerName",
              "description": "The customer name to be used for line usage taxation.",
              "example": {
                "title": "President",
                "firstName": "Zaffod",
                "lastName": "Beeblebrox"
              },
              "type": "object",
              "properties": {
                "firstName": {
                  "description": "The customer's first name.",
                  "example": "Zaffod",
                  "type": "string"
                },
                "lastName": {
                  "description": "The customer's last name.",
                  "example": "Beeblebrox",
                  "type": "string"
                },
                "title": {
                  "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
                  "example": "President",
                  "type": "string"
                },
                "middleName": {
                  "description": "The customer's middle name.",
                  "type": "string"
                },
                "suffix": {
                  "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
                  "type": "string"
                }
              },
              "required": [
                "firstName",
                "lastName"
              ]
            }
          }
        },
        "publicIpRestriction": {
          "description": "For devices with static IP addresses on the public network, this specifies whether the devices have general access to the Internet.",
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to all specified devices.",
          "example": "m2m_4G",
          "type": "string"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU) of a 4G device type can be used with ICCID device identifiers in lieu of an IMEI when activating 4G devices. The SkuNumber will be used with all devices in the request, so all devices must be of the same type.",
          "example": "7640111922001",
          "type": "string"
        }
      }
    }
- CarrierDeactivateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CarrierDeactivateRequest",
      "title": "CarrierDeactivateRequest",
      "description": "Request to deactivate a carrier.",
      "example": {
        "devices": [
          {
            "deviceIds": [
              {
                "id": "20-digit ICCID",
                "kind": "iccid"
              }
            ]
          }
        ],
        "reasonCode": "FF",
        "etfWaiver": true
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "devices": {
          "description": "The devices for which you want to deactivate service, specified by device identifier.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "20-digit ICCID",
                  "kind": "iccid"
                }
              ]
            },
            {
              "deviceIds": [
                {
                  "id": "20-digit ICCID",
                  "kind": "iccid"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "etfWaiver": {
          "description": "Fees may be assessed for deactivating Verizon Wireless devices, depending on the account contract. The etfWaiver parameter waives the Early Termination Fee (ETF), if applicable.",
          "example": true,
          "type": "boolean"
        },
        "groupName": {
          "description": "The name of a device group, if you want to deactivate all devices in that group.",
          "type": "string"
        },
        "reasonCode": {
          "description": "Code identifying the reason for the deactivation. Currently the only valid reason code is “FF”, which corresponds to General Admin/Maintenance.",
          "example": "FF",
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "type": "string"
        },
        "deleteAfterDeactivation": {
          "type": "boolean"
        }
      }
    }
- CarrierInformation: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CarrierInformation",
      "title": "CarrierInformation",
      "description": "Information about the carrier.",
      "example": {
        "carrierName": "Verizon Wireless",
        "servicePlan": "m2m4G",
        "state": "active"
      },
      "type": "object",
      "properties": {
        "carrierName": {
          "description": "The carrier that will perform the activation. This parameter is only required if you have more than one carrier.",
          "example": "Verizon Wireless",
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that is assigned to the device.",
          "example": "m2m4G",
          "type": "string"
        },
        "state": {
          "description": "The device state. Valid values include: Activate, Suspend, Deactive, Pre-active.",
          "example": "active",
          "type": "string"
        }
      }
    }
- ChangeDeviceIdRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangeDeviceIdRequest",
      "title": "ChangeDeviceIdRequest",
      "description": "Changes the identifier of a 3G or 4G device to match hardware changes made for a line of service. Use this request to transfer the line of service and the MDN to new hardware, or to change the MDN.",
      "example": {
        "deviceIds": [
          {
            "id": "42590078891480000008",
            "kind": "iccid"
          }
        ],
        "change4gOption": "ChangeMSISDN",
        "assignNonGeoMdn": false,
        "npaNxx": "509393",
        "servicePlan": "M2M2GB"
      },
      "type": "object",
      "properties": {
        "assignNonGeoMdn": {
          "description": "Set to true to assign a non-Geo MDN and MSISDN, or false to assign an MDN and MSISDN from a specific NPA-NXX.",
          "example": false,
          "type": "boolean"
        },
        "change4gOption": {
          "description": "The type of change that you want to make for a 4G device.",
          "example": "ChangeICCID",
          "type": "string"
        },
        "deviceIds": {
          "description": "The device that you want to change, specified by a device identifier.",
          "example": [
            {
              "id": "42590078891480000008",
              "kind": "iccid"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "deviceIdsTo": {
          "description": "The new identifier for the device. Required for all change4GOptions except ChangeMSISDN.",
          "example": [
            {
              "id": "89148000000842590078",
              "kind": "iccid"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "DeviceId"
          }
        },
        "npaNxx": {
          "description": "The NPA NXX (area code and prefix) from which the MDN and MSISDN will be derived when assignNonGeoMDN is false. Specify the 6-digit NPA NXX of the location where the line of service will primarily be used. This API checks to see if a number starting with the NPA NXX is available. If not, this API uses the zipCode parameter, if specified, to assign a number in the area of the line of service. This parameter is required when you change an MDN/MSISDN for a B2B carrier, such as Verizon Wireless.",
          "example": "509393",
          "type": "string"
        },
        "servicePlan": {
          "description": "The code for a different service plan, if you want to change the service plan while changing the device identifier. Set this parameter to one of the Code values returned by GET /plans.",
          "example": "M2M2GB",
          "type": "string"
        },
        "zipCode": {
          "description": "The ZIP code from which the MDN and MSISDN will be derived when assignNonGeoMDN is true. Specify the zip code of the location where the line of service will primarily be used.",
          "example": "98802",
          "type": "string"
        },
        "smsrOid": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- ConnectionEvent: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConnectionEvent",
      "title": "ConnectionEvent",
      "description": "Network connection events for a device during a specified time period.",
      "example": {
        "connectionEventAttributes": [
          {
            "key": "BytesUsed",
            "value": "0"
          },
          {
            "key": "Event",
            "value": "Start"
          }
        ],
        "extendedAttributes": [],
        "occurredAt": "2015-12-17T14:12:36-05:00"
      },
      "type": "object",
      "properties": {
        "connectionEventAttributes": {
          "description": "The attributes that describe the connection event.",
          "example": [
            {
              "key": "BytesUsed",
              "value": "0"
            },
            {
              "key": "Event",
              "value": "Start"
            }
          ],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "extendedAttributes": {
          "description": "Currently not used.",
          "type": "array",
          "items": {
            "$ref": "CustomFields"
          }
        },
        "occurredAt": {
          "description": "The date and time when the connection event occured.",
          "example": "2015-12-17T14:12:36-05:00",
          "type": "string"
        }
      }
    }
- ConnectionHistoryResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConnectionHistoryResult",
      "title": "ConnectionHistoryResult",
      "description": "Response containing the connection history. It is a list of Network Connection Events for a device.",
      "example": {
        "connectionHistory": [
          {
            "connectionEventAttributes": [
              {
                "key": "BytesUsed",
                "value": "0"
              },
              {
                "key": "Event",
                "value": "Start"
              }
            ],
            "extendedAttributes": [],
            "occurredAt": "2015-12-17T14:12:36-05:00"
          },
          {
            "connectionEventAttributes": [
              {
                "key": "BytesUsed",
                "value": "419863234"
              },
              {
                "key": "Event",
                "value": "Stop"
              },
              {
                "key": "Msisdn",
                "value": "15086303371"
              }
            ],
            "extendedAttributes": [],
            "occurredAt": "2015-12-19T01:20:00-05:00"
          }
        ],
        "hasMoreData": false
      },
      "type": "object",
      "properties": {
        "connectionHistory": {
          "description": "Device connection events, sorted by the occurredAt timestamp, oldest first.",
          "example": [
            {
              "connectionEventAttributes": [
                {
                  "key": "BytesUsed",
                  "value": "0"
                },
                {
                  "key": "Event",
                  "value": "Start"
                }
              ],
              "extendedAttributes": [],
              "occurredAt": "2015-12-17T14:12:36-05:00"
            },
            {
              "connectionEventAttributes": [
                {
                  "key": "BytesUsed",
                  "value": "419863234"
                },
                {
                  "key": "Event",
                  "value": "Stop"
                },
                {
                  "key": "Msisdn",
                  "value": "15086303371"
                }
              ],
              "extendedAttributes": [],
              "occurredAt": "2015-12-19T01:20:00-05:00"
            }
          ],
          "type": "array",
          "items": {
            "id": "ConnectionEvent",
            "title": "ConnectionEvent",
            "description": "Network connection events for a device during a specified time period.",
            "example": {
              "connectionEventAttributes": [
                {
                  "key": "BytesUsed",
                  "value": "0"
                },
                {
                  "key": "Event",
                  "value": "Start"
                }
              ],
              "extendedAttributes": [],
              "occurredAt": "2015-12-17T14:12:36-05:00"
            },
            "type": "object",
            "properties": {
              "connectionEventAttributes": {
                "description": "The attributes that describe the connection event.",
                "example": [
                  {
                    "key": "BytesUsed",
                    "value": "0"
                  },
                  {
                    "key": "Event",
                    "value": "Start"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "CustomFields",
                  "title": "CustomFields",
                  "description": "Custom data that can be included using key-value pairs.",
                  "example": {
                    "key": "CustomField2",
                    "value": "SuperVend"
                  },
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "The key for an extended attribute.",
                      "example": "CustomField2",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of an extended attribute.",
                      "example": "SuperVend",
                      "type": "string"
                    }
                  }
                }
              },
              "extendedAttributes": {
                "description": "Currently not used.",
                "type": "array",
                "items": {
                  "$ref": "CustomFields"
                }
              },
              "occurredAt": {
                "description": "The date and time when the connection event occured.",
                "example": "2015-12-17T14:12:36-05:00",
                "type": "string"
              }
            }
          }
        },
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved. Send another request, adjusting the earliest value in the request based on the occuredAt value for the last device in the current response.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- ContactInfoUpdateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ContactInfoUpdateRequest",
      "title": "ContactInfoUpdateRequest",
      "description": "Request to update contact information.",
      "example": {
        "devices": [
          {
            "deviceIds": [
              {
                "kind": "ESN",
                "id": "19110173057"
              },
              {
                "kind": "ESN",
                "id": "19110173057"
              }
            ]
          }
        ],
        "accountName": "0212345678-00001",
        "primaryPlaceOfUse": {
          "address": {
            "addressLine1": "9868 Scranton Rd",
            "addressLine2": "Suite A",
            "city": "San Diego",
            "state": "CA",
            "country": "USA",
            "zip": "92121",
            "zip4": "0001",
            "phone": "1234567890",
            "phoneType": "H",
            "emailAddress": "zaffod@theinternet.com"
          },
          "customerName": {
            "firstName": "Zaffod",
            "lastName": "Beeblebrox",
            "middleName": "P",
            "title": "President",
            "suffix": "I"
          }
        }
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account that the devices belong to. An account name is usually numeric, and must include any leading zeros.",
          "example": "0212345678-00001",
          "type": "string"
        },
        "devices": {
          "description": "A list of the devices that you want to change, specified by device identifier. You only need to provide one identifier per device. Do not include accountName, groupName, customFields, or servicePlan if you use this parameter.",
          "example": [
            {
              "deviceIds": [
                {
                  "kind": "ESN",
                  "id": "19110173057"
                },
                {
                  "kind": "ESN",
                  "id": "19110173057"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "primaryPlaceOfUse": {
          "description": "The customer name and the address of the device's primary place of use. These values are applied to all devices in the request.The Primary Place of Use location may affect taxation or have other legal implications. You may want to speak with legal and/or financial advisers before entering values for these fields.",
          "example": {
            "address": {
              "addressLine1": "9868 Scranton Rd",
              "addressLine2": "Suite A",
              "city": "San Diego",
              "state": "CA",
              "country": "USA",
              "zip": "92121",
              "zip4": "0001",
              "phone": "1234567890",
              "phoneType": "H",
              "emailAddress": "zaffod@theinternet.com"
            },
            "customerName": {
              "firstName": "Zaffod",
              "lastName": "Beeblebrox",
              "middleName": "P",
              "title": "President",
              "suffix": "I"
            }
          },
          "type": "object"
        }
      }
    }
- CreateDeviceGroupRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateDeviceGroupRequest",
      "title": "CreateDeviceGroupRequest",
      "description": "Create request for a new device group and optionally add devices to the group.",
      "example": {
        "accountName": "10001234-0001",
        "groupName": "NV tanks",
        "groupDescription": "Nevada tank level monitors.",
        "devicesToAdd": [
          {
            "kind": "imei",
            "id": "990003420535537"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The Verizon billing account that the device group will belong to. An account name is usually numeric, and must include any leading zeros.",
          "example": "10001234-0001",
          "type": "string"
        },
        "devicesToAdd": {
          "description": "Zero or more devices to add to the device group. You can use POST /devices/actions/list to get a list of all devices in the account.",
          "example": [
            {
              "kind": "imei",
              "id": "990003420535537"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "groupDescription": {
          "description": "A description for the device group.",
          "example": "Nevada tank level monitors",
          "type": "string"
        },
        "groupName": {
          "description": "The name for the new device group. This name must be unique within the specified account.",
          "example": "NV tanks",
          "type": "string"
        }
      }
    }
- CustomerName: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CustomerName",
      "title": "CustomerName",
      "description": "The customer name to be used for line usage taxation.",
      "example": {
        "title": "President",
        "firstName": "Zaffod",
        "lastName": "Beeblebrox"
      },
      "type": "object",
      "properties": {
        "firstName": {
          "description": "The customer's first name.",
          "example": "Zaffod",
          "type": "string"
        },
        "lastName": {
          "description": "The customer's last name.",
          "example": "Beeblebrox",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
          "example": "President",
          "type": "string"
        },
        "middleName": {
          "description": "The customer's middle name.",
          "type": "string"
        },
        "suffix": {
          "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
          "type": "string"
        }
      },
      "required": [
        "firstName",
        "lastName"
      ]
    }
- CustomFieldsUpdateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CustomFieldsUpdateRequest",
      "title": "CustomFieldsUpdateRequest",
      "description": "Request to assign or change custom field values for one or more devices.",
      "example": {
        "devices": [
          {
            "deviceIds": [
              {
                "id": "89148000000800139708",
                "kind": "iccid"
              }
            ]
          }
        ],
        "customFieldsToUpdate": [
          {
            "key": "CustomField1",
            "value": "West Region"
          },
          {
            "key": "CustomField2",
            "value": "Distribution"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.This parameter is only required if the UWS account used for the current API session has access to multiple billing accounts.An account name is usually numeric, and must include any leading zeros.",
          "example": "010045678-0001",
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "example": [
            {
              "key": "CustomField2",
              "value": "West Region"
            }
          ],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "customFieldsToUpdate": {
          "description": "The names and new values of any custom fields that you want to change.",
          "example": [
            {
              "key": "CustomField1",
              "value": "West Region"
            },
            {
              "key": "CustomField2",
              "value": "Distribution"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "CustomFields"
          }
        },
        "devices": {
          "description": "The devices that you want to change.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "89148000000800139708",
                  "kind": "iccid"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "groupName": {
          "description": "The name of a device group, if you want to only include devices in that group.",
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "type": "string"
        }
      }
    }
- DateFilter: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DateFilter",
      "title": "DateFilter",
      "description": "Filter out the dates.",
      "example": {
        "earliest": "2020-05-01T15:00:00-08:00Z",
        "latest": "2020-07-30T15:00:00-08:00Z"
      },
      "type": "object",
      "properties": {
        "earliest": {
          "description": "Only include devices that were added after this date and time.",
          "example": "2020-05-01T15:00:00-08:00Z",
          "type": "string"
        },
        "latest": {
          "description": "Only include devices that were added before this date and time.",
          "example": "2020-07-30T15:00:00-08:00Z",
          "type": "string"
        }
      }
    }
- DeleteDevicesRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeleteDevicesRequest",
      "title": "DeleteDevicesRequest",
      "description": "Request to delete a device request.",
      "example": {
        "devicesToDelete": [
          {
            "deviceIds": [
              {
                "id": "09005470263",
                "kind": "esn"
              }
            ]
          },
          {
            "deviceIds": [
              {
                "id": "85000022411113460014",
                "kind": "iccid"
              }
            ]
          },
          {
            "deviceIds": [
              {
                "id": "85000022412313460016",
                "kind": "iccid"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The Verizon billing account that the device group belongs to. An account name is usually numeric, and must include any leading zeros.",
          "type": "string"
        },
        "devicesToDelete": {
          "description": "A list of up to 100 devices that you want to delete, specified by device identifier. You only need to provide one identifier per device.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "09005470263",
                  "kind": "esn"
                }
              ]
            },
            {
              "deviceIds": [
                {
                  "id": "85000022411113460014",
                  "kind": "iccid"
                }
              ]
            },
            {
              "deviceIds": [
                {
                  "id": "85000022412313460016",
                  "kind": "iccid"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        }
      }
    }
- DeviceId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceId",
      "title": "DeviceId",
      "description": "An identifier for a single device.",
      "example": {
        "kind": "imei",
        "id": "990013907835573"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The value of the device identifier.",
          "example": "990013907835573",
          "type": "string"
        },
        "kind": {
          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
          "example": "imei",
          "type": "string"
        }
      }
    }
- DeleteDevicesResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeleteDevicesResult",
      "title": "DeleteDevicesResult",
      "description": "Response for a request made to delete a device.",
      "example": {
        "deviceIds": [
          {
            "id": "09005470263",
            "kind": "esn"
          }
        ],
        "status": "Success"
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "One object per device to be deleted. Each object must contain a kind and id element identifying the device."
        },
        "status": {
          "description": "“Success” if the device was deleted, or “Failed” if there was a problem.",
          "example": "Success",
          "type": "string"
        },
        "message": {
          "description": "Not present if status=Success. One of these messages if status=Failed:The device is not in deactivate state.The user does not have access to delete the device.",
          "example": "The device is not in deactive state.",
          "type": "string"
        }
      }
    }
- ThingspaceDevice: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ThingspaceDevice",
      "title": "ThingspaceDevice",
      "description": "Device that exist in Verizon Mobile Device Management (MDM).",
      "example": {
        "accountName": "0000123456-00001",
        "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
        "carrierInformations": [
          {
            "carrierName": "Verizon Wireless",
            "servicePlan": "m2m4G",
            "state": "active"
          }
        ],
        "connected": false,
        "createdAt": "2019-08-07T10:42:15-04:00",
        "deviceIds": [
          {
            "id": "10-digit MDN",
            "kind": "mdn"
          },
          {
            "id": "15-digit IMEI",
            "kind": "imei"
          }
        ],
        "groupNames": [
          "southwest"
        ],
        "ipAddress": "0.0.0.0",
        "lastActivationBy": "Joe Q Public",
        "lastActivationDate": "2019-08-07T10:42:34-04:00",
        "lastConnectionDate": "2020-03-12T04:23:37-04:00"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The billing account that the device is associated with.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "billingCycleEndDate": {
          "description": "The date that the device's current billing cycle ends.",
          "example": "2020-05-09T20:00:00-04:00",
          "type": "string"
        },
        "carrierInformations": {
          "description": "The carrier information associated with the device.",
          "example": [
            {
              "carrierName": "Verizon Wireless",
              "servicePlan": "m2m4G",
              "state": "active"
            }
          ],
          "type": "array",
          "items": {
            "id": "CarrierInformation",
            "title": "CarrierInformation",
            "description": "Information about the carrier.",
            "example": {
              "carrierName": "Verizon Wireless",
              "servicePlan": "m2m4G",
              "state": "active"
            },
            "type": "object",
            "properties": {
              "carrierName": {
                "description": "The carrier that will perform the activation. This parameter is only required if you have more than one carrier.",
                "example": "Verizon Wireless",
                "type": "string"
              },
              "servicePlan": {
                "description": "The service plan code that is assigned to the device.",
                "example": "m2m4G",
                "type": "string"
              },
              "state": {
                "description": "The device state. Valid values include: Activate, Suspend, Deactive, Pre-active.",
                "example": "active",
                "type": "string"
              }
            }
          }
        },
        "connected": {
          "description": "True if the device is connected; false if it is not.",
          "example": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "The date and time that the device was added to the system.",
          "example": "2019-08-07T10:42:15-04:00",
          "type": "string"
        },
        "customFields": {
          "description": "The custom fields and values that have been set for the device.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "deviceIds": {
          "description": "All identifiers for the device.",
          "example": [
            {
              "id": "10-digit MDN",
              "kind": "mdn"
            },
            {
              "id": "15-digit IMEI",
              "kind": "imei"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "extendedAttributes": {
          "description": "Any extended attributes for the device, as Key and Value pairs. The pairs listed below are returned as part of the response for a single device, but are not included if the request was for information about multiple devices.",
          "type": "array",
          "items": {
            "$ref": "CustomFields"
          }
        },
        "groupNames": {
          "description": "The device groups that the device belongs to.",
          "example": [
            "southwest"
          ],
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "ipAddress": {
          "description": "The IP address of the device.",
          "example": "0.0.0.0",
          "type": "string"
        },
        "lastActivationBy": {
          "description": "The user who last activated the device.",
          "example": "Joe Q Public",
          "type": "string"
        },
        "lastActivationDate": {
          "description": "The date and time that the device was last activated.",
          "example": "2019-08-07T10:42:34-04:00",
          "type": "string"
        },
        "lastConnectionDate": {
          "description": "The most recent connection date and time.",
          "example": "2020-03-12T04:23:37-04:00",
          "type": "string"
        }
      }
    }
- DeviceAggregateUsageListRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceAggregateUsageListRequest",
      "title": "DeviceAggregateUsageListRequest",
      "description": "Request to list device aggregate usage.",
      "example": {
        "deviceIds": [
          {
            "id": "84258000000891490087",
            "kind": "ICCID"
          }
        ],
        "accountName": "9992330389-00001",
        "endTime": "2021-08-30T00:00:00-06:00",
        "startTime": "2021-08-01T00:00:00-06:00"
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "One or more devices for which you want aggregate data, specified by device ID.",
          "example": [
            {
              "id": "84258000000891490087",
              "kind": "ICCID"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "accountName": {
          "description": "The name of a billing account.",
          "example": "9992330389-00001",
          "type": "string"
        },
        "groupName": {
          "description": "The name of a device group, if you want to only include devices in that group.",
          "example": "SMS",
          "type": "string"
        },
        "startTime": {
          "description": "The beginning of the reporting period. The startTime cannot be more than 6 months before the current date.",
          "example": "2021-08-01T00:00:00-06:00",
          "type": "string"
        },
        "endTime": {
          "description": "The end of the reporting period. The endTime date must be within on month of the startTime date.",
          "example": "2021-08-30T00:00:00-06:00",
          "type": "string"
        },
        "label": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Label",
            "title": "Label",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "value": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              }
            }
          },
          "maxItems": 50
        }
      }
    }
- DeviceConnectionListRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceConnectionListRequest",
      "title": "DeviceConnectionListRequest",
      "description": "Request to list of network connection events for a device during a specified time period.",
      "example": {
        "deviceId": {
          "id": "89141390780800784259",
          "kind": "iccid"
        },
        "earliest": "2015-09-16T00:00:01Z",
        "latest": "2010-09-18T00:00:01Z"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "id": "DeviceId",
          "title": "DeviceId",
          "description": "An identifier for a single device.",
          "example": {
            "kind": "imei",
            "id": "990013907835573"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "The value of the device identifier.",
              "example": "990013907835573",
              "type": "string"
            },
            "kind": {
              "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
              "example": "imei",
              "type": "string"
            }
          }
        },
        "earliest": {
          "description": "The earliest date and time for which you want connection events.",
          "example": "2015-09-16T00:00:01Z",
          "type": "string"
        },
        "latest": {
          "description": "The last date and time for which you want connection events.",
          "example": "2010-09-18T00:00:01Z",
          "type": "string"
        }
      }
    }
- DeviceCostCenterRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceCostCenterRequest",
      "title": "DeviceCostCenterRequest",
      "description": "Request to retrieve cost center value of a device.",
      "example": {
        "costCenter": "cc12345",
        "devices": [
          {
            "deviceIds": [
              {
                "id": "89148000000800139708",
                "kind": "iccid"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "type": "string"
        },
        "costCenter": {
          "description": "The new cost center code. Valid values are any string of up to 36 alphanumeric characters, space, dash, exclamation point, and pound sign.",
          "example": "cc12345",
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "devices": {
          "description": "A list of the devices that you want to change, specified by device identifier. Do not include accountName, groupName, customFields, or servicePlan if you use this parameter.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "89148000000800139708",
                  "kind": "iccid"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "groupName": {
          "description": "The name of a device group, if you want to only include devices in that group.",
          "type": "string"
        },
        "primaryPlaceOfUse": {
          "description": "The customer name and the address of the device's primary place of use. These values are applied to all devices in the request.The Primary Place of Use location may affect taxation or have other legal implications. You may want to speak with legal and/or financial advisers before entering values for these fields.",
          "type": "object"
        },
        "removeCostCenter": {
          "description": "Set to true to remove the cost center code value. This flag takes precedence over a new costCenter value. If this flag is true and costCenter has a value, the cost center code is removed. Do not include this parameter, or set it to false to change the costCenter value.",
          "type": "boolean"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "type": "string"
        }
      }
    }
- DeviceExtendedDiagnosticsRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceExtendedDiagnosticsRequest",
      "title": "DeviceExtendedDiagnosticsRequest",
      "description": "Request for obtaining device extended diagnostics.",
      "example": {
        "accountName": "1223334444-00001",
        "deviceList": [
          {
            "id": "10-digit MDN",
            "kind": "mdn"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The Verizon billing account that the device belongs to. An account name is usually numeric, and must include any leading zeros.",
          "example": "1223334444-00001",
          "type": "string"
        },
        "deviceList": {
          "description": "The device for which you want diagnostic information, specified by the device's MDN.",
          "example": [
            {
              "id": "10-digit MDN",
              "kind": "mdn"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "accountName",
        "deviceList"
      ]
    }
- DeviceExtendedDiagnosticsResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceExtendedDiagnosticsResult",
      "title": "DeviceExtendedDiagnosticsResult",
      "description": "Result for a request to obtain device extended diagnostics.",
      "example": {
        "categories": [
          {
            "categoryName": "Connectivity",
            "extendedAttributes": [
              {
                "key": "Connected",
                "value": "false"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "categories": {
          "description": "The response includes various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.",
          "example": [
            {
              "categoryName": "Connectivity",
              "extendedAttributes": [
                {
                  "key": "Connected",
                  "value": "false"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "DiagnosticsCategory",
            "title": "DiagnosticsCategory",
            "description": "Various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.",
            "example": {
              "categoryName": "Connectivity",
              "extendedAttributes": [
                {
                  "key": "Connected",
                  "value": "false"
                }
              ]
            },
            "type": "object",
            "properties": {
              "categoryName": {
                "description": "The name of the category.",
                "example": "Connectivity",
                "type": "string"
              },
              "extendedAttributes": {
                "description": "A list of Extended Attribute objects as key-value pairs.",
                "example": [
                  {
                    "key": "Connected",
                    "value": "false"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "CustomFields",
                  "title": "CustomFields",
                  "description": "Custom data that can be included using key-value pairs.",
                  "example": {
                    "key": "CustomField2",
                    "value": "SuperVend"
                  },
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "The key for an extended attribute.",
                      "example": "CustomField2",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of an extended attribute.",
                      "example": "SuperVend",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
- DeviceFilter: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceFilter",
      "title": "DeviceFilter",
      "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
      "example": {
        "groupName": "Short-Haul Trucks",
        "customFields": [
          {
            "key": "CustomField1",
            "value": "East Region Trucks"
          }
        ]
      },
      "type": "object",
      "properties": {
        "account": {
          "description": "The the billing account that the devices belong to.",
          "type": "string"
        },
        "groupName": {
          "description": "Only include devices that are in this device group.",
          "example": "Short-Haul Trucks",
          "type": "string"
        },
        "servicePlan": {
          "description": "Only include devices that have this service plan.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "example": [
            {
              "key": "CustomField1",
              "value": "East Region Trucks"
            }
          ],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        }
      }
    }
- DeviceFilterWithoutAccount: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceFilterWithoutAccount",
      "title": "DeviceFilterWithoutAccount",
      "description": "Filter for devices without account.",
      "example": {
        "groupName": "suspended devices"
      },
      "type": "object",
      "properties": {
        "groupName": {
          "description": "Only include devices that are in this device group.",
          "example": "suspended devices",
          "type": "string"
        },
        "servicePlan": {
          "description": "Only include devices that have this service plan.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        }
      }
    }
- DeviceIdSearch: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceIdSearch",
      "title": "DeviceIdSearch",
      "description": "Search by device id.",
      "example": {
        "kind": "iccid",
        "contains": "4259"
      },
      "type": "object",
      "properties": {
        "kind": {
          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
          "example": "imei",
          "type": "string"
        },
        "contains": {
          "description": "The string appears anywhere in the identifer.",
          "example": "4259",
          "type": "string"
        },
        "startswith": {
          "description": "The identifer must start with the specified string.",
          "type": "string"
        },
        "endswith": {
          "description": "The identifier must end with the specified string.",
          "type": "string"
        }
      },
      "required": [
        "kind"
      ]
    }
- AccountDeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountDeviceList",
      "title": "AccountDeviceList",
      "description": "A list of deviceId objects to use when requesting information from multiple devices.",
      "example": {
        "deviceIds": [
          {
            "kind": "imei",
            "id": "990013907835573"
          },
          {
            "kind": "iccid",
            "id": "89141390780800784259"
          }
        ]
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "All identifiers for the device.",
          "example": [
            {
              "kind": "imei",
              "id": "990013907835573"
            },
            {
              "kind": "iccid",
              "id": "89141390780800784259"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "ipAddress": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
        }
      }
    }
- AccountDeviceListFilter: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountDeviceListFilter",
      "title": "AccountDeviceListFilter",
      "description": "Filter for a list of devices.",
      "example": {
        "deviceIdentifierFilters": [
          {
            "kind": "iccid",
            "contains": "4259"
          }
        ]
      },
      "type": "object",
      "properties": {
        "deviceIdentifierFilters": {
          "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
          "example": [
            {
              "kind": "iccid",
              "contains": "4259"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceIdSearch",
            "title": "DeviceIdSearch",
            "description": "Search by device id.",
            "example": {
              "kind": "iccid",
              "contains": "4259"
            },
            "type": "object",
            "properties": {
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              },
              "contains": {
                "description": "The string appears anywhere in the identifer.",
                "example": "4259",
                "type": "string"
              },
              "startswith": {
                "description": "The identifer must start with the specified string.",
                "type": "string"
              },
              "endswith": {
                "description": "The identifier must end with the specified string.",
                "type": "string"
              }
            },
            "required": [
              "kind"
            ]
          }
        }
      }
    }
- AccountDeviceListRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountDeviceListRequest",
      "title": "AccountDeviceListRequest",
      "description": "Request for listing account devices.",
      "example": {
        "accountName": "0786890242-00001",
        "filter": {
          "deviceIdentifierFilters": [
            {
              "kind": "iccid",
              "contains": "4259"
            }
          ]
        }
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The billing account for which a list of devices is returned. If you don't specify an accountName, the list includes all devices to which you have access.",
          "example": "0786890242-00001",
          "type": "string"
        },
        "deviceId": {
          "id": "DeviceId",
          "title": "DeviceId",
          "description": "An identifier for a single device.",
          "example": {
            "kind": "imei",
            "id": "990013907835573"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "The value of the device identifier.",
              "example": "990013907835573",
              "type": "string"
            },
            "kind": {
              "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
              "example": "imei",
              "type": "string"
            }
          }
        },
        "filter": {
          "id": "AccountDeviceListFilter",
          "title": "AccountDeviceListFilter",
          "description": "Filter for a list of devices.",
          "example": {
            "deviceIdentifierFilters": [
              {
                "kind": "iccid",
                "contains": "4259"
              }
            ]
          },
          "type": "object",
          "properties": {
            "deviceIdentifierFilters": {
              "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
              "example": [
                {
                  "kind": "iccid",
                  "contains": "4259"
                }
              ],
              "type": "array",
              "items": {
                "id": "DeviceIdSearch",
                "title": "DeviceIdSearch",
                "description": "Search by device id.",
                "example": {
                  "kind": "iccid",
                  "contains": "4259"
                },
                "type": "object",
                "properties": {
                  "kind": {
                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                    "example": "imei",
                    "type": "string"
                  },
                  "contains": {
                    "description": "The string appears anywhere in the identifer.",
                    "example": "4259",
                    "type": "string"
                  },
                  "startswith": {
                    "description": "The identifer must start with the specified string.",
                    "type": "string"
                  },
                  "endswith": {
                    "description": "The identifier must end with the specified string.",
                    "type": "string"
                  }
                },
                "required": [
                  "kind"
                ]
              }
            }
          }
        },
        "currentState": {
          "description": "The name of a device state, to only include devices in that state.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "earliest": {
          "description": "Only include devices that were added after this date and time.",
          "type": "string"
        },
        "groupName": {
          "description": "Only include devices that are in this device group.",
          "type": "string"
        },
        "latest": {
          "description": "Only include devices that were added before this date and time.",
          "type": "string"
        },
        "servicePlan": {
          "description": "Only include devices that have this service plan.",
          "type": "string"
        },
        "maxNumberOfDevices": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "largestDeviceIdSeen": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int64"
        }
      }
    }
- AccountDeviceListResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountDeviceListResult",
      "title": "AccountDeviceListResult",
      "description": "Response for a request to list down account devices.",
      "example": {
        "hasMoreData": false,
        "devices": [
          {
            "accountName": "0000123456-00001",
            "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
            "carrierInformations": [
              {
                "carrierName": "Verizon Wireless",
                "servicePlan": "m2m4G",
                "state": "active"
              }
            ],
            "connected": false,
            "createdAt": "2019-08-07T10:42:15-04:00",
            "deviceIds": [
              {
                "id": "10-digit MDN",
                "kind": "mdn"
              },
              {
                "id": "15-digit IMEI",
                "kind": "imei"
              }
            ],
            "groupNames": [
              "southwest"
            ],
            "ipAddress": "0.0.0.0",
            "lastActivationBy": "Joe Q Public",
            "lastActivationDate": "2019-08-07T10:42:34-04:00",
            "lastConnectionDate": "2020-03-12T04:23:37-04:00"
          }
        ]
      },
      "type": "object",
      "properties": {
        "devices": {
          "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
          "example": [
            {
              "accountName": "0000123456-00001",
              "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
              "carrierInformations": [
                {
                  "carrierName": "Verizon Wireless",
                  "servicePlan": "m2m4G",
                  "state": "active"
                }
              ],
              "connected": false,
              "createdAt": "2019-08-07T10:42:15-04:00",
              "deviceIds": [
                {
                  "id": "10-digit MDN",
                  "kind": "mdn"
                },
                {
                  "id": "15-digit IMEI",
                  "kind": "imei"
                }
              ],
              "groupNames": [
                "southwest"
              ],
              "ipAddress": "0.0.0.0",
              "lastActivationBy": "Joe Q Public",
              "lastActivationDate": "2019-08-07T10:42:34-04:00",
              "lastConnectionDate": "2020-03-12T04:23:37-04:00"
            }
          ],
          "type": "array",
          "items": {
            "id": "ThingspaceDevice",
            "title": "ThingspaceDevice",
            "description": "Device that exist in Verizon Mobile Device Management (MDM).",
            "example": {
              "accountName": "0000123456-00001",
              "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
              "carrierInformations": [
                {
                  "carrierName": "Verizon Wireless",
                  "servicePlan": "m2m4G",
                  "state": "active"
                }
              ],
              "connected": false,
              "createdAt": "2019-08-07T10:42:15-04:00",
              "deviceIds": [
                {
                  "id": "10-digit MDN",
                  "kind": "mdn"
                },
                {
                  "id": "15-digit IMEI",
                  "kind": "imei"
                }
              ],
              "groupNames": [
                "southwest"
              ],
              "ipAddress": "0.0.0.0",
              "lastActivationBy": "Joe Q Public",
              "lastActivationDate": "2019-08-07T10:42:34-04:00",
              "lastConnectionDate": "2020-03-12T04:23:37-04:00"
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "The billing account that the device is associated with.",
                "example": "0000123456-00001",
                "type": "string"
              },
              "billingCycleEndDate": {
                "description": "The date that the device's current billing cycle ends.",
                "example": "2020-05-09T20:00:00-04:00",
                "type": "string"
              },
              "carrierInformations": {
                "description": "The carrier information associated with the device.",
                "example": [
                  {
                    "carrierName": "Verizon Wireless",
                    "servicePlan": "m2m4G",
                    "state": "active"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "CarrierInformation",
                  "title": "CarrierInformation",
                  "description": "Information about the carrier.",
                  "example": {
                    "carrierName": "Verizon Wireless",
                    "servicePlan": "m2m4G",
                    "state": "active"
                  },
                  "type": "object",
                  "properties": {
                    "carrierName": {
                      "description": "The carrier that will perform the activation. This parameter is only required if you have more than one carrier.",
                      "example": "Verizon Wireless",
                      "type": "string"
                    },
                    "servicePlan": {
                      "description": "The service plan code that is assigned to the device.",
                      "example": "m2m4G",
                      "type": "string"
                    },
                    "state": {
                      "description": "The device state. Valid values include: Activate, Suspend, Deactive, Pre-active.",
                      "example": "active",
                      "type": "string"
                    }
                  }
                }
              },
              "connected": {
                "description": "True if the device is connected; false if it is not.",
                "example": false,
                "type": "boolean"
              },
              "createdAt": {
                "description": "The date and time that the device was added to the system.",
                "example": "2019-08-07T10:42:15-04:00",
                "type": "string"
              },
              "customFields": {
                "description": "The custom fields and values that have been set for the device.",
                "type": "array",
                "items": {
                  "id": "CustomFields",
                  "title": "CustomFields",
                  "description": "Custom data that can be included using key-value pairs.",
                  "example": {
                    "key": "CustomField2",
                    "value": "SuperVend"
                  },
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "The key for an extended attribute.",
                      "example": "CustomField2",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of an extended attribute.",
                      "example": "SuperVend",
                      "type": "string"
                    }
                  }
                }
              },
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "id": "10-digit MDN",
                    "kind": "mdn"
                  },
                  {
                    "id": "15-digit IMEI",
                    "kind": "imei"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "extendedAttributes": {
                "description": "Any extended attributes for the device, as Key and Value pairs. The pairs listed below are returned as part of the response for a single device, but are not included if the request was for information about multiple devices.",
                "type": "array",
                "items": {
                  "$ref": "CustomFields"
                }
              },
              "groupNames": {
                "description": "The device groups that the device belongs to.",
                "example": [
                  "southwest"
                ],
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "ipAddress": {
                "description": "The IP address of the device.",
                "example": "0.0.0.0",
                "type": "string"
              },
              "lastActivationBy": {
                "description": "The user who last activated the device.",
                "example": "Joe Q Public",
                "type": "string"
              },
              "lastActivationDate": {
                "description": "The date and time that the device was last activated.",
                "example": "2019-08-07T10:42:34-04:00",
                "type": "string"
              },
              "lastConnectionDate": {
                "description": "The most recent connection date and time.",
                "example": "2020-03-12T04:23:37-04:00",
                "type": "string"
              }
            }
          }
        },
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- DeviceActivationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceActivationRequest",
      "title": "DeviceActivationRequest",
      "description": "Request for device status to check availability of activation.",
      "example": {
        "accountName": "0212345678-00001",
        "devices": [
          {
            "deviceIds": [
              {
                "kind": "meid",
                "id": "A100008385E561"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "example": "0212345678-00001",
          "type": "string"
        },
        "devices": {
          "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
          "example": [
            {
              "deviceIds": [
                {
                  "kind": "meid",
                  "id": "A100008385E561"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        }
      }
    }
- DevicePrlListRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DevicePrlListRequest",
      "title": "DevicePrlListRequest",
      "description": "Requests the current PRL (Preferred Roaming List) version for 2G or 3G devices, which can help determine which devices need a PRL update. (4G and GSM devices do not have a PRL.).",
      "example": {
        "groupName": "West Region",
        "accountName": "101234-0001",
        "servicePlan": "3G 2MB"
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "The devices for which you want the PRL version, specified by device identifier. You only need to provide one identifier per device. Do not use any of the other parameters if you specify device IDs.",
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "accountName": {
          "description": "The name of a billing account. This parameter is only required if you are passing groupName and the UWS account used for the current API session has access to multiple billing accounts, because the same device group name can exist in multiple accounts.An account name is usually numeric, and must include any leading zeros.",
          "type": "string"
        },
        "customFields": {
          "description": "The names and values of custom fields, if you want to only include devices that have matching custom fields.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "groupName": {
          "description": "The name of a device group, if you want to only include devices in that group.",
          "example": "West Region",
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "example": "3G 2MB",
          "type": "string"
        }
      }
    }
- DeviceMismatchListRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceMismatchListRequest",
      "title": "DeviceMismatchListRequest",
      "description": "Request to list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
      "example": {
        "accountName": "0342077109-00001",
        "devices": [
          {
            "deviceIds": [
              {
                "kind": "ICCID",
                "id": "8914800000080078"
              },
              {
                "kind": "MDN",
                "id": "5096300587"
              }
            ]
          }
        ],
        "filter": {
          "earliest": "2020-05-01T15:00:00-08:00Z",
          "latest": "2020-07-30T15:00:00-08:00Z"
        }
      },
      "type": "object",
      "properties": {
        "devices": {
          "description": "A list of specific devices that you want to check, specified by ICCID or MDN.",
          "example": [
            {
              "deviceIds": [
                {
                  "kind": "ICCID",
                  "id": "8914800000080078"
                },
                {
                  "kind": "MDN",
                  "id": "5096300587"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "filter": {
          "id": "DateFilter",
          "title": "DateFilter",
          "description": "Filter out the dates.",
          "example": {
            "earliest": "2020-05-01T15:00:00-08:00Z",
            "latest": "2020-07-30T15:00:00-08:00Z"
          },
          "type": "object",
          "properties": {
            "earliest": {
              "description": "Only include devices that were added after this date and time.",
              "example": "2020-05-01T15:00:00-08:00Z",
              "type": "string"
            },
            "latest": {
              "description": "Only include devices that were added before this date and time.",
              "example": "2020-07-30T15:00:00-08:00Z",
              "type": "string"
            }
          }
        },
        "accountName": {
          "description": "The account that you want to search for mismatched devices. If you don't specify an accountName, the search includes all devices to which you have access.",
          "example": "0342077109-00001",
          "type": "string"
        },
        "groupName": {
          "description": "The name of a device group, to only include devices in that group.",
          "type": "string"
        }
      }
    }
- DeviceMismatchListResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceMismatchListResult",
      "title": "DeviceMismatchListResult",
      "description": "Response to list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
      "example": {
        "devices": [
          {
            "accountName": "0212398765-00001",
            "mdn": "5096300587",
            "activationDate": "2011-01-21T10:55:27-08:00",
            "iccid": "89148000000800784259",
            "preImei": "990003420535573",
            "postImei": "987603420573553",
            "simOtaDate": "2017-12-01T16:00:00-08:00"
          }
        ]
      },
      "type": "object",
      "properties": {
        "devices": {
          "description": "A list of specific devices that you want to check, specified by ICCID or MDN.",
          "example": [
            {
              "accountName": "0212398765-00001",
              "mdn": "5096300587",
              "activationDate": "2011-01-21T10:55:27-08:00",
              "iccid": "89148000000800784259",
              "preImei": "990003420535573",
              "postImei": "987603420573553",
              "simOtaDate": "2017-12-01T16:00:00-08:00"
            }
          ],
          "type": "array",
          "items": {
            "id": "MismatchedDevice",
            "title": "MismatchedDevice",
            "description": "4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
            "example": {
              "accountName": "0212398765-00001",
              "mdn": "5096300587",
              "activationDate": "2011-01-21T10:55:27-08:00",
              "iccid": "89148000000800784259",
              "preImei": "990003420535573",
              "postImei": "987603420573553",
              "simOtaDate": "2017-12-01T16:00:00-08:00"
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "The account that the device is associated with.",
                "example": "0212398765-00001",
                "type": "string"
              },
              "mdn": {
                "description": "The assigned phone number of the device.",
                "example": "5096300587",
                "type": "string"
              },
              "activationDate": {
                "description": "The date and time when the SIM was last activated.",
                "example": "2011-01-21T10:55:27-08:00",
                "type": "string"
              },
              "iccid": {
                "description": "The ID of the SIM.",
                "example": "89148000000800784259",
                "type": "string"
              },
              "preImei": {
                "description": "The IMEI of the device prior to the SIM OTA activation on simOtaDate.",
                "example": "990003420535573",
                "type": "string"
              },
              "postImei": {
                "description": "The IMEI of the device after the SIM OTA activation on simOtaDate.",
                "example": "987603420573553",
                "type": "string"
              },
              "simOtaDate": {
                "description": "The date and time of the SIM OTA activation.",
                "example": "2017-12-01T16:00:00-08:00",
                "type": "string"
              }
            }
          }
        }
      }
    }
- DeviceProvisioningHistoryListRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceProvisioningHistoryListRequest",
      "title": "DeviceProvisioningHistoryListRequest",
      "description": "Request to return the provisioning history of a specified device during a specified time period.",
      "example": {
        "deviceId": {
          "id": "89141390780800784259",
          "kind": "iccid"
        },
        "earliest": "2015-09-16T00:00:01Z",
        "latest": "2015-09-18T00:00:01Z"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "id": "DeviceId",
          "title": "DeviceId",
          "description": "An identifier for a single device.",
          "example": {
            "kind": "imei",
            "id": "990013907835573"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "The value of the device identifier.",
              "example": "990013907835573",
              "type": "string"
            },
            "kind": {
              "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
              "example": "imei",
              "type": "string"
            }
          }
        },
        "earliest": {
          "description": "The earliest date and time for which you want provisioning data.",
          "example": "2015-09-16T00:00:01Z",
          "type": "string"
        },
        "latest": {
          "description": "The last date and time for which you want provisioning data.",
          "example": "2015-09-18T00:00:01Z",
          "type": "string"
        }
      }
    }
- DeviceProvisioningHistoryListResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceProvisioningHistoryListResult",
      "title": "DeviceProvisioningHistoryListResult",
      "description": "Response to return the provisioning history of a specified device during a specified time period.",
      "example": {
        "provisioningHistory": [
          {
            "occurredAt": "2015-12-17T13:56:13-05:00",
            "status": "Success",
            "eventBy": "Harry Potter",
            "eventType": "Activation Confirmed",
            "servicePlan": "Tablet5GB",
            "mdn": "",
            "msisdn": "15086303371",
            "extendedAttributes": []
          }
        ],
        "hasMoreData": false
      },
      "type": "object",
      "properties": {
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "example": false,
          "type": "boolean"
        },
        "provisioningHistory": {
          "description": "The provisioning history of a specified device during a specified time period.",
          "example": [
            {
              "occurredAt": "2015-12-17T13:56:13-05:00",
              "status": "Success",
              "eventBy": "Harry Potter",
              "eventType": "Activation Confirmed",
              "servicePlan": "Tablet5GB",
              "mdn": "",
              "msisdn": "15086303371",
              "extendedAttributes": []
            }
          ],
          "type": "array",
          "items": {
            "id": "ProvisioningHistory",
            "title": "ProvisioningHistory",
            "description": "The provisioning history of a specified device during a specified time period.",
            "example": {
              "occurredAt": "2015-12-17T13:56:13-05:00",
              "status": "Success",
              "eventBy": "Harry Potter",
              "eventType": "Activation Confirmed",
              "servicePlan": "Tablet5GB",
              "mdn": "",
              "msisdn": "15086303371",
              "extendedAttributes": []
            },
            "type": "object",
            "properties": {
              "occurredAt": {
                "description": "The date and time when the provisioning event occured.",
                "example": "2015-12-17T13:56:13-05:00",
                "type": "string"
              },
              "status": {
                "description": "The success or failure of the provisioning event.",
                "example": "Success",
                "type": "string"
              },
              "eventBy": {
                "description": "The user who performed the provisioning event.",
                "example": "Harry Potter",
                "type": "string"
              },
              "eventType": {
                "description": "The provisioning action:Activate,Suspend,Restore,Deactivate,Device Move.",
                "example": "Activation Confirmed",
                "type": "string"
              },
              "mdn": {
                "description": "The MDN assigned to the device after the provisioning event.",
                "type": "string"
              },
              "msisdn": {
                "description": "The MSISDN assigned to the device after the provisioning event.",
                "example": "15086303371",
                "type": "string"
              },
              "servicePlan": {
                "description": "The service plan of the device after the provisioning event occurred.",
                "example": "Tablet5GB",
                "type": "string"
              },
              "extendedAttributes": {
                "description": "Any extended attributes for the event, as Key and Value pairs.",
                "example": [],
                "type": "array",
                "items": {
                  "id": "CustomFields",
                  "title": "CustomFields",
                  "description": "Custom data that can be included using key-value pairs.",
                  "example": {
                    "key": "CustomField2",
                    "value": "SuperVend"
                  },
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "The key for an extended attribute.",
                      "example": "CustomField2",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of an extended attribute.",
                      "example": "SuperVend",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
- DeviceSuspensionStatusRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceSuspensionStatusRequest",
      "title": "DeviceSuspensionStatusRequest",
      "description": "Request to return service suspension information about one or more devices.",
      "example": {
        "filter": {
          "groupName": "suspended devices"
        },
        "accountName": "1223334444-00001"
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "The devices that you want to include in the request, specified by device identifier. You only need to provide one identifier per device.",
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "filter": {
          "id": "DeviceFilterWithoutAccount",
          "title": "DeviceFilterWithoutAccount",
          "description": "Filter for devices without account.",
          "example": {
            "groupName": "suspended devices"
          },
          "type": "object",
          "properties": {
            "groupName": {
              "description": "Only include devices that are in this device group.",
              "example": "suspended devices",
              "type": "string"
            },
            "servicePlan": {
              "description": "Only include devices that have this service plan.",
              "type": "string"
            },
            "customFields": {
              "description": "Custom field names and values, if you want to only include devices that have matching values.",
              "type": "array",
              "items": {
                "id": "CustomFields",
                "title": "CustomFields",
                "description": "Custom data that can be included using key-value pairs.",
                "example": {
                  "key": "CustomField2",
                  "value": "SuperVend"
                },
                "type": "object",
                "properties": {
                  "key": {
                    "description": "The key for an extended attribute.",
                    "example": "CustomField2",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of an extended attribute.",
                    "example": "SuperVend",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "accountName": {
          "description": "The name of a billing account.",
          "example": "1223334444-00001",
          "type": "string"
        }
      }
    }
- DeviceUsageListRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceUsageListRequest",
      "title": "DeviceUsageListRequest",
      "description": "Request to return the daily network data usage of a single device during a specified time period.",
      "example": {
        "earliest": "2018-03-20T00:00:01Z",
        "latest": "2020-12-31T00:00:01Z"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "id": "DeviceId",
          "title": "DeviceId",
          "description": "An identifier for a single device.",
          "example": {
            "kind": "imei",
            "id": "990013907835573"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "The value of the device identifier.",
              "example": "990013907835573",
              "type": "string"
            },
            "kind": {
              "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
              "example": "imei",
              "type": "string"
            }
          }
        },
        "earliest": {
          "description": "The earliest date for which you want usage data.",
          "example": "2018-03-20T00:00:01Z",
          "type": "string"
        },
        "latest": {
          "description": "The last date for which you want usage data.",
          "example": "2020-12-31T00:00:01Z",
          "type": "string"
        },
        "label": {
          "id": "Label",
          "title": "Label",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "value": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            }
          }
        }
      }
    }
- Label: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Label",
      "title": "Label",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "value": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- DeviceUsageListResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceUsageListResult",
      "title": "DeviceUsageListResult",
      "description": "Response to return the daily network data usage of a single device during a specified time period.",
      "example": {
        "hasMoreData": false,
        "usageHistory": [
          {
            "bytesUsed": 4096,
            "extendedAttributes": [
              {
                "key": "MoSms",
                "value": "0"
              }
            ],
            "smsUsed": 0,
            "source": "Raw Usage",
            "timestamp": "2020-12-01T00:00:00Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "example": false,
          "type": "boolean"
        },
        "usageHistory": {
          "description": "Placeholder.",
          "example": [
            {
              "bytesUsed": 4096,
              "extendedAttributes": [
                {
                  "key": "MoSms",
                  "value": "0"
                }
              ],
              "smsUsed": 0,
              "source": "Raw Usage",
              "timestamp": "2020-12-01T00:00:00Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "Usage",
            "title": "Usage",
            "description": "The daily network data usage of a single device during a specified time period.",
            "example": {
              "bytesUsed": 4096,
              "extendedAttributes": [
                {
                  "key": "MoSms",
                  "value": "0"
                }
              ],
              "smsUsed": 0,
              "source": "Raw Usage",
              "timestamp": "2020-12-01T00:00:00Z"
            },
            "type": "object",
            "properties": {
              "bytesUsed": {
                "description": "The number of bytes that the device sent or received on the report date.",
                "example": 4096,
                "type": "integer",
                "format": "int64"
              },
              "extendedAttributes": {
                "description": "The number of mobile-originated and mobile-terminated SMS messages on the report date.",
                "example": [
                  {
                    "key": "MoSms",
                    "value": "0"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "CustomFields",
                  "title": "CustomFields",
                  "description": "Custom data that can be included using key-value pairs.",
                  "example": {
                    "key": "CustomField2",
                    "value": "SuperVend"
                  },
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "The key for an extended attribute.",
                      "example": "CustomField2",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of an extended attribute.",
                      "example": "SuperVend",
                      "type": "string"
                    }
                  }
                }
              },
              "servicePlan": {
                "description": "The list of service plans associated with the device/account.",
                "type": "string"
              },
              "smsUsed": {
                "description": "The number of SMS messages that were sent or received on the report date.",
                "example": 0,
                "type": "integer",
                "format": "int32"
              },
              "source": {
                "description": "The source of the information for the reported usage.",
                "example": "Raw Usage",
                "type": "string"
              },
              "timestamp": {
                "description": "The date of the recorded usage.",
                "example": "2020-12-01T00:00:00Z",
                "type": "string"
              }
            }
          }
        }
      }
    }
- DiagnosticsCategory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DiagnosticsCategory",
      "title": "DiagnosticsCategory",
      "description": "Various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.",
      "example": {
        "categoryName": "Connectivity",
        "extendedAttributes": [
          {
            "key": "Connected",
            "value": "false"
          }
        ]
      },
      "type": "object",
      "properties": {
        "categoryName": {
          "description": "The name of the category.",
          "example": "Connectivity",
          "type": "string"
        },
        "extendedAttributes": {
          "description": "A list of Extended Attribute objects as key-value pairs.",
          "example": [
            {
              "key": "Connected",
              "value": "false"
            }
          ],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        }
      }
    }
- Engagement: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Engagement",
      "title": "Engagement",
      "description": "The engagements associated with the account.",
      "example": {
        "engagementId": "1234",
        "chargingGroup": "Engagement1234",
        "services": [
          {
            "name": "Svc1",
            "description": "Usage Segmentation - Main Line.",
            "states": [
              {
                "name": "Svc1 Activate",
                "workflowSequenceNumber": 1,
                "servicePlans": [
                  "4523aef7250f67205fd5",
                  "4d4090c0f2d48814c94d"
                ]
              },
              {
                "name": "Svc1 No Telematics",
                "workflowSequenceNumber": 3,
                "servicePlans": [
                  "4523aef7250f67205fd5",
                  "4d4090c0f2d48814c94d"
                ]
              },
              {
                "name": "Svc1 Deactivate",
                "workflowSequenceNumber": 2,
                "servicePlans": [
                  "4523aef7250f67205fd5",
                  "4d4090c0f2d48814c94d"
                ]
              }
            ]
          },
          {
            "name": "WIFI",
            "description": "Usage Segmentation - WiFi.",
            "states": [
              {
                "name": "WIFI Redirect",
                "workflowSequenceNumber": 2,
                "servicePlans": [
                  "4d4090c0f2d48814c94d"
                ]
              },
              {
                "name": "WIFI Trial",
                "workflowSequenceNumber": 4,
                "servicePlans": [
                  "4d4090c0f2d48814c94d"
                ]
              },
              {
                "name": "WIFI Goodwill",
                "workflowSequenceNumber": 6,
                "servicePlans": [
                  "4d4090c0f2d48814c94d"
                ]
              },
              {
                "name": "WIFI Disable",
                "workflowSequenceNumber": 3,
                "servicePlans": [
                  "4d4090c0f2d48814c94d"
                ]
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "engagementId": {
          "description": "The engagement ID.",
          "example": "1234",
          "type": "string"
        },
        "chargingGroup": {
          "description": "The charging group name.",
          "example": "Engagement1234",
          "type": "string"
        },
        "services": {
          "description": "The services associated with the account.",
          "example": [
            {
              "name": "Svc1",
              "description": "Usage Segmentation - Main Line.",
              "states": [
                {
                  "name": "Svc1 Activate",
                  "workflowSequenceNumber": 1,
                  "servicePlans": [
                    "4523aef7250f67205fd5",
                    "4d4090c0f2d48814c94d"
                  ]
                },
                {
                  "name": "Svc1 No Telematics",
                  "workflowSequenceNumber": 3,
                  "servicePlans": [
                    "4523aef7250f67205fd5",
                    "4d4090c0f2d48814c94d"
                  ]
                },
                {
                  "name": "Svc1 Deactivate",
                  "workflowSequenceNumber": 2,
                  "servicePlans": [
                    "4523aef7250f67205fd5",
                    "4d4090c0f2d48814c94d"
                  ]
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountService",
            "title": "AccountService",
            "description": "Service associated with the account.",
            "example": {
              "name": "Svc1",
              "description": "Usage Segmentation - Main Line.",
              "states": [
                {
                  "name": "Svc1 Activate",
                  "workflowSequenceNumber": 1,
                  "servicePlans": [
                    "4523aef7250f67205fd5",
                    "4d4090c0f2d48814c94d"
                  ]
                },
                {
                  "name": "Svc1 No Telematics",
                  "workflowSequenceNumber": 3,
                  "servicePlans": [
                    "4523aef7250f67205fd5",
                    "4d4090c0f2d48814c94d"
                  ]
                },
                {
                  "name": "Svc1 Deactivate",
                  "workflowSequenceNumber": 2,
                  "servicePlans": [
                    "4523aef7250f67205fd5",
                    "4d4090c0f2d48814c94d"
                  ]
                }
              ]
            },
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the service plan.",
                "example": "Svc1",
                "type": "string"
              },
              "description": {
                "description": "The description of the service plan.",
                "example": "Usage Segmentation - Main Line",
                "type": "string"
              },
              "states": {
                "description": "The state of the service plan.",
                "example": [
                  {
                    "name": "Svc1 Activate",
                    "workflowSequenceNumber": 1,
                    "servicePlans": [
                      "4523aef7250f67205fd5",
                      "4d4090c0f2d48814c94d"
                    ]
                  }
                ],
                "type": "array",
                "items": {
                  "id": "State",
                  "title": "State",
                  "description": "Each service includes custom states.",
                  "example": {
                    "name": "Svc1 Activate",
                    "workflowSequenceNumber": 1,
                    "servicePlans": [
                      "4523aef7250f67205fd5",
                      "4d4090c0f2d48814c94d"
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the state.",
                      "example": "Svc1 Activate",
                      "type": "string"
                    },
                    "workflowSequenceNumber": {
                      "description": "The workflow sequence number of this state.",
                      "example": 1,
                      "type": "number"
                    },
                    "servicePlans": {
                      "description": "The service plans that can be used to charge for services for devices in this state.",
                      "example": [
                        "4523aef7250f67205fd5",
                        "4d4090c0f2d48814c94d"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
- AccountStatesAndServices: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountStatesAndServices",
      "title": "AccountStatesAndServices",
      "description": "Returns a list and details of all custom services and states defined for a specified account.",
      "example": {
        "engagement": [
          {
            "engagementId": "1234",
            "chargingGroup": "Engagement1234",
            "services": [
              {
                "name": "Svc1",
                "description": "Usage Segmentation - Main Line.",
                "states": [
                  {
                    "name": "Svc1 Activate",
                    "workflowSequenceNumber": 1,
                    "servicePlans": [
                      "4523aef7250f67205fd5",
                      "4d4090c0f2d48814c94d"
                    ]
                  },
                  {
                    "name": "Svc1 No Telematics",
                    "workflowSequenceNumber": 3,
                    "servicePlans": [
                      "4523aef7250f67205fd5",
                      "4d4090c0f2d48814c94d"
                    ]
                  },
                  {
                    "name": "Svc1 Deactivate",
                    "workflowSequenceNumber": 2,
                    "servicePlans": [
                      "4523aef7250f67205fd5",
                      "4d4090c0f2d48814c94d"
                    ]
                  }
                ]
              },
              {
                "name": "WIFI",
                "description": "Usage Segmentation - WiFi.",
                "states": [
                  {
                    "name": "WIFI Redirect",
                    "workflowSequenceNumber": 2,
                    "servicePlans": [
                      "4d4090c0f2d48814c94d"
                    ]
                  },
                  {
                    "name": "WIFI Trial",
                    "workflowSequenceNumber": 4,
                    "servicePlans": [
                      "4d4090c0f2d48814c94d"
                    ]
                  },
                  {
                    "name": "WIFI Goodwill",
                    "workflowSequenceNumber": 6,
                    "servicePlans": [
                      "4d4090c0f2d48814c94d"
                    ]
                  },
                  {
                    "name": "WIFI Disable",
                    "workflowSequenceNumber": 3,
                    "servicePlans": [
                      "4d4090c0f2d48814c94d"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "engagement": {
          "description": "The engagements associated with the account.",
          "example": [
            {
              "engagementId": "1234",
              "chargingGroup": "Engagement1234",
              "services": [
                {
                  "name": "Svc1",
                  "description": "Usage Segmentation - Main Line.",
                  "states": [
                    {
                      "name": "Svc1 Activate",
                      "workflowSequenceNumber": 1,
                      "servicePlans": [
                        "4523aef7250f67205fd5",
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "Svc1 No Telematics",
                      "workflowSequenceNumber": 3,
                      "servicePlans": [
                        "4523aef7250f67205fd5",
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "Svc1 Deactivate",
                      "workflowSequenceNumber": 2,
                      "servicePlans": [
                        "4523aef7250f67205fd5",
                        "4d4090c0f2d48814c94d"
                      ]
                    }
                  ]
                },
                {
                  "name": "WIFI",
                  "description": "Usage Segmentation - WiFi.",
                  "states": [
                    {
                      "name": "WIFI Redirect",
                      "workflowSequenceNumber": 2,
                      "servicePlans": [
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "WIFI Trial",
                      "workflowSequenceNumber": 4,
                      "servicePlans": [
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "WIFI Goodwill",
                      "workflowSequenceNumber": 6,
                      "servicePlans": [
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "WIFI Disable",
                      "workflowSequenceNumber": 3,
                      "servicePlans": [
                        "4d4090c0f2d48814c94d"
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "Engagement",
            "title": "Engagement",
            "description": "The engagements associated with the account.",
            "example": {
              "engagementId": "1234",
              "chargingGroup": "Engagement1234",
              "services": [
                {
                  "name": "Svc1",
                  "description": "Usage Segmentation - Main Line.",
                  "states": [
                    {
                      "name": "Svc1 Activate",
                      "workflowSequenceNumber": 1,
                      "servicePlans": [
                        "4523aef7250f67205fd5",
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "Svc1 No Telematics",
                      "workflowSequenceNumber": 3,
                      "servicePlans": [
                        "4523aef7250f67205fd5",
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "Svc1 Deactivate",
                      "workflowSequenceNumber": 2,
                      "servicePlans": [
                        "4523aef7250f67205fd5",
                        "4d4090c0f2d48814c94d"
                      ]
                    }
                  ]
                },
                {
                  "name": "WIFI",
                  "description": "Usage Segmentation - WiFi.",
                  "states": [
                    {
                      "name": "WIFI Redirect",
                      "workflowSequenceNumber": 2,
                      "servicePlans": [
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "WIFI Trial",
                      "workflowSequenceNumber": 4,
                      "servicePlans": [
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "WIFI Goodwill",
                      "workflowSequenceNumber": 6,
                      "servicePlans": [
                        "4d4090c0f2d48814c94d"
                      ]
                    },
                    {
                      "name": "WIFI Disable",
                      "workflowSequenceNumber": 3,
                      "servicePlans": [
                        "4d4090c0f2d48814c94d"
                      ]
                    }
                  ]
                }
              ]
            },
            "type": "object",
            "properties": {
              "engagementId": {
                "description": "The engagement ID.",
                "example": "1234",
                "type": "string"
              },
              "chargingGroup": {
                "description": "The charging group name.",
                "example": "Engagement1234",
                "type": "string"
              },
              "services": {
                "description": "The services associated with the account.",
                "example": [
                  {
                    "name": "Svc1",
                    "description": "Usage Segmentation - Main Line.",
                    "states": [
                      {
                        "name": "Svc1 Activate",
                        "workflowSequenceNumber": 1,
                        "servicePlans": [
                          "4523aef7250f67205fd5",
                          "4d4090c0f2d48814c94d"
                        ]
                      },
                      {
                        "name": "Svc1 No Telematics",
                        "workflowSequenceNumber": 3,
                        "servicePlans": [
                          "4523aef7250f67205fd5",
                          "4d4090c0f2d48814c94d"
                        ]
                      },
                      {
                        "name": "Svc1 Deactivate",
                        "workflowSequenceNumber": 2,
                        "servicePlans": [
                          "4523aef7250f67205fd5",
                          "4d4090c0f2d48814c94d"
                        ]
                      }
                    ]
                  }
                ],
                "type": "array",
                "items": {
                  "id": "AccountService",
                  "title": "AccountService",
                  "description": "Service associated with the account.",
                  "example": {
                    "name": "Svc1",
                    "description": "Usage Segmentation - Main Line.",
                    "states": [
                      {
                        "name": "Svc1 Activate",
                        "workflowSequenceNumber": 1,
                        "servicePlans": [
                          "4523aef7250f67205fd5",
                          "4d4090c0f2d48814c94d"
                        ]
                      },
                      {
                        "name": "Svc1 No Telematics",
                        "workflowSequenceNumber": 3,
                        "servicePlans": [
                          "4523aef7250f67205fd5",
                          "4d4090c0f2d48814c94d"
                        ]
                      },
                      {
                        "name": "Svc1 Deactivate",
                        "workflowSequenceNumber": 2,
                        "servicePlans": [
                          "4523aef7250f67205fd5",
                          "4d4090c0f2d48814c94d"
                        ]
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the service plan.",
                      "example": "Svc1",
                      "type": "string"
                    },
                    "description": {
                      "description": "The description of the service plan.",
                      "example": "Usage Segmentation - Main Line",
                      "type": "string"
                    },
                    "states": {
                      "description": "The state of the service plan.",
                      "example": [
                        {
                          "name": "Svc1 Activate",
                          "workflowSequenceNumber": 1,
                          "servicePlans": [
                            "4523aef7250f67205fd5",
                            "4d4090c0f2d48814c94d"
                          ]
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "State",
                        "title": "State",
                        "description": "Each service includes custom states.",
                        "example": {
                          "name": "Svc1 Activate",
                          "workflowSequenceNumber": 1,
                          "servicePlans": [
                            "4523aef7250f67205fd5",
                            "4d4090c0f2d48814c94d"
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the state.",
                            "example": "Svc1 Activate",
                            "type": "string"
                          },
                          "workflowSequenceNumber": {
                            "description": "The workflow sequence number of this state.",
                            "example": 1,
                            "type": "number"
                          },
                          "servicePlans": {
                            "description": "The service plans that can be used to charge for services for devices in this state.",
                            "example": [
                              "4523aef7250f67205fd5",
                              "4d4090c0f2d48814c94d"
                            ],
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "engagement"
      ]
    }
- GoToStateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GoToStateRequest",
      "title": "GoToStateRequest",
      "description": "Changes the provisioning state of one or more devices to a specified customer-defined service and state.",
      "example": {
        "devices": [
          {
            "deviceIds": [
              {
                "kind": "imei",
                "id": "990013907835573"
              },
              {
                "kind": "iccid",
                "id": "89141390780800784259"
              }
            ]
          },
          {
            "deviceIds": [
              {
                "kind": "imei",
                "id": "990013907884259"
              },
              {
                "kind": "iccid",
                "id": "89141390780800735573"
              }
            ]
          }
        ],
        "serviceName": "My Service",
        "stateName": "My State",
        "servicePlan": "87641",
        "mdnZipCode": "94203",
        "groupName": "4G West",
        "publicIpRestriction": "unrestricted",
        "primaryPlaceOfUse": {
          "customerName": {
            "title": "President",
            "firstName": "Zaffod",
            "lastName": "Beeblebrox"
          },
          "address": {
            "addressLine1": "1600 Pennsylvania Ave NW",
            "city": "Washington",
            "state": "DC",
            "zip": "20500",
            "country": "USA"
          }
        }
      },
      "type": "object",
      "properties": {
        "devices": {
          "description": "Up to 10,000 devices that you want to push to a different state, specified by device identifier.",
          "example": [
            {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907884259"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800735573"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "filter": {
          "id": "DeviceFilter",
          "title": "DeviceFilter",
          "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
          "example": {
            "groupName": "Short-Haul Trucks",
            "customFields": [
              {
                "key": "CustomField1",
                "value": "East Region Trucks"
              }
            ]
          },
          "type": "object",
          "properties": {
            "account": {
              "description": "The the billing account that the devices belong to.",
              "type": "string"
            },
            "groupName": {
              "description": "Only include devices that are in this device group.",
              "example": "Short-Haul Trucks",
              "type": "string"
            },
            "servicePlan": {
              "description": "Only include devices that have this service plan.",
              "type": "string"
            },
            "customFields": {
              "description": "Custom field names and values, if you want to only include devices that have matching values.",
              "example": [
                {
                  "key": "CustomField1",
                  "value": "East Region Trucks"
                }
              ],
              "type": "array",
              "items": {
                "id": "CustomFields",
                "title": "CustomFields",
                "description": "Custom data that can be included using key-value pairs.",
                "example": {
                  "key": "CustomField2",
                  "value": "SuperVend"
                },
                "type": "object",
                "properties": {
                  "key": {
                    "description": "The key for an extended attribute.",
                    "example": "CustomField2",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of an extended attribute.",
                    "example": "SuperVend",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "serviceName": {
          "description": "The name of a customer-defined service to push the devices to.",
          "example": "My Service",
          "type": "string"
        },
        "stateName": {
          "description": "The name of a customer-defined stage state to push the devices to.",
          "example": "My State",
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to all specified devices in the new state.",
          "example": "87641",
          "type": "string"
        },
        "mdnZipCode": {
          "description": "The Zip code of the location where the line of service will primarily be used, or a Zip code that you have been told to use with these devices. For accounts that are configured for geographic numbering, this is the ZIP code from which the MDN will be derived.",
          "example": "94203",
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "The pool from which your device IP addresses will be derived if the service or state change requires new IP addresses.If you do not include this element, the default pool will be used.",
          "type": "string"
        },
        "publicIpRestriction": {
          "description": "For devices with static IP addresses on the public network, this specifies whether the devices have general access to the Internet. Valid values are “restricted” or “unrestricted”.",
          "example": "unrestricted",
          "type": "string"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM. Can be used with ICCID or EID device identifiers in lieu of an IMEI when activating 4G devices. The SkuNumber will be used with all devices in the request, so all devices must be of the same type.",
          "type": "string"
        },
        "customFields": {
          "description": "The names and values of any custom fields that you want to set for the devices.",
          "type": "array",
          "items": {
            "$ref": "CustomFields"
          }
        },
        "groupName": {
          "description": "The name of a device group that the devices should be added to.",
          "example": "4G West",
          "type": "string"
        },
        "primaryPlaceOfUse": {
          "id": "PlaceOfUse",
          "title": "PlaceOfUse",
          "description": "The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.",
          "example": {
            "customerName": {
              "title": "President",
              "firstName": "Zaffod",
              "lastName": "Beeblebrox"
            },
            "address": {
              "addressLine1": "1600 Pennsylvania Ave NW",
              "city": "Washington",
              "state": "DC",
              "zip": "20500",
              "country": "USA"
            }
          },
          "type": "object",
          "properties": {
            "address": {
              "id": "Address",
              "title": "Address",
              "description": "The customer address for the line's primary place of use, for line usage taxation.",
              "example": {
                "addressLine1": "1600 Pennsylvania Ave NW",
                "city": "Washington",
                "state": "DC",
                "zip": "20500",
                "country": "USA"
              },
              "type": "object",
              "properties": {
                "addressLine1": {
                  "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                  "example": "1600 Pennsylvania Ave NW",
                  "type": "string"
                },
                "city": {
                  "description": "The city for the line's primary place of use.",
                  "example": "Washington",
                  "type": "string"
                },
                "state": {
                  "description": "The state for the line's primary place of use.",
                  "example": "DC",
                  "type": "string"
                },
                "zip": {
                  "description": "The ZIP code for the line's primary place of use.",
                  "example": "20500",
                  "type": "string"
                },
                "country": {
                  "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                  "example": "USA",
                  "type": "string"
                },
                "addressLine2": {
                  "description": "Optional additional street address information.",
                  "type": "string"
                },
                "zip4": {
                  "description": "The ZIP+4 for the line's primary place of use.",
                  "type": "string"
                },
                "phone": {
                  "description": "A phone number where the customer can be reached.",
                  "type": "string"
                },
                "phoneType": {
                  "description": "A single letter to indicate the customer phone type.",
                  "type": "string"
                },
                "emailAddress": {
                  "description": "An email address for the customer.",
                  "type": "string"
                }
              },
              "required": [
                "addressLine1",
                "city",
                "state",
                "zip",
                "country"
              ]
            },
            "customerName": {
              "id": "CustomerName",
              "title": "CustomerName",
              "description": "The customer name to be used for line usage taxation.",
              "example": {
                "title": "President",
                "firstName": "Zaffod",
                "lastName": "Beeblebrox"
              },
              "type": "object",
              "properties": {
                "firstName": {
                  "description": "The customer's first name.",
                  "example": "Zaffod",
                  "type": "string"
                },
                "lastName": {
                  "description": "The customer's last name.",
                  "example": "Beeblebrox",
                  "type": "string"
                },
                "title": {
                  "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
                  "example": "President",
                  "type": "string"
                },
                "middleName": {
                  "description": "The customer's middle name.",
                  "type": "string"
                },
                "suffix": {
                  "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
                  "type": "string"
                }
              },
              "required": [
                "firstName",
                "lastName"
              ]
            }
          }
        }
      }
    }
- DeviceGroupDevicesData: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceGroupDevicesData",
      "title": "DeviceGroupDevicesData",
      "description": "Returns the name, description, and list of devices in a device group.",
      "example": {
        "name": "Nebraska Trucks",
        "description": "All service trucks in Nebraska.",
        "hasMoreData": false,
        "devices": [
          {
            "deviceIds": [
              {
                "id": "12345",
                "kind": "meid"
              },
              {
                "id": "54321",
                "kind": "mdn"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the device group.",
          "example": "All service trucks in Nebraska",
          "type": "string"
        },
        "devices": {
          "description": "The devices in the device group.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "12345",
                  "kind": "meid"
                },
                {
                  "id": "54321",
                  "kind": "mdn"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "example": false,
          "type": "boolean"
        },
        "name": {
          "description": "The name of the device group.",
          "example": "Nebraska Trucks",
          "type": "string"
        }
      }
    }
- DeviceGroup: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceGroup",
      "title": "DeviceGroup",
      "description": "Returns a list of all device groups in a specified account.",
      "example": {
        "name": "Unassigned Devices",
        "description": "All devices that are not in another device group.",
        "isDefaultGroup": true,
        "extendedAttributes": []
      },
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the device group.",
          "example": "All devices that are not in another device group.",
          "type": "string"
        },
        "extendedAttributes": {
          "description": "Any extended attributes for the device group, as Key and Value pairs.",
          "example": [],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "isDefaultGroup": {
          "description": "Identifies the default device group.",
          "example": true,
          "type": "boolean"
        },
        "name": {
          "description": "The name of the device group.",
          "example": "Unassigned Devices",
          "type": "string"
        }
      }
    }
- DeviceGroupUpdateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceGroupUpdateRequest",
      "title": "DeviceGroupUpdateRequest",
      "description": "Make changes to a device group, including changing the name and description, and adding or removing devices.",
      "example": {
        "newGroupName": "Western region tanks",
        "newGroupDescription": "All western region tank level monitors.",
        "devicesToAdd": [
          {
            "kind": "imei",
            "id": "990003420535537"
          }
        ]
      },
      "type": "object",
      "properties": {
        "devicesToAdd": {
          "description": "Zero or more devices to add to the device group, specified by device ID. The devices will be removed from their current device groups. You can use POST /devices/actions/list to get a list of all devices in the account.",
          "example": [
            {
              "kind": "imei",
              "id": "990003420535537"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "devicesToRemove": {
          "description": "Zero or more devices to remove from the device group, specified by device ID. The devices will be added to the default device group.",
          "type": "array",
          "items": {
            "$ref": "DeviceId"
          }
        },
        "newGroupDescription": {
          "description": "A new description for the device group. Do not include this parameter to leave the group description unchanged.",
          "example": "All western region tank level monitors",
          "type": "string"
        },
        "newGroupName": {
          "description": "A new name for the device group. Do not include this parameter if you want to leave the group name unchanged.",
          "example": "Western region tanks",
          "type": "string"
        }
      }
    }
- IPPool: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "IPPool",
      "title": "IPPool",
      "description": "IP pool that is available to the account.",
      "example": {
        "poolName": "ACMESTATIC001",
        "poolType": "Static IP",
        "isDefaultPool": true
      },
      "type": "object",
      "properties": {
        "poolName": {
          "description": "The name of the IP pool.",
          "example": "ACMESALES001",
          "type": "string"
        },
        "poolType": {
          "description": "The type of IP pool, such as “Static IP” or “Dynamic IP.”",
          "example": "Static IP",
          "type": "string"
        },
        "isDefaultPool": {
          "description": "True if this is the default IP pool for the account.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- CustomFields: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CustomFields",
      "title": "CustomFields",
      "description": "Custom data that can be included using key-value pairs.",
      "example": {
        "key": "CustomField2",
        "value": "SuperVend"
      },
      "type": "object",
      "properties": {
        "key": {
          "description": "The key for an extended attribute.",
          "example": "CustomField2",
          "type": "string"
        },
        "value": {
          "description": "The value of an extended attribute.",
          "example": "SuperVend",
          "type": "string"
        }
      }
    }
- AccountLeadsResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountLeadsResult",
      "title": "AccountLeadsResult",
      "description": "Returns information for all leads associated with an account.",
      "example": {
        "leads": [
          {
            "leadId": "L-10001",
            "leadState": "Qualified",
            "address": {
              "addressLine1": "1600 Pennsylvania Avenue",
              "addressLine2": "",
              "city": "Washington",
              "state": "DC",
              "zip": "20500",
              "country": "USA"
            }
          }
        ],
        "hasMoreData": false
      },
      "type": "object",
      "properties": {
        "hasMoreData": {
          "description": "False if no more leads.True if there is more data to be retrieved.",
          "example": false,
          "type": "boolean"
        },
        "leads": {
          "description": "The leads associated with an account.",
          "example": [
            {
              "leadId": "L-10001",
              "leadState": "Qualified",
              "address": {
                "addressLine1": "1600 Pennsylvania Avenue",
                "addressLine2": "",
                "city": "Washington",
                "state": "DC",
                "zip": "20500",
                "country": "USA"
              }
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountLead",
            "title": "AccountLead",
            "description": "A successful response returns an array of lead objects.",
            "example": {
              "leadId": "L-10001",
              "leadState": "Qualified",
              "address": {
                "addressLine1": "1600 Pennsylvania Avenue",
                "addressLine2": "",
                "city": "Washington",
                "state": "DC",
                "zip": "20500",
                "country": "USA"
              }
            },
            "type": "object",
            "properties": {
              "address": {
                "id": "Address",
                "title": "Address",
                "description": "The customer address for the line's primary place of use, for line usage taxation.",
                "example": {
                  "addressLine1": "1600 Pennsylvania Ave NW",
                  "city": "Washington",
                  "state": "DC",
                  "zip": "20500",
                  "country": "USA"
                },
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                    "example": "1600 Pennsylvania Ave NW",
                    "type": "string"
                  },
                  "city": {
                    "description": "The city for the line's primary place of use.",
                    "example": "Washington",
                    "type": "string"
                  },
                  "state": {
                    "description": "The state for the line's primary place of use.",
                    "example": "DC",
                    "type": "string"
                  },
                  "zip": {
                    "description": "The ZIP code for the line's primary place of use.",
                    "example": "20500",
                    "type": "string"
                  },
                  "country": {
                    "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                    "example": "USA",
                    "type": "string"
                  },
                  "addressLine2": {
                    "description": "Optional additional street address information.",
                    "type": "string"
                  },
                  "zip4": {
                    "description": "The ZIP+4 for the line's primary place of use.",
                    "type": "string"
                  },
                  "phone": {
                    "description": "A phone number where the customer can be reached.",
                    "type": "string"
                  },
                  "phoneType": {
                    "description": "A single letter to indicate the customer phone type.",
                    "type": "string"
                  },
                  "emailAddress": {
                    "description": "An email address for the customer.",
                    "type": "string"
                  }
                },
                "required": [
                  "addressLine1",
                  "city",
                  "state",
                  "zip",
                  "country"
                ]
              },
              "leadId": {
                "description": "Unique number for each lead. Use this value in the leadId parameter when activating devices to credit the activations to the lead.",
                "example": "L-10001",
                "type": "string"
              },
              "leadState": {
                "description": "The current state of the lead, such as “Qualified” or “Closed.”",
                "example": "Qualified",
                "type": "string"
              }
            }
          }
        }
      }
    }
- AccountLead: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountLead",
      "title": "AccountLead",
      "description": "A successful response returns an array of lead objects.",
      "example": {
        "leadId": "L-10001",
        "leadState": "Qualified",
        "address": {
          "addressLine1": "1600 Pennsylvania Avenue",
          "addressLine2": "",
          "city": "Washington",
          "state": "DC",
          "zip": "20500",
          "country": "USA"
        }
      },
      "type": "object",
      "properties": {
        "address": {
          "id": "Address",
          "title": "Address",
          "description": "The customer address for the line's primary place of use, for line usage taxation.",
          "example": {
            "addressLine1": "1600 Pennsylvania Ave NW",
            "city": "Washington",
            "state": "DC",
            "zip": "20500",
            "country": "USA"
          },
          "type": "object",
          "properties": {
            "addressLine1": {
              "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
              "example": "1600 Pennsylvania Ave NW",
              "type": "string"
            },
            "city": {
              "description": "The city for the line's primary place of use.",
              "example": "Washington",
              "type": "string"
            },
            "state": {
              "description": "The state for the line's primary place of use.",
              "example": "DC",
              "type": "string"
            },
            "zip": {
              "description": "The ZIP code for the line's primary place of use.",
              "example": "20500",
              "type": "string"
            },
            "country": {
              "description": "Either “US” or “USA” for the country of the line's primary place of use.",
              "example": "USA",
              "type": "string"
            },
            "addressLine2": {
              "description": "Optional additional street address information.",
              "type": "string"
            },
            "zip4": {
              "description": "The ZIP+4 for the line's primary place of use.",
              "type": "string"
            },
            "phone": {
              "description": "A phone number where the customer can be reached.",
              "type": "string"
            },
            "phoneType": {
              "description": "A single letter to indicate the customer phone type.",
              "type": "string"
            },
            "emailAddress": {
              "description": "An email address for the customer.",
              "type": "string"
            }
          },
          "required": [
            "addressLine1",
            "city",
            "state",
            "zip",
            "country"
          ]
        },
        "leadId": {
          "description": "Unique number for each lead. Use this value in the leadId parameter when activating devices to credit the activations to the lead.",
          "example": "L-10001",
          "type": "string"
        },
        "leadState": {
          "description": "The current state of the lead, such as “Qualified” or “Closed.”",
          "example": "Qualified",
          "type": "string"
        }
      }
    }
- LogInRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LogInRequest",
      "title": "LogInRequest",
      "description": "Request to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.",
      "example": {
        "username": "zbeeblebrox",
        "password": "IMgr8"
      },
      "type": "object",
      "properties": {
        "username": {
          "description": "The username for authentication.",
          "example": "zbeeblebrox",
          "type": "string"
        },
        "password": {
          "description": "The password for authentication.",
          "example": "IMgr8",
          "type": "string"
        }
      }
    }
- LogInResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LogInResult",
      "title": "LogInResult",
      "description": "Response to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.",
      "example": {
        "sessionToken": "bcce3ea6-fe4f-4952-bacf-eadd80718e83"
      },
      "type": "object",
      "properties": {
        "sessionToken": {
          "description": "The identifier for the session that was created by the request. Store the sessionToken for use in the header of all other API requests.",
          "example": "bcce3ea6-fe4f-4952-bacf-eadd80718e83",
          "type": "string"
        }
      }
    }
- LogOutRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LogOutRequest",
      "title": "LogOutRequest",
      "description": "Request to end a Connectivity Management session.",
      "example": {
        "sessionToken": "bcce3ea6-fe4f-4952-bacf-eadd80718e83"
      },
      "type": "object",
      "properties": {
        "sessionToken": {
          "description": "The session token is returned to confirm that it was invalidated.",
          "example": "bcce3ea6-fe4f-4952-bacf-eadd80718e83",
          "type": "string"
        }
      }
    }
- MismatchedDevice: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MismatchedDevice",
      "title": "MismatchedDevice",
      "description": "4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
      "example": {
        "accountName": "0212398765-00001",
        "mdn": "5096300587",
        "activationDate": "2011-01-21T10:55:27-08:00",
        "iccid": "89148000000800784259",
        "preImei": "990003420535573",
        "postImei": "987603420573553",
        "simOtaDate": "2017-12-01T16:00:00-08:00"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The account that the device is associated with.",
          "example": "0212398765-00001",
          "type": "string"
        },
        "mdn": {
          "description": "The assigned phone number of the device.",
          "example": "5096300587",
          "type": "string"
        },
        "activationDate": {
          "description": "The date and time when the SIM was last activated.",
          "example": "2011-01-21T10:55:27-08:00",
          "type": "string"
        },
        "iccid": {
          "description": "The ID of the SIM.",
          "example": "89148000000800784259",
          "type": "string"
        },
        "preImei": {
          "description": "The IMEI of the device prior to the SIM OTA activation on simOtaDate.",
          "example": "990003420535573",
          "type": "string"
        },
        "postImei": {
          "description": "The IMEI of the device after the SIM OTA activation on simOtaDate.",
          "example": "987603420573553",
          "type": "string"
        },
        "simOtaDate": {
          "description": "The date and time of the SIM OTA activation.",
          "example": "2017-12-01T16:00:00-08:00",
          "type": "string"
        }
      }
    }
- MoveDeviceRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MoveDeviceRequest",
      "title": "MoveDeviceRequest",
      "description": "Request to move active devices from one billing account to another within a customer profile.",
      "example": {
        "filter": {
          "groupName": "Short-Haul Trucks",
          "customFields": [
            {
              "key": "CustomField1",
              "value": "East Region Trucks"
            }
          ]
        },
        "accountName": "0212345678-00001",
        "servicePlan": "M2M5GB"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account that you want to move the devices to.",
          "example": "0212345678-00001",
          "type": "string"
        },
        "filter": {
          "id": "DeviceFilter",
          "title": "DeviceFilter",
          "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
          "example": {
            "groupName": "Short-Haul Trucks",
            "customFields": [
              {
                "key": "CustomField1",
                "value": "East Region Trucks"
              }
            ]
          },
          "type": "object",
          "properties": {
            "account": {
              "description": "The the billing account that the devices belong to.",
              "type": "string"
            },
            "groupName": {
              "description": "Only include devices that are in this device group.",
              "example": "Short-Haul Trucks",
              "type": "string"
            },
            "servicePlan": {
              "description": "Only include devices that have this service plan.",
              "type": "string"
            },
            "customFields": {
              "description": "Custom field names and values, if you want to only include devices that have matching values.",
              "example": [
                {
                  "key": "CustomField1",
                  "value": "East Region Trucks"
                }
              ],
              "type": "array",
              "items": {
                "id": "CustomFields",
                "title": "CustomFields",
                "description": "Custom data that can be included using key-value pairs.",
                "example": {
                  "key": "CustomField2",
                  "value": "SuperVend"
                },
                "type": "object",
                "properties": {
                  "key": {
                    "description": "The key for an extended attribute.",
                    "example": "CustomField2",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of an extended attribute.",
                    "example": "SuperVend",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "example": [
            {
              "key": "CustomField1",
              "value": "East Region Trucks"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "CustomFields"
          }
        },
        "devices": {
          "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
          "example": [
            {
              "deviceIds": [
                {
                  "kind": "ESN",
                  "id": "19110173057"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "groupName": {
          "description": "The name of a device group, to only include devices in that group.",
          "example": "Short-Haul Trucks",
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "The pool from which device IP addresses will be derived in the new account. If you do not include this element, the default pool will be used.",
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to the devices in the new account. If you do not include this element, ThingSpace will attempt to use the current service plan, which will result in a error if the new account does not have that service plan.",
          "example": "M2M5GB",
          "type": "string"
        }
      }
    }
- PlaceOfUse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PlaceOfUse",
      "title": "PlaceOfUse",
      "description": "The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.",
      "example": {
        "customerName": {
          "title": "President",
          "firstName": "Zaffod",
          "lastName": "Beeblebrox"
        },
        "address": {
          "addressLine1": "1600 Pennsylvania Ave NW",
          "city": "Washington",
          "state": "DC",
          "zip": "20500",
          "country": "USA"
        }
      },
      "type": "object",
      "properties": {
        "address": {
          "id": "Address",
          "title": "Address",
          "description": "The customer address for the line's primary place of use, for line usage taxation.",
          "example": {
            "addressLine1": "1600 Pennsylvania Ave NW",
            "city": "Washington",
            "state": "DC",
            "zip": "20500",
            "country": "USA"
          },
          "type": "object",
          "properties": {
            "addressLine1": {
              "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
              "example": "1600 Pennsylvania Ave NW",
              "type": "string"
            },
            "city": {
              "description": "The city for the line's primary place of use.",
              "example": "Washington",
              "type": "string"
            },
            "state": {
              "description": "The state for the line's primary place of use.",
              "example": "DC",
              "type": "string"
            },
            "zip": {
              "description": "The ZIP code for the line's primary place of use.",
              "example": "20500",
              "type": "string"
            },
            "country": {
              "description": "Either “US” or “USA” for the country of the line's primary place of use.",
              "example": "USA",
              "type": "string"
            },
            "addressLine2": {
              "description": "Optional additional street address information.",
              "type": "string"
            },
            "zip4": {
              "description": "The ZIP+4 for the line's primary place of use.",
              "type": "string"
            },
            "phone": {
              "description": "A phone number where the customer can be reached.",
              "type": "string"
            },
            "phoneType": {
              "description": "A single letter to indicate the customer phone type.",
              "type": "string"
            },
            "emailAddress": {
              "description": "An email address for the customer.",
              "type": "string"
            }
          },
          "required": [
            "addressLine1",
            "city",
            "state",
            "zip",
            "country"
          ]
        },
        "customerName": {
          "id": "CustomerName",
          "title": "CustomerName",
          "description": "The customer name to be used for line usage taxation.",
          "example": {
            "title": "President",
            "firstName": "Zaffod",
            "lastName": "Beeblebrox"
          },
          "type": "object",
          "properties": {
            "firstName": {
              "description": "The customer's first name.",
              "example": "Zaffod",
              "type": "string"
            },
            "lastName": {
              "description": "The customer's last name.",
              "example": "Beeblebrox",
              "type": "string"
            },
            "title": {
              "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
              "example": "President",
              "type": "string"
            },
            "middleName": {
              "description": "The customer's middle name.",
              "type": "string"
            },
            "suffix": {
              "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
              "type": "string"
            }
          },
          "required": [
            "firstName",
            "lastName"
          ]
        }
      }
    }
- ProvisioningHistory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ProvisioningHistory",
      "title": "ProvisioningHistory",
      "description": "The provisioning history of a specified device during a specified time period.",
      "example": {
        "occurredAt": "2015-12-17T13:56:13-05:00",
        "status": "Success",
        "eventBy": "Harry Potter",
        "eventType": "Activation Confirmed",
        "servicePlan": "Tablet5GB",
        "mdn": "",
        "msisdn": "15086303371",
        "extendedAttributes": []
      },
      "type": "object",
      "properties": {
        "occurredAt": {
          "description": "The date and time when the provisioning event occured.",
          "example": "2015-12-17T13:56:13-05:00",
          "type": "string"
        },
        "status": {
          "description": "The success or failure of the provisioning event.",
          "example": "Success",
          "type": "string"
        },
        "eventBy": {
          "description": "The user who performed the provisioning event.",
          "example": "Harry Potter",
          "type": "string"
        },
        "eventType": {
          "description": "The provisioning action:Activate,Suspend,Restore,Deactivate,Device Move.",
          "example": "Activation Confirmed",
          "type": "string"
        },
        "mdn": {
          "description": "The MDN assigned to the device after the provisioning event.",
          "type": "string"
        },
        "msisdn": {
          "description": "The MSISDN assigned to the device after the provisioning event.",
          "example": "15086303371",
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan of the device after the provisioning event occurred.",
          "example": "Tablet5GB",
          "type": "string"
        },
        "extendedAttributes": {
          "description": "Any extended attributes for the event, as Key and Value pairs.",
          "example": [],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        }
      }
    }
- RegisterCallbackRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RegisterCallbackRequest",
      "title": "RegisterCallbackRequest",
      "description": "Request to register a callback.",
      "example": {
        "name": "CarrierService",
        "url": "https://mock.thingspace.verizon.com/webhook"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the callback service that you want to subscribe to.",
          "example": "CarrierService",
          "type": "string"
        },
        "url": {
          "description": "The address on your server where you have enabled a listening service for callback messages.",
          "example": "https://mock.thingspace.verizon.com/webhook",
          "type": "string"
        },
        "username": {
          "description": "The user name that the M2M Platform should return in the callback messages.",
          "type": "string"
        },
        "password": {
          "description": "The password that the M2M Platform should return in the callback messages.",
          "type": "string"
        }
      }
    }
- DeviceManagementResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceManagementResult",
      "title": "DeviceManagementResult",
      "description": "Response to activate service for one or more devices so that they can send and receive data.",
      "example": {
        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
      },
      "type": "object",
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback service.",
          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
          "type": "string"
        }
      }
    }
- RequestStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "RequestStatus",
      "description": "The current status of the callback response.",
      "example": "Success",
      "type": "string",
      "enum": [
        "Pending",
        "Success",
        "Failure"
      ]
    }
- AsynchronousRequestResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AsynchronousRequestResult",
      "title": "AsynchronousRequestResult",
      "description": "A successful request returns the request ID and the current status.",
      "example": {
        "requestId": "86c83330-4bf5-4235-9c4e-a83f93aeae4c",
        "status": "Success"
      },
      "type": "object",
      "properties": {
        "requestId": {
          "description": "The unique ID of the asynchronous request.",
          "example": "86c83330-4bf5-4235-9c4e-a83f93aeae4c",
          "type": "string"
        },
        "status": {
          "title": "RequestStatus",
          "description": "The current status of the callback response.",
          "example": "Success",
          "type": "string",
          "enum": [
            "Pending",
            "Success",
            "Failure"
          ]
        }
      }
    }
- ConnectivityManagementResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConnectivityManagementResult",
      "title": "ConnectivityManagementResult",
      "description": "Response to errors.",
      "example": {
        "errorCode": "error code string",
        "errorMessage": "error message string"
      },
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Code of the error.",
          "example": "error code string",
          "type": "string"
        },
        "errorMessage": {
          "description": "Details of the error.",
          "example": "error message string",
          "type": "string"
        }
      }
    }
- ConnectivityManagementSuccessResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConnectivityManagementSuccessResult",
      "title": "ConnectivityManagementSuccessResult",
      "description": "Response to successful request.",
      "example": {
        "success": true
      },
      "type": "object",
      "properties": {
        "success": {
          "description": "A value of “true” indicates that the device group was created successfully.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- AccountService: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountService",
      "title": "AccountService",
      "description": "Service associated with the account.",
      "example": {
        "name": "Svc1",
        "description": "Usage Segmentation - Main Line.",
        "states": [
          {
            "name": "Svc1 Activate",
            "workflowSequenceNumber": 1,
            "servicePlans": [
              "4523aef7250f67205fd5",
              "4d4090c0f2d48814c94d"
            ]
          },
          {
            "name": "Svc1 No Telematics",
            "workflowSequenceNumber": 3,
            "servicePlans": [
              "4523aef7250f67205fd5",
              "4d4090c0f2d48814c94d"
            ]
          },
          {
            "name": "Svc1 Deactivate",
            "workflowSequenceNumber": 2,
            "servicePlans": [
              "4523aef7250f67205fd5",
              "4d4090c0f2d48814c94d"
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the service plan.",
          "example": "Svc1",
          "type": "string"
        },
        "description": {
          "description": "The description of the service plan.",
          "example": "Usage Segmentation - Main Line",
          "type": "string"
        },
        "states": {
          "description": "The state of the service plan.",
          "example": [
            {
              "name": "Svc1 Activate",
              "workflowSequenceNumber": 1,
              "servicePlans": [
                "4523aef7250f67205fd5",
                "4d4090c0f2d48814c94d"
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "State",
            "title": "State",
            "description": "Each service includes custom states.",
            "example": {
              "name": "Svc1 Activate",
              "workflowSequenceNumber": 1,
              "servicePlans": [
                "4523aef7250f67205fd5",
                "4d4090c0f2d48814c94d"
              ]
            },
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the state.",
                "example": "Svc1 Activate",
                "type": "string"
              },
              "workflowSequenceNumber": {
                "description": "The workflow sequence number of this state.",
                "example": 1,
                "type": "number"
              },
              "servicePlans": {
                "description": "The service plans that can be used to charge for services for devices in this state.",
                "example": [
                  "4523aef7250f67205fd5",
                  "4d4090c0f2d48814c94d"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
- ServicePlan: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ServicePlan",
      "title": "ServicePlan",
      "description": "Details of the service plan.",
      "example": {
        "name": "2MSHR5GB",
        "code": "M2MSHR5GB",
        "sizeKb": 0,
        "carrierServicePlanCode": "84638"
      },
      "type": "object",
      "properties": {
        "carrierServicePlanCode": {
          "description": "The code that is used by the carrier for the service plan.",
          "example": "84638",
          "type": "string"
        },
        "code": {
          "description": "The code of the service plan, which may not be the same as the name.",
          "example": "M2MSHR5GB",
          "type": "string"
        },
        "extendedAttributes": {
          "description": "Any extended attributes for the service plan, as Key and Value pairs.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "name": {
          "description": "The name of the service plan.",
          "example": "2MSHR5GB",
          "type": "string"
        },
        "sizeKb": {
          "description": "The size of the service plan in kilobytes.",
          "example": 0,
          "type": "integer",
          "format": "int64"
        }
      }
    }
- ServicePlanUpdateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ServicePlanUpdateRequest",
      "title": "ServicePlanUpdateRequest",
      "description": "Request to update service plan.",
      "example": {
        "devices": [
          {
            "deviceIds": [
              {
                "id": "A100003685E561",
                "kind": "meid"
              }
            ]
          }
        ],
        "servicePlan": "new_service_plan_code"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "type": "string"
        },
        "currentServicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "devices": {
          "description": "A list of the devices that you want to change, specified by device identifier.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "A100003685E561",
                  "kind": "meid"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountDeviceList",
            "title": "AccountDeviceList",
            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
            "example": {
              "deviceIds": [
                {
                  "kind": "imei",
                  "id": "990013907835573"
                },
                {
                  "kind": "iccid",
                  "id": "89141390780800784259"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "All identifiers for the device.",
                "example": [
                  {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  {
                    "kind": "iccid",
                    "id": "89141390780800784259"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          }
        },
        "groupName": {
          "description": "The name of a device group, if you want to restore service for all devices in that group.",
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to all specified devices.",
          "example": "new_service_plan_code",
          "type": "string"
        },
        "carrierIpPoolName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "takeEffect": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
- SessionResetPasswordRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SessionResetPasswordRequest",
      "title": "SessionResetPasswordRequest",
      "description": "Request to a new, randomly generated password for the current username.",
      "example": {
        "oldPassword": "grflbk"
      },
      "type": "object",
      "properties": {
        "oldPassword": {
          "description": "The current password for the username.",
          "example": "grflbk",
          "type": "string"
        }
      }
    }
- SessionResetPasswordResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SessionResetPasswordResult",
      "title": "SessionResetPasswordResult",
      "description": "Response to a new, randomly generated password for the current username.",
      "example": {
        "newPassword": "Wh0a1545a84d"
      },
      "type": "object",
      "properties": {
        "newPassword": {
          "description": "The new password for the username.",
          "example": "Wh0a1545a84d",
          "type": "string"
        }
      }
    }
- SMSMessage: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SMSMessage",
      "title": "SMSMessage",
      "description": "SMS messages sent by all M2M devices associated with a billing account.",
      "example": {
        "deviceIds": [
          {
            "id": "09623489171",
            "kind": "esn"
          }
        ],
        "message": "testmessage1",
        "timestamp": "2016-01-01T12:29:49-08:00"
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "One or more IDs of the device that sent the message.",
          "example": [
            {
              "id": "09623489171",
              "kind": "esn"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "message": {
          "description": "The contents of the SMS message.",
          "example": "testmessage1",
          "type": "string"
        },
        "timestamp": {
          "description": "The date and time that the message was received by the Verizon ThingSpace Platform.",
          "example": "2016-01-01T12:29:49-08:00",
          "type": "string"
        }
      }
    }
- SMSMessagesQueryResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SMSMessagesQueryResult",
      "title": "SMSMessagesQueryResult",
      "description": "Response to SMS messages sent by all M2M devices associated with a billing account.",
      "example": {
        "messages": [
          {
            "deviceIds": [
              {
                "id": "09623489171",
                "kind": "esn"
              }
            ],
            "message": "testmessage1",
            "timestamp": "2016-01-01T12:29:49-08:00"
          },
          {
            "deviceIds": [
              {
                "id": "09623489171",
                "kind": "esn"
              }
            ],
            "message": "testmessage2",
            "timestamp": "2016-01-01T12:31:02-08:00"
          }
        ],
        "hasMoreData": false
      },
      "type": "object",
      "properties": {
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "example": false,
          "type": "boolean"
        },
        "messages": {
          "description": "An array of up to 100 SMS messages that were sent by devices in the account.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "09623489171",
                  "kind": "esn"
                }
              ],
              "message": "testmessage1",
              "timestamp": "2016-01-01T12:29:49-08:00"
            },
            {
              "deviceIds": [
                {
                  "id": "09623489171",
                  "kind": "esn"
                }
              ],
              "message": "testmessage2",
              "timestamp": "2016-01-01T12:31:02-08:00"
            }
          ],
          "type": "array",
          "items": {
            "id": "SMSMessage",
            "title": "SMSMessage",
            "description": "SMS messages sent by all M2M devices associated with a billing account.",
            "example": {
              "deviceIds": [
                {
                  "id": "09623489171",
                  "kind": "esn"
                }
              ],
              "message": "testmessage1",
              "timestamp": "2016-01-01T12:29:49-08:00"
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "One or more IDs of the device that sent the message.",
                "example": [
                  {
                    "id": "09623489171",
                    "kind": "esn"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                }
              },
              "message": {
                "description": "The contents of the SMS message.",
                "example": "testmessage1",
                "type": "string"
              },
              "timestamp": {
                "description": "The date and time that the message was received by the Verizon ThingSpace Platform.",
                "example": "2016-01-01T12:29:49-08:00",
                "type": "string"
              }
            }
          }
        }
      }
    }
- SMSSendRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SMSSendRequest",
      "title": "SMSSendRequest",
      "description": "Request to send SMS.",
      "example": {
        "smsMessage": "The rain in Spain stays mainly in the plain."
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "type": "string"
        },
        "customFields": {
          "description": "The names and values of custom fields, if you want to only include devices that have matching custom fields.",
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "dataEncoding": {
          "description": "The SMS message encoding, which can be 7-bit (default), 8-bit-ASCII, 8-bit-UTF-8, 8-bit-DATA.",
          "type": "string"
        },
        "deviceIds": {
          "description": "The devices that you want to send the message to, specified by device identifier.",
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          }
        },
        "groupName": {
          "description": "The name of a device group, if you want to send the SMS message to all devices in the device group.",
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "example": "T Plan 2",
          "type": "string"
        },
        "smsMessage": {
          "description": "The contents of the SMS message. The SMS message is limited to 160 characters in 7-bit format, or 140 characters in 8-bit format.",
          "example": "The rain in Spain stays mainly in the plain.",
          "type": "string"
        }
      }
    }
- State: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "State",
      "title": "State",
      "description": "Each service includes custom states.",
      "example": {
        "name": "Svc1 Activate",
        "workflowSequenceNumber": 1,
        "servicePlans": [
          "4523aef7250f67205fd5",
          "4d4090c0f2d48814c94d"
        ]
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the state.",
          "example": "Svc1 Activate",
          "type": "string"
        },
        "workflowSequenceNumber": {
          "description": "The workflow sequence number of this state.",
          "example": 1,
          "type": "number"
        },
        "servicePlans": {
          "description": "The service plans that can be used to charge for services for devices in this state.",
          "example": [
            "4523aef7250f67205fd5",
            "4d4090c0f2d48814c94d"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- Usage: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Usage",
      "title": "Usage",
      "description": "The daily network data usage of a single device during a specified time period.",
      "example": {
        "bytesUsed": 4096,
        "extendedAttributes": [
          {
            "key": "MoSms",
            "value": "0"
          }
        ],
        "smsUsed": 0,
        "source": "Raw Usage",
        "timestamp": "2020-12-01T00:00:00Z"
      },
      "type": "object",
      "properties": {
        "bytesUsed": {
          "description": "The number of bytes that the device sent or received on the report date.",
          "example": 4096,
          "type": "integer",
          "format": "int64"
        },
        "extendedAttributes": {
          "description": "The number of mobile-originated and mobile-terminated SMS messages on the report date.",
          "example": [
            {
              "key": "MoSms",
              "value": "0"
            }
          ],
          "type": "array",
          "items": {
            "id": "CustomFields",
            "title": "CustomFields",
            "description": "Custom data that can be included using key-value pairs.",
            "example": {
              "key": "CustomField2",
              "value": "SuperVend"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "The key for an extended attribute.",
                "example": "CustomField2",
                "type": "string"
              },
              "value": {
                "description": "The value of an extended attribute.",
                "example": "SuperVend",
                "type": "string"
              }
            }
          }
        },
        "servicePlan": {
          "description": "The list of service plans associated with the device/account.",
          "type": "string"
        },
        "smsUsed": {
          "description": "The number of SMS messages that were sent or received on the report date.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "description": "The source of the information for the reported usage.",
          "example": "Raw Usage",
          "type": "string"
        },
        "timestamp": {
          "description": "The date of the recorded usage.",
          "example": "2020-12-01T00:00:00Z",
          "type": "string"
        }
      }
    }
- ActivateDeviceProfileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ActivateDeviceProfileRequest",
      "title": "ActivateDeviceProfileRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string"
        },
        "servicePlan": {
          "example": "The service plan name",
          "type": "string"
        },
        "mdnZipCode": {
          "example": "five digit zip code",
          "type": "string"
        }
      }
    }
- DeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceList",
      "title": "DeviceList",
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceId",
            "title": "DeviceId",
            "description": "An identifier for a single device.",
            "example": {
              "kind": "imei",
              "id": "990013907835573"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- RequestResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RequestResponse",
      "title": "RequestResponse",
      "type": "object",
      "properties": {
        "requestId": {
          "example": "d1f08526-5443-4054-9a29",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        }
      }
    }
- RestErrorResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RestErrorResponse",
      "title": "RestErrorResponse",
      "type": "object",
      "properties": {
        "errorCode": {
          "example": "400",
          "type": "string",
          "maxLength": 3,
          "pattern": "^[0-9]{3}$"
        },
        "errorMessage": {
          "example": "a description of the error",
          "type": "string"
        }
      }
    }
- ProfileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ProfileRequest",
      "title": "ProfileRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "carrierName": {
          "example": "the name of the mobile service provider",
          "type": "string"
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string"
        },
        "servicePlan": {
          "example": "The service plan name",
          "type": "string"
        },
        "mdnZipCode": {
          "example": "five digit zip code",
          "type": "string"
        },
        "primaryPlaceOfUse": {
          "description": "",
          "type": "array",
          "items": {
            "id": "PrimaryPlaceOfUse",
            "title": "PrimaryPlaceOfUse",
            "type": "object",
            "properties": {
              "customerName": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "CustomerName",
                  "title": "CustomerName",
                  "description": "The customer name to be used for line usage taxation.",
                  "example": {
                    "title": "President",
                    "firstName": "Zaffod",
                    "lastName": "Beeblebrox"
                  },
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "description": "The customer's first name.",
                      "example": "Zaffod",
                      "type": "string"
                    },
                    "lastName": {
                      "description": "The customer's last name.",
                      "example": "Beeblebrox",
                      "type": "string"
                    },
                    "title": {
                      "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
                      "example": "President",
                      "type": "string"
                    },
                    "middleName": {
                      "description": "The customer's middle name.",
                      "type": "string"
                    },
                    "suffix": {
                      "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
                      "type": "string"
                    }
                  },
                  "required": [
                    "firstName",
                    "lastName"
                  ]
                },
                "maxItems": 5
              },
              "address": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Address",
                  "title": "Address",
                  "description": "The customer address for the line's primary place of use, for line usage taxation.",
                  "example": {
                    "addressLine1": "1600 Pennsylvania Ave NW",
                    "city": "Washington",
                    "state": "DC",
                    "zip": "20500",
                    "country": "USA"
                  },
                  "type": "object",
                  "properties": {
                    "addressLine1": {
                      "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                      "example": "1600 Pennsylvania Ave NW",
                      "type": "string"
                    },
                    "city": {
                      "description": "The city for the line's primary place of use.",
                      "example": "Washington",
                      "type": "string"
                    },
                    "state": {
                      "description": "The state for the line's primary place of use.",
                      "example": "DC",
                      "type": "string"
                    },
                    "zip": {
                      "description": "The ZIP code for the line's primary place of use.",
                      "example": "20500",
                      "type": "string"
                    },
                    "country": {
                      "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                      "example": "USA",
                      "type": "string"
                    },
                    "addressLine2": {
                      "description": "Optional additional street address information.",
                      "type": "string"
                    },
                    "zip4": {
                      "description": "The ZIP+4 for the line's primary place of use.",
                      "type": "string"
                    },
                    "phone": {
                      "description": "A phone number where the customer can be reached.",
                      "type": "string"
                    },
                    "phoneType": {
                      "description": "A single letter to indicate the customer phone type.",
                      "type": "string"
                    },
                    "emailAddress": {
                      "description": "An email address for the customer.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "addressLine1",
                    "city",
                    "state",
                    "zip",
                    "country"
                  ]
                },
                "maxItems": 5
              }
            }
          },
          "maxItems": 25
        },
        "smsrOid": {
          "type": "string",
          "minLength": 3,
          "maxLength": 46,
          "pattern": "^[0-9.]{3,46}$"
        },
        "carrierIpPoolName": {
          "description": "The name of the pool of IP addresses assigned to the profile.",
          "type": "string"
        }
      }
    }
- addressquery: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "addressquery",
      "title": "addressquery",
      "type": "object",
      "properties": {
        "address": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Address",
            "title": "Address",
            "description": "The customer address for the line's primary place of use, for line usage taxation.",
            "example": {
              "addressLine1": "1600 Pennsylvania Ave NW",
              "city": "Washington",
              "state": "DC",
              "zip": "20500",
              "country": "USA"
            },
            "type": "object",
            "properties": {
              "addressLine1": {
                "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                "example": "1600 Pennsylvania Ave NW",
                "type": "string"
              },
              "city": {
                "description": "The city for the line's primary place of use.",
                "example": "Washington",
                "type": "string"
              },
              "state": {
                "description": "The state for the line's primary place of use.",
                "example": "DC",
                "type": "string"
              },
              "zip": {
                "description": "The ZIP code for the line's primary place of use.",
                "example": "20500",
                "type": "string"
              },
              "country": {
                "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                "example": "USA",
                "type": "string"
              },
              "addressLine2": {
                "description": "Optional additional street address information.",
                "type": "string"
              },
              "zip4": {
                "description": "The ZIP+4 for the line's primary place of use.",
                "type": "string"
              },
              "phone": {
                "description": "A phone number where the customer can be reached.",
                "type": "string"
              },
              "phoneType": {
                "description": "A single letter to indicate the customer phone type.",
                "type": "string"
              },
              "emailAddress": {
                "description": "An email address for the customer.",
                "type": "string"
              }
            },
            "required": [
              "addressLine1",
              "city",
              "state",
              "zip",
              "country"
            ]
          },
          "maxItems": 5
        }
      }
    }
- customernamequery: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "customernamequery",
      "title": "customernamequery",
      "type": "object",
      "properties": {
        "customerName": {
          "description": "",
          "type": "array",
          "items": {
            "id": "CustomerName",
            "title": "CustomerName",
            "description": "The customer name to be used for line usage taxation.",
            "example": {
              "title": "President",
              "firstName": "Zaffod",
              "lastName": "Beeblebrox"
            },
            "type": "object",
            "properties": {
              "firstName": {
                "description": "The customer's first name.",
                "example": "Zaffod",
                "type": "string"
              },
              "lastName": {
                "description": "The customer's last name.",
                "example": "Beeblebrox",
                "type": "string"
              },
              "title": {
                "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
                "example": "President",
                "type": "string"
              },
              "middleName": {
                "description": "The customer's middle name.",
                "type": "string"
              },
              "suffix": {
                "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
                "type": "string"
              }
            },
            "required": [
              "firstName",
              "lastName"
            ]
          },
          "maxItems": 5
        }
      }
    }
- DeactivateDeviceProfileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeactivateDeviceProfileRequest",
      "title": "DeactivateDeviceProfileRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeactivateDeviceList",
            "title": "DeactivateDeviceList",
            "type": "object",
            "properties": {
              "ids": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Id",
                  "title": "Id",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string"
        },
        "carrierName": {
          "example": "the name of the mobile service provider",
          "type": "string"
        },
        "reasonCode": {
          "example": "a short code for the reason action was taken",
          "type": "string"
        },
        "etfWaiver": {
          "type": "boolean",
          "default": true
        },
        "checkFallbackProfile": {
          "type": "boolean",
          "default": false
        }
      }
    }
- DeactivateDeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeactivateDeviceList",
      "title": "DeactivateDeviceList",
      "type": "object",
      "properties": {
        "ids": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Id",
            "title": "Id",
            "type": "object",
            "properties": {
              "id": {
                "description": "The value of the device identifier.",
                "example": "990013907835573",
                "type": "string"
              },
              "kind": {
                "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                "example": "imei",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- PropertyDeviceId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PropertyDeviceId",
      "title": "PropertyDeviceId",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "kind": {
          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
          "example": "imei",
          "type": "string"
        }
      }
    }
- SetFallbackAttributeRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SetFallbackAttributeRequest",
      "title": "SetFallbackAttributeRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string"
        },
        "carrierName": {
          "example": "the name of the mobile service provider",
          "type": "string"
        }
      }
    }
- NotificationReportRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "NotificationReportRequest",
      "title": "NotificationReportRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "example": "0242072320-00001",
          "type": "string"
        },
        "requestType": {
          "example": "REACHABLE_FOR_DATA",
          "type": "string"
        },
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          }
        },
        "monitorExpirationTime": {
          "example": "2019-12-02T15:00:00-08:00Z",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "requestType",
        "devices",
        "monitorExpirationTime"
      ]
    }
- StopMonitorRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "StopMonitorRequest",
      "title": "StopMonitorRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "example": "0242123520-00001",
          "type": "string"
        },
        "monitorIds": {
          "description": "",
          "example": [
            "35596ca6-bab4-4333-a914-42b4fc2da54c",
            "35596ca6-bab4-4333-a914-42b4fc2da54b"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "accountName",
        "monitorIds"
      ]
    }
- DeviceUploadRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceUploadRequest",
      "title": "DeviceUploadRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "example": "1223334444-00001",
          "type": "string"
        },
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          }
        },
        "emailAddress": {
          "example": "bob@mycompany.com",
          "type": "string"
        },
        "deviceSku": {
          "example": "VZW123456",
          "type": "string"
        },
        "uploadType": {
          "example": "IMEI",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "devices",
        "emailAddress",
        "deviceSku",
        "uploadType"
      ]
    }
- BillingCycle: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BillingCycle",
      "title": "BillingCycle",
      "type": "object",
      "properties": {
        "year": {
          "example": "2020",
          "type": "string"
        },
        "month": {
          "example": "3",
          "type": "string"
        }
      }
    }
- billedusageListRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "billedusageListRequest",
      "title": "billedusageListRequest",
      "description": "Information required to associate a usage segmentation label with a device to retrieve billing.",
      "type": "object",
      "properties": {
        "accountName": {
          "example": "9231221278-99990",
          "type": "string"
        },
        "labels": {
          "id": "LabelsList",
          "title": "LabelsList",
          "type": "object",
          "properties": {
            "deviceIds": {
              "description": "",
              "type": "array",
              "items": {
                "id": "DeviceLabels",
                "title": "DeviceLabels",
                "description": "A label for a single device.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The label you want to associate with the device.",
                    "example": "VIN",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of label",
                    "example": "XXUZL54B5YN105457",
                    "type": "string"
                  }
                }
              },
              "maxItems": 100
            }
          }
        },
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          }
        },
        "billingCycle": {
          "id": "BillingCycle",
          "title": "BillingCycle",
          "type": "object",
          "properties": {
            "year": {
              "example": "2020",
              "type": "string"
            },
            "month": {
              "example": "3",
              "type": "string"
            }
          }
        }
      }
    }
- LabelsList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LabelsList",
      "title": "LabelsList",
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceLabels",
            "title": "DeviceLabels",
            "description": "A label for a single device.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The label you want to associate with the device.",
                "example": "VIN",
                "type": "string"
              },
              "value": {
                "description": "The value of label",
                "example": "XXUZL54B5YN105457",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- DeviceLabels: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceLabels",
      "title": "DeviceLabels",
      "description": "A label for a single device.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The label you want to associate with the device.",
          "example": "VIN",
          "type": "string"
        },
        "value": {
          "description": "The value of label",
          "example": "XXUZL54B5YN105457",
          "type": "string"
        }
      }
    }
- ProfileChangeStateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ProfileChangeStateRequest",
      "title": "ProfileChangeStateRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          }
        },
        "accountName": {
          "example": "1223334444-00001",
          "type": "string"
        },
        "smsrOid": {
          "example": "1.3.6.1.4.1.31746.1.500.200.101.5",
          "type": "string"
        }
      }
    }
- AccountLabels: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountLabels",
      "title": "AccountLabels",
      "description": "Maximum of 2,000 objects are allowed in the array.",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          }
        },
        "label": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceLabels",
            "title": "DeviceLabels",
            "description": "A label for a single device.",
            "type": "object",
            "properties": {
              "name": {
                "description": "The label you want to associate with the device.",
                "example": "VIN",
                "type": "string"
              },
              "value": {
                "description": "The value of label",
                "example": "XXUZL54B5YN105457",
                "type": "string"
              }
            }
          }
        }
      }
    }
- AssociateLabelRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AssociateLabelRequest",
      "title": "AssociateLabelRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
          "example": "1223334444-00001",
          "type": "string"
        },
        "labels": {
          "id": "AccountLabels",
          "title": "AccountLabels",
          "description": "Maximum of 2,000 objects are allowed in the array.",
          "type": "object",
          "properties": {
            "devices": {
              "description": "",
              "type": "array",
              "items": {
                "id": "DeviceList",
                "title": "DeviceList",
                "type": "object",
                "properties": {
                  "deviceIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "DeviceId",
                      "title": "DeviceId",
                      "description": "An identifier for a single device.",
                      "example": {
                        "kind": "imei",
                        "id": "990013907835573"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The value of the device identifier.",
                          "example": "990013907835573",
                          "type": "string"
                        },
                        "kind": {
                          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                          "example": "imei",
                          "type": "string"
                        }
                      }
                    },
                    "maxItems": 100
                  }
                }
              }
            },
            "label": {
              "description": "",
              "type": "array",
              "items": {
                "id": "DeviceLabels",
                "title": "DeviceLabels",
                "description": "A label for a single device.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The label you want to associate with the device.",
                    "example": "VIN",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of label",
                    "example": "XXUZL54B5YN105457",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
- UploadsActivatesDeviceRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UploadsActivatesDeviceRequest",
      "title": "UploadsActivatesDeviceRequest",
      "description": "The request body identifies the devices to upload.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
          "example": "1223334444-00001",
          "type": "string"
        },
        "emailAddress": {
          "description": "The email address that the report should be sent to when the upload is complete.",
          "example": "bob@mycompany.com",
          "type": "string"
        },
        "deviceSku": {
          "description": "The stock keeping unit that identifies the type of devices in the upload and activation.",
          "example": "VZW123456",
          "type": "string"
        },
        "uploadType": {
          "description": "The format of the device identifiers in the upload and activation.",
          "example": "IMEI ICCID Pair",
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to all specified devices.",
          "example": "15MBShr",
          "type": "string"
        },
        "mdnZipCode": {
          "description": "The Zip code of the location where the line of service is primarily used, or a Zip code that you have been told to use with these devices.",
          "example": "92222",
          "type": "string"
        },
        "devices": {
          "description": "The devices to upload, specified by device IDs in a format matching uploadType.",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          }
        },
        "carrierIpPoolName": {
          "description": "The pool from which your device IP addresses is derived.",
          "example": "The carrier pool name",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "emailAddress",
        "deviceSku",
        "uploadType",
        "servicePlan",
        "mdnZipCode",
        "devices"
      ]
    }
- CheckOrderStatusRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CheckOrderStatusRequest",
      "title": "CheckOrderStatusRequest",
      "description": "The request body identifies the devices to upload.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
          "example": "1223334444-00001",
          "type": "string"
        },
        "devices": {
          "description": "The devices to upload, specified by device IDs in a format matching uploadType.",
          "type": "array",
          "items": {
            "id": "DeviceList",
            "title": "DeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "DeviceId",
                  "title": "DeviceId",
                  "description": "An identifier for a single device.",
                  "example": {
                    "kind": "imei",
                    "id": "990013907835573"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The value of the device identifier.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                      "example": "imei",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          }
        },
        "orderRequestId": {
          "description": "The request id from the activation order.",
          "example": "f55fea16-3664-4a32-ae9d-c0cbe3eedf1d",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "devices"
      ]
    }
- Id: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Id",
      "title": "Id",
      "type": "object",
      "properties": {
        "id": {
          "description": "The value of the device identifier.",
          "example": "990013907835573",
          "type": "string"
        },
        "kind": {
          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
          "example": "imei",
          "type": "string"
        }
      }
    }
- PrimaryPlaceOfUse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PrimaryPlaceOfUse",
      "title": "PrimaryPlaceOfUse",
      "type": "object",
      "properties": {
        "customerName": {
          "description": "",
          "type": "array",
          "items": {
            "id": "CustomerName",
            "title": "CustomerName",
            "description": "The customer name to be used for line usage taxation.",
            "example": {
              "title": "President",
              "firstName": "Zaffod",
              "lastName": "Beeblebrox"
            },
            "type": "object",
            "properties": {
              "firstName": {
                "description": "The customer's first name.",
                "example": "Zaffod",
                "type": "string"
              },
              "lastName": {
                "description": "The customer's last name.",
                "example": "Beeblebrox",
                "type": "string"
              },
              "title": {
                "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
                "example": "President",
                "type": "string"
              },
              "middleName": {
                "description": "The customer's middle name.",
                "type": "string"
              },
              "suffix": {
                "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
                "type": "string"
              }
            },
            "required": [
              "firstName",
              "lastName"
            ]
          },
          "maxItems": 5
        },
        "address": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Address",
            "title": "Address",
            "description": "The customer address for the line's primary place of use, for line usage taxation.",
            "example": {
              "addressLine1": "1600 Pennsylvania Ave NW",
              "city": "Washington",
              "state": "DC",
              "zip": "20500",
              "country": "USA"
            },
            "type": "object",
            "properties": {
              "addressLine1": {
                "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                "example": "1600 Pennsylvania Ave NW",
                "type": "string"
              },
              "city": {
                "description": "The city for the line's primary place of use.",
                "example": "Washington",
                "type": "string"
              },
              "state": {
                "description": "The state for the line's primary place of use.",
                "example": "DC",
                "type": "string"
              },
              "zip": {
                "description": "The ZIP code for the line's primary place of use.",
                "example": "20500",
                "type": "string"
              },
              "country": {
                "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                "example": "USA",
                "type": "string"
              },
              "addressLine2": {
                "description": "Optional additional street address information.",
                "type": "string"
              },
              "zip4": {
                "description": "The ZIP+4 for the line's primary place of use.",
                "type": "string"
              },
              "phone": {
                "description": "A phone number where the customer can be reached.",
                "type": "string"
              },
              "phoneType": {
                "description": "A single letter to indicate the customer phone type.",
                "type": "string"
              },
              "emailAddress": {
                "description": "An email address for the customer.",
                "type": "string"
              }
            },
            "required": [
              "addressLine1",
              "city",
              "state",
              "zip",
              "country"
            ]
          },
          "maxItems": 5
        }
      }
    }
- AccuracyMode: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "AccuracyMode",
      "description": "Accurary, currently only 0-coarse supported.",
      "example": "0",
      "type": "string",
      "enum": [
        "0"
      ]
    }
- CacheMode: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "CacheMode",
      "description": "Location cache mode.",
      "example": "1",
      "type": "string",
      "enum": [
        "0",
        "1",
        "2"
      ]
    }
- DeviceLocationCallback: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceLocationCallback",
      "title": "DeviceLocationCallback",
      "example": {
        "name": "Location",
        "url": "http://10.120.102.183:50559/CallbackListener/LocationServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "name": {
          "title": "CallbackServiceName",
          "description": "The name of the callback service.",
          "example": "Location",
          "type": "string",
          "enum": [
            "Location",
            "DeviceLocation"
          ]
        },
        "url": {
          "description": "The location of your callback listener.",
          "example": "http://10.120.102.183:50559/CallbackListener/LocationServiceMessages.asmx",
          "type": "string"
        }
      },
      "required": [
        "name",
        "url"
      ]
    }
- CallbackRegistrationResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CallbackRegistrationResult",
      "title": "CallbackRegistrationResult",
      "example": {
        "account": "0212312345-00001",
        "name": "Location"
      },
      "type": "object",
      "properties": {
        "account": {
          "description": "The name of the account that registered the callback URL.",
          "example": "0212312345-00001",
          "type": "string"
        },
        "name": {
          "title": "CallbackServiceName",
          "description": "The name of the callback service.",
          "example": "Location",
          "type": "string",
          "enum": [
            "Location",
            "DeviceLocation"
          ]
        }
      }
    }
- CallbackServiceName: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "CallbackServiceName",
      "description": "The name of the callback service.",
      "example": "Location",
      "type": "string",
      "enum": [
        "Location",
        "DeviceLocation"
      ]
    }
- ConsentDeleteRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConsentDeleteRequest",
      "title": "ConsentDeleteRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "MyAccount-1",
          "type": "string"
        },
        "deviceList": {
          "description": "Device ID list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- ConsentRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConsentRequest",
      "title": "ConsentRequest",
      "example": {
        "accountName": "1234567890-00001",
        "type": "replace",
        "allDevice": false,
        "exclusion": [
          "980003420535573",
          "375535024300089",
          "A100003861E585"
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "2234434445-32333",
          "type": "string"
        },
        "allDevice": {
          "description": "Exclude all devices or not.",
          "example": false,
          "type": "boolean"
        },
        "type": {
          "description": "The change to make: append or replace.",
          "example": "replace",
          "type": "string"
        },
        "exclusion": {
          "description": "Device ID list.",
          "example": [
            "980003420535573",
            "375535024300089",
            "A100003861E585"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- DevicesConsentResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DevicesConsentResult",
      "title": "DevicesConsentResult",
      "example": {
        "accountName": "2024009649-00001",
        "allDevice": false,
        "hasMoreData": false,
        "totalCount": 4,
        "updateTime": "2018-05-18 19:20:50.076 +0000 UTC",
        "exclusion": [
          "990003420535375",
          "420535399000375",
          "A100003861E585",
          "205353759900034"
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "2234434445-32333",
          "type": "string"
        },
        "allDevice": {
          "description": "Exclude all devices or not?",
          "example": false,
          "type": "boolean"
        },
        "hasMoreData": {
          "description": "Are there more devices to retrieve or not?",
          "example": false,
          "type": "boolean"
        },
        "totalCount": {
          "description": "Total number of excluded devices in the account.",
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "Last update time.",
          "example": "2018-05-18 19:20:50.076 +0000 UTC",
          "type": "string"
        },
        "exclusion": {
          "description": "Device ID list.",
          "example": [
            "990003420535375",
            "420535399000375",
            "A100003861E585",
            "205353759900034"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- DeviceInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceInfo",
      "title": "DeviceInfo",
      "description": "The devices that you want to locate. The array cannot contain more than 20 devices.",
      "example": {
        "id": "980003420535573",
        "kind": "imei",
        "mdn": "7892345678"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Device identifier.",
          "example": "980003420535573",
          "type": "string"
        },
        "kind": {
          "description": "Device identifier kind.",
          "example": "imei",
          "type": "string"
        },
        "mdn": {
          "description": "Device MDN.",
          "example": "7892345678",
          "type": "string"
        }
      },
      "required": [
        "id",
        "kind",
        "mdn"
      ]
    }
- SynchronousLocationRequestResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SynchronousLocationRequestResult",
      "title": "SynchronousLocationRequestResult",
      "example": {
        "txid": "4be7c858-0ef9-4b15-a0c1-95061456d835",
        "status": "QUEUED"
      },
      "type": "object",
      "properties": {
        "txid": {
          "description": "The transaction ID of the report.",
          "example": "4be7c858-0ef9-4b15-a0c1-95061456d835",
          "type": "string"
        },
        "status": {
          "title": "ReportStatus",
          "description": "Status of the report.",
          "example": "INPROGRESS",
          "type": "string",
          "enum": [
            "QUEUED",
            "INPROGRESS",
            "COMPLETED"
          ]
        }
      },
      "required": [
        "txid",
        "status"
      ]
    }
- LocationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LocationRequest",
      "title": "LocationRequest",
      "description": "The body contains the the account name and list of devices that you want to locate, plus other options.",
      "example": {
        "accountName": "1234567890-00001",
        "accuracyMode": "0",
        "cacheMode": "1",
        "deviceList": [
          {
            "id": "980003420535573",
            "kind": "imei",
            "mdn": "7892345678"
          },
          {
            "id": "375535024300089",
            "kind": "imei",
            "mdn": "7897654321"
          },
          {
            "id": "A100003861E585",
            "kind": "meid",
            "mdn": "7897650914"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "1234567890-00001",
          "type": "string"
        },
        "accuracyMode": {
          "title": "AccuracyMode",
          "description": "Accurary, currently only 0-coarse supported.",
          "example": "0",
          "type": "string",
          "enum": [
            "0"
          ]
        },
        "cacheMode": {
          "title": "CacheMode",
          "description": "Location cache mode.",
          "example": "1",
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ]
        },
        "deviceList": {
          "description": "Device list.",
          "example": [
            {
              "id": "980003420535573",
              "kind": "imei",
              "mdn": "7892345678"
            },
            {
              "id": "375535024300089",
              "kind": "imei",
              "mdn": "7897654321"
            },
            {
              "id": "A100003861E585",
              "kind": "meid",
              "mdn": "7897650914"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceInfo",
            "title": "DeviceInfo",
            "description": "The devices that you want to locate. The array cannot contain more than 20 devices.",
            "example": {
              "id": "980003420535573",
              "kind": "imei",
              "mdn": "7892345678"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "Device identifier.",
                "example": "980003420535573",
                "type": "string"
              },
              "kind": {
                "description": "Device identifier kind.",
                "example": "imei",
                "type": "string"
              },
              "mdn": {
                "description": "Device MDN.",
                "example": "7892345678",
                "type": "string"
              }
            },
            "required": [
              "id",
              "kind",
              "mdn"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "accuracyMode",
        "cacheMode",
        "deviceList"
      ]
    }
- Location: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Location",
      "title": "Location",
      "description": "Device location information.",
      "example": {
        "msid": "7892345678",
        "pd": {
          "time": "20170520004421",
          "x": "33.45324",
          "y": "-84.59621",
          "radius": "5571",
          "qos": false
        },
        "error": {}
      },
      "type": "object",
      "properties": {
        "msid": {
          "description": "MDN.",
          "example": "7892345678",
          "type": "string"
        },
        "pd": {
          "id": "PositionData",
          "title": "PositionData",
          "description": "Position data.",
          "example": {
            "qos": false,
            "radius": "5571",
            "time": "20170520004421",
            "x": "33.45324",
            "y": "-84.59621"
          },
          "type": "object",
          "properties": {
            "time": {
              "description": "Time location obtained.",
              "example": "20170520004421",
              "type": "string"
            },
            "utcoffset": {
              "description": "UTC offset of time.",
              "example": "0",
              "type": "string"
            },
            "x": {
              "description": "X coordinate of location.",
              "example": "38.8408694",
              "type": "string"
            },
            "y": {
              "description": "Y coordinate of location.",
              "example": "-105.0422583",
              "type": "string"
            },
            "radius": {
              "description": "Radius of the location in meters.",
              "example": "3866",
              "type": "string"
            },
            "qos": {
              "description": "Whether requested accurary is met or not.",
              "example": false,
              "type": "boolean"
            }
          }
        },
        "error": {
          "id": "PositionError",
          "title": "PositionError",
          "description": "Position error.",
          "example": {
            "time": "20170525214342",
            "type": "POSITION METHOD FAILURE",
            "info": "Exception code=ABSENT SUBSCRIBER"
          },
          "type": "object",
          "properties": {
            "time": {
              "description": "Time location obtained.",
              "example": "20170525214342",
              "type": "string"
            },
            "utcoffset": {
              "description": "UTC offset of time.",
              "example": "0",
              "type": "string"
            },
            "type": {
              "description": "Error type returned from location server.",
              "example": "POSITION METHOD FAILURE",
              "type": "string"
            },
            "info": {
              "description": "Additional information about the error.",
              "example": "Exception code=ABSENT SUBSCRIBER",
              "type": "string"
            }
          }
        }
      }
    }
- LocationReport: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LocationReport",
      "title": "LocationReport",
      "description": "Location information for up to 1,000 devices.",
      "example": {
        "startIndex": "0",
        "txid": "2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9",
        "totalCount": 3,
        "hasMoreData": false,
        "devLocationList": [
          {
            "error": {},
            "msid": "7892345678",
            "pd": {
              "qos": false,
              "radius": "5571",
              "time": "20170520004421",
              "x": "33.45324",
              "y": "-84.59621"
            }
          },
          {
            "error": {},
            "msid": "8583239709",
            "pd": {
              "qos": false,
              "radius": "3866",
              "time": "20170525214342",
              "x": "38.8408694",
              "y": "-105.0422583"
            }
          },
          {
            "error": {
              "time": "20170525214342",
              "type": "POSITION METHOD FAILURE",
              "info": "Exception code=ABSENT SUBSCRIBER"
            },
            "msid": "7897654321",
            "pd": {}
          }
        ]
      },
      "type": "object",
      "properties": {
        "devLocationList": {
          "description": "Device location information.",
          "example": [
            {
              "msid": "7892345678",
              "pd": {
                "time": "20170520004421",
                "x": "33.45324",
                "y": "-84.59621",
                "radius": "5571",
                "qos": false
              },
              "error": {}
            }
          ],
          "type": "array",
          "items": {
            "id": "Location",
            "title": "Location",
            "description": "Device location information.",
            "example": {
              "msid": "7892345678",
              "pd": {
                "time": "20170520004421",
                "x": "33.45324",
                "y": "-84.59621",
                "radius": "5571",
                "qos": false
              },
              "error": {}
            },
            "type": "object",
            "properties": {
              "msid": {
                "description": "MDN.",
                "example": "7892345678",
                "type": "string"
              },
              "pd": {
                "id": "PositionData",
                "title": "PositionData",
                "description": "Position data.",
                "example": {
                  "qos": false,
                  "radius": "5571",
                  "time": "20170520004421",
                  "x": "33.45324",
                  "y": "-84.59621"
                },
                "type": "object",
                "properties": {
                  "time": {
                    "description": "Time location obtained.",
                    "example": "20170520004421",
                    "type": "string"
                  },
                  "utcoffset": {
                    "description": "UTC offset of time.",
                    "example": "0",
                    "type": "string"
                  },
                  "x": {
                    "description": "X coordinate of location.",
                    "example": "38.8408694",
                    "type": "string"
                  },
                  "y": {
                    "description": "Y coordinate of location.",
                    "example": "-105.0422583",
                    "type": "string"
                  },
                  "radius": {
                    "description": "Radius of the location in meters.",
                    "example": "3866",
                    "type": "string"
                  },
                  "qos": {
                    "description": "Whether requested accurary is met or not.",
                    "example": false,
                    "type": "boolean"
                  }
                }
              },
              "error": {
                "id": "PositionError",
                "title": "PositionError",
                "description": "Position error.",
                "example": {
                  "time": "20170525214342",
                  "type": "POSITION METHOD FAILURE",
                  "info": "Exception code=ABSENT SUBSCRIBER"
                },
                "type": "object",
                "properties": {
                  "time": {
                    "description": "Time location obtained.",
                    "example": "20170525214342",
                    "type": "string"
                  },
                  "utcoffset": {
                    "description": "UTC offset of time.",
                    "example": "0",
                    "type": "string"
                  },
                  "type": {
                    "description": "Error type returned from location server.",
                    "example": "POSITION METHOD FAILURE",
                    "type": "string"
                  },
                  "info": {
                    "description": "Additional information about the error.",
                    "example": "Exception code=ABSENT SUBSCRIBER",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "hasMoreData": {
          "description": "True if there are more device locations to retrieve.",
          "example": false,
          "type": "boolean"
        },
        "startIndex": {
          "description": "The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices to be returned (hasMoreData=true), set startIndex=1000 for the second request, 2000 for the third request, etc.",
          "example": "0",
          "type": "string"
        },
        "totalCount": {
          "description": "The total number of devices in the original request and in the report.",
          "example": 4,
          "type": "integer",
          "format": "int32"
        },
        "txid": {
          "description": "The transaction ID of the report.",
          "example": "4be7c858-0ef9-4b15-a0c1-95061456d835",
          "type": "string"
        }
      }
    }
- AsynchronousLocationRequestResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AsynchronousLocationRequestResult",
      "title": "AsynchronousLocationRequestResult",
      "example": {
        "txid": "2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9"
      },
      "type": "object",
      "properties": {
        "txid": {
          "description": "The transaction ID of the report.",
          "example": "4be7c858-0ef9-4b15-a0c1-95061456d835",
          "type": "string"
        },
        "status": {
          "title": "ReportStatus",
          "description": "Status of the report.",
          "example": "INPROGRESS",
          "type": "string",
          "enum": [
            "QUEUED",
            "INPROGRESS",
            "COMPLETED"
          ]
        },
        "estimatedDuration": {
          "description": "Estimated number of minutes required to complete the report.",
          "example": "12",
          "type": "string"
        }
      }
    }
- LocationReportStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LocationReportStatus",
      "title": "LocationReportStatus",
      "description": "Status of the report.",
      "example": {
        "txid": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
        "status": "QUEUED"
      },
      "type": "object",
      "properties": {
        "txid": {
          "description": "The transaction ID of the report.",
          "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
          "type": "string"
        },
        "status": {
          "title": "ReportStatus",
          "description": "Status of the report.",
          "example": "INPROGRESS",
          "type": "string",
          "enum": [
            "QUEUED",
            "INPROGRESS",
            "COMPLETED"
          ]
        }
      }
    }
- PositionData: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PositionData",
      "title": "PositionData",
      "description": "Position data.",
      "example": {
        "qos": false,
        "radius": "5571",
        "time": "20170520004421",
        "x": "33.45324",
        "y": "-84.59621"
      },
      "type": "object",
      "properties": {
        "time": {
          "description": "Time location obtained.",
          "example": "20170520004421",
          "type": "string"
        },
        "utcoffset": {
          "description": "UTC offset of time.",
          "example": "0",
          "type": "string"
        },
        "x": {
          "description": "X coordinate of location.",
          "example": "38.8408694",
          "type": "string"
        },
        "y": {
          "description": "Y coordinate of location.",
          "example": "-105.0422583",
          "type": "string"
        },
        "radius": {
          "description": "Radius of the location in meters.",
          "example": "3866",
          "type": "string"
        },
        "qos": {
          "description": "Whether requested accurary is met or not.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- PositionError: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PositionError",
      "title": "PositionError",
      "description": "Position error.",
      "example": {
        "time": "20170525214342",
        "type": "POSITION METHOD FAILURE",
        "info": "Exception code=ABSENT SUBSCRIBER"
      },
      "type": "object",
      "properties": {
        "time": {
          "description": "Time location obtained.",
          "example": "20170525214342",
          "type": "string"
        },
        "utcoffset": {
          "description": "UTC offset of time.",
          "example": "0",
          "type": "string"
        },
        "type": {
          "description": "Error type returned from location server.",
          "example": "POSITION METHOD FAILURE",
          "type": "string"
        },
        "info": {
          "description": "Additional information about the error.",
          "example": "Exception code=ABSENT SUBSCRIBER",
          "type": "string"
        }
      }
    }
- ReportStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ReportStatus",
      "description": "Status of the report.",
      "example": "INPROGRESS",
      "type": "string",
      "enum": [
        "QUEUED",
        "INPROGRESS",
        "COMPLETED"
      ]
    }
- DeviceLocationSubscription: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceLocationSubscription",
      "title": "DeviceLocationSubscription",
      "example": {
        "accountName": "2024009649-00001",
        "locType": "TS-LOC-COARSE-CellID-5K",
        "maxAllowance": "5000",
        "purchaseTime": "2017-05-10 06:25:25.171 +0000 UTC"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "2024009649-00001",
          "type": "string"
        },
        "locType": {
          "description": "Location service license type.",
          "example": "TS-LOC-COARSE-CellID-5K",
          "type": "string"
        },
        "maxAllowance": {
          "description": "The number of billable location requests allowed per billing cycle.",
          "example": "5000",
          "type": "string"
        },
        "purchaseTime": {
          "description": "Location service purchase time.",
          "example": "2017-05-10 06:25:25.171 +0000 UTC",
          "type": "string"
        }
      }
    }
- TransactionID: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TransactionID",
      "title": "TransactionID",
      "description": "The transaction ID of the request that you want to cancel, from the POST /devicelocations synchronus response.",
      "example": {
        "txid": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33"
      },
      "type": "object",
      "properties": {
        "txid": {
          "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
          "type": "string"
        }
      }
    }
- BillUsageRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BillUsageRequest",
      "title": "BillUsageRequest",
      "description": "Bill usage request.",
      "example": {
        "accountName": "1234567890-00001",
        "startDate": "04-01-2018",
        "endDate": "04-30-2018",
        "usageForAllAccounts": true
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "1234567890-00001",
          "type": "string"
        },
        "startDate": {
          "description": "Start date to search for billable usage, mm-dd-yyyy.",
          "example": "04-01-2018",
          "type": "string"
        },
        "endDate": {
          "description": "End date to search for billable usage, mm-dd-yyyy.",
          "example": "04-30-2018",
          "type": "string"
        },
        "usageForAllAccounts": {
          "description": "Request usage for single or multiple accounts.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- BillableUsageReport: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BillableUsageReport",
      "title": "BillableUsageReport",
      "description": "Bill usage report.",
      "example": {
        "accountName": "1223334444-00001",
        "usageForAllAccounts": false,
        "skuName": "TS-LOC-COARSE-CellID-Aggr",
        "transactionsAllowed": "5000",
        "totalTransactionCount": "350",
        "PrimaryAccount": {
          "accountName": "1223334444-00001",
          "transactionsCount": "125"
        },
        "ManagedAccounts": []
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "1223334444-00001",
          "type": "string"
        },
        "usageForAllAccounts": {
          "description": "The usage is for a single or multiple accounts.",
          "example": false,
          "type": "boolean"
        },
        "skuName": {
          "description": "SKU Name of the service subscription.",
          "example": "TS-LOC-COARSE-CellID-Aggr",
          "type": "string"
        },
        "transactionsAllowed": {
          "description": "The number of location requests included with the subscription type.",
          "example": "5000",
          "type": "string"
        },
        "totalTransactionCount": {
          "description": "The total number of billable device location requests during the reporting period from all included accounts.",
          "example": "125",
          "type": "string"
        },
        "PrimaryAccount": {
          "id": "ServiceUsage",
          "title": "ServiceUsage",
          "example": {
            "accountName": "3333355555-00001",
            "transactionsCount": "200"
          },
          "type": "object",
          "properties": {
            "accountName": {
              "description": "Account identifier.",
              "example": "3333355555-00001",
              "type": "string"
            },
            "transactionsCount": {
              "description": "Total requests for the account during the reporting period.",
              "example": "200",
              "type": "string"
            }
          }
        },
        "ManagedAccounts": {
          "description": "Zero or more managed accounts.",
          "example": [
            {
              "accountName": "1111122222-00001",
              "transactionsCount": "100"
            },
            {
              "accountName": "3333355555-00001",
              "transactionsCount": "200"
            },
            {
              "accountName": "6666677777-00001",
              "transactionsCount": "300"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "ServiceUsage"
          }
        }
      }
    }
- ServiceUsage: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ServiceUsage",
      "title": "ServiceUsage",
      "example": {
        "accountName": "3333355555-00001",
        "transactionsCount": "200"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "3333355555-00001",
          "type": "string"
        },
        "transactionsCount": {
          "description": "Total requests for the account during the reporting period.",
          "example": "200",
          "type": "string"
        }
      }
    }
- DeviceLocationSuccessResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceLocationSuccessResult",
      "title": "DeviceLocationSuccessResult",
      "description": "Whether the device location request was successful or not.",
      "type": "object",
      "properties": {
        "success": {
          "example": true,
          "type": "boolean"
        }
      }
    }
- DeviceLocationResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceLocationResult",
      "title": "DeviceLocationResult",
      "description": "Will be empty if there was no error.",
      "example": {
        "errorCode": "The type of error, such as INVALID_REQUEST.",
        "errorMessage": "Additional error information."
      },
      "type": "object",
      "properties": {
        "errorCode": {
          "example": "The type of error, such as INVALID_REQUEST.",
          "type": "string"
        },
        "errorMessage": {
          "example": "Additional error information.",
          "type": "string"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    }
- serviceName: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "serviceName",
      "description": "Service name",
      "type": "string",
      "enum": [
        "Location",
        "fota"
      ]
    }
- UsageTriggerAddRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UsageTriggerAddRequest",
      "title": "UsageTriggerAddRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name",
          "example": "0212312345-00001",
          "type": "string"
        },
        "serviceName": {
          "title": "serviceName",
          "description": "Service name",
          "type": "string",
          "enum": [
            "Location",
            "fota"
          ]
        },
        "thresholdValue": {
          "description": "The percent of subscribed usage required to activate the trigger, such as 90 or 100.",
          "example": "95",
          "type": "string"
        },
        "triggerName": {
          "description": "Usage trigger name",
          "example": "95% usage alert",
          "type": "string"
        },
        "allowExcess": {
          "description": "Allow additional requests after thresholdValue is reached. (currently not functional)",
          "type": "boolean"
        },
        "sendSmsNotification": {
          "description": "Send SMS (text) alerts when the thresholdValue is reached.",
          "type": "boolean"
        },
        "smsPhoneNumbers": {
          "description": "Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or parentheses, etc.",
          "example": "5551231234",
          "type": "string"
        },
        "sendEmailNotification": {
          "description": "Send email alerts when the thresholdValue is reached.",
          "type": "boolean"
        },
        "emailAddresses": {
          "description": "Comma-separated list of email addresses to send alerts to.",
          "example": "you@theinternet.com",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "serviceName",
        "thresholdValue"
      ]
    }
- UsageTriggerResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UsageTriggerResponse",
      "title": "UsageTriggerResponse",
      "type": "object",
      "properties": {
        "triggerId": {
          "description": "Unique usage triggerId",
          "example": "3bb4777e-5292-4de7-97df-f578df4a2dbe",
          "type": "string"
        },
        "triggerName": {
          "description": "Usage trigger name",
          "example": "95% usage alert",
          "type": "string"
        },
        "accountName": {
          "description": "Account name",
          "example": "0212312345-00001",
          "type": "string"
        },
        "serviceName": {
          "title": "serviceName",
          "description": "Service name",
          "type": "string",
          "enum": [
            "Location",
            "fota"
          ]
        },
        "thresholdValue": {
          "description": "Percent of subscription at which trigger will send an alert",
          "example": "95",
          "type": "string"
        },
        "allowExcess": {
          "description": "allowExcess determines whether to restrict usage after exceeds limits",
          "type": "boolean"
        },
        "sendSmsNotification": {
          "description": "Send SMS (text) alerts when the thresholdValue is reached.",
          "type": "boolean"
        },
        "smsPhoneNumbers": {
          "description": "comma seperated value of list of Phone numbers for SMS notifications",
          "example": "5551231234",
          "type": "string"
        },
        "sendEmailNotification": {
          "description": "Send email alerts when the thresholdValue is reached.",
          "type": "boolean"
        },
        "emailAddresses": {
          "description": "comma seperated value of list of Email addresses for Email notifications",
          "example": "me@theinternet.com, you@theinternet.com",
          "type": "string"
        },
        "createDate": {
          "description": "UTC Date when the usage trigger was created",
          "example": "2018-08-31",
          "type": "string"
        },
        "updateDate": {
          "description": "UTC Date when the usage trigger was last updated",
          "example": "2018-09-03",
          "type": "string"
        }
      },
      "required": [
        "triggerId",
        "triggerName",
        "accountName",
        "serviceName",
        "thresholdValue",
        "allowExcess",
        "sendSmsNotification",
        "smsPhoneNumbers",
        "sendEmailNotification",
        "emailAddresses",
        "createDate",
        "updateDate"
      ]
    }
- UsageTriggerUpdateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UsageTriggerUpdateRequest",
      "title": "UsageTriggerUpdateRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name",
          "example": "0212312345-00001",
          "type": "string"
        },
        "triggerName": {
          "description": "Usage trigger name",
          "example": "95% usage alert",
          "type": "string"
        },
        "thresholdValue": {
          "description": "The percent of subscribed usage required to activate the trigger, such as 90 or 100.",
          "example": "95",
          "type": "string"
        },
        "smsPhoneNumbers": {
          "description": "Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or parentheses, etc.",
          "example": "5551231234",
          "type": "string"
        },
        "emailAddresses": {
          "description": "Comma-separated list of email addresses to send alerts to.",
          "example": "me@theinternet.com, you@theinternet.com",
          "type": "string"
        }
      },
      "required": [
        "accountName"
      ]
    }
- ManagedAccountsAddRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccountsAddRequest",
      "title": "ManagedAccountsAddRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier",
          "example": "1234567890-00001",
          "type": "string"
        },
        "serviceName": {
          "title": "serviceName",
          "description": "Service name",
          "type": "string",
          "enum": [
            "Location",
            "fota"
          ]
        },
        "type": {
          "description": "SKU name",
          "example": "TS-LOC-COARSE-CellID-Aggr",
          "type": "string"
        },
        "managedAccList": {
          "description": "managed account list",
          "example": [
            "1223334444-00001",
            "2334445555-00001",
            "3445556666-00001"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "accountName",
        "serviceName",
        "type",
        "managedAccList"
      ]
    }
- ManagedAccountsAddResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccountsAddResponse",
      "title": "ManagedAccountsAddResponse",
      "type": "object",
      "properties": {
        "TxId": {
          "description": "Transaction identifier",
          "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
          "type": "string"
        },
        "statusList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "StatusList",
            "title": "StatusList",
            "type": "object",
            "properties": {
              "id": {
                "description": "Account name",
                "example": "1223334444-00001",
                "type": "string"
              },
              "status": {
                "description": "Success or Fail",
                "example": "Success",
                "type": "string"
              },
              "reason": {
                "description": "detailed reason",
                "example": "Success",
                "type": "string"
              }
            }
          }
        }
      }
    }
- ManagedAccountsProvisionRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccountsProvisionRequest",
      "title": "ManagedAccountsProvisionRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Managed account identifier",
          "example": "1223334444-00001",
          "type": "string"
        },
        "paccountName": {
          "description": "Primary Account identifier",
          "example": "1223334444-00001",
          "type": "string"
        },
        "serviceName": {
          "title": "serviceName",
          "description": "Service name",
          "type": "string",
          "enum": [
            "Location",
            "fota"
          ]
        },
        "type": {
          "description": "SKU name",
          "example": "TS-LOC-COARSE-CellID-5K",
          "type": "string"
        },
        "txid": {
          "description": "Transaction identifier returned by add request",
          "example": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "paccountName",
        "serviceName",
        "type",
        "txid"
      ]
    }
- ManagedAccountsProvisionResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccountsProvisionResponse",
      "title": "ManagedAccountsProvisionResponse",
      "type": "object",
      "properties": {
        "txid": {
          "description": "Transaction identifier",
          "example": "4fbff332-ece4-42ef-9f02-7e3bdc90bd28",
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier",
          "example": "1223334444-00001",
          "type": "string"
        },
        "paccountName": {
          "description": "Primary Account identifier",
          "example": "1223334444-00001",
          "type": "string"
        },
        "serviceName": {
          "title": "serviceName",
          "description": "Service name",
          "type": "string",
          "enum": [
            "Location",
            "fota"
          ]
        },
        "status": {
          "description": "Provision status. Success or Fail",
          "example": "Success",
          "type": "string"
        },
        "reason": {
          "description": "Detailed reason",
          "example": "Success",
          "type": "string"
        }
      }
    }
- ManagedAccountCancelRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccountCancelRequest",
      "title": "ManagedAccountCancelRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Managed account identifier",
          "example": "1223334444-00001",
          "type": "string"
        },
        "paccountName": {
          "description": "Primary Account identifier",
          "example": "1223334444-00001",
          "type": "string"
        },
        "serviceName": {
          "title": "serviceName",
          "description": "Service name",
          "type": "string",
          "enum": [
            "Location",
            "fota"
          ]
        },
        "type": {
          "description": "SKU name",
          "example": "TS-LOC-COARSE-CellID-5K",
          "type": "string"
        },
        "txid": {
          "description": "Transaction identifier returned by provision request",
          "example": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "paccountName",
        "serviceName",
        "type",
        "txid"
      ]
    }
- ManagedAccountCancelResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccountCancelResponse",
      "title": "ManagedAccountCancelResponse",
      "type": "object",
      "properties": {
        "txid": {
          "description": "Transaction identifier",
          "example": "4fbff332-ece4-42ef-9f02-7e3bdc90bd28",
          "type": "string"
        },
        "accountName": {
          "description": "Managed account identifier",
          "example": "1223334444-00001",
          "type": "string"
        },
        "paccountName": {
          "description": "Primary account identifier",
          "example": "1223334444-00001",
          "type": "string"
        },
        "serviceName": {
          "title": "serviceName",
          "description": "Service name",
          "type": "string",
          "enum": [
            "Location",
            "fota"
          ]
        },
        "status": {
          "description": "Deactivate/cancel status, Success or Fail",
          "example": "Success",
          "type": "string"
        },
        "reason": {
          "description": "Detailed reason",
          "example": "Success",
          "type": "string"
        }
      },
      "required": [
        "txid",
        "accountName",
        "paccountName",
        "serviceName",
        "status",
        "reason"
      ]
    }
- ManagedAccountsGetAllResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccountsGetAllResponse",
      "title": "ManagedAccountsGetAllResponse",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account Name",
          "example": "0212312345-00001",
          "type": "string"
        },
        "ManagedAccAddedList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "ManagedAccAddedList",
            "title": "ManagedAccAddedList",
            "type": "object",
            "properties": {
              "id": {
                "description": "Account name",
                "example": "1223334444-00001",
                "type": "string"
              },
              "txid": {
                "description": "Transaction identifier",
                "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
                "type": "string"
              }
            }
          }
        },
        "managedAccProvisionedList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "ManagedAccProvisionedList",
            "title": "ManagedAccProvisionedList",
            "type": "object",
            "properties": {
              "id": {
                "description": "Account name",
                "example": "2334445555-00001",
                "type": "string"
              },
              "txid": {
                "description": "Transaction identifier",
                "example": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b",
                "type": "string"
              }
            }
          }
        }
      }
    }
- ManagedAccAddedList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccAddedList",
      "title": "ManagedAccAddedList",
      "type": "object",
      "properties": {
        "id": {
          "description": "Account name",
          "example": "1223334444-00001",
          "type": "string"
        },
        "txid": {
          "description": "Transaction identifier",
          "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
          "type": "string"
        }
      }
    }
- ManagedAccProvisionedList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ManagedAccProvisionedList",
      "title": "ManagedAccProvisionedList",
      "type": "object",
      "properties": {
        "id": {
          "description": "Account name",
          "example": "2334445555-00001",
          "type": "string"
        },
        "txid": {
          "description": "Transaction identifier",
          "example": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b",
          "type": "string"
        }
      }
    }
- StatusList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "StatusList",
      "title": "StatusList",
      "type": "object",
      "properties": {
        "id": {
          "description": "Account name",
          "example": "1223334444-00001",
          "type": "string"
        },
        "status": {
          "description": "Success or Fail",
          "example": "Success",
          "type": "string"
        },
        "reason": {
          "description": "detailed reason",
          "example": "Success",
          "type": "string"
        }
      }
    }
- CallbackService: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "CallbackService",
      "description": "Callback type. Must be 'Fota' for Software Management Services API.",
      "example": "Fota",
      "type": "string",
      "enum": [
        "Fota"
      ]
    }
- UpgradeStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "UpgradeStatus",
      "description": "The status of the upgrades that you want to retrieve.",
      "example": "RequestPending",
      "type": "string",
      "enum": [
        "RequestPending",
        "Queued",
        "RequestFailed",
        "InProgress",
        "Finished",
        "UpgradeFailed"
      ]
    }
- RegisteredCallbacks: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RegisteredCallbacks",
      "title": "RegisteredCallbacks",
      "description": "List of registered callback endpoints.",
      "example": {
        "aname": "0252012345-00001",
        "name": "Fota",
        "url": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "aname": {
          "description": "The name of the billing account for which callback messages will be sent.",
          "example": "0252012345-00001",
          "type": "string"
        },
        "name": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL. This will be 'Fota' for the Software Management Services callback.",
          "example": "Fota",
          "type": "string"
        },
        "url": {
          "description": "The address to which callback messages will be sent.",
          "example": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx",
          "type": "string"
        },
        "username": {
          "description": "The user name that ThingSpace will return in the callback messages.",
          "type": "string"
        },
        "password": {
          "description": "The password that ThingSpace will return in the callback messages.",
          "type": "string"
        }
      }
    }
- FotaV1CallbackRegistrationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV1CallbackRegistrationRequest",
      "title": "FotaV1CallbackRegistrationRequest",
      "description": "Callback endpoint information.",
      "example": {
        "name": "Fota",
        "url": "https://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the callback service that you want to subscribe to, which must be 'Fota' for Software Management Services callbacks.",
          "example": "Fota",
          "type": "string"
        },
        "url": {
          "description": "The address on your server where you have enabled a listening service for Software Management Services callback messages.",
          "example": "https://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx",
          "type": "string"
        },
        "username": {
          "description": "The user name that ThingSpace should return in the callback messages.",
          "type": "string"
        },
        "password": {
          "description": "The password that ThingSpace should return in the callback messages.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "url"
      ]
    }
- FotaV1CallbackRegistrationResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV1CallbackRegistrationResult",
      "title": "FotaV1CallbackRegistrationResult",
      "description": "Registered callback account name and service name.",
      "example": {
        "accountName": "0204563412-00001",
        "serviceName": "Fota"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent.",
          "example": "0204563412-00001",
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL. This will be 'Fota' for the Software Management Services callback.",
          "example": "Fota",
          "type": "string"
        }
      }
    }
- V1ListOfLicensesToRemoveRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V1ListOfLicensesToRemoveRequest",
      "title": "V1ListOfLicensesToRemoveRequest",
      "description": "List of devices to removes.",
      "example": {
        "type": "append",
        "deviceList": [
          "990003425730535",
          "990000473475989"
        ]
      },
      "type": "object",
      "properties": {
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "example": [
            "990003425730535",
            "990000473475989",
            "990005733420535",
            "990000347475989",
            "990007303425535",
            "990007590473489"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Set to 'append' to append the devices in the current request to the existing list. If there is no existing list then it will be created with only these devices. Leave this parameter out when you want to replace the existing list with the devices in the current request.",
          "example": "append",
          "type": "string"
        }
      },
      "required": [
        "deviceList"
      ]
    }
- V1ListOfLicensesToRemoveResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V1ListOfLicensesToRemoveResult",
      "title": "V1ListOfLicensesToRemoveResult",
      "description": "List of licenses assigned.",
      "example": {
        "count": 2,
        "deviceList": [
          "900000000000001",
          "900000000000999"
        ]
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "The total number of devices on the cancellation candidate list.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "example": [
            "990003425730535",
            "990000473475989",
            "990005733420535",
            "990000347475989",
            "990007303425535",
            "990007590473489"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- V1ListOfLicensesToRemove: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V1ListOfLicensesToRemove",
      "title": "V1ListOfLicensesToRemove",
      "description": "List of cancellation candidate devices.",
      "example": {
        "count": 6,
        "hasMoreData": false,
        "updateTime": "2018-03-22T12:06:06.000Z",
        "deviceList": [
          "990003425730535",
          "990000473475989",
          "990005733420535",
          "990000347475989",
          "990007303425535",
          "990007590473489"
        ]
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "The total number of devices on the list.",
          "example": 6,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "example": false,
          "type": "boolean"
        },
        "updateTime": {
          "description": "The date and time that the list was last updated.",
          "example": "2018-03-22T12:06:06.000Z",
          "type": "string",
          "format": "date-time"
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "example": [
            "990003425730535",
            "990000473475989",
            "990005733420535",
            "990000347475989",
            "990007303425535",
            "990007590473489"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- DeviceListQueryResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceListQueryResult",
      "title": "DeviceListQueryResult",
      "description": "List of devices.",
      "example": {
        "accountName": "0242078698-00001",
        "hasMoreData": true,
        "lastSeenDeviceId": 900000000001000,
        "deviceList": [
          {
            "deviceId": "900000000000001",
            "mdn": "0000040881",
            "model": "Model-A",
            "make": "Verizon",
            "firmware": "VerizonFirmwareVersion-01",
            "fotaEligible": true,
            "licenseAssigned": true,
            "upgradeTime": "2018-03-03T16:03:33.000Z"
          },
          {
            "deviceId": "900000000000999",
            "mdn": "0000041879",
            "model": "Model-A",
            "make": "Verizon",
            "firmware": "VerizonFirmwareVersion-01",
            "fotaEligible": true,
            "licenseAssigned": true,
            "upgradeTime": "2018-03-03T16:03:33.000Z"
          },
          {
            "deviceId": "900000000001000",
            "mdn": "0000041880",
            "model": "Model-A",
            "make": "Verizon",
            "firmware": "VerizonFirmwareVersion-01",
            "fotaEligible": true,
            "licenseAssigned": true,
            "upgradeTime": "2018-03-03T16:03:33.000Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0242078698-00001",
          "type": "string"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "example": true,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
          "example": 900000000001000,
          "type": "integer",
          "format": "int64"
        },
        "deviceList": {
          "description": "The list of devices in the account.",
          "example": [
            {
              "deviceId": "900000000000001",
              "mdn": "0000040881",
              "model": "Model-A",
              "make": "Verizon",
              "firmware": "VerizonFirmwareVersion-01",
              "fotaEligible": true,
              "licenseAssigned": true,
              "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
            },
            {
              "deviceId": "900000000000999",
              "mdn": "0000041879",
              "model": "Model-A",
              "make": "Verizon",
              "firmware": "VerizonFirmwareVersion-01",
              "fotaEligible": true,
              "licenseAssigned": true,
              "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
            },
            {
              "deviceId": "900000000001000",
              "mdn": "0000041880",
              "model": "Model-A",
              "make": "Verizon",
              "firmware": "VerizonFirmwareVersion-01",
              "fotaEligible": true,
              "licenseAssigned": true,
              "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceListQueryItem",
            "title": "DeviceListQueryItem",
            "description": "The list of devices in the account.",
            "example": {
              "deviceId": "900000000000001",
              "mdn": "0000040881",
              "model": "Model-A",
              "make": "Verizon",
              "firmware": "VerizonFirmwareVersion-01",
              "fotaEligible": true,
              "licenseAssigned": true,
              "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "900000000000001",
                "type": "string"
              },
              "mdn": {
                "description": "The MDN (phone number) of the device.",
                "example": "0000040881",
                "type": "string"
              },
              "model": {
                "description": "The device model name.",
                "example": "Model-A",
                "type": "string"
              },
              "make": {
                "description": "The device make.",
                "example": "Verizon",
                "type": "string"
              },
              "firmware": {
                "description": "The name of the firmware image currently installed on the device.",
                "example": "VerizonFirmwareVersion-01",
                "type": "string"
              },
              "fotaEligible": {
                "description": "True if the device firmware can be upgraded over the air using the Software Management Services API.",
                "example": true,
                "type": "boolean"
              },
              "licenseAssigned": {
                "description": "True if an MRC license has been assigned to this device.",
                "example": true,
                "type": "boolean"
              },
              "upgradeTime": {
                "description": "The date and time that the device firmware was last upgraded. If a device has never been upgraded, the upgradeTime will be 01/01/1900 0:0:0.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              }
            }
          }
        }
      }
    }
- DeviceListQueryItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceListQueryItem",
      "title": "DeviceListQueryItem",
      "description": "The list of devices in the account.",
      "example": {
        "deviceId": "900000000000001",
        "mdn": "0000040881",
        "model": "Model-A",
        "make": "Verizon",
        "firmware": "VerizonFirmwareVersion-01",
        "fotaEligible": true,
        "licenseAssigned": true,
        "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "900000000000001",
          "type": "string"
        },
        "mdn": {
          "description": "The MDN (phone number) of the device.",
          "example": "0000040881",
          "type": "string"
        },
        "model": {
          "description": "The device model name.",
          "example": "Model-A",
          "type": "string"
        },
        "make": {
          "description": "The device make.",
          "example": "Verizon",
          "type": "string"
        },
        "firmware": {
          "description": "The name of the firmware image currently installed on the device.",
          "example": "VerizonFirmwareVersion-01",
          "type": "string"
        },
        "fotaEligible": {
          "description": "True if the device firmware can be upgraded over the air using the Software Management Services API.",
          "example": true,
          "type": "boolean"
        },
        "licenseAssigned": {
          "description": "True if an MRC license has been assigned to this device.",
          "example": true,
          "type": "boolean"
        },
        "upgradeTime": {
          "description": "The date and time that the device firmware was last upgraded. If a device has never been upgraded, the upgradeTime will be 01/01/1900 0:0:0.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        }
      }
    }
- DeviceUpgradeHistory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceUpgradeHistory",
      "title": "DeviceUpgradeHistory",
      "description": "Firmware upgrade information.",
      "example": {
        "deviceId": "900000000000001",
        "id": "f574fbb8-b291-4cc7-bf22-4e3f27977558",
        "accountName": "0242078689-00001",
        "firmwareFrom": "VerizonFirmwareVersion-02",
        "firmwareTo": "VerizonFirmwareVersion-03",
        "startDate": "2018-03-05",
        "upgradeStartTime": "2018-03-05T19:07:21Z",
        "status": "UpgradeSuccess",
        "reason": "success"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "900000000000001",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the upgrade.",
          "example": "f574fbb8-b291-4cc7-bf22-4e3f27977558",
          "type": "string"
        },
        "accountName": {
          "description": "The name (number) of the billing account that the device belongs to.",
          "example": "0242078689-00001",
          "type": "string"
        },
        "firmwareFrom": {
          "description": "The firmware version that was on the device before the upgrade.",
          "example": "VerizonFirmwareVersion-02",
          "type": "string"
        },
        "firmwareTo": {
          "description": "The name of the firmware version that was on the device after the upgrade.",
          "example": "VerizonFirmwareVersion-03",
          "type": "string"
        },
        "startDate": {
          "description": "The date of the upgrade.",
          "example": "2018-03-05",
          "type": "string"
        },
        "upgradeStartTime": {
          "description": "The date and time that the upgrade actually started for this device.",
          "example": "2018-03-05T19:07:21Z",
          "type": "string"
        },
        "status": {
          "description": "The status of the upgrade for this device.",
          "example": "UpgradeSuccess",
          "type": "string"
        },
        "reason": {
          "description": "More information about the status.",
          "example": "success",
          "type": "string"
        }
      }
    }
- FotaV1Result: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV1Result",
      "title": "FotaV1Result",
      "description": "Response in case of any errors.",
      "example": {
        "errorCode": "error code string",
        "errorMessage": "error message string"
      },
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Error response code.",
          "example": "error code string",
          "type": "string"
        },
        "errorMessage": {
          "description": "Description of the error.",
          "example": "error message string",
          "type": "string"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    }
- Firmware: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Firmware",
      "title": "Firmware",
      "description": "Firmware information.",
      "example": {
        "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
        "participantName": "0402196254-00001",
        "launchDate": "2018-04-01T16:03:00.000Z",
        "releaseNote": "",
        "model": "Model-A",
        "make": "Verizon",
        "fromVersion": "VerizonFirmwareVersion-01",
        "toVersion": "VerizonFirmwareVersion-02"
      },
      "type": "object",
      "properties": {
        "firmwareName": {
          "description": "The name of the firmware image, provided by the device manufacturer.",
          "example": "FOTA_Verizon_Model-A_01To02_HF",
          "type": "string"
        },
        "participantName": {
          "description": "Internal reference; can be ignored.",
          "example": "0402196254-00001",
          "type": "string"
        },
        "launchDate": {
          "description": "The release date of the firmware image.",
          "example": "2018-04-01T16:03:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "releaseNote": {
          "description": "Additional information about the release.",
          "type": "string"
        },
        "model": {
          "description": "The device model that the firmware applies to.",
          "example": "Model-A",
          "type": "string"
        },
        "make": {
          "description": "The device make that the firmware applies to.",
          "example": "Verizon",
          "type": "string"
        },
        "fromVersion": {
          "description": "The firmware version that must currently be on the device to upgrade.",
          "example": "VerizonFirmwareVersion-01",
          "type": "string"
        },
        "toVersion": {
          "description": "The firmware version that will be on the device after an upgrade.",
          "example": "VerizonFirmwareVersion-02",
          "type": "string"
        }
      }
    }
- FirmwareUpgradeChangeRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FirmwareUpgradeChangeRequest",
      "title": "FirmwareUpgradeChangeRequest",
      "description": "List of devices to add or remove.",
      "example": {
        "type": "append",
        "deviceList": [
          "15-digit IMEI",
          "15-digit IMEI"
        ]
      },
      "type": "object",
      "properties": {
        "type": {
          "title": "FirmwareTypeList",
          "description": "Possible values are `append` or `remove`",
          "example": "append",
          "type": "string",
          "enum": [
            "append",
            "remove"
          ]
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "example": [
            "990003425730535",
            "990000473475989",
            "990005733420535",
            "990000347475989",
            "990007303425535",
            "990007590473489"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "type",
        "deviceList"
      ]
    }
- FirmwareTypeList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "FirmwareTypeList",
      "description": "Possible values are `append` or `remove`",
      "example": "append",
      "type": "string",
      "enum": [
        "append",
        "remove"
      ]
    }
- FirmwareUpgradeChangeResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FirmwareUpgradeChangeResult",
      "title": "FirmwareUpgradeChangeResult",
      "description": "Upgrade information.",
      "example": {
        "accountName": "0000123456-00001",
        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
        "deviceList": [
          {
            "deviceId": "15-digit IMEI",
            "status": "AddDeviceSucceed",
            "Reason": "Device added Successfully"
          },
          {
            "deviceId": "15-digit IMEI",
            "status": "AddDeviceSucceed",
            "Reason": "Device added Successfully"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0000123456-00001",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this upgrade.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        },
        "deviceList": {
          "description": "A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "status": "AddDeviceSucceed",
              "Reason": "Device added Successfully"
            },
            {
              "deviceId": "15-digit IMEI",
              "status": "AddDeviceSucceed",
              "Reason": "Device added Successfully"
            }
          ],
          "type": "array",
          "items": {
            "id": "V1DeviceListItem",
            "title": "V1DeviceListItem",
            "description": "A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.",
            "example": {
              "deviceId": "900000000000001",
              "status": "LicenseAssignSuccess",
              "Reason": "Success"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "900000000000001",
                "type": "string"
              },
              "status": {
                "description": "Whether the device was successfully added or removed from the campaign.",
                "example": "LicenseAssignSuccess",
                "type": "string"
              },
              "Reason": {
                "description": "Additional details about the status.",
                "example": "Success",
                "type": "string"
              }
            }
          }
        }
      }
    }
- V1DeviceListItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V1DeviceListItem",
      "title": "V1DeviceListItem",
      "description": "A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.",
      "example": {
        "deviceId": "900000000000001",
        "status": "LicenseAssignSuccess",
        "Reason": "Success"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "900000000000001",
          "type": "string"
        },
        "status": {
          "description": "Whether the device was successfully added or removed from the campaign.",
          "example": "LicenseAssignSuccess",
          "type": "string"
        },
        "Reason": {
          "description": "Additional details about the status.",
          "example": "Success",
          "type": "string"
        }
      }
    }
- FirmwareUpgradeRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FirmwareUpgradeRequest",
      "title": "FirmwareUpgradeRequest",
      "description": "Details of the firmware upgrade request.",
      "example": {
        "accountName": "0402196254-00001",
        "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
        "firmwareTo": "VerizonFirmwareVersion-02",
        "startDate": "2018-04-01T16:03:00.000Z",
        "deviceList": [
          "990003425730535",
          "990000473475989"
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0402196254-00001",
          "type": "string"
        },
        "firmwareName": {
          "description": "The name of the firmware image that will be used for the upgrade, from a GET /firmware response.",
          "example": "FOTA_Verizon_Model-A_01To02_HF",
          "type": "string"
        },
        "firmwareTo": {
          "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
          "example": "VerizonFirmwareVersion-02",
          "type": "string"
        },
        "startDate": {
          "description": "The date that the upgrade should begin.",
          "example": "2018-04-01T16:03:00.000Z",
          "type": "string",
          "format": "date-time"
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "example": [
            "990003425730535",
            "990000473475989",
            "990005733420535",
            "990000347475989",
            "990007303425535",
            "990007590473489"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "accountName",
        "firmwareName",
        "firmwareTo",
        "startDate",
        "deviceList"
      ]
    }
- FirmwareUpgrade: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FirmwareUpgrade",
      "title": "FirmwareUpgrade",
      "description": "Array of upgrade objects with the specified status.",
      "example": {
        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
        "accountName": "0402196254-00001",
        "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
        "firmwareTo": "VerizonFirmwareVersion-02",
        "startDate": "2018-04-01",
        "status": "Queued",
        "deviceList": [
          {
            "deviceId": "900000000000002",
            "status": "Device Accepted",
            "resultReason": "success"
          },
          {
            "deviceId": "900000000000003",
            "status": "Device Accepted",
            "resultReason": "success"
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier for this upgrade.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0402196254-00001",
          "type": "string"
        },
        "firmwareName": {
          "description": "The name of the firmware image that will be used for the upgrade.",
          "example": "FOTA_Verizon_Model-A_01To02_HF",
          "type": "string"
        },
        "firmwareTo": {
          "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
          "example": "VerizonFirmwareVersion-02",
          "type": "string"
        },
        "startDate": {
          "description": "The intended start date for the upgrade.",
          "example": "2018-04-01",
          "type": "string"
        },
        "status": {
          "description": "The current status of the upgrade.",
          "example": "Queued",
          "type": "string"
        },
        "deviceList": {
          "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
          "example": [
            {
              "deviceId": "900000000000002",
              "status": "Device Accepted",
              "resultReason": "success"
            },
            {
              "deviceId": "900000000000003",
              "status": "Device Accepted",
              "resultReason": "success"
            }
          ],
          "type": "array",
          "items": {
            "id": "FirmwareUpgradeDeviceListItem",
            "title": "FirmwareUpgradeDeviceListItem",
            "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
            "example": {
              "deviceId": "900000000000002",
              "status": "Device Accepted",
              "resultReason": "success"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "900000000000002",
                "type": "string"
              },
              "status": {
                "description": "The status of the upgrade for this device.",
                "example": "Device Accepted",
                "type": "string"
              },
              "resultReason": {
                "description": "Additional details about the status. Not included when status='Request Pending.'",
                "example": "success",
                "type": "string"
              }
            }
          }
        }
      }
    }
- FirmwareUpgradeDeviceListItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FirmwareUpgradeDeviceListItem",
      "title": "FirmwareUpgradeDeviceListItem",
      "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
      "example": {
        "deviceId": "900000000000002",
        "status": "Device Accepted",
        "resultReason": "success"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "900000000000002",
          "type": "string"
        },
        "status": {
          "description": "The status of the upgrade for this device.",
          "example": "Device Accepted",
          "type": "string"
        },
        "resultReason": {
          "description": "Additional details about the status. Not included when status='Request Pending.'",
          "example": "success",
          "type": "string"
        }
      }
    }
- AccountLicenseInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountLicenseInfo",
      "title": "AccountLicenseInfo",
      "description": "Account license information.",
      "example": {
        "accountName": "0402196254-00001",
        "totalLicenses": 5000,
        "assignedLicenses": 4319,
        "hasMoreData": true,
        "lastSeenDeviceId": 1000,
        "deviceList": [
          {
            "deviceId": "990003425730535",
            "assignmentTime": "2017-11-29T16:03:42.000Z"
          },
          {
            "deviceId": "990000473475989",
            "assignmentTime": "2017-11-29T16:03:42.000Z"
          },
          {
            "deviceId": "990000347475989",
            "assignmentTime": "2017-11-29T16:03:42.000Z"
          },
          {
            "deviceId": "990007303425535",
            "assignmentTime": "2016-11-29T16:03:42.000Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0402196254-00001",
          "type": "string"
        },
        "totalLicenses": {
          "description": "Number of monthly licenses in an MRC subscription.",
          "example": 5000,
          "type": "integer",
          "format": "int32"
        },
        "assignedLicenses": {
          "description": "Number of licenses currently assigned to devices.",
          "example": 4319,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "example": true,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "The list of devices that have licenses assigned, including the date and time of when each license was assigned.",
          "example": [
            {
              "deviceId": "990003425730535",
              "assignmentTime": "2017-11-29T16:03:42.000Z"
            },
            {
              "deviceId": "990000473475989",
              "assignmentTime": "2017-11-29T16:03:42.000Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "AccountLicenseDeviceListItem",
            "title": "AccountLicenseDeviceListItem",
            "description": "The list of devices that have licenses assigned, including the date and time of when each license was assigned.",
            "example": {
              "deviceId": "990003425730535",
              "assignmentTime": "2017-11-29T16:03:42.000Z"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "990003425730535",
                "type": "string"
              },
              "assignmentTime": {
                "description": "Timestamp of when a license was assigned to the device.",
                "example": "2017-11-29T16:03:42.000Z",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
- AccountLicenseDeviceListItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountLicenseDeviceListItem",
      "title": "AccountLicenseDeviceListItem",
      "description": "The list of devices that have licenses assigned, including the date and time of when each license was assigned.",
      "example": {
        "deviceId": "990003425730535",
        "assignmentTime": "2017-11-29T16:03:42.000Z"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "990003425730535",
          "type": "string"
        },
        "assignmentTime": {
          "description": "Timestamp of when a license was assigned to the device.",
          "example": "2017-11-29T16:03:42.000Z",
          "type": "string",
          "format": "date-time"
        }
      }
    }
- V1LicensesAssignedRemovedRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V1LicensesAssignedRemovedRequest",
      "title": "V1LicensesAssignedRemovedRequest",
      "description": "IMEIs of the devices to assign licenses to.",
      "example": {
        "deviceList": [
          "900000000000001",
          "900000000000998",
          "900000000000999"
        ]
      },
      "type": "object",
      "properties": {
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "example": [
            "990003425730535",
            "990000473475989",
            "990005733420535",
            "990000347475989",
            "990007303425535",
            "990007590473489"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "deviceList"
      ]
    }
- V1LicensesAssignedRemovedResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V1LicensesAssignedRemovedResult",
      "title": "V1LicensesAssignedRemovedResult",
      "description": "License assignment or removal confirmation.",
      "example": {
        "accountName": "0242078689-00001",
        "licCount": 9000,
        "licUsedCount": 1000,
        "deviceList": [
          {
            "deviceId": "900000000000001",
            "status": "LicenseAssignSuccess",
            "Reason": "Success"
          },
          {
            "deviceId": "900000000000999",
            "status": "LicenseAssignSuccess",
            "Reason": "Success"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0242078689-00001",
          "type": "string"
        },
        "licCount": {
          "description": "Total number of monthly licenses in an MRC subscription.",
          "example": 9000,
          "type": "integer",
          "format": "int32"
        },
        "licUsedCount": {
          "description": "Number of licenses assigned to devices after the request completed.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "A JSON object for each device that was in the request.",
          "example": [
            {
              "deviceId": "900000000000001",
              "status": "LicenseAssignSuccess",
              "Reason": "Success"
            },
            {
              "deviceId": "900000000000999",
              "status": "LicenseAssignSuccess",
              "Reason": "Success"
            }
          ],
          "type": "array",
          "items": {
            "id": "V1DeviceListItem",
            "title": "V1DeviceListItem",
            "description": "A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.",
            "example": {
              "deviceId": "900000000000001",
              "status": "LicenseAssignSuccess",
              "Reason": "Success"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "900000000000001",
                "type": "string"
              },
              "status": {
                "description": "Whether the device was successfully added or removed from the campaign.",
                "example": "LicenseAssignSuccess",
                "type": "string"
              },
              "Reason": {
                "description": "Additional details about the status.",
                "example": "Success",
                "type": "string"
              }
            }
          }
        }
      }
    }
- FotaV1SuccessResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV1SuccessResult",
      "title": "FotaV1SuccessResult",
      "description": "A response to a successful request contains a single Boolean value.",
      "example": {
        "success": true
      },
      "type": "object",
      "properties": {
        "success": {
          "description": "True is returned in case of success.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- V1AccountSubscription: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V1AccountSubscription",
      "title": "V1AccountSubscription",
      "description": "Account subscription information.",
      "example": {
        "accountName": "0402196254-00001",
        "purchaseType": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
        "licenseCount": 9000,
        "licenseUsedCount": 1000,
        "updateTime": "2018-03-02T16:03:06.000Z"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0402196254-00001",
          "type": "string"
        },
        "purchaseType": {
          "description": "Subscription models used by the account.",
          "example": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
          "type": "string"
        },
        "licenseCount": {
          "description": "Number of monthly licenses in an MRC subscription.",
          "example": 9000,
          "type": "integer",
          "format": "int32"
        },
        "licenseUsedCount": {
          "description": "Number of licenses currently assigned to devices.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "The date and time of when the subscription was last updated.",
          "example": "2018-03-02T16:03:06.000Z",
          "type": "string"
        }
      }
    }
- UpgradeListQueryResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UpgradeListQueryResult",
      "title": "UpgradeListQueryResult",
      "description": "Upgrade information.",
      "type": "object",
      "properties": {
        "hasMoreFlag": {
          "description": "True if there are more devices to retrieve.",
          "example": false,
          "type": "boolean"
        },
        "lastSeenUpgradeId": {
          "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
          "type": "integer",
          "format": "int32"
        },
        "reportList": {
          "description": "Array of upgrade objects with the specified status.",
          "example": [
            {
              "id": "3ac8c863-bde7-4f41-878e-dd5473e973bb",
              "accountName": "0242078689-00001",
              "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
              "firmwareTo": "VerizonFirmwareVersion-02",
              "startDate": "2018-04-01",
              "status": "Queued",
              "deviceList": [
                {
                  "deviceId": "900000000000002",
                  "status": "Device Accepted",
                  "resultReason": "success"
                },
                {
                  "deviceId": "900000000000003",
                  "status": "Device Accepted",
                  "resultReason": "success"
                }
              ]
            },
            {
              "id": "efb8206b-2e88-4fdb-886d-31d8e87cd95f",
              "accountName": "0242078689-00001",
              "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
              "firmwareTo": "VerizonFirmwareVersion-02",
              "startDate": "2018-04-01T16:03:00.000Z",
              "status": "Queued",
              "deviceList": [
                {
                  "deviceId": "900000000000008",
                  "status": "Device Accepted",
                  "resultReason": "success"
                }
              ]
            }
          ],
          "type": [
            "array",
            "null"
          ],
          "items": {
            "id": "FirmwareUpgrade",
            "title": "FirmwareUpgrade",
            "description": "Array of upgrade objects with the specified status.",
            "example": {
              "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
              "accountName": "0402196254-00001",
              "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
              "firmwareTo": "VerizonFirmwareVersion-02",
              "startDate": "2018-04-01",
              "status": "Queued",
              "deviceList": [
                {
                  "deviceId": "900000000000002",
                  "status": "Device Accepted",
                  "resultReason": "success"
                },
                {
                  "deviceId": "900000000000003",
                  "status": "Device Accepted",
                  "resultReason": "success"
                }
              ]
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "The unique identifier for this upgrade.",
                "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                "type": "string"
              },
              "accountName": {
                "description": "Account identifier in \"##########-#####\".",
                "example": "0402196254-00001",
                "type": "string"
              },
              "firmwareName": {
                "description": "The name of the firmware image that will be used for the upgrade.",
                "example": "FOTA_Verizon_Model-A_01To02_HF",
                "type": "string"
              },
              "firmwareTo": {
                "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
                "example": "VerizonFirmwareVersion-02",
                "type": "string"
              },
              "startDate": {
                "description": "The intended start date for the upgrade.",
                "example": "2018-04-01",
                "type": "string"
              },
              "status": {
                "description": "The current status of the upgrade.",
                "example": "Queued",
                "type": "string"
              },
              "deviceList": {
                "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
                "example": [
                  {
                    "deviceId": "900000000000002",
                    "status": "Device Accepted",
                    "resultReason": "success"
                  },
                  {
                    "deviceId": "900000000000003",
                    "status": "Device Accepted",
                    "resultReason": "success"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "FirmwareUpgradeDeviceListItem",
                  "title": "FirmwareUpgradeDeviceListItem",
                  "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
                  "example": {
                    "deviceId": "900000000000002",
                    "status": "Device Accepted",
                    "resultReason": "success"
                  },
                  "type": "object",
                  "properties": {
                    "deviceId": {
                      "description": "Device IMEI.",
                      "example": "900000000000002",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of the upgrade for this device.",
                      "example": "Device Accepted",
                      "type": "string"
                    },
                    "resultReason": {
                      "description": "Additional details about the status. Not included when status='Request Pending.'",
                      "example": "success",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
- FotaV2Subscription: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV2Subscription",
      "title": "FotaV2Subscription",
      "description": "FOTA Subscription.",
      "example": {
        "accountName": "00000000000-123345",
        "purchaseType": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
        "licenseCount": 500,
        "licenseUsedCount": 400,
        "updateTime": "2021-06-03 00:03:56.079 +0000 UTC"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "00000000000-123345",
          "type": "string"
        },
        "purchaseType": {
          "description": "Subscription models used by the account.",
          "example": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
          "type": "string"
        },
        "licenseCount": {
          "description": "Number of monthly licenses in an MRC subscription.",
          "example": 500,
          "type": "integer",
          "format": "int32"
        },
        "licenseUsedCount": {
          "description": "Number of licenses currently assigned to devices.",
          "example": 400,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "The date and time of when the subscription was last updated.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        }
      }
    }
- V2LicenseSummary: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2LicenseSummary",
      "title": "V2LicenseSummary",
      "description": "Summary of license assignment.",
      "example": {
        "accountName": "0402196254-00001",
        "totalLicense": 5000,
        "assignedLicenses": 4319,
        "hasMoreData": true,
        "lastSeenDeviceId": "1000",
        "maxPageSize": 10,
        "deviceList": [
          {
            "deviceId": "990003425730535",
            "assignmentTime": "2017-11-29T16:03:42.000Z"
          },
          {
            "deviceId": "990000473475989",
            "assignmentTime": "2017-11-29T16:03:42.000Z"
          },
          {
            "deviceId": "990000347475989",
            "assignmentTime": "2017-11-29T16:03:42.000Z"
          },
          {
            "deviceId": "990007303425535",
            "assignmentTime": "2017-11-29T16:03:42.000Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "0402196254-00001",
          "type": "string"
        },
        "assignedLicenses": {
          "description": "Assigned FOTA license count.",
          "example": 4319,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "example": true,
          "type": "boolean"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "totalLicense": {
          "description": "Total FOTA license count.",
          "example": 5000,
          "type": "integer",
          "format": "int32"
        },
        "lastSeenDeviceId": {
          "description": "Last seen device identifier.",
          "example": "1000",
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            {
              "deviceId": "990003425730535",
              "assignmentTime": "2017-11-29T16:03:42.000Z"
            },
            {
              "deviceId": "990000473475989",
              "assignmentTime": "2017-11-29T16:03:42.000Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "V2LicenseDevice",
            "title": "V2LicenseDevice",
            "description": "Device IMEI list.",
            "example": {
              "deviceId": "990003425730535",
              "assignmentTime": "2017-11-29T16:03:42.000Z"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "990003425730535",
                "type": "string"
              },
              "assignmentTime": {
                "description": "License assignment time.",
                "example": "2017-11-29T16:03:42.000Z",
                "type": "string"
              }
            },
            "required": [
              "deviceId"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "assignedLicenses",
        "hasMoreData",
        "maxPageSize"
      ]
    }
- V2LicenseDevice: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2LicenseDevice",
      "title": "V2LicenseDevice",
      "description": "Device IMEI list.",
      "example": {
        "deviceId": "990003425730535",
        "assignmentTime": "2017-11-29T16:03:42.000Z"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "990003425730535",
          "type": "string"
        },
        "assignmentTime": {
          "description": "License assignment time.",
          "example": "2017-11-29T16:03:42.000Z",
          "type": "string"
        }
      },
      "required": [
        "deviceId"
      ]
    }
- V2LicensesAssignedRemovedResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2LicensesAssignedRemovedResult",
      "title": "V2LicensesAssignedRemovedResult",
      "description": "License assignment or removal confirmation.",
      "example": {
        "accountName": "0242078689-00001",
        "licTotalCount": 1000,
        "licUsedCount": 502,
        "deviceList": [
          {
            "deviceId": "990003425730524",
            "status": "Success",
            "resultReason": "Success"
          },
          {
            "deviceId": "990000473475967",
            "status": "Failure",
            "resultReason": "Device does not exist."
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0242078689-00001",
          "type": "string"
        },
        "licTotalCount": {
          "description": "Total license count.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "licUsedCount": {
          "description": "Assigned license count.",
          "example": 502,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "example": [
            {
              "deviceId": "990003425730524",
              "status": "Success",
              "resultReason": "Success"
            },
            {
              "deviceId": "990000473475967",
              "status": "Failure",
              "resultReason": "Device does not exist."
            }
          ],
          "type": "array",
          "items": {
            "id": "V2DeviceStatus",
            "title": "V2DeviceStatus",
            "description": "Device with id in IMEI.",
            "example": {
              "deviceId": "990000473475967",
              "status": "Failure",
              "resultReason": "Device does not exist."
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "990000473475967",
                "type": "string"
              },
              "status": {
                "description": "Success or failure.",
                "example": "Failure",
                "type": "string"
              },
              "resultReason": {
                "description": "Result reason.",
                "example": "Device does not exist.",
                "type": "string"
              }
            },
            "required": [
              "deviceId",
              "status"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "licTotalCount",
        "licUsedCount",
        "deviceList"
      ]
    }
- V2LicenseIMEI: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2LicenseIMEI",
      "title": "V2LicenseIMEI",
      "description": "IMEIs of the devices to assign or remove licenses.",
      "example": {
        "deviceList": [
          "990003425730524",
          "990000473475967"
        ]
      },
      "type": "object",
      "properties": {
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "990003425730524",
            "990000473475967"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountName": {
          "description": "Account name.",
          "example": "0242078689-00001",
          "type": "string"
        }
      },
      "required": [
        "deviceList"
      ]
    }
- V2ListOfLicensesToRemoveRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2ListOfLicensesToRemoveRequest",
      "title": "V2ListOfLicensesToRemoveRequest",
      "description": "License cancellation candidate devices.",
      "example": {
        "type": "append",
        "count": 2,
        "deviceList": [
          "990003425730535",
          "990000473475989"
        ]
      },
      "type": "object",
      "properties": {
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "990003425730535",
            "990000473475989"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "List creation option.",
          "example": "append",
          "type": "string"
        },
        "count": {
          "description": "The number of devices.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "deviceList"
      ]
    }
- V2ListOfLicensesToRemoveResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2ListOfLicensesToRemoveResult",
      "title": "V2ListOfLicensesToRemoveResult",
      "description": "List of created license cancellation devices.",
      "example": {
        "count": 2,
        "deviceList": [
          "990003425730535",
          "990000473475989"
        ]
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of devices.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "990003425730535",
            "990000473475989"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "count",
        "deviceList"
      ]
    }
- V2ListOfLicensesToRemove: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2ListOfLicensesToRemove",
      "title": "V2ListOfLicensesToRemove",
      "description": "A list of license cancellation candidate devices.",
      "example": {
        "count": 6,
        "hasMoreData": false,
        "updateTime": "2018-03-22 00:06:00.069 +0000 UTC",
        "deviceList": [
          "990003425730535",
          "990000473475989",
          "990005733420535",
          "990000347475989",
          "990007303425535",
          "990007590473489"
        ]
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "Cancellation candidate devices count.",
          "example": 6,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "Flag to indicat more devices.",
          "example": false,
          "type": "boolean"
        },
        "updateTime": {
          "description": "Last update time.",
          "example": "2018-03-22 00:06:00.069 +0000 UTC",
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "990003425730535",
            "990000473475989",
            "990005733420535",
            "990000347475989",
            "990007303425535",
            "990007590473489"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "count",
        "hasMoreData",
        "updateTime",
        "deviceList"
      ]
    }
- CampaignSoftwareUpgrade: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CampaignSoftwareUpgrade",
      "title": "CampaignSoftwareUpgrade",
      "description": "Software upgrade information.",
      "example": {
        "campaignName": "FOTA_Verizon_Upgrade",
        "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
        "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
        "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
        "distributionType": "HTTP",
        "startDate": "2020-08-21",
        "endDate": "2020-08-22",
        "downloadAfterDate": "2020-08-21",
        "downloadTimeWindowList": [
          {
            "startTime": 20,
            "endTime": 21
          }
        ],
        "installAfterDate": "2020-08-21",
        "installTimeWindowList": [
          {
            "startTime": 22,
            "endTime": 23
          }
        ],
        "deviceList": [
          "990013907835573",
          "990013907884259"
        ]
      },
      "type": "object",
      "properties": {
        "softwareName": {
          "description": "Software name to upgrade to.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "example": "FOTA_Verizon_Model-A_00To01_HF",
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "distributionType": {
          "description": "OMA or HTTP.",
          "example": "HTTP",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "990013907835573",
            "990013907884259"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "campaignName": {
          "description": "Campaign name.",
          "example": "FOTA_Verizon_Upgrade",
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "example": [
            {
              "startTime": 20,
              "endTime": 21
            }
          ],
          "type": "array",
          "items": {
            "id": "V2TimeWindow",
            "title": "V2TimeWindow",
            "description": "Allowed start and end time windows.",
            "example": {
              "startTime": 20,
              "endTime": 21
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 20,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 21,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        },
        "installAfterDate": {
          "description": "Client will install package after date. If null, client will install as soon as possible.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "example": [
            {
              "startTime": 22,
              "endTime": 23
            }
          ],
          "type": "array",
          "items": {
            "$ref": "V2TimeWindow"
          }
        }
      },
      "required": [
        "softwareName",
        "softwareFrom",
        "softwareTo",
        "distributionType",
        "startDate",
        "endDate",
        "deviceList"
      ]
    }
- CampaignSoftware: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CampaignSoftware",
      "title": "CampaignSoftware",
      "description": "Software upgrade information.",
      "example": {
        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
        "accountName": "0402196254-00001",
        "campaignName": "FOTA_Verizon_Upgrade",
        "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
        "distributionType": "HTTP",
        "make": "Verizon",
        "model": "Model-A",
        "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
        "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
        "startDate": "2020-08-21",
        "endDate": "2020-08-22",
        "downloadAfterDate": "2020-08-21",
        "downloadTimeWindowList": [
          {
            "startTime": 20,
            "endTime": 21
          }
        ],
        "installAfterDate": "2020-08-21",
        "installTimeWindowList": [
          {
            "startTime": 22,
            "endTime": 23
          }
        ],
        "status": "CampaignRequestPending"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Upgrade identifier.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "example": "0402196254-00001",
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "example": "HTTP",
          "type": "string"
        },
        "make": {
          "description": "Applicable make.",
          "example": "Verizon",
          "type": "string"
        },
        "model": {
          "description": "Applicable model.",
          "example": "Model-A",
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "example": "FOTA_Verizon_Model-A_00To01_HF",
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Software upgrade status.",
          "example": "CampaignRequestPending",
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "example": "FOTA_Verizon_Upgrade",
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "example": [
            {
              "startTime": 20,
              "endTime": 21
            }
          ],
          "type": "array",
          "items": {
            "id": "V2TimeWindow",
            "title": "V2TimeWindow",
            "description": "Allowed start and end time windows.",
            "example": {
              "startTime": 20,
              "endTime": 21
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 20,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 21,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        },
        "installAfterDate": {
          "description": "Client will install package after date. If null, client will install as soon as possible.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "example": [
            {
              "startTime": 22,
              "endTime": 23
            }
          ],
          "type": "array",
          "items": {
            "$ref": "V2TimeWindow"
          }
        }
      },
      "required": [
        "id",
        "accountName",
        "softwareName",
        "distributionType",
        "make",
        "model",
        "softwareFrom",
        "softwareTo",
        "startDate",
        "endDate",
        "status"
      ]
    }
- V2ChangeCampaignDatesRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2ChangeCampaignDatesRequest",
      "title": "V2ChangeCampaignDatesRequest",
      "description": "New dates and time windows.",
      "example": {
        "startDate": "2020-08-21",
        "endDate": "2020-08-22",
        "downloadAfterDate": "2020-08-21",
        "downloadTimeWindowList": [
          {
            "startTime": 3,
            "endTime": 4
          }
        ],
        "installAfterDate": "2020-08-21",
        "installTimeWindowList": [
          {
            "startTime": 5,
            "endTime": 6
          }
        ]
      },
      "type": "object",
      "properties": {
        "startDate": {
          "description": "Campaign start date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "downloadAfterDate": {
          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows. Removing of existing windows is not allowed.",
          "example": [
            {
              "startTime": 3,
              "endTime": 4
            }
          ],
          "type": "array",
          "items": {
            "id": "V2TimeWindow",
            "title": "V2TimeWindow",
            "description": "Allowed start and end time windows.",
            "example": {
              "startTime": 20,
              "endTime": 21
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 20,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 21,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        },
        "installAfterDate": {
          "description": "Client will install package after date. If null, client will install as soon as possible.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows. Removing of existing windows is not allowed.",
          "example": [
            {
              "startTime": 5,
              "endTime": 6
            }
          ],
          "type": "array",
          "items": {
            "$ref": "V2TimeWindow"
          }
        }
      },
      "required": [
        "startDate",
        "endDate"
      ]
    }
- V2AddOrRemoveDeviceRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2AddOrRemoveDeviceRequest",
      "title": "V2AddOrRemoveDeviceRequest",
      "description": "Add or remove device to existing software upgrade information.",
      "example": {
        "Type": "remove",
        "deviceList": [
          "990013907884259",
          "990013907835573",
          "990013907833575"
        ]
      },
      "type": "object",
      "properties": {
        "Type": {
          "description": "Operation either 'append' or 'remove'.",
          "example": "remove",
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "990013907884259",
            "990013907835573",
            "990013907833575"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "Type",
        "deviceList"
      ]
    }
- V2AddOrRemoveDeviceResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2AddOrRemoveDeviceResult",
      "title": "V2AddOrRemoveDeviceResult",
      "description": "Add or remove devices from the existing software upgrade information.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "0402196254-00001",
          "type": "string"
        },
        "campaignId": {
          "description": "Campaign identifier.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        },
        "requestId": {
          "description": "Request identifier.",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "campaignId",
        "requestId"
      ]
    }
- FotaV2CallbackRegistrationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV2CallbackRegistrationRequest",
      "title": "FotaV2CallbackRegistrationRequest",
      "description": "Callback URL registration.",
      "example": {
        "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "url": {
          "description": "Callback URL for an subscribed service.",
          "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
          "type": "string"
        }
      }
    }
- FotaV2CallbackRegistrationResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV2CallbackRegistrationResult",
      "title": "FotaV2CallbackRegistrationResult",
      "description": "Callback listener URL.",
      "example": {
        "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "url": {
          "description": "Callback URL.",
          "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
          "type": "string"
        }
      }
    }
- CallbackSummary: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CallbackSummary",
      "title": "CallbackSummary",
      "description": "Registered callback information.",
      "example": {
        "url": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "url": {
          "description": "Callback URL for an subscribed service.",
          "example": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx",
          "type": "string"
        }
      }
    }
- SoftwarePackage: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SoftwarePackage",
      "title": "SoftwarePackage",
      "description": "Software package information.",
      "example": {
        "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
        "launchDate": "2020-08-31",
        "releaseNote": "",
        "model": "Model-A",
        "make": "Verizon",
        "distributionType": "HTTP",
        "devicePlatformId": "IoT"
      },
      "type": "object",
      "properties": {
        "softwareName": {
          "description": "Software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "launchDate": {
          "description": "Software launch date.",
          "example": "2020-08-31",
          "type": "string",
          "format": "date"
        },
        "model": {
          "description": "Software applicable device model.",
          "example": "Model-A",
          "type": "string"
        },
        "make": {
          "description": "Software applicable device make.",
          "example": "Verizon",
          "type": "string"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "example": "HTTP",
          "type": "string"
        },
        "devicePlatformId": {
          "description": "The platform (Android, iOS, etc.) that the software can be applied to.",
          "example": "IoT",
          "type": "string"
        },
        "releaseNote": {
          "description": "Software release note reserved for future use.",
          "type": "string"
        }
      },
      "required": [
        "softwareName",
        "launchDate",
        "model",
        "make",
        "distributionType",
        "devicePlatformId"
      ]
    }
- DeviceSoftwareUpgrade: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceSoftwareUpgrade",
      "title": "DeviceSoftwareUpgrade",
      "description": "Array of software upgrade objects with the specified status.",
      "example": {
        "deviceId": "990013907835573",
        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
        "accountName": "0402196254-00001",
        "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
        "startDate": "2018-03-05",
        "status": "UpgradeSuccess",
        "reason": "success"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device identifier.",
          "example": "990013907835573",
          "type": "string"
        },
        "id": {
          "description": "Upgrade identifier.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "example": "0402196254-00001",
          "type": "string"
        },
        "startDate": {
          "description": "Software upgrade start date.",
          "example": "2018-03-05",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Software upgrade status.",
          "example": "UpgradeSuccess",
          "type": "string"
        },
        "reason": {
          "description": "Software upgrade result reason.",
          "example": "success",
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        }
      },
      "required": [
        "deviceId",
        "id",
        "accountName",
        "startDate",
        "status",
        "reason"
      ]
    }
- V2CampaignHistory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2CampaignHistory",
      "title": "V2CampaignHistory",
      "description": "Campaign history details.",
      "example": {
        "hasMoreData": true,
        "lastSeenCampaignId": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
        "campaignList": [
          {
            "accountName": "0402196254-00001",
            "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
            "campaignName": "FOTA_Verizon_Upgrade",
            "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
            "distributionType": "HTTP",
            "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
            "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
            "make": "Verizon",
            "model": "Model-A",
            "startDate": "2020-08-21",
            "endDate": "2020-08-22",
            "downloadAfterDate": "2020-08-21",
            "downloadTimeWindowList": [
              {
                "startTime": 20,
                "endTime": 21
              }
            ],
            "installAfterDate": "2020-08-21",
            "installTimeWindowList": [
              {
                "startTime": 22,
                "endTime": 23
              }
            ],
            "status": "CampaignEnded"
          }
        ]
      },
      "type": "object",
      "properties": {
        "hasMoreData": {
          "description": "Has more report flag.",
          "example": true,
          "type": "boolean"
        },
        "campaignList": {
          "description": "Software upgrade list.",
          "example": [
            {
              "accountName": "0402196254-00001",
              "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
              "campaignName": "FOTA_Verizon_Upgrade",
              "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
              "distributionType": "HTTP",
              "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
              "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
              "make": "Verizon",
              "model": "Model-A",
              "startDate": "2020-08-21",
              "endDate": "2020-08-22",
              "downloadAfterDate": "2020-08-21",
              "downloadTimeWindowList": [
                {
                  "startTime": 20,
                  "endTime": 21
                }
              ],
              "installAfterDate": "2020-08-21",
              "installTimeWindowList": [
                {
                  "startTime": 22,
                  "endTime": 23
                }
              ],
              "status": "CampaignEnded"
            }
          ],
          "type": [
            "array",
            "null"
          ],
          "items": {
            "id": "V2CampaignMetaInfo",
            "title": "V2CampaignMetaInfo",
            "description": "Campaign and campaign details.",
            "example": {
              "accountName": "0402196254-00001",
              "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
              "campaignName": "FOTA_Verizon_Upgrade",
              "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
              "distributionType": "HTTP",
              "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
              "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
              "make": "Verizon",
              "model": "Model-A",
              "startDate": "2020-08-21",
              "endDate": "2020-08-22",
              "downloadAfterDate": "2020-08-21",
              "downloadTimeWindowList": [
                {
                  "startTime": 20,
                  "endTime": 21
                }
              ],
              "installAfterDate": "2020-08-21",
              "installTimeWindowList": [
                {
                  "startTime": 22,
                  "endTime": 23
                }
              ],
              "status": "CampaignEnded"
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "Account identifier.",
                "example": "0402196254-00001",
                "type": "string"
              },
              "id": {
                "description": "Campaign identifier.",
                "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                "type": "string"
              },
              "softwareName": {
                "description": "Software name.",
                "example": "FOTA_Verizon_Model-A_02To03_HF",
                "type": "string"
              },
              "distributionType": {
                "description": "LWM2M, OMD-DM or HTTP.",
                "example": "HTTP",
                "type": "string"
              },
              "softwareFrom": {
                "description": "Old software name.",
                "example": "FOTA_Verizon_Model-A_00To01_HF",
                "type": "string"
              },
              "softwareTo": {
                "description": "New software name.",
                "example": "FOTA_Verizon_Model-A_02To03_HF",
                "type": "string"
              },
              "make": {
                "description": "Applicable make.",
                "example": "Verizon",
                "type": "string"
              },
              "model": {
                "description": "Applicable model.",
                "example": "Model-A",
                "type": "string"
              },
              "startDate": {
                "description": "Campaign start date.",
                "example": "2020-08-21",
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "description": "Campaign end date.",
                "example": "2020-08-21",
                "type": "string",
                "format": "date"
              },
              "status": {
                "description": "Software upgrade status.",
                "example": "CampaignEnded",
                "type": "string"
              },
              "campaignName": {
                "description": "Campaign name.",
                "example": "FOTA_Verizon_Upgrade",
                "type": "string"
              },
              "downloadAfterDate": {
                "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
                "example": "2020-08-21",
                "type": "string",
                "format": "date"
              },
              "downloadTimeWindowList": {
                "description": "List of allowed download time windows.",
                "example": [
                  {
                    "startTime": 20,
                    "endTime": 21
                  }
                ],
                "type": "array",
                "items": {
                  "id": "V2TimeWindow",
                  "title": "V2TimeWindow",
                  "description": "Allowed start and end time windows.",
                  "example": {
                    "startTime": 20,
                    "endTime": 21
                  },
                  "type": "object",
                  "properties": {
                    "startTime": {
                      "description": "Start hour in range [0..23], current hour >= startTime.",
                      "example": 20,
                      "type": "integer",
                      "format": "int32"
                    },
                    "endTime": {
                      "description": "End hour in range [1..24], current hour < endTime.",
                      "example": 21,
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "startTime",
                    "endTime"
                  ]
                }
              },
              "installAfterDate": {
                "description": "Client will install package after date. If null, client will install as soon as possible.",
                "example": "2020-08-21",
                "type": "string",
                "format": "date"
              },
              "installTimeWindowList": {
                "description": "List of allowed install time windows.",
                "example": [
                  {
                    "startTime": 22,
                    "endTime": 23
                  }
                ],
                "type": "array",
                "items": {
                  "$ref": "V2TimeWindow"
                }
              }
            },
            "required": [
              "accountName",
              "id",
              "softwareName",
              "distributionType",
              "softwareFrom",
              "softwareTo",
              "make",
              "model",
              "startDate",
              "endDate",
              "status"
            ]
          }
        },
        "lastSeenCampaignId": {
          "description": "Campaign identifier.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        }
      },
      "required": [
        "hasMoreData",
        "campaignList"
      ]
    }
- V2CampaignMetaInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2CampaignMetaInfo",
      "title": "V2CampaignMetaInfo",
      "description": "Campaign and campaign details.",
      "example": {
        "accountName": "0402196254-00001",
        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
        "campaignName": "FOTA_Verizon_Upgrade",
        "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
        "distributionType": "HTTP",
        "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
        "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
        "make": "Verizon",
        "model": "Model-A",
        "startDate": "2020-08-21",
        "endDate": "2020-08-22",
        "downloadAfterDate": "2020-08-21",
        "downloadTimeWindowList": [
          {
            "startTime": 20,
            "endTime": 21
          }
        ],
        "installAfterDate": "2020-08-21",
        "installTimeWindowList": [
          {
            "startTime": 22,
            "endTime": 23
          }
        ],
        "status": "CampaignEnded"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "0402196254-00001",
          "type": "string"
        },
        "id": {
          "description": "Campaign identifier.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "example": "HTTP",
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "example": "FOTA_Verizon_Model-A_00To01_HF",
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "make": {
          "description": "Applicable make.",
          "example": "Verizon",
          "type": "string"
        },
        "model": {
          "description": "Applicable model.",
          "example": "Model-A",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Software upgrade status.",
          "example": "CampaignEnded",
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "example": "FOTA_Verizon_Upgrade",
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "example": [
            {
              "startTime": 20,
              "endTime": 21
            }
          ],
          "type": "array",
          "items": {
            "id": "V2TimeWindow",
            "title": "V2TimeWindow",
            "description": "Allowed start and end time windows.",
            "example": {
              "startTime": 20,
              "endTime": 21
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 20,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 21,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        },
        "installAfterDate": {
          "description": "Client will install package after date. If null, client will install as soon as possible.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "example": [
            {
              "startTime": 22,
              "endTime": 23
            }
          ],
          "type": "array",
          "items": {
            "$ref": "V2TimeWindow"
          }
        }
      },
      "required": [
        "accountName",
        "id",
        "softwareName",
        "distributionType",
        "softwareFrom",
        "softwareTo",
        "make",
        "model",
        "startDate",
        "endDate",
        "status"
      ]
    }
- V2CampaignDevice: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2CampaignDevice",
      "title": "V2CampaignDevice",
      "description": "List of devices in a campaign.",
      "example": {
        "totalDevice": 1148,
        "hasMoreData": true,
        "lastSeenDeviceId": "15-digit IMEI",
        "maxPageSize": 1000,
        "deviceList": [
          {
            "deviceId": "15-digit IMEI",
            "status": "UpgradeSuccess",
            "resultReason": "DownloadInstallSucceeded"
          },
          {
            "deviceId": "15-digit IMEI",
            "status": "UpgradeSuccess",
            "resultReason": "DownloadInstallSucceeded"
          },
          {
            "deviceId": "15-digit IMEI",
            "status": "UpgradeSuccess",
            "resultReason": "DownloadInstallSucceeded"
          }
        ]
      },
      "type": "object",
      "properties": {
        "hasMoreData": {
          "description": "Has more report flag.",
          "example": true,
          "type": "boolean"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "status": "UpgradeSuccess",
              "resultReason": "DownloadInstallSucceeded"
            },
            {
              "deviceId": "15-digit IMEI",
              "status": "UpgradeSuccess",
              "resultReason": "DownloadInstallSucceeded"
            },
            {
              "deviceId": "15-digit IMEI",
              "status": "UpgradeSuccess",
              "resultReason": "DownloadInstallSucceeded"
            }
          ],
          "type": "array",
          "items": {
            "id": "V2DeviceStatus",
            "title": "V2DeviceStatus",
            "description": "Device with id in IMEI.",
            "example": {
              "deviceId": "990000473475967",
              "status": "Failure",
              "resultReason": "Device does not exist."
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "990000473475967",
                "type": "string"
              },
              "status": {
                "description": "Success or failure.",
                "example": "Failure",
                "type": "string"
              },
              "resultReason": {
                "description": "Result reason.",
                "example": "Device does not exist.",
                "type": "string"
              }
            },
            "required": [
              "deviceId",
              "status"
            ]
          }
        },
        "totalDevice": {
          "description": "Total device count.",
          "example": 1148,
          "type": "integer",
          "format": "int32"
        },
        "lastSeenDeviceId": {
          "description": "Device identifier.",
          "example": "15-digit IMEI",
          "type": "string"
        }
      },
      "required": [
        "hasMoreData",
        "maxPageSize",
        "deviceList"
      ]
    }
- V2AccountDeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2AccountDeviceList",
      "title": "V2AccountDeviceList",
      "description": "List of device information for an account.",
      "example": {
        "accountName": "0000123456-00001",
        "hasMoreData": true,
        "lastSeenDeviceId": "15-digit IMEI",
        "maxPageSize": 1000,
        "deviceList": [
          {
            "deviceId": "15-digit IMEI",
            "mdn": "10-digit MDN",
            "model": "Model-A",
            "make": "Verizon",
            "fotaEligible": true,
            "appFotaEligible": true,
            "licenseAssigned": true,
            "distributionType": "HTTP",
            "softwareList": [
              {
                "name": "FOTA_Verizon_Model-A_02To03_HF",
                "version": "3",
                "upgradeTime": "2020-09-08T19:00:51.541Z"
              }
            ],
            "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
          },
          {
            "deviceId": "15-digit IMEI",
            "mdn": "10-digit MDN",
            "model": "Model-A",
            "make": "Verizon",
            "fotaEligible": true,
            "appFotaEligible": true,
            "licenseAssigned": true,
            "distributionType": "HTTP",
            "softwareList": [
              {
                "name": "FOTA_Verizon_Model-A_02To03_HF",
                "version": "3",
                "upgradeTime": "2020-09-08T19:00:51.541Z"
              }
            ],
            "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
          },
          {
            "deviceId": "15-digit IMEI",
            "mdn": "10-digit MDN",
            "model": "Model-A",
            "make": "Verizon",
            "fotaEligible": true,
            "appFotaEligible": true,
            "licenseAssigned": true,
            "distributionType": "HTTP",
            "softwareList": [
              {
                "name": "FOTA_Verizon_Model-A_02To03_HF",
                "version": "3",
                "upgradeTime": "2020-09-08T19:00:51.541Z"
              }
            ],
            "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "hasMoreData": {
          "description": "Has more device flag?",
          "example": true,
          "type": "boolean"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Account device list.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "mdn": "10-digit MDN",
              "model": "Model-A",
              "make": "Verizon",
              "fotaEligible": true,
              "appFotaEligible": true,
              "licenseAssigned": true,
              "distributionType": "HTTP",
              "softwareList": [
                {
                  "name": "FOTA_Verizon_Model-A_02To03_HF",
                  "version": "3",
                  "upgradeTime": "2020-09-08T19:00:51.541Z"
                }
              ],
              "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
            },
            {
              "deviceId": "15-digit IMEI",
              "mdn": "10-digit MDN",
              "model": "Model-A",
              "make": "Verizon",
              "fotaEligible": true,
              "appFotaEligible": true,
              "licenseAssigned": true,
              "distributionType": "HTTP",
              "softwareList": [
                {
                  "name": "FOTA_Verizon_Model-A_02To03_HF",
                  "version": "3",
                  "upgradeTime": "2020-09-08T19:00:51.541Z"
                }
              ],
              "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
            },
            {
              "deviceId": "15-digit IMEI",
              "mdn": "10-digit MDN",
              "model": "Model-A",
              "make": "Verizon",
              "fotaEligible": true,
              "appFotaEligible": true,
              "licenseAssigned": true,
              "distributionType": "HTTP",
              "softwareList": [
                {
                  "name": "FOTA_Verizon_Model-A_02To03_HF",
                  "version": "3",
                  "upgradeTime": "2020-09-08T19:00:51.541Z"
                }
              ],
              "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
            }
          ],
          "type": "array",
          "items": {
            "id": "V2AccountDevice",
            "title": "V2AccountDevice",
            "description": "Account device information.",
            "example": {
              "deviceId": "15-digit IMEI",
              "mdn": "10-digit MDN",
              "model": "Model-A",
              "make": "Verizon",
              "fotaEligible": true,
              "appFotaEligible": true,
              "licenseAssigned": true,
              "distributionType": "HTTP",
              "softwareList": [
                {
                  "name": "FOTA_Verizon_Model-A_02To03_HF",
                  "version": "3",
                  "upgradeTime": "2020-09-08T19:00:51.541Z"
                }
              ],
              "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device identifier.",
                "example": "15-digit IMEI",
                "type": "string"
              },
              "mdn": {
                "description": "MDN.",
                "example": "10-digit MDN",
                "type": "string"
              },
              "model": {
                "description": "Device model.",
                "example": "Model-A",
                "type": "string"
              },
              "make": {
                "description": "Device make.",
                "example": "Verizon",
                "type": "string"
              },
              "fotaEligible": {
                "description": "Device FOTA capable.",
                "example": true,
                "type": "boolean"
              },
              "appFotaEligible": {
                "description": "Device application FOTA capable.",
                "example": true,
                "type": "boolean"
              },
              "licenseAssigned": {
                "description": "License assigned device.",
                "example": true,
                "type": "boolean"
              },
              "distributionType": {
                "description": "LWM2M, OMD-DM or HTTP.",
                "example": "HTTP",
                "type": "string"
              },
              "softwareList": {
                "description": "List of sofware.",
                "example": [
                  {
                    "name": "FOTA_Verizon_Model-A_02To03_HF",
                    "version": "3",
                    "upgradeTime": "2020-09-08T19:00:51.541Z"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "V2SoftwareInfo",
                  "title": "V2SoftwareInfo",
                  "description": "Software information.",
                  "example": {
                    "name": "FOTA_Verizon_Model-A_02To03_HF",
                    "version": "3",
                    "upgradeTime": "2020-09-08T19:00:51.541Z"
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Software name.",
                      "example": "FOTA_Verizon_Model-A_02To03_HF",
                      "type": "string"
                    },
                    "version": {
                      "description": "Software version.",
                      "example": "3",
                      "type": "string"
                    },
                    "upgradeTime": {
                      "description": "Upgrade time.",
                      "example": "2020-09-08T19:00:51.541Z",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "version",
                    "upgradeTime"
                  ]
                }
              },
              "createTime": {
                "description": "The date and time of when the device is created.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "upgradeTime": {
                "description": "The date and time of when the device firmware or software is upgraded.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "updateTime": {
                "description": "The date and time of when the device is updated.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "refreshTime": {
                "description": "The date and time of when the device is refreshed.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              }
            },
            "required": [
              "deviceId",
              "mdn",
              "model",
              "make",
              "fotaEligible",
              "appFotaEligible",
              "licenseAssigned",
              "distributionType",
              "softwareList"
            ]
          }
        },
        "lastSeenDeviceId": {
          "description": "Last seen device identifier.",
          "example": "15-digit IMEI",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "hasMoreData",
        "maxPageSize",
        "deviceList"
      ]
    }
- V2AccountDevice: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2AccountDevice",
      "title": "V2AccountDevice",
      "description": "Account device information.",
      "example": {
        "deviceId": "15-digit IMEI",
        "mdn": "10-digit MDN",
        "model": "Model-A",
        "make": "Verizon",
        "fotaEligible": true,
        "appFotaEligible": true,
        "licenseAssigned": true,
        "distributionType": "HTTP",
        "softwareList": [
          {
            "name": "FOTA_Verizon_Model-A_02To03_HF",
            "version": "3",
            "upgradeTime": "2020-09-08T19:00:51.541Z"
          }
        ],
        "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
        "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
        "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
        "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device identifier.",
          "example": "15-digit IMEI",
          "type": "string"
        },
        "mdn": {
          "description": "MDN.",
          "example": "10-digit MDN",
          "type": "string"
        },
        "model": {
          "description": "Device model.",
          "example": "Model-A",
          "type": "string"
        },
        "make": {
          "description": "Device make.",
          "example": "Verizon",
          "type": "string"
        },
        "fotaEligible": {
          "description": "Device FOTA capable.",
          "example": true,
          "type": "boolean"
        },
        "appFotaEligible": {
          "description": "Device application FOTA capable.",
          "example": true,
          "type": "boolean"
        },
        "licenseAssigned": {
          "description": "License assigned device.",
          "example": true,
          "type": "boolean"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "example": "HTTP",
          "type": "string"
        },
        "softwareList": {
          "description": "List of sofware.",
          "example": [
            {
              "name": "FOTA_Verizon_Model-A_02To03_HF",
              "version": "3",
              "upgradeTime": "2020-09-08T19:00:51.541Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "V2SoftwareInfo",
            "title": "V2SoftwareInfo",
            "description": "Software information.",
            "example": {
              "name": "FOTA_Verizon_Model-A_02To03_HF",
              "version": "3",
              "upgradeTime": "2020-09-08T19:00:51.541Z"
            },
            "type": "object",
            "properties": {
              "name": {
                "description": "Software name.",
                "example": "FOTA_Verizon_Model-A_02To03_HF",
                "type": "string"
              },
              "version": {
                "description": "Software version.",
                "example": "3",
                "type": "string"
              },
              "upgradeTime": {
                "description": "Upgrade time.",
                "example": "2020-09-08T19:00:51.541Z",
                "type": "string"
              }
            },
            "required": [
              "name",
              "version",
              "upgradeTime"
            ]
          }
        },
        "createTime": {
          "description": "The date and time of when the device is created.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "upgradeTime": {
          "description": "The date and time of when the device firmware or software is upgraded.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "updateTime": {
          "description": "The date and time of when the device is updated.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "refreshTime": {
          "description": "The date and time of when the device is refreshed.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        }
      },
      "required": [
        "deviceId",
        "mdn",
        "model",
        "make",
        "fotaEligible",
        "appFotaEligible",
        "licenseAssigned",
        "distributionType",
        "softwareList"
      ]
    }
- V2SoftwareInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2SoftwareInfo",
      "title": "V2SoftwareInfo",
      "description": "Software information.",
      "example": {
        "name": "FOTA_Verizon_Model-A_02To03_HF",
        "version": "3",
        "upgradeTime": "2020-09-08T19:00:51.541Z"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "Software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "version": {
          "description": "Software version.",
          "example": "3",
          "type": "string"
        },
        "upgradeTime": {
          "description": "Upgrade time.",
          "example": "2020-09-08T19:00:51.541Z",
          "type": "string"
        }
      },
      "required": [
        "name",
        "version",
        "upgradeTime"
      ]
    }
- V2TimeWindow: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2TimeWindow",
      "title": "V2TimeWindow",
      "description": "Allowed start and end time windows.",
      "example": {
        "startTime": 20,
        "endTime": 21
      },
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Start hour in range [0..23], current hour >= startTime.",
          "example": 20,
          "type": "integer",
          "format": "int32"
        },
        "endTime": {
          "description": "End hour in range [1..24], current hour < endTime.",
          "example": 21,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ]
    }
- DeviceLog: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceLog",
      "title": "DeviceLog",
      "description": "Device logging information.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "990013907835573",
          "type": "string"
        },
        "logTime": {
          "description": "Time of log.",
          "example": "2020-10-22T19:29:50.901Z",
          "type": "string",
          "format": "date-time"
        },
        "logType": {
          "description": "Log type (one of SoftwareUpdate, Event, UserNotification, AgentService, Wireless, WirelessWeb, MobileBroadbandModem, WindowsMDM).",
          "type": "string"
        },
        "eventLog": {
          "description": "Event log.",
          "type": "string"
        },
        "binaryLogFileBase64": {
          "description": "Base64-encoded contents of binary log file.",
          "type": "string"
        },
        "binaryLogFilename": {
          "description": "File name of binary log file.",
          "type": "string"
        }
      },
      "required": [
        "deviceId",
        "logTime",
        "logType",
        "eventLog",
        "binaryLogFileBase64",
        "binaryLogFilename"
      ]
    }
- V2DeviceStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V2DeviceStatus",
      "title": "V2DeviceStatus",
      "description": "Device with id in IMEI.",
      "example": {
        "deviceId": "990000473475967",
        "status": "Failure",
        "resultReason": "Device does not exist."
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "990000473475967",
          "type": "string"
        },
        "status": {
          "description": "Success or failure.",
          "example": "Failure",
          "type": "string"
        },
        "resultReason": {
          "description": "Result reason.",
          "example": "Device does not exist.",
          "type": "string"
        }
      },
      "required": [
        "deviceId",
        "status"
      ]
    }
- DeviceLoggingRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceLoggingRequest",
      "title": "DeviceLoggingRequest",
      "description": "Device logging information.",
      "example": {
        "deviceIds": [
          "990013907835573",
          "991124018926684",
          "992234129057795",
          "998891785613351",
          "990013907835573"
        ]
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "List of device IMEI identifiers.",
          "example": [
            "990013907835573",
            "991124018926684",
            "992234129057795",
            "998891785613351",
            "990013907835573"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "deviceIds"
      ]
    }
- DeviceLoggingStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceLoggingStatus",
      "title": "DeviceLoggingStatus",
      "description": "Device logging status information.",
      "example": {
        "deviceId": "990013907835573",
        "expiryDate": "2020-10-19"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "990013907835573",
          "type": "string"
        },
        "expiryDate": {
          "description": "The date when device logging expires.",
          "example": "2020-10-19",
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "deviceId",
        "expiryDate"
      ]
    }
- CheckInHistoryItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CheckInHistoryItem",
      "title": "CheckInHistoryItem",
      "description": "Check-in history for a device.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "990013907835573",
          "type": "string"
        },
        "clientType": {
          "description": "Type of client.",
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "failureType": {
          "type": "string"
        },
        "timeCompleted": {
          "example": "2020-10-22T19:35:07.753Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "deviceId",
        "clientType",
        "result",
        "failureType",
        "timeCompleted"
      ]
    }
- FotaV2SuccessResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV2SuccessResult",
      "title": "FotaV2SuccessResult",
      "description": "Response to a successful request.",
      "example": {
        "success": true
      },
      "type": "object",
      "properties": {
        "success": {
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "success"
      ]
    }
- FotaV2Result: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV2Result",
      "title": "FotaV2Result",
      "description": "Response for error cases.",
      "example": {
        "errorCode": "error code string",
        "errorMessage": "error message string"
      },
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Code of the error.",
          "example": "error code string",
          "type": "string"
        },
        "errorMessage": {
          "description": "Details of the error.",
          "example": "error message string",
          "type": "string"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    }
- UploadConfigurationFilesResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UploadConfigurationFilesResponse",
      "title": "UploadConfigurationFilesResponse",
      "type": "object",
      "properties": {
        "fileName": {
          "description": "The name of the file you are upgrading to.",
          "example": "hello-world.txt",
          "type": "string"
        },
        "fileVersion": {
          "description": "The version of the file you are upgrading to.",
          "example": "1.0",
          "type": "string"
        },
        "launchDate": {
          "description": "Software launch date.",
          "example": "2020-08-31",
          "type": "string",
          "format": "date"
        },
        "releaseNote": {
          "description": "Software release note.",
          "example": "note",
          "type": "string"
        },
        "model": {
          "description": "Software applicable device model.",
          "example": "Model-A",
          "type": "string"
        },
        "make": {
          "description": "Software applicable device make.",
          "example": "Verizon",
          "type": "string"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "example": "HTTP",
          "type": "string"
        },
        "devicePlatformId": {
          "description": "The platform (Android, iOS, etc.) that the software can be applied to.",
          "example": "IoT",
          "type": "string"
        },
        "localTargetPath": {
          "description": "Local target path on the device.",
          "example": "IoT",
          "type": "string"
        }
      }
    }
- RetrievesAvailableFilesResponseList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RetrievesAvailableFilesResponseList",
      "title": "RetrievesAvailableFilesResponseList",
      "type": "object",
      "properties": {
        "AvailableFilesResponse": {
          "description": "",
          "type": "array",
          "items": {
            "id": "RetrievesAvailableFilesResponse",
            "title": "RetrievesAvailableFilesResponse",
            "type": "object",
            "properties": {
              "fileName": {
                "description": "ThingSpace-generated name of the file. You will use this name when listing or scheduling campaigns for the file.",
                "example": "configfile-Verizon_VZW1_hello-world.txt",
                "type": "string"
              },
              "fileVersion": {
                "description": "Version of the file.",
                "example": "1.0",
                "type": "string"
              },
              "releaseNote": {
                "description": "Software release note.",
                "example": "Hello world initial file",
                "type": "string"
              },
              "make": {
                "description": "The software-applicable device make.",
                "example": "Verizon",
                "type": "string"
              },
              "model": {
                "description": "The software-applicable device model.",
                "example": "VZW1",
                "type": "string"
              },
              "localTargetPath": {
                "description": "Local target path on the device.",
                "example": "/VZWFOTA/hello-world.txt",
                "type": "string"
              },
              "distributionType": {
                "description": "Valid values",
                "example": "HTTP",
                "type": "string"
              },
              "devicePlatformId": {
                "description": "The platform (Android, iOS, etc.,) that the software can be applied to.",
                "example": "IoT",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- RetrievesAvailableFilesResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RetrievesAvailableFilesResponse",
      "title": "RetrievesAvailableFilesResponse",
      "type": "object",
      "properties": {
        "fileName": {
          "description": "ThingSpace-generated name of the file. You will use this name when listing or scheduling campaigns for the file.",
          "example": "configfile-Verizon_VZW1_hello-world.txt",
          "type": "string"
        },
        "fileVersion": {
          "description": "Version of the file.",
          "example": "1.0",
          "type": "string"
        },
        "releaseNote": {
          "description": "Software release note.",
          "example": "Hello world initial file",
          "type": "string"
        },
        "make": {
          "description": "The software-applicable device make.",
          "example": "Verizon",
          "type": "string"
        },
        "model": {
          "description": "The software-applicable device model.",
          "example": "VZW1",
          "type": "string"
        },
        "localTargetPath": {
          "description": "Local target path on the device.",
          "example": "/VZWFOTA/hello-world.txt",
          "type": "string"
        },
        "distributionType": {
          "description": "Valid values",
          "example": "HTTP",
          "type": "string"
        },
        "devicePlatformId": {
          "description": "The platform (Android, iOS, etc.,) that the software can be applied to.",
          "example": "IoT",
          "type": "string"
        }
      }
    }
- UploadAndScheduleFileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UploadAndScheduleFileRequest",
      "title": "UploadAndScheduleFileRequest",
      "type": "object",
      "properties": {
        "campaignName": {
          "description": "The campaign name.",
          "example": "FOTA_Verizon_Upgrade",
          "type": "string"
        },
        "fileName": {
          "description": "The name of the file you are upgrading to.",
          "example": "configfile-Verizon_VZW1_hello-world.txt",
          "type": "string"
        },
        "fileVersion": {
          "description": "The version of the file you are upgrading to.",
          "example": "1.0",
          "type": "string"
        },
        "distributionType": {
          "description": "Valid values",
          "example": "HTTP",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2021-02-08",
          "type": "string"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2021-02-08",
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
          "example": "2021-02-08",
          "type": "string"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "type": "array",
          "items": {
            "id": "downloadTimeWindow",
            "title": "downloadTimeWindow",
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Device IMEI list.",
                "example": "0",
                "type": "string"
              },
              "endTime": {
                "description": "Device IMEI list.",
                "example": "0",
                "type": "string"
              }
            }
          }
        },
        "installAfterDate": {
          "description": "The date after which you install the package. If null, install as soon as possible.",
          "type": "string"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "type": "array",
          "items": {
            "$ref": "downloadTimeWindow"
          }
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- downloadTimeWindow: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "downloadTimeWindow",
      "title": "downloadTimeWindow",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Device IMEI list.",
          "example": "0",
          "type": "string"
        },
        "endTime": {
          "description": "Device IMEI list.",
          "example": "0",
          "type": "string"
        }
      }
    }
- UploadAndScheduleFileResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UploadAndScheduleFileResponse",
      "title": "UploadAndScheduleFileResponse",
      "type": "object",
      "properties": {
        "id": {
          "description": "Updgrade identifier.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        },
        "accountName": {
          "description": "Account identifer.",
          "example": "0242078689-00001",
          "type": "string"
        },
        "campaignName": {
          "description": "The campaign name.",
          "example": "FOTA_Verizon_Upgrade",
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "example": "FOTA_Verizon_Model-A_00To01_HF",
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "fileName": {
          "description": "The name of the file you are upgrading to.",
          "example": "configfile-Verizon_VZW1_hello-world.txt",
          "type": "string"
        },
        "fileVersion": {
          "description": "The version of the file you are upgrading to.",
          "example": "1.0",
          "type": "string"
        },
        "distributionType": {
          "description": "Valid values",
          "example": "HTTP",
          "type": "string"
        },
        "make": {
          "description": "Applicable make.",
          "example": "Verizon",
          "type": "string"
        },
        "model": {
          "description": "Applicable model.",
          "example": "Model-A",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2021-02-08",
          "type": "string"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2021-02-08",
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
          "example": "2021-02-08",
          "type": "string"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "type": "array",
          "items": {
            "id": "downloadTimeWindow",
            "title": "downloadTimeWindow",
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Device IMEI list.",
                "example": "0",
                "type": "string"
              },
              "endTime": {
                "description": "Device IMEI list.",
                "example": "0",
                "type": "string"
              }
            }
          }
        },
        "installAfterDate": {
          "description": "The date after which you install the package. If null, install as soon as possible.",
          "type": "string"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "type": "array",
          "items": {
            "$ref": "downloadTimeWindow"
          }
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "Software update status.",
          "example": "pending",
          "type": "string"
        }
      }
    }
- SchedulesSoftwareUpgradeRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SchedulesSoftwareUpgradeRequest",
      "title": "SchedulesSoftwareUpgradeRequest",
      "type": "object",
      "properties": {
        "campaignName": {
          "description": "The campaign name.",
          "example": "FOTA_Verizon_Upgrade",
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "example": "FOTA_Verizon_Model-A_00To01_HF",
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "distributionType": {
          "description": "Valid values",
          "example": "HTTP",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2021-02-08",
          "type": "string"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2021-02-08",
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
          "example": "2021-02-08",
          "type": "string"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "type": "array",
          "items": {
            "id": "downloadTimeWindow",
            "title": "downloadTimeWindow",
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Device IMEI list.",
                "example": "0",
                "type": "string"
              },
              "endTime": {
                "description": "Device IMEI list.",
                "example": "0",
                "type": "string"
              }
            }
          }
        },
        "installAfterDate": {
          "description": "The date after which you install the package. If null, install as soon as possible.",
          "type": "string"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "type": "array",
          "items": {
            "$ref": "downloadTimeWindow"
          }
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- CampaignStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "CampaignStatus",
      "description": "Current status of the campaign.",
      "example": "CampaignRequestPending",
      "type": "string",
      "enum": [
        "CampaignRequestPending",
        "CampaignRequestFailed",
        "CampaignRequestQueued",
        "CampaignCancelled",
        "CampaignAborted",
        "CampaignFailed",
        "CampaignScheduled",
        "CampaignEnded"
      ]
    }
- CampaignMetaInfoProtocol: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "CampaignMetaInfoProtocol",
      "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM.",
      "example": "LWM2M",
      "type": "string",
      "enum": [
        "LWM2M",
        "OMD-DM"
      ]
    }
- DevicesProtocol: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "DevicesProtocol",
      "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP.",
      "example": "LWM2M",
      "type": "string",
      "enum": [
        "LWM2M",
        "OMDADM",
        "HTTP"
      ]
    }
- FirmwareProtocol: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "FirmwareProtocol",
      "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM, all.",
      "example": "LWM2M",
      "type": "string",
      "enum": [
        "LWM2M",
        "OMD-DM",
        "all"
      ]
    }
- V3DeviceListItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3DeviceListItem",
      "title": "V3DeviceListItem",
      "description": "Device changed.",
      "example": {
        "deviceId": "15-digit IMEI",
        "status": "AddDeviceSucceed",
        "Reason": "Device added Successfully"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "15-digit IMEI",
          "type": "string"
        },
        "status": {
          "description": "Success or failure.",
          "example": "AddDeviceSucceed",
          "type": "string"
        },
        "Reason": {
          "description": "Result reason.",
          "example": "Device added Successfully",
          "type": "string"
        }
      }
    }
- V3AddOrRemoveDeviceRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3AddOrRemoveDeviceRequest",
      "title": "V3AddOrRemoveDeviceRequest",
      "description": "Devices to add or remove from existing software upgrade information.",
      "example": {
        "Type": "remove",
        "deviceList": [
          "15-digit IMEI"
        ]
      },
      "type": "object",
      "properties": {
        "Type": {
          "description": "Operation either 'append' or 'remove'",
          "example": "remove",
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "15-digit IMEI"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "Type",
        "deviceList"
      ]
    }
- V3AddOrRemoveDeviceResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3AddOrRemoveDeviceResult",
      "title": "V3AddOrRemoveDeviceResult",
      "description": "Add or remove devices to existing upgrade information.",
      "example": {
        "accountName": "0000123456-00001",
        "campaignId": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
        "deviceList": [
          {
            "deviceId": "15-digit IMEI",
            "status": "AddDeviceSucceed",
            "Reason": "Device added Successfully"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "campaignId": {
          "description": "Campaign identifier.",
          "example": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
          "type": "string"
        },
        "deviceList": {
          "description": "Array of devices changed.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "status": "AddDeviceSucceed",
              "Reason": "Device added Successfully"
            }
          ],
          "type": "array",
          "items": {
            "id": "V3DeviceListItem",
            "title": "V3DeviceListItem",
            "description": "Device changed.",
            "example": {
              "deviceId": "15-digit IMEI",
              "status": "AddDeviceSucceed",
              "Reason": "Device added Successfully"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "15-digit IMEI",
                "type": "string"
              },
              "status": {
                "description": "Success or failure.",
                "example": "AddDeviceSucceed",
                "type": "string"
              },
              "Reason": {
                "description": "Result reason.",
                "example": "Device added Successfully",
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "accountName",
        "campaignId",
        "deviceList"
      ]
    }
- V3ChangeCampaignDatesRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3ChangeCampaignDatesRequest",
      "title": "V3ChangeCampaignDatesRequest",
      "description": "Campaign dates and time windows.",
      "example": {
        "startDate": "2022-02-23",
        "endDate": "2022-02-24",
        "campaignTimeWindowList": [
          {
            "startTime": 14,
            "endTime": 18
          }
        ]
      },
      "type": "object",
      "properties": {
        "startDate": {
          "description": "Campaign start date.",
          "example": "2022-02-23",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2022-02-24",
          "type": "string",
          "format": "date"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "example": [
            {
              "startTime": 14,
              "endTime": 18
            }
          ],
          "type": "array",
          "items": {
            "id": "V3TimeWindow",
            "title": "V3TimeWindow",
            "description": "Time window.",
            "example": {
              "startTime": 18,
              "endTime": 22
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 18,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 22,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        }
      },
      "required": [
        "startDate",
        "endDate"
      ]
    }
- V3TimeWindow: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3TimeWindow",
      "title": "V3TimeWindow",
      "description": "Time window.",
      "example": {
        "startTime": 18,
        "endTime": 22
      },
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Start hour in range [0..23], current hour >= startTime.",
          "example": 18,
          "type": "integer",
          "format": "int32"
        },
        "endTime": {
          "description": "End hour in range [1..24], current hour < endTime.",
          "example": 22,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ]
    }
- FotaV3Subscription: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV3Subscription",
      "title": "FotaV3Subscription",
      "description": "Information for licenses applied to devices.",
      "example": {
        "accountName": "0000123456-000001",
        "purchaseType": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
        "licenseCount": 500,
        "licenseUsedCount": 400,
        "updateTime": "2020-09-17T21:11:32.170Z"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0000123456-000001",
          "type": "string"
        },
        "purchaseType": {
          "description": "Subscription models used by the account.",
          "example": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
          "type": "string"
        },
        "licenseCount": {
          "description": "Number of monthly licenses in an MRC subscription.",
          "example": 500,
          "type": "integer",
          "format": "int32"
        },
        "licenseUsedCount": {
          "description": "Number of licenses currently assigned to devices.",
          "example": 400,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "The date and time of when the subscription was last updated.",
          "example": "2020-09-17T21:11:32.170",
          "type": "string"
        }
      }
    }
- V3LicenseSummary: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3LicenseSummary",
      "title": "V3LicenseSummary",
      "description": "Information for FOTA licenses assigned to devices.",
      "example": {
        "accountName": "0000123456-00001",
        "totalLicenses": 5000,
        "assignedLicenses": 4319,
        "hasMoreData": true,
        "lastSeenDeviceId": "1000",
        "maxPageSize": 1000,
        "deviceList": [
          {
            "deviceId": "15-digit IMEI",
            "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
          },
          {
            "deviceId": "15-digit IMEI",
            "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "assignedLicenses": {
          "description": "Assigned FOTA license count.",
          "example": 5000,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "example": true,
          "type": "boolean"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "totalLicenses": {
          "description": "Total FOTA license count.",
          "example": 5000,
          "type": "integer",
          "format": "int32"
        },
        "lastSeenDeviceId": {
          "description": "Last seen device identifier.",
          "example": "1000",
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
            },
            {
              "deviceId": "15-digit IMEI",
              "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
            }
          ],
          "type": "array",
          "items": {
            "id": "V3LicenseDevice",
            "title": "V3LicenseDevice",
            "description": "Device IMEI.",
            "example": {
              "deviceId": "15-digit IMEI",
              "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "15-digit IMEI",
                "type": "string"
              },
              "assignmentTime": {
                "description": "License assignment time.",
                "example": "2017-11-29 20:15:42.738 +0000 UTC",
                "type": "string"
              }
            },
            "required": [
              "deviceId"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "assignedLicenses",
        "hasMoreData",
        "maxPageSize"
      ]
    }
- V3LicenseDevice: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3LicenseDevice",
      "title": "V3LicenseDevice",
      "description": "Device IMEI.",
      "example": {
        "deviceId": "15-digit IMEI",
        "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "15-digit IMEI",
          "type": "string"
        },
        "assignmentTime": {
          "description": "License assignment time.",
          "example": "2017-11-29 20:15:42.738 +0000 UTC",
          "type": "string"
        }
      },
      "required": [
        "deviceId"
      ]
    }
- V3LicenseAssignedRemovedResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3LicenseAssignedRemovedResult",
      "title": "V3LicenseAssignedRemovedResult",
      "description": "License assignment/removal response.",
      "example": {
        "accountName": "0000123456-00001",
        "licUsedCount": 2,
        "licCount": 1000,
        "deviceList": [
          {
            "deviceId": "15-digit IMEI",
            "status": "UpgradePending",
            "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
            "updatedTime": "2022-08-05T21:05:27.129Z",
            "recentAttemptTime": "2022-10-05T21:05:01.19Z",
            "nextAttemptTime": "2022-10-06T18:35:00Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "licCount": {
          "description": "Total license count.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "licUsedCount": {
          "description": "Assigned license count.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "status": "UpgradePending",
              "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
              "updatedTime": "2022-08-05T21:05:27.129Z",
              "recentAttemptTime": "2022-10-05T21:05:01.19Z",
              "nextAttemptTime": "2022-10-06T18:35:00Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "V3DeviceStatus",
            "title": "V3DeviceStatus",
            "description": "Device status.",
            "example": {
              "deviceId": "15-digit IMEI",
              "status": "UpgradePending",
              "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
              "updatedTime": "2022-08-05T21:05:27.129Z",
              "recentAttemptTime": "2022-10-05T21:05:01.19Z",
              "nextAttemptTime": "2022-10-06T18:35:00Z"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "15-digit IMEI",
                "type": "string"
              },
              "status": {
                "description": "Success or failure.",
                "example": "UpgradePending",
                "type": "string"
              },
              "resultReason": {
                "description": "Result reason.",
                "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                "type": "string"
              },
              "updatedTime": {
                "description": "Updated Time.",
                "example": "2022-08-06T18:35:00Z",
                "type": "string",
                "format": "date-time"
              },
              "recentAttemptTime": {
                "description": "The most recent attempt time.",
                "example": "2022-10-05T21:05:01.19Z",
                "type": "string",
                "format": "date-time"
              },
              "nextAttemptTime": {
                "description": "Next attempt time.",
                "example": "2022-10-06T18:35:00Z",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "deviceId",
              "status"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "licCount",
        "licUsedCount",
        "deviceList"
      ]
    }
- V3LicenseIMEI: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3LicenseIMEI",
      "title": "V3LicenseIMEI",
      "description": "List of devices.",
      "example": {
        "deviceList": [
          "15-digit IMEI",
          "15-digit IMEI"
        ]
      },
      "type": "object",
      "properties": {
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "15-digit IMEI",
            "15-digit IMEI"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "deviceList"
      ]
    }
- CampaignFirmwareUpgrade: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CampaignFirmwareUpgrade",
      "title": "CampaignFirmwareUpgrade",
      "description": "Firmware upgrade for devices.",
      "example": {
        "campaignName": "Smart FOTA - test 4",
        "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
        "firmwareFrom": "SR1.2.0.0-10512",
        "firmwareTo": "SR1.2.0.0-10657",
        "protocol": "LWM2M",
        "startDate": "2021-09-29",
        "endDate": "2021-10-01",
        "campaignTimeWindowList": [
          {
            "startTime": 18,
            "endTime": 22
          }
        ],
        "deviceList": [
          "15-digit IMEI"
        ]
      },
      "type": "object",
      "properties": {
        "firmwareName": {
          "description": "Firmware name to upgrade to.",
          "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version.",
          "example": "SR1.2.0.0-10512",
          "type": "string"
        },
        "firmwareTo": {
          "description": "New firmware version.",
          "example": "SR1.2.0.0-10657",
          "type": "string"
        },
        "protocol": {
          "description": "Valid values include: LWM2M, OMA and HTTP.",
          "example": "LWM2M",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2021-09-29",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2021-10-01",
          "type": "string",
          "format": "date"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "15-digit IMEI"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "campaignName": {
          "description": "Campaign name.",
          "example": "Smart FOTA - test 4",
          "type": "string"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "example": [
            {
              "startTime": 18,
              "endTime": 22
            }
          ],
          "type": "array",
          "items": {
            "id": "V3TimeWindow",
            "title": "V3TimeWindow",
            "description": "Time window.",
            "example": {
              "startTime": 18,
              "endTime": 22
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 18,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 22,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        }
      },
      "required": [
        "firmwareName",
        "firmwareFrom",
        "firmwareTo",
        "protocol",
        "startDate",
        "endDate",
        "deviceList"
      ]
    }
- FirmwareCampaign: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FirmwareCampaign",
      "title": "FirmwareCampaign",
      "description": "Firmware upgrade information.",
      "example": {
        "id": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
        "accountName": "0000123456-00001",
        "campaignName": "Smart FOTA - test 4",
        "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
        "protocol": "LWM2M",
        "firmwareFrom": "SR1.2.0.0-10512",
        "firmwareTo": "SR1.2.0.0-10657",
        "make": "SEQUANS Communications",
        "model": "GM01Q",
        "status": "CampaignRequestPending",
        "startDate": "2021-09-29",
        "endDate": "2021-10-01",
        "campaignTimeWindowList": [
          {
            "startTime": 18,
            "endTime": 22
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Upgrade identifier.",
          "example": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version (for firmware upgrade only).",
          "example": "SR1.2.0.0-10512",
          "type": "string"
        },
        "firmwareTo": {
          "description": "New firmware version (for firmware upgrade only).",
          "example": "SR1.2.0.0-10657",
          "type": "string"
        },
        "protocol": {
          "description": "Available values: LWM2M.",
          "example": "LWM2M",
          "type": "string"
        },
        "make": {
          "example": "SEQUANS Communications",
          "type": "string"
        },
        "model": {
          "example": "GM01Q",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2021-09-29",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2021-10-01",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Campaign status.",
          "example": "CampaignRequestPending",
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "example": "Smart FOTA - test 4",
          "type": "string"
        },
        "firmwareName": {
          "description": "Firmware name (for firmware upgrade only).",
          "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
          "type": "string"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "example": [
            {
              "startTime": 18,
              "endTime": 22
            }
          ],
          "type": "array",
          "items": {
            "id": "V3TimeWindow",
            "title": "V3TimeWindow",
            "description": "Time window.",
            "example": {
              "startTime": 18,
              "endTime": 22
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 18,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 22,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        }
      },
      "required": [
        "id",
        "accountName",
        "firmwareFrom",
        "firmwareTo",
        "protocol",
        "make",
        "model",
        "startDate",
        "endDate",
        "status"
      ]
    }
- DeviceFirmwareUpgrade: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceFirmwareUpgrade",
      "title": "DeviceFirmwareUpgrade",
      "description": "Firmware upgrades information.",
      "example": {
        "deviceId": "15-digit IMEI",
        "campaignId": "252d7ffc-7e35-11ec-931d-76f56843c393",
        "accountName": "0000123456-00001",
        "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512",
        "firmwareFrom": "SR1.2.0.0-10657",
        "firmwareTo": "SR1.2.0.0-10512",
        "startDate": "2022-01-25",
        "reportUpdatedTime": "2022-01-26 03:45:01.608 +0000 UTC",
        "status": "UpgradeSuccess",
        "reason": "Upgrade completed successfully"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device identifier.",
          "example": "15-digit IMEI",
          "type": "string"
        },
        "campaignId": {
          "description": "Campaign identifier.",
          "example": "252d7ffc-7e35-11ec-931d-76f56843c393",
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "startDate": {
          "description": "Firmware upgrade start date.",
          "example": "2022-01-25",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Firmware upgrade status.",
          "example": "UpgradeSuccess",
          "type": "string"
        },
        "reason": {
          "description": "Software upgrade result reason.",
          "example": "Upgrade completed successfully",
          "type": "string"
        },
        "firmwareName": {
          "description": "Firmware name.",
          "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512",
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version.",
          "example": "SR1.2.0.0-10657",
          "type": "string"
        },
        "firmwareTo": {
          "description": "New firmware version.",
          "example": "SR1.2.0.0-10512",
          "type": "string"
        },
        "reportUpdatedTime": {
          "description": "Report updated time.",
          "example": "2022-01-26 03:45:01.608 +0000 UTC",
          "type": "string"
        }
      },
      "required": [
        "deviceId",
        "campaignId",
        "accountName",
        "startDate",
        "status",
        "reason"
      ]
    }
- DeviceIMEI: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceIMEI",
      "title": "DeviceIMEI",
      "description": "Device IMEI list.",
      "example": {
        "deviceList": [
          "15-digit IMEI"
        ]
      },
      "type": "object",
      "properties": {
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "15-digit IMEI"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "deviceList"
      ]
    }
- FirmwareIMEI: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FirmwareIMEI",
      "title": "FirmwareIMEI",
      "description": "A list of IMEIs for devices to be synchronized between ThingSpace and the FOTA server.",
      "example": {
        "deviceList": [
          "15-digit IMEI"
        ]
      },
      "type": "object",
      "properties": {
        "deviceList": {
          "description": "Device IMEI list.",
          "example": [
            "15-digit IMEI"
          ],
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1000
        }
      },
      "required": [
        "deviceList"
      ]
    }
- DeviceFirmwareList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceFirmwareList",
      "title": "DeviceFirmwareList",
      "description": "Device Firmware Information.",
      "example": {
        "accountName": "0000123456-00001",
        "deviceFirmwarVersionList": [
          {
            "deviceId": "15-digit IMEI",
            "status": "FirmwareVersionUpdateSuccess",
            "firmwareVersion": "SR1.2.0.0-10657"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "deviceFirmwarVersionList": {
          "description": "List of device & firmware.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "status": "FirmwareVersionUpdateSuccess",
              "firmwareVersion": "SR1.2.0.0-10657"
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceFirmwareVersion",
            "title": "DeviceFirmwareVersion",
            "description": "Device and firmware information.",
            "example": {
              "deviceId": "15-digit IMEI",
              "status": "FirmwareVersionUpdateSuccess",
              "firmwareVersion": "SR1.2.0.0-10657"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "15-digit IMEI",
                "type": "string"
              },
              "firmwareVersion": {
                "description": "Device Firmware Version.",
                "example": "SR1.2.0.0-10657",
                "type": "string"
              },
              "status": {
                "example": "FirmwareVersionUpdateSuccess",
                "type": "string"
              },
              "reason": {
                "example": "Upgrade completed successfully",
                "type": "string"
              },
              "firmwareVersionUpdateTime": {
                "example": "2012-04-23T18:25:43.511Z",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "deviceId",
              "firmwareVersion"
            ]
          }
        }
      },
      "required": [
        "accountName"
      ]
    }
- DeviceFirmwareVersion: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceFirmwareVersion",
      "title": "DeviceFirmwareVersion",
      "description": "Device and firmware information.",
      "example": {
        "deviceId": "15-digit IMEI",
        "status": "FirmwareVersionUpdateSuccess",
        "firmwareVersion": "SR1.2.0.0-10657"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "15-digit IMEI",
          "type": "string"
        },
        "firmwareVersion": {
          "description": "Device Firmware Version.",
          "example": "SR1.2.0.0-10657",
          "type": "string"
        },
        "status": {
          "example": "FirmwareVersionUpdateSuccess",
          "type": "string"
        },
        "reason": {
          "example": "Upgrade completed successfully",
          "type": "string"
        },
        "firmwareVersionUpdateTime": {
          "example": "2012-04-23T18:25:43.511Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "deviceId",
        "firmwareVersion"
      ]
    }
- V3CampaignHistory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3CampaignHistory",
      "title": "V3CampaignHistory",
      "description": "Campaign history.",
      "example": {
        "hasMoreData": true,
        "lastSeenCampaignId": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
        "campaignList": [
          {
            "accountName": "0000123456-00001",
            "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
            "campaignName": "FOTA_Verizon_Upgrade",
            "make": "Verizon",
            "model": "Model-A",
            "status": "CampaignEnded",
            "startDate": "2020-08-21",
            "endDate": "2020-08-22",
            "campaignTimeWindowList": [
              {
                "startTime": 20,
                "endTime": 21
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "hasMoreData": {
          "description": "Has more report flag?",
          "example": true,
          "type": "boolean"
        },
        "campaignList": {
          "description": "Firmware upgrade list.",
          "example": [
            {
              "accountName": "0000123456-00001",
              "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
              "campaignName": "FOTA_Verizon_Upgrade",
              "firmwareName": "FOTA_Verizon_Model-A_02To03_HF",
              "firmwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
              "firmwareTo": "FOTA_Verizon_Model-A_02To03_HF",
              "make": "Verizon",
              "model": "Model-A",
              "status": "CampaignEnded",
              "startDate": "2020-08-21",
              "endDate": "2020-08-22",
              "campaignTimeWindowList": [
                {
                  "startTime": 20,
                  "endTime": 21
                }
              ]
            }
          ],
          "type": [
            "array",
            "null"
          ],
          "items": {
            "id": "V3CampaignMetaInfo",
            "title": "V3CampaignMetaInfo",
            "description": "Campaign and campaign details.",
            "example": {
              "accountName": "0000123456-00001",
              "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
              "campaignName": "FOTA_Verizon_Upgrade",
              "firmwareName": "FOTA_Verizon_Model-A_02To03_HF",
              "firmwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
              "firmwareTo": "FOTA_Verizon_Model-A_02To03_HF",
              "make": "Verizon",
              "model": "Model-A",
              "status": "CampaignEnded",
              "startDate": "2020-08-21",
              "endDate": "2020-08-22",
              "campaignTimeWindowList": [
                {
                  "startTime": 20,
                  "endTime": 21
                }
              ]
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "Account identifier.",
                "example": "0000123456-00001",
                "type": "string"
              },
              "id": {
                "description": "Campaign identifier.",
                "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                "type": "string"
              },
              "make": {
                "description": "Device make.",
                "example": "Verizon",
                "type": "string"
              },
              "model": {
                "description": "Device model.",
                "example": "Model-A",
                "type": "string"
              },
              "startDate": {
                "description": "Campaign start date.",
                "example": "2020-08-21",
                "type": "string",
                "format": "date"
              },
              "endDate": {
                "description": "Campaign end date.",
                "example": "2020-08-22",
                "type": "string",
                "format": "date"
              },
              "status": {
                "description": "Firmware upgrade status.",
                "example": "CampaignEnded",
                "type": "string"
              },
              "campaignName": {
                "description": "Campaign name.",
                "example": "FOTA_Verizon_Upgrade",
                "type": "string"
              },
              "firmwareName": {
                "description": "Firmware name.",
                "example": "FOTA_Verizon_Model-A_02To03_HF",
                "type": "string"
              },
              "firmwareFrom": {
                "description": "Old firmware version.",
                "example": "FOTA_Verizon_Model-A_00To01_HF",
                "type": "string"
              },
              "firmwareTo": {
                "description": "New software version.",
                "example": "FOTA_Verizon_Model-A_02To03_HF",
                "type": "string"
              },
              "protocol": {
                "title": "CampaignMetaInfoProtocol",
                "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM.",
                "example": "LWM2M",
                "type": "string",
                "enum": [
                  "LWM2M",
                  "OMD-DM"
                ]
              },
              "campaignTimeWindowList": {
                "description": "List of allowed campaign time windows.",
                "example": [
                  {
                    "startTime": 20,
                    "endTime": 21
                  }
                ],
                "type": "array",
                "items": {
                  "id": "V3TimeWindow",
                  "title": "V3TimeWindow",
                  "description": "Time window.",
                  "example": {
                    "startTime": 18,
                    "endTime": 22
                  },
                  "type": "object",
                  "properties": {
                    "startTime": {
                      "description": "Start hour in range [0..23], current hour >= startTime.",
                      "example": 18,
                      "type": "integer",
                      "format": "int32"
                    },
                    "endTime": {
                      "description": "End hour in range [1..24], current hour < endTime.",
                      "example": 22,
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "startTime",
                    "endTime"
                  ]
                }
              }
            },
            "required": [
              "accountName",
              "id",
              "make",
              "model",
              "startDate",
              "endDate",
              "status"
            ]
          }
        },
        "lastSeenCampaignId": {
          "description": "Campaign identifier.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        }
      },
      "required": [
        "hasMoreData",
        "campaignList"
      ]
    }
- V3CampaignMetaInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3CampaignMetaInfo",
      "title": "V3CampaignMetaInfo",
      "description": "Campaign and campaign details.",
      "example": {
        "accountName": "0000123456-00001",
        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
        "campaignName": "FOTA_Verizon_Upgrade",
        "firmwareName": "FOTA_Verizon_Model-A_02To03_HF",
        "firmwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
        "firmwareTo": "FOTA_Verizon_Model-A_02To03_HF",
        "make": "Verizon",
        "model": "Model-A",
        "status": "CampaignEnded",
        "startDate": "2020-08-21",
        "endDate": "2020-08-22",
        "campaignTimeWindowList": [
          {
            "startTime": 20,
            "endTime": 21
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "id": {
          "description": "Campaign identifier.",
          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
          "type": "string"
        },
        "make": {
          "description": "Device make.",
          "example": "Verizon",
          "type": "string"
        },
        "model": {
          "description": "Device model.",
          "example": "Model-A",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2020-08-21",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2020-08-22",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Firmware upgrade status.",
          "example": "CampaignEnded",
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "example": "FOTA_Verizon_Upgrade",
          "type": "string"
        },
        "firmwareName": {
          "description": "Firmware name.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version.",
          "example": "FOTA_Verizon_Model-A_00To01_HF",
          "type": "string"
        },
        "firmwareTo": {
          "description": "New software version.",
          "example": "FOTA_Verizon_Model-A_02To03_HF",
          "type": "string"
        },
        "protocol": {
          "title": "CampaignMetaInfoProtocol",
          "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM.",
          "example": "LWM2M",
          "type": "string",
          "enum": [
            "LWM2M",
            "OMD-DM"
          ]
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "example": [
            {
              "startTime": 20,
              "endTime": 21
            }
          ],
          "type": "array",
          "items": {
            "id": "V3TimeWindow",
            "title": "V3TimeWindow",
            "description": "Time window.",
            "example": {
              "startTime": 18,
              "endTime": 22
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 18,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 22,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "id",
        "make",
        "model",
        "startDate",
        "endDate",
        "status"
      ]
    }
- DeviceListResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceListResult",
      "title": "DeviceListResult",
      "description": "Device list information.",
      "example": {
        "accountName": "0000123456-00001",
        "deviceCount": 1,
        "deviceList": [
          {
            "deviceId": "15-digit IMEI",
            "mdn": "10-digit MDN",
            "model": "GM01Q",
            "make": "SEQUANS COMMUNICATIONS",
            "firmware": "SR1.2.0.0-10657",
            "fotaEligible": true,
            "licenseAssigned": true,
            "status": "Active",
            "protocol": "LWM2M",
            "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "statusTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC",
            "lastConnectionTime": "2012-04-23T18:25:43.511Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "deviceCount": {
          "description": "Total device count.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "mdn": "10-digit MDN",
              "model": "GM01Q",
              "make": "SEQUANS COMMUNICATIONS",
              "firmware": "SR1.2.0.0-10657",
              "fotaEligible": true,
              "licenseAssigned": true,
              "status": "Active",
              "protocol": "LWM2M",
              "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "statusTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "lastConnectionTime": "2012-04-23T18:25:43.511Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "V3Device",
            "title": "V3Device",
            "description": "Device information.",
            "example": {
              "deviceId": "15-digit IMEI",
              "mdn": "10-digit MDN",
              "model": "GM01Q",
              "make": "SEQUANS COMMUNICATIONS",
              "firmware": "SR1.2.0.0-10657",
              "fotaEligible": true,
              "licenseAssigned": true,
              "status": "Active",
              "protocol": "LWM2M",
              "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "statusTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC",
              "lastConnectionTime": "2012-04-23T18:25:43.511Z"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "15-digit IMEI",
                "type": "string"
              },
              "requestStatus": {
                "description": "Success or failure.",
                "example": "success",
                "type": "string"
              },
              "resultReason": {
                "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                "type": "string"
              },
              "mdn": {
                "description": "MDN.",
                "example": "10-digit MDN",
                "type": "string"
              },
              "model": {
                "description": "Device model.",
                "example": "GM01Q",
                "type": "string"
              },
              "make": {
                "description": "Device make.",
                "example": "SEQUANS COMMUNICATIONS",
                "type": "string"
              },
              "firmware": {
                "description": "Device firmware version.",
                "example": "SR1.2.0.0-10657",
                "type": "string"
              },
              "fotaEligible": {
                "description": "Value=true if the device software can be upgraded over the air using the Software Management Services API.",
                "example": false,
                "type": "boolean"
              },
              "status": {
                "description": "Device status.",
                "example": "Active",
                "type": "string"
              },
              "licenseAssigned": {
                "description": "License assigned device.",
                "example": true,
                "type": "boolean"
              },
              "protocol": {
                "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.",
                "example": "LWM2M",
                "type": "string"
              },
              "softwareList": {
                "description": "List of sofware.",
                "example": [
                  {
                    "name": "VZ_MDM_IOT",
                    "version": "0.14",
                    "upgradeTime": "2012-04-23T18:25:43.511Z"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "V3SoftwareInfo",
                  "title": "V3SoftwareInfo",
                  "description": "Software information.",
                  "example": {
                    "name": "VZ_MDM_IOT",
                    "version": "0.14",
                    "upgradeTime": "2012-04-23T18:25:43.511Z"
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Software name.",
                      "example": "VZ_MDM_IOT",
                      "type": "string"
                    },
                    "version": {
                      "description": "Software version.",
                      "example": "0.14",
                      "type": "string"
                    },
                    "upgradeTime": {
                      "description": "Upgrade time.",
                      "example": "2012-04-23T18:25:43.511Z",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "version",
                    "upgradeTime"
                  ]
                },
                "maxItems": 1000
              },
              "fileList": {
                "description": "List of files.",
                "example": [
                  {
                    "name": "VZ_MDM_IOT",
                    "version": "0.14",
                    "upgradeTime": "2012-04-23T18:25:43.511Z"
                  }
                ],
                "type": "array",
                "items": {
                  "$ref": "V3SoftwareInfo"
                },
                "maxItems": 1000
              },
              "createTime": {
                "description": "The date and time of when the device is created.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "statusTime": {
                "description": "The date and time of when the device firmware or software is updated.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "updateTime": {
                "description": "The date and time of when the device is updated.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "refreshTime": {
                "description": "The date and time of when the device is refreshed.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "lastConnectionTime": {
                "description": "The date and time of when the device reachability is checked.",
                "example": "2012-04-23T18:25:43.511Z",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "deviceId"
            ]
          },
          "maxItems": 1000
        }
      },
      "required": [
        "accountName",
        "deviceCount",
        "deviceList"
      ]
    }
- V3Device: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3Device",
      "title": "V3Device",
      "description": "Device information.",
      "example": {
        "deviceId": "15-digit IMEI",
        "mdn": "10-digit MDN",
        "model": "GM01Q",
        "make": "SEQUANS COMMUNICATIONS",
        "firmware": "SR1.2.0.0-10657",
        "fotaEligible": true,
        "licenseAssigned": true,
        "status": "Active",
        "protocol": "LWM2M",
        "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
        "statusTime": "2021-06-03 00:03:56.079 +0000 UTC",
        "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC",
        "lastConnectionTime": "2012-04-23T18:25:43.511Z"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "15-digit IMEI",
          "type": "string"
        },
        "requestStatus": {
          "description": "Success or failure.",
          "example": "success",
          "type": "string"
        },
        "resultReason": {
          "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
          "type": "string"
        },
        "mdn": {
          "description": "MDN.",
          "example": "10-digit MDN",
          "type": "string"
        },
        "model": {
          "description": "Device model.",
          "example": "GM01Q",
          "type": "string"
        },
        "make": {
          "description": "Device make.",
          "example": "SEQUANS COMMUNICATIONS",
          "type": "string"
        },
        "firmware": {
          "description": "Device firmware version.",
          "example": "SR1.2.0.0-10657",
          "type": "string"
        },
        "fotaEligible": {
          "description": "Value=true if the device software can be upgraded over the air using the Software Management Services API.",
          "example": false,
          "type": "boolean"
        },
        "status": {
          "description": "Device status.",
          "example": "Active",
          "type": "string"
        },
        "licenseAssigned": {
          "description": "License assigned device.",
          "example": true,
          "type": "boolean"
        },
        "protocol": {
          "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.",
          "example": "LWM2M",
          "type": "string"
        },
        "softwareList": {
          "description": "List of sofware.",
          "example": [
            {
              "name": "VZ_MDM_IOT",
              "version": "0.14",
              "upgradeTime": "2012-04-23T18:25:43.511Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "V3SoftwareInfo",
            "title": "V3SoftwareInfo",
            "description": "Software information.",
            "example": {
              "name": "VZ_MDM_IOT",
              "version": "0.14",
              "upgradeTime": "2012-04-23T18:25:43.511Z"
            },
            "type": "object",
            "properties": {
              "name": {
                "description": "Software name.",
                "example": "VZ_MDM_IOT",
                "type": "string"
              },
              "version": {
                "description": "Software version.",
                "example": "0.14",
                "type": "string"
              },
              "upgradeTime": {
                "description": "Upgrade time.",
                "example": "2012-04-23T18:25:43.511Z",
                "type": "string"
              }
            },
            "required": [
              "name",
              "version",
              "upgradeTime"
            ]
          },
          "maxItems": 1000
        },
        "fileList": {
          "description": "List of files.",
          "example": [
            {
              "name": "VZ_MDM_IOT",
              "version": "0.14",
              "upgradeTime": "2012-04-23T18:25:43.511Z"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "V3SoftwareInfo"
          },
          "maxItems": 1000
        },
        "createTime": {
          "description": "The date and time of when the device is created.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "statusTime": {
          "description": "The date and time of when the device firmware or software is updated.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "updateTime": {
          "description": "The date and time of when the device is updated.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "refreshTime": {
          "description": "The date and time of when the device is refreshed.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "lastConnectionTime": {
          "description": "The date and time of when the device reachability is checked.",
          "example": "2012-04-23T18:25:43.511Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "deviceId"
      ]
    }
- DeviceFirmwareVersionUpdateResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceFirmwareVersionUpdateResult",
      "title": "DeviceFirmwareVersionUpdateResult",
      "description": "Device firmware version update response.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "type": "string"
        },
        "requestId": {
          "description": "Request identifier.",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "requestId"
      ]
    }
- Campaign: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Campaign",
      "title": "Campaign",
      "description": "Firmware upgrade information.",
      "example": {
        "id": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
        "accountName": "0642233522-00001",
        "campaignName": "Smart FOTA - test 4",
        "protocol": "LWM2M",
        "make": "SEQUANS Communications",
        "model": "GM01Q",
        "status": "CampaignPreScheduled",
        "startDate": "2021-09-29",
        "endDate": "2021-10-01",
        "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
        "firmwareFrom": "SR1.2.0.0-10512",
        "firmwareTo": "SR1.2.0.0-10657",
        "campaignTimeWindowList": [
          {
            "startTime": 18,
            "endTime": 22
          }
        ]
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Upgrade identifier.",
          "example": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "example": "0642233522-00001",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol of the firmware distribution. Default: LWM2M.",
          "example": "LWM2M",
          "type": "string"
        },
        "make": {
          "description": "Applicable make.",
          "example": "SEQUANS Communications",
          "type": "string"
        },
        "model": {
          "description": "Applicable model.",
          "example": "GM01Q",
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "example": "2021-09-29",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "example": "2021-10-01",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Firmware upgrade status.",
          "example": "CampaignPreScheduled",
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "example": "Smart FOTA - test 4",
          "type": "string"
        },
        "firmwareName": {
          "description": "Name of firmware.",
          "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version.",
          "example": "SR1.2.0.0-10512",
          "type": "string"
        },
        "firmwareTo": {
          "description": "New firmware version.",
          "example": "SR1.2.0.0-10657",
          "type": "string"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "example": [
            {
              "startTime": 18,
              "endTime": 22
            }
          ],
          "type": "array",
          "items": {
            "id": "V3TimeWindow",
            "title": "V3TimeWindow",
            "description": "Time window.",
            "example": {
              "startTime": 18,
              "endTime": 22
            },
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start hour in range [0..23], current hour >= startTime.",
                "example": 18,
                "type": "integer",
                "format": "int32"
              },
              "endTime": {
                "description": "End hour in range [1..24], current hour < endTime.",
                "example": 22,
                "type": "integer",
                "format": "int32"
              }
            },
            "required": [
              "startTime",
              "endTime"
            ]
          }
        }
      },
      "required": [
        "id",
        "accountName",
        "protocol",
        "make",
        "model",
        "startDate",
        "endDate",
        "status"
      ]
    }
- FotaV3CallbackRegistrationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV3CallbackRegistrationRequest",
      "title": "FotaV3CallbackRegistrationRequest",
      "description": "Callback URL where the listening service is running.",
      "example": {
        "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "url": {
          "description": "Callback URL for an subscribed service.",
          "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
          "type": "string"
        }
      }
    }
- FotaV3CallbackRegistrationResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV3CallbackRegistrationResult",
      "title": "FotaV3CallbackRegistrationResult",
      "description": "Callback registration information.",
      "example": {
        "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "url": {
          "description": "Callback URL.",
          "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
          "type": "string"
        }
      }
    }
- FotaV3CallbackSummary: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV3CallbackSummary",
      "title": "FotaV3CallbackSummary",
      "description": "Callback registration information.",
      "example": {
        "url": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"
      },
      "type": "object",
      "properties": {
        "url": {
          "description": "Callback URL for an subscribed service.",
          "example": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx",
          "type": "string"
        }
      }
    }
- FirmwarePackage: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FirmwarePackage",
      "title": "FirmwarePackage",
      "description": "Available firmware.",
      "example": {
        "firmwareName": "VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B",
        "firmwareFrom": "BG96MAR04A04M1G",
        "firmwareTo": "BG96MAR04A04M1G_BETA0130B",
        "launchDate": "2012-04-23T18:25:43.511Z",
        "releaseNote": "",
        "model": "LCO-277C4N",
        "make": "Verizon Smart Communities",
        "protocol": "LWM2M"
      },
      "type": "object",
      "properties": {
        "firmwareName": {
          "description": "Firmware name.",
          "example": "VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B",
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Firmware from version.",
          "example": "BG96MAR04A04M1G",
          "type": "string"
        },
        "firmwareTo": {
          "description": "Firmware to version.",
          "example": "BG96MAR04A04M1G_BETA0130B",
          "type": "string"
        },
        "launchDate": {
          "description": "Firmware launch date.",
          "example": "2012-04-23T18:25:43.511Z",
          "type": "string",
          "format": "date-time"
        },
        "releaseNote": {
          "description": "Firmware release note.",
          "type": "string"
        },
        "model": {
          "description": "Firmware applicable device model.",
          "example": "LCO-277C4N",
          "type": "string"
        },
        "make": {
          "description": "Firmware applicable device make.",
          "example": "Verizon Smart Communities",
          "type": "string"
        },
        "protocol": {
          "title": "CampaignMetaInfoProtocol",
          "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM.",
          "example": "LWM2M",
          "type": "string",
          "enum": [
            "LWM2M",
            "OMD-DM"
          ]
        }
      },
      "required": [
        "firmwareName",
        "firmwareFrom",
        "firmwareTo",
        "launchDate",
        "releaseNote",
        "model",
        "make",
        "protocol"
      ]
    }
- V3CampaignDevice: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3CampaignDevice",
      "title": "V3CampaignDevice",
      "description": "Campaign history.",
      "example": {
        "totalDevice": 2689,
        "hasMoreData": true,
        "lastSeenDeviceId": "15-digit IMEI",
        "maxPageSize": 1000,
        "deviceList": [
          {
            "deviceId": "15-digit IMEI",
            "status": "UpgradePending",
            "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
            "updatedTime": "2022-08-05T21:05:27.129Z",
            "recentAttemptTime": "2022-10-05T21:05:01.19Z",
            "nextAttemptTime": "2022-10-06T18:35:00Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "hasMoreData": {
          "description": "Has more report flag.",
          "example": true,
          "type": "boolean"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "example": [
            {
              "deviceId": "15-digit IMEI",
              "status": "UpgradePending",
              "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
              "updatedTime": "2022-08-05T21:05:27.129Z",
              "recentAttemptTime": "2022-10-05T21:05:01.19Z",
              "nextAttemptTime": "2022-10-06T18:35:00Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "V3DeviceStatus",
            "title": "V3DeviceStatus",
            "description": "Device status.",
            "example": {
              "deviceId": "15-digit IMEI",
              "status": "UpgradePending",
              "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
              "updatedTime": "2022-08-05T21:05:27.129Z",
              "recentAttemptTime": "2022-10-05T21:05:01.19Z",
              "nextAttemptTime": "2022-10-06T18:35:00Z"
            },
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device IMEI.",
                "example": "15-digit IMEI",
                "type": "string"
              },
              "status": {
                "description": "Success or failure.",
                "example": "UpgradePending",
                "type": "string"
              },
              "resultReason": {
                "description": "Result reason.",
                "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                "type": "string"
              },
              "updatedTime": {
                "description": "Updated Time.",
                "example": "2022-08-06T18:35:00Z",
                "type": "string",
                "format": "date-time"
              },
              "recentAttemptTime": {
                "description": "The most recent attempt time.",
                "example": "2022-10-05T21:05:01.19Z",
                "type": "string",
                "format": "date-time"
              },
              "nextAttemptTime": {
                "description": "Next attempt time.",
                "example": "2022-10-06T18:35:00Z",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "deviceId",
              "status"
            ]
          }
        },
        "totalDevice": {
          "description": "Total device count.",
          "example": 2689,
          "type": "integer",
          "format": "int32"
        },
        "lastSeenDeviceId": {
          "description": "Device identifier.",
          "example": "15-digit IMEI",
          "type": "string"
        }
      },
      "required": [
        "hasMoreData",
        "maxPageSize",
        "deviceList"
      ]
    }
- V3AccountDeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3AccountDeviceList",
      "title": "V3AccountDeviceList",
      "description": "Array of devices.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "hasMoreData": {
          "description": "Has more device flag?",
          "example": true,
          "type": "boolean"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "example": 1000,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Account device list.",
          "type": "array",
          "items": {
            "id": "V3AccountDevice",
            "title": "V3AccountDevice",
            "description": "Device information.",
            "type": "object",
            "properties": {
              "deviceId": {
                "description": "Device identifier.",
                "example": "15-digit device ID",
                "type": "string"
              },
              "mdn": {
                "description": "MDN.",
                "example": "10-digit MDN",
                "type": "string"
              },
              "model": {
                "description": "Device model.",
                "example": "BG96",
                "type": "string"
              },
              "make": {
                "description": "Device make.",
                "example": "QUECTEL",
                "type": "string"
              },
              "firmware": {
                "description": "Device firmware version.",
                "example": "BG96MAR04A04M1G",
                "type": "string"
              },
              "fotaEligible": {
                "description": "Value=true if the device software can be upgraded over the air using the Software Management Services API.",
                "example": false,
                "type": "boolean"
              },
              "status": {
                "description": "Device status.",
                "example": "Active",
                "type": "string"
              },
              "licenseAssigned": {
                "description": "License assigned device.",
                "example": true,
                "type": "boolean"
              },
              "protocol": {
                "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.",
                "example": "LWM2M",
                "type": "string"
              },
              "softwareList": {
                "description": "List of sofware.",
                "example": [
                  {
                    "name": "VZ_MDM_IOT",
                    "version": "0.14",
                    "upgradeTime": "2012-04-23T18:25:43.511Z"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "V3SoftwareInfo",
                  "title": "V3SoftwareInfo",
                  "description": "Software information.",
                  "example": {
                    "name": "VZ_MDM_IOT",
                    "version": "0.14",
                    "upgradeTime": "2012-04-23T18:25:43.511Z"
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Software name.",
                      "example": "VZ_MDM_IOT",
                      "type": "string"
                    },
                    "version": {
                      "description": "Software version.",
                      "example": "0.14",
                      "type": "string"
                    },
                    "upgradeTime": {
                      "description": "Upgrade time.",
                      "example": "2012-04-23T18:25:43.511Z",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "version",
                    "upgradeTime"
                  ]
                }
              },
              "fileList": {
                "description": "List of files.",
                "example": [
                  {
                    "name": "VZ_MDM_IOT",
                    "version": "0.14",
                    "upgradeTime": "2012-04-23T18:25:43.511Z"
                  }
                ],
                "type": "array",
                "items": {
                  "$ref": "V3SoftwareInfo"
                }
              },
              "createTime": {
                "description": "The date and time of when the device is created.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "upgradeTime": {
                "description": "The date and time of when the device firmware or software is updated.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "updateTime": {
                "description": "The date and time of when the device is updated.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              },
              "refreshTime": {
                "description": "The date and time of when the device is refreshed.",
                "example": "2021-06-03 00:03:56.079 +0000 UTC",
                "type": "string"
              }
            },
            "required": [
              "deviceId",
              "mdn",
              "model",
              "make",
              "firmware",
              "fotaEligible",
              "status",
              "licenseAssigned",
              "protocol",
              "softwareList"
            ]
          }
        },
        "lastSeenDeviceId": {
          "description": "Last seen device identifier.",
          "example": "15-digit IMEI",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "hasMoreData",
        "maxPageSize",
        "deviceList"
      ]
    }
- V3AccountDevice: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3AccountDevice",
      "title": "V3AccountDevice",
      "description": "Device information.",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device identifier.",
          "example": "15-digit device ID",
          "type": "string"
        },
        "mdn": {
          "description": "MDN.",
          "example": "10-digit MDN",
          "type": "string"
        },
        "model": {
          "description": "Device model.",
          "example": "BG96",
          "type": "string"
        },
        "make": {
          "description": "Device make.",
          "example": "QUECTEL",
          "type": "string"
        },
        "firmware": {
          "description": "Device firmware version.",
          "example": "BG96MAR04A04M1G",
          "type": "string"
        },
        "fotaEligible": {
          "description": "Value=true if the device software can be upgraded over the air using the Software Management Services API.",
          "example": false,
          "type": "boolean"
        },
        "status": {
          "description": "Device status.",
          "example": "Active",
          "type": "string"
        },
        "licenseAssigned": {
          "description": "License assigned device.",
          "example": true,
          "type": "boolean"
        },
        "protocol": {
          "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.",
          "example": "LWM2M",
          "type": "string"
        },
        "softwareList": {
          "description": "List of sofware.",
          "example": [
            {
              "name": "VZ_MDM_IOT",
              "version": "0.14",
              "upgradeTime": "2012-04-23T18:25:43.511Z"
            }
          ],
          "type": "array",
          "items": {
            "id": "V3SoftwareInfo",
            "title": "V3SoftwareInfo",
            "description": "Software information.",
            "example": {
              "name": "VZ_MDM_IOT",
              "version": "0.14",
              "upgradeTime": "2012-04-23T18:25:43.511Z"
            },
            "type": "object",
            "properties": {
              "name": {
                "description": "Software name.",
                "example": "VZ_MDM_IOT",
                "type": "string"
              },
              "version": {
                "description": "Software version.",
                "example": "0.14",
                "type": "string"
              },
              "upgradeTime": {
                "description": "Upgrade time.",
                "example": "2012-04-23T18:25:43.511Z",
                "type": "string"
              }
            },
            "required": [
              "name",
              "version",
              "upgradeTime"
            ]
          }
        },
        "fileList": {
          "description": "List of files.",
          "example": [
            {
              "name": "VZ_MDM_IOT",
              "version": "0.14",
              "upgradeTime": "2012-04-23T18:25:43.511Z"
            }
          ],
          "type": "array",
          "items": {
            "$ref": "V3SoftwareInfo"
          }
        },
        "createTime": {
          "description": "The date and time of when the device is created.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "upgradeTime": {
          "description": "The date and time of when the device firmware or software is updated.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "updateTime": {
          "description": "The date and time of when the device is updated.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        },
        "refreshTime": {
          "description": "The date and time of when the device is refreshed.",
          "example": "2021-06-03 00:03:56.079 +0000 UTC",
          "type": "string"
        }
      },
      "required": [
        "deviceId",
        "mdn",
        "model",
        "make",
        "firmware",
        "fotaEligible",
        "status",
        "licenseAssigned",
        "protocol",
        "softwareList"
      ]
    }
- V3SoftwareInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3SoftwareInfo",
      "title": "V3SoftwareInfo",
      "description": "Software information.",
      "example": {
        "name": "VZ_MDM_IOT",
        "version": "0.14",
        "upgradeTime": "2012-04-23T18:25:43.511Z"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "Software name.",
          "example": "VZ_MDM_IOT",
          "type": "string"
        },
        "version": {
          "description": "Software version.",
          "example": "0.14",
          "type": "string"
        },
        "upgradeTime": {
          "description": "Upgrade time.",
          "example": "2012-04-23T18:25:43.511Z",
          "type": "string"
        }
      },
      "required": [
        "name",
        "version",
        "upgradeTime"
      ]
    }
- V3DeviceStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "V3DeviceStatus",
      "title": "V3DeviceStatus",
      "description": "Device status.",
      "example": {
        "deviceId": "15-digit IMEI",
        "status": "UpgradePending",
        "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
        "updatedTime": "2022-08-05T21:05:27.129Z",
        "recentAttemptTime": "2022-10-05T21:05:01.19Z",
        "nextAttemptTime": "2022-10-06T18:35:00Z"
      },
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "example": "15-digit IMEI",
          "type": "string"
        },
        "status": {
          "description": "Success or failure.",
          "example": "UpgradePending",
          "type": "string"
        },
        "resultReason": {
          "description": "Result reason.",
          "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
          "type": "string"
        },
        "updatedTime": {
          "description": "Updated Time.",
          "example": "2022-08-06T18:35:00Z",
          "type": "string",
          "format": "date-time"
        },
        "recentAttemptTime": {
          "description": "The most recent attempt time.",
          "example": "2022-10-05T21:05:01.19Z",
          "type": "string",
          "format": "date-time"
        },
        "nextAttemptTime": {
          "description": "Next attempt time.",
          "example": "2022-10-06T18:35:00Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "deviceId",
        "status"
      ]
    }
- FotaV3SuccessResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV3SuccessResult",
      "title": "FotaV3SuccessResult",
      "description": "Cancelation status.",
      "example": {
        "success": true
      },
      "type": "object",
      "properties": {
        "success": {
          "description": "True or false.",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "success"
      ]
    }
- FotaV3Result: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FotaV3Result",
      "title": "FotaV3Result",
      "description": "Error response.",
      "example": {
        "errorCode": "error code string",
        "errorMessage": "error message string"
      },
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Error code string.",
          "example": "error code string",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message string.",
          "example": "error message string",
          "type": "string"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    }
- AssignLicenseRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AssignLicenseRequest",
      "title": "AssignLicenseRequest",
      "description": "Request to assign license.",
      "example": {
        "accountName": "0000123456-00001",
        "skuNumber": "SIMSec-IoT-Lt",
        "devices": [
          {
            "deviceIds": [
              {
                "id": "864508030109877",
                "kind": "IMEI"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.This parameter is required only if the UWS account used for the current API session has access to multiple accounts. An account name is usually numeric, and must include any leading zeros.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "devices": {
          "description": "A list of 4G devices.",
          "example": [
            {
              "deviceIds": [
                {
                  "id": "864508030109877",
                  "kind": "IMEI"
                }
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "LicenseDeviceList",
            "title": "LicenseDeviceList",
            "description": "List of all devices.",
            "example": {
              "deviceIds": [
                {
                  "id": "864508030109877",
                  "kind": "IMEI"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "For 4G devices, IMEI (decimal, up to 15 digits).",
                "example": [
                  {
                    "id": "864508030109877",
                    "kind": "IMEI"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "LicenseDeviceId",
                  "title": "LicenseDeviceId",
                  "description": "Id of the devices.",
                  "example": {
                    "id": "864508030109877",
                    "kind": "IMEI"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "For 4G devices, IMEI (decimal, up to 15 digits) for unassign and ICCID (decimal, up to 20 digits) for assign.",
                      "example": "864508030109877",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[0-9]{3,32}$"
                    },
                    "kind": {
                      "description": "For 4G devices, ICCID (decimal, up to 20 digits) for unassign and IMEI (decimal, up to 15 digits) for assign.",
                      "example": "IMEI",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 6,
                      "pattern": "^[A-Z]{3,6}$"
                    }
                  }
                },
                "maxItems": 100
              },
              "ipAddress": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU). Valid skuNumbers for license types: “SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.",
          "example": "SIMSec-IoT-Lt",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        }
      }
    }
- SecuritySubscription: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SecuritySubscription",
      "title": "SecuritySubscription",
      "description": "Subscription of the device.",
      "example": {
        "skuNumber": "TS-BUNDLE-KTO-SIMSEC-MRC",
        "licenseType": "Flexible Bundle",
        "licensePurchased": 9,
        "licenseAssigned": 7,
        "licenseAvailable": 1
      },
      "type": "object",
      "properties": {
        "extendedAttributes": {
          "description": "Attributes of the subscription.",
          "type": "array",
          "items": {
            "id": "ExtendedAttributes",
            "title": "ExtendedAttributes",
            "description": "Additional properties associated with data.",
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "maxItems": 5
        },
        "licenseAssigned": {
          "description": "The total number of licenses for this license type that are assigned to device SIMs.",
          "example": 7,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 10.0,
          "format": "int32"
        },
        "licenseAvailable": {
          "description": "The total number of licenses for this license type that are available to assign to device SIMs.",
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 10.0,
          "format": "int32"
        },
        "licensePurchased": {
          "description": "The total number of licenses purchased for the license type.",
          "example": 9,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 10.0,
          "format": "int32"
        },
        "licenseType": {
          "description": "The license type associated with the skuNumber.",
          "example": "Flexible Bundle",
          "type": "string"
        },
        "skuNumber": {
          "description": "The skuNumber that identifies the license type.",
          "example": "TS-BUNDLE-KTO-SIMSEC-MRC",
          "type": "string"
        }
      }
    }
- ExtendedAttributes: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ExtendedAttributes",
      "title": "ExtendedAttributes",
      "description": "Additional properties associated with data.",
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    }
- SecuritySubscriptionRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SecuritySubscriptionRequest",
      "title": "SecuritySubscriptionRequest",
      "description": "Request for a subscription.",
      "example": {
        "accountName": "000012345600001",
        "skuNumber": "SIMSec-IoT-Lt"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "example": "000012345600001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU). Valid skuNumbers for SIM-Secure for IoT are:SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.*“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.",
          "example": "SIMSec-IoT-Lt",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        }
      }
    }
- SecuritySubscriptionResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SecuritySubscriptionResult",
      "title": "SecuritySubscriptionResult",
      "description": "Response for a subscription request.",
      "example": {
        "accountName": "000012345600001",
        "subscriptionList": [
          {
            "skuNumber": "TS-BUNDLE-KTO-SIMSEC-MRC",
            "licenseType": "Flexible Bundle",
            "licensePurchased": 9,
            "licenseAssigned": 7,
            "licenseAvailable": 1
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "example": "000012345600001",
          "type": "string"
        },
        "subscriptionList": {
          "description": "The list of SKU numbers and counts for each license type specified in the request.",
          "example": [
            {
              "skuNumber": "TS-BUNDLE-KTO-SIMSEC-MRC",
              "licenseType": "Flexible Bundle",
              "licensePurchased": 9,
              "licenseAssigned": 7,
              "licenseAvailable": 1
            }
          ],
          "type": "array",
          "items": {
            "id": "SecuritySubscription",
            "title": "SecuritySubscription",
            "description": "Subscription of the device.",
            "example": {
              "skuNumber": "TS-BUNDLE-KTO-SIMSEC-MRC",
              "licenseType": "Flexible Bundle",
              "licensePurchased": 9,
              "licenseAssigned": 7,
              "licenseAvailable": 1
            },
            "type": "object",
            "properties": {
              "extendedAttributes": {
                "description": "Attributes of the subscription.",
                "type": "array",
                "items": {
                  "id": "ExtendedAttributes",
                  "title": "ExtendedAttributes",
                  "description": "Additional properties associated with data.",
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "maxItems": 5
              },
              "licenseAssigned": {
                "description": "The total number of licenses for this license type that are assigned to device SIMs.",
                "example": 7,
                "type": "integer",
                "minimum": 0.0,
                "maximum": 10.0,
                "format": "int32"
              },
              "licenseAvailable": {
                "description": "The total number of licenses for this license type that are available to assign to device SIMs.",
                "example": 1,
                "type": "integer",
                "minimum": 0.0,
                "maximum": 10.0,
                "format": "int32"
              },
              "licensePurchased": {
                "description": "The total number of licenses purchased for the license type.",
                "example": 9,
                "type": "integer",
                "minimum": 0.0,
                "maximum": 10.0,
                "format": "int32"
              },
              "licenseType": {
                "description": "The license type associated with the skuNumber.",
                "example": "Flexible Bundle",
                "type": "string"
              },
              "skuNumber": {
                "description": "The skuNumber that identifies the license type.",
                "example": "TS-BUNDLE-KTO-SIMSEC-MRC",
                "type": "string"
              }
            }
          },
          "maxItems": 5
        }
      }
    }
- LicenseDeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LicenseDeviceList",
      "title": "LicenseDeviceList",
      "description": "List of all devices.",
      "example": {
        "deviceIds": [
          {
            "id": "864508030109877",
            "kind": "IMEI"
          }
        ]
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "For 4G devices, IMEI (decimal, up to 15 digits).",
          "example": [
            {
              "id": "864508030109877",
              "kind": "IMEI"
            }
          ],
          "type": "array",
          "items": {
            "id": "LicenseDeviceId",
            "title": "LicenseDeviceId",
            "description": "Id of the devices.",
            "example": {
              "id": "864508030109877",
              "kind": "IMEI"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "For 4G devices, IMEI (decimal, up to 15 digits) for unassign and ICCID (decimal, up to 20 digits) for assign.",
                "example": "864508030109877",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9]{3,32}$"
              },
              "kind": {
                "description": "For 4G devices, ICCID (decimal, up to 20 digits) for unassign and IMEI (decimal, up to 15 digits) for assign.",
                "example": "IMEI",
                "type": "string",
                "minLength": 3,
                "maxLength": 6,
                "pattern": "^[A-Z]{3,6}$"
              }
            }
          },
          "maxItems": 100
        },
        "ipAddress": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
        }
      }
    }
- LicenseDeviceId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "LicenseDeviceId",
      "title": "LicenseDeviceId",
      "description": "Id of the devices.",
      "example": {
        "id": "864508030109877",
        "kind": "IMEI"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "For 4G devices, IMEI (decimal, up to 15 digits) for unassign and ICCID (decimal, up to 20 digits) for assign.",
          "example": "864508030109877",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9]{3,32}$"
        },
        "kind": {
          "description": "For 4G devices, ICCID (decimal, up to 20 digits) for unassign and IMEI (decimal, up to 15 digits) for assign.",
          "example": "IMEI",
          "type": "string",
          "minLength": 3,
          "maxLength": 6,
          "pattern": "^[A-Z]{3,6}$"
        }
      }
    }
- SecuritySuccessResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SecuritySuccessResult",
      "title": "SecuritySuccessResult",
      "description": "Success response.",
      "example": {
        "requestId": "c3f3d17c-79ff-4b35-82df-94446785b6e0"
      },
      "type": "object",
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback message.The ThingSpace Platform sends a separate callback message for each device that matches the request criteria, indicating whether the operation succeeded for that device and containing any requested information. All callback messages will have the same requestId.",
          "example": "c3f3d17c-79ff-4b35-82df-94446785b6e0",
          "type": "string"
        }
      }
    }
- SecurityResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SecurityResult",
      "title": "SecurityResult",
      "description": "Error response.",
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "pattern": "^[0-9]{3,3}$"
        },
        "errorMessage": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "errorUrl": {
          "type": "string",
          "minLength": 3,
          "maxLength": 64,
          "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
        }
      }
    }
- QueryMECPerformanceMetricsRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "QueryMECPerformanceMetricsRequest",
      "title": "QueryMECPerformanceMetricsRequest",
      "description": "MEC performance metrics request.",
      "example": {
        "IMEI": "440246108109673",
        "MSISDN": "10691876598"
      },
      "type": "object",
      "properties": {
        "IMEI": {
          "description": "The 15-digit International Mobile Equipment Identifier.",
          "example": "440246108109673",
          "type": "string"
        },
        "MSISDN": {
          "description": "The 12-digit Mobile Station International Subscriber Directory Number.",
          "example": "10691876598",
          "type": "string"
        }
      },
      "required": [
        "IMEI",
        "MSISDN"
      ]
    }
- MECPerformanceMetrics: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECPerformanceMetrics",
      "title": "MECPerformanceMetrics",
      "description": "Response to query the most recent data for Key Performance Indicators (KPIs) like network availability, MEC hostnames and more.",
      "example": {
        "QueryStatus": "Success",
        "Start": "1/28/2021 12:00:00",
        "End": "1/28/2021 12:15:00",
        "QueryResult": [
          {
            "name": "NetworkAvailability",
            "data": [
              "100",
              "percent",
              "high"
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "QueryStatus": {
          "description": "Success or Failed.",
          "example": "Success",
          "type": "string"
        },
        "Start": {
          "description": "Timestamp of the query's start, format:mm/dd/yyyy,hr:min:sec.",
          "example": "1/28/2021 12:00:00",
          "type": "string"
        },
        "End": {
          "description": "Timestamp of the query's end , format:mm/dd/yyyy, hr:min:sec.",
          "example": "1/28/2021 12:15:00",
          "type": "string"
        },
        "QueryResult": {
          "description": "MEC performance query result.",
          "example": [
            {
              "name": "NetworkAvailability",
              "data": [
                "100",
                "percent",
                "high"
              ]
            }
          ],
          "type": "array",
          "items": {
            "id": "MECPerformanceQueryResult",
            "title": "MECPerformanceQueryResult",
            "description": "Result of the query for obtaining MEC performance metrics.",
            "example": {
              "name": "NetworkAvailability",
              "data": [
                "100",
                "percent",
                "high"
              ]
            },
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the parameter.",
                "example": "NetworkAvailability",
                "type": "string"
              },
              "data": {
                "description": "Parameter values.",
                "example": [
                  "100",
                  "percent",
                  "high"
                ],
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          }
        }
      }
    }
- MECPerformanceQueryResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECPerformanceQueryResult",
      "title": "MECPerformanceQueryResult",
      "description": "Result of the query for obtaining MEC performance metrics.",
      "example": {
        "name": "NetworkAvailability",
        "data": [
          "100",
          "percent",
          "high"
        ]
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the parameter.",
          "example": "NetworkAvailability",
          "type": "string"
        },
        "data": {
          "description": "Parameter values.",
          "example": [
            "100",
            "percent",
            "high"
          ],
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      }
    }
- EdgePerformanceResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "EdgePerformanceResult",
      "title": "EdgePerformanceResult",
      "description": "Types of errors in response.",
      "example": {
        "status": "HTTP status code",
        "message": "Error details"
      },
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "example": "HTTP status code",
          "type": "string"
        },
        "message": {
          "description": "Error details.",
          "example": "Error details",
          "type": "string"
        }
      }
    }
- DiagnosticsSubscription: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DiagnosticsSubscription",
      "title": "DiagnosticsSubscription",
      "description": "Status of the diagnostic services subscription.",
      "example": {
        "accountName": "TestQAAccount",
        "skuName": "TS-BUNDLE-KTO-DIAGNOSTIC-MRC",
        "totalAllowed": 100,
        "totalUsed": 50,
        "createdOn": "2019-08-29T00:47:59.240Z",
        "lastUpdated": "2019-08-29T00:47:59.240Z"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\". An account name is usually numeric, and must include any leading zeros.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "createdOn": {
          "description": "The date and time of when the subscription was created.",
          "example": "2019-08-29T00:47:59.240Z",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdated": {
          "description": "The date and time of when the subscription was last updated.",
          "example": "2019-08-29T00:47:59.240Z",
          "type": "string",
          "format": "date-time"
        },
        "totalAllowed": {
          "description": "Number of licenses currently assigned to devices.",
          "example": 100,
          "type": "integer",
          "format": "int32"
        },
        "totalUsed": {
          "description": "Number of licenses currently used by the devices.",
          "example": 50,
          "type": "integer",
          "format": "int32"
        },
        "skuName": {
          "description": "Name of the SKU for the account.",
          "example": "TS-BUNDLE-KTO-DIAGNOSTIC-MRC",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "createdOn",
        "lastUpdated",
        "totalAllowed",
        "totalUsed",
        "skuName"
      ]
    }
- ObservationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ObservationRequest",
      "title": "ObservationRequest",
      "description": "Used to define callbacks including the device identity, the attribute names, corresponding attribute values and the date/timestamp of when the observation was made.",
      "example": {
        "accountName": "0000123456-00001",
        "attributes": [
          {
            "name": "RADIO_SIGNAL_STRENGTH"
          },
          {
            "name": "LINK_QUALITY"
          },
          {
            "name": "NETWORK_BEARER"
          },
          {
            "name": "CELL_ID"
          }
        ],
        "devices": [
          {
            "id": "864508030026238",
            "kind": "IMEI"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "example": "0000123456-00001",
          "type": "string"
        },
        "devices": {
          "description": "List of devices.",
          "example": [
            {
              "id": "864508030026238",
              "kind": "IMEI"
            }
          ],
          "type": "array",
          "items": {
            "id": "Device",
            "title": "Device",
            "description": "Identifies a particular IoT device.",
            "example": {
              "id": "864508030026238",
              "kind": "IMEI"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "Device identifier.",
                "example": "864508030026238",
                "type": "string"
              },
              "kind": {
                "description": "Device kind identifier.",
                "example": "IMEI",
                "type": "string"
              }
            },
            "required": [
              "id",
              "kind"
            ]
          }
        },
        "attributes": {
          "description": "Attributes are streaming RF parameters that you want to observe.",
          "example": [
            {
              "name": "RADIO_SIGNAL_STRENGTH"
            },
            {
              "name": "LINK_QUALITY"
            },
            {
              "name": "NETWORK_BEARER"
            },
            {
              "name": "CELL_ID"
            }
          ],
          "type": "array",
          "items": {
            "id": "ObservationRequestAttribute",
            "title": "ObservationRequestAttribute",
            "description": "Streaming RF parameter that you want to observe.",
            "example": {
              "name": "RADIO_SIGNAL_STRENGTH"
            },
            "type": "object",
            "properties": {
              "name": {
                "title": "AttributeIdentifier",
                "description": "Attribute identifier.",
                "example": "RADIO_SIGNAL_STRENGTH",
                "type": "string",
                "enum": [
                  "NETWORK_BEARER",
                  "RADIO_SIGNAL_STRENGTH",
                  "LINK_QUALITY",
                  "CELL_ID",
                  "MANUFACTURER"
                ]
              }
            }
          }
        },
        "frequency": {
          "id": "NumericalData",
          "title": "NumericalData",
          "description": "Describes value and unit of time.",
          "example": {
            "value": 5,
            "unit": "SECOND"
          },
          "type": "object",
          "properties": {
            "value": {
              "description": "Numerical value.",
              "example": 5,
              "type": "integer",
              "format": "int32"
            },
            "unit": {
              "title": "NumericalDataUnit",
              "description": "Unit of time.",
              "example": "MINUTE",
              "type": "string",
              "enum": [
                "SECOND",
                "MINUTE",
                "HOUR",
                "DAY"
              ]
            }
          }
        },
        "duration": {
          "$ref": "NumericalData"
        }
      },
      "required": [
        "accountName",
        "devices",
        "attributes"
      ]
    }
- ObservationRequestAttribute: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ObservationRequestAttribute",
      "title": "ObservationRequestAttribute",
      "description": "Streaming RF parameter that you want to observe.",
      "example": {
        "name": "RADIO_SIGNAL_STRENGTH"
      },
      "type": "object",
      "properties": {
        "name": {
          "title": "AttributeIdentifier",
          "description": "Attribute identifier.",
          "example": "RADIO_SIGNAL_STRENGTH",
          "type": "string",
          "enum": [
            "NETWORK_BEARER",
            "RADIO_SIGNAL_STRENGTH",
            "LINK_QUALITY",
            "CELL_ID",
            "MANUFACTURER"
          ]
        }
      }
    }
- DiagnosticsObservationResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DiagnosticsObservationResult",
      "title": "DiagnosticsObservationResult",
      "description": "A success response containing the current status of the request.",
      "example": {
        "createdOn": "2019-09-10T19:05:33.33Z",
        "transactionID": "9c7bb124-11f5-4ff3-8a88-0eec1ba99205",
        "status": "CANCEL_OBSERVE_PENDING"
      },
      "type": "object",
      "properties": {
        "transactionID": {
          "description": "Transaction identifier.",
          "example": "9c7bb124-11f5-4ff3-8a88-0eec1ba99205",
          "type": "string"
        },
        "status": {
          "description": "Status of the request.",
          "example": "CANCEL_OBSERVE_PENDING",
          "type": "string"
        },
        "createdOn": {
          "description": "The date and time of when this request was created.",
          "example": "2019-09-10T19:05:33.33Z",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "transactionID",
        "status",
        "createdOn"
      ]
    }
- HistoryAttributeValue: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "HistoryAttributeValue",
      "title": "HistoryAttributeValue",
      "description": "Streaming RF parameter for which you want to retrieve history data.",
      "example": {
        "createdOn": "2022-02-10T16:02:21.406Z",
        "name": "LINK_QUALITY",
        "value": "47"
      },
      "type": "object",
      "properties": {
        "name": {
          "title": "AttributeIdentifier",
          "description": "Attribute identifier.",
          "example": "RADIO_SIGNAL_STRENGTH",
          "type": "string",
          "enum": [
            "NETWORK_BEARER",
            "RADIO_SIGNAL_STRENGTH",
            "LINK_QUALITY",
            "CELL_ID",
            "MANUFACTURER"
          ]
        },
        "value": {
          "description": "Attribute value.",
          "example": "47",
          "type": "string"
        },
        "createdOn": {
          "description": "Date and time the request was created.",
          "example": "2022-02-10T16:02:21.406Z",
          "type": "string",
          "format": "date-time"
        }
      }
    }
- CallbackRegistrationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CallbackRegistrationRequest",
      "title": "CallbackRegistrationRequest",
      "description": "Specifies the callback service that is being subscribed to and the URL where the listening service is running.",
      "example": {
        "accountName": "TestQAAccount",
        "serviceName": "Diagnostics",
        "endpoint": "https://yourwebsite.com"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent. Format: \"##########-#####\".",
          "example": "0000123456-00001",
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "example": "Diagnostics",
          "type": "string"
        },
        "endpoint": {
          "description": "The URL for your web server.",
          "example": "https://yourwebsite.com",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Your HTTP headers.",
          "example": {},
          "type": "object"
        }
      },
      "required": [
        "accountName",
        "serviceName",
        "endpoint"
      ]
    }
- DeviceDiagnosticsCallback: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceDiagnosticsCallback",
      "title": "DeviceDiagnosticsCallback",
      "description": "Callback information of an existing diagnostics subscription.",
      "example": {
        "accountName": "TestQAAccount",
        "serviceName": "Diagnostics",
        "endpoint": "https://yourwebsite.com",
        "createdOn": "2019-09-07T23:57:53.292Z"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent. Format: \"##########-#####\".",
          "example": "0000123456-00001",
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "example": "Diagnostics",
          "type": "string"
        },
        "endpoint": {
          "description": "The URL for your web server.",
          "example": "https://yourwebsite.com",
          "type": "string"
        },
        "createdOn": {
          "description": "The date and time of when this request was created.",
          "example": "2019-09-07T23:57:53.292Z",
          "type": "string",
          "format": "date-time"
        },
        "httpHeaders": {
          "description": "Your HTTP headers.",
          "example": {},
          "type": "object"
        }
      },
      "required": [
        "accountName",
        "serviceName",
        "endpoint",
        "createdOn"
      ]
    }
- AttributeIdentifier: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "AttributeIdentifier",
      "description": "Attribute identifier.",
      "example": "RADIO_SIGNAL_STRENGTH",
      "type": "string",
      "enum": [
        "NETWORK_BEARER",
        "RADIO_SIGNAL_STRENGTH",
        "LINK_QUALITY",
        "CELL_ID",
        "MANUFACTURER"
      ]
    }
- AttributeSetting: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AttributeSetting",
      "title": "AttributeSetting",
      "description": "Describes an attribute being observed and the frequency with which the attribute is being observed.",
      "example": {
        "name": "MANUFACTURER",
        "value": "string",
        "createdOn": "2019-09-07T23:08:03.532Z",
        "isObservable": true,
        "isObserving": true,
        "frequency": {
          "value": 5,
          "unit": "SECOND"
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "title": "AttributeIdentifier",
          "description": "Attribute identifier.",
          "example": "RADIO_SIGNAL_STRENGTH",
          "type": "string",
          "enum": [
            "NETWORK_BEARER",
            "RADIO_SIGNAL_STRENGTH",
            "LINK_QUALITY",
            "CELL_ID",
            "MANUFACTURER"
          ]
        },
        "value": {
          "description": "Attribute value.",
          "example": "string",
          "type": "string"
        },
        "createdOn": {
          "description": "Date and time request was created.",
          "example": "2019-09-07T23:08:03.532Z",
          "type": "string",
          "format": "date-time"
        },
        "isObservable": {
          "description": "Is the attribute observable?",
          "example": true,
          "type": "boolean"
        },
        "isObserving": {
          "description": "Is the attribute being observed?",
          "example": true,
          "type": "boolean"
        },
        "frequency": {
          "id": "NumericalData",
          "title": "NumericalData",
          "description": "Describes value and unit of time.",
          "example": {
            "value": 5,
            "unit": "SECOND"
          },
          "type": "object",
          "properties": {
            "value": {
              "description": "Numerical value.",
              "example": 5,
              "type": "integer",
              "format": "int32"
            },
            "unit": {
              "title": "NumericalDataUnit",
              "description": "Unit of time.",
              "example": "MINUTE",
              "type": "string",
              "enum": [
                "SECOND",
                "MINUTE",
                "HOUR",
                "DAY"
              ]
            }
          }
        }
      }
    }
- DiagnosticObservationSetting: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DiagnosticObservationSetting",
      "title": "DiagnosticObservationSetting",
      "description": "Diagnostic observation settings and attributes for a device.",
      "example": {
        "accountName": "string",
        "device": {
          "id": "864508030026238",
          "kind": "IMEI"
        },
        "attributes": [
          {
            "name": "MANUFACTURER",
            "value": "string",
            "createdOn": "2019-09-07T23:08:03.532Z",
            "isObservable": true,
            "isObserving": true,
            "frequency": {
              "value": 5,
              "unit": "SECOND"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent. Format: \"##########-#####\".",
          "example": "0000123456-00001",
          "type": "string"
        },
        "device": {
          "id": "Device",
          "title": "Device",
          "description": "Identifies a particular IoT device.",
          "example": {
            "id": "864508030026238",
            "kind": "IMEI"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Device identifier.",
              "example": "864508030026238",
              "type": "string"
            },
            "kind": {
              "description": "Device kind identifier.",
              "example": "IMEI",
              "type": "string"
            }
          },
          "required": [
            "id",
            "kind"
          ]
        },
        "attributes": {
          "description": "Streaming RF parameters for which you want to retrieve diagnostic settings.",
          "example": [
            {
              "name": "MANUFACTURER",
              "value": "string",
              "createdOn": "2019-09-07T23:08:03.532Z",
              "isObservable": true,
              "isObserving": true,
              "frequency": {
                "value": 5,
                "unit": "SECOND"
              }
            }
          ],
          "type": "array",
          "items": {
            "id": "AttributeSetting",
            "title": "AttributeSetting",
            "description": "Describes an attribute being observed and the frequency with which the attribute is being observed.",
            "example": {
              "name": "MANUFACTURER",
              "value": "string",
              "createdOn": "2019-09-07T23:08:03.532Z",
              "isObservable": true,
              "isObserving": true,
              "frequency": {
                "value": 5,
                "unit": "SECOND"
              }
            },
            "type": "object",
            "properties": {
              "name": {
                "title": "AttributeIdentifier",
                "description": "Attribute identifier.",
                "example": "RADIO_SIGNAL_STRENGTH",
                "type": "string",
                "enum": [
                  "NETWORK_BEARER",
                  "RADIO_SIGNAL_STRENGTH",
                  "LINK_QUALITY",
                  "CELL_ID",
                  "MANUFACTURER"
                ]
              },
              "value": {
                "description": "Attribute value.",
                "example": "string",
                "type": "string"
              },
              "createdOn": {
                "description": "Date and time request was created.",
                "example": "2019-09-07T23:08:03.532Z",
                "type": "string",
                "format": "date-time"
              },
              "isObservable": {
                "description": "Is the attribute observable?",
                "example": true,
                "type": "boolean"
              },
              "isObserving": {
                "description": "Is the attribute being observed?",
                "example": true,
                "type": "boolean"
              },
              "frequency": {
                "id": "NumericalData",
                "title": "NumericalData",
                "description": "Describes value and unit of time.",
                "example": {
                  "value": 5,
                  "unit": "SECOND"
                },
                "type": "object",
                "properties": {
                  "value": {
                    "description": "Numerical value.",
                    "example": 5,
                    "type": "integer",
                    "format": "int32"
                  },
                  "unit": {
                    "title": "NumericalDataUnit",
                    "description": "Unit of time.",
                    "example": "MINUTE",
                    "type": "string",
                    "enum": [
                      "SECOND",
                      "MINUTE",
                      "HOUR",
                      "DAY"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
- HistorySearchFilter: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "HistorySearchFilter",
      "title": "HistorySearchFilter",
      "description": "The selected device and attributes for which a request should retrieve data.",
      "example": {
        "accountName": "0000123456-00001",
        "device": {
          "id": "15-digit IMEI",
          "kind": "IMEI"
        },
        "attributes": {
          "name": "LINK_QUALITY"
        }
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name identifier.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "device": {
          "id": "Device",
          "title": "Device",
          "description": "Identifies a particular IoT device.",
          "example": {
            "id": "864508030026238",
            "kind": "IMEI"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Device identifier.",
              "example": "864508030026238",
              "type": "string"
            },
            "kind": {
              "description": "Device kind identifier.",
              "example": "IMEI",
              "type": "string"
            }
          },
          "required": [
            "id",
            "kind"
          ]
        },
        "attributes": {
          "id": "HistorySearchFilterAttributes",
          "title": "HistorySearchFilterAttributes",
          "description": "Streaming RF parameters for which you want to retrieve history data.",
          "example": {
            "name": "LINK_QUALITY"
          },
          "type": "object",
          "properties": {
            "name": {
              "title": "AttributeIdentifier",
              "description": "Attribute identifier.",
              "example": "RADIO_SIGNAL_STRENGTH",
              "type": "string",
              "enum": [
                "NETWORK_BEARER",
                "RADIO_SIGNAL_STRENGTH",
                "LINK_QUALITY",
                "CELL_ID",
                "MANUFACTURER"
              ]
            }
          }
        }
      },
      "required": [
        "accountName",
        "device"
      ]
    }
- HistorySearchFilterAttributes: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "HistorySearchFilterAttributes",
      "title": "HistorySearchFilterAttributes",
      "description": "Streaming RF parameters for which you want to retrieve history data.",
      "example": {
        "name": "LINK_QUALITY"
      },
      "type": "object",
      "properties": {
        "name": {
          "title": "AttributeIdentifier",
          "description": "Attribute identifier.",
          "example": "RADIO_SIGNAL_STRENGTH",
          "type": "string",
          "enum": [
            "NETWORK_BEARER",
            "RADIO_SIGNAL_STRENGTH",
            "LINK_QUALITY",
            "CELL_ID",
            "MANUFACTURER"
          ]
        }
      }
    }
- HistorySearchLimitTime: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "HistorySearchLimitTime",
      "title": "HistorySearchLimitTime",
      "description": "The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration.",
      "example": {
        "startOn": "2019-08-29T00:47:59.240Z",
        "duration": {
          "value": 5,
          "unit": "SECOND"
        }
      },
      "type": "object",
      "properties": {
        "startOn": {
          "description": "The starting date-time for this request.",
          "example": "2019-08-29T00:47:59.240Z",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "id": "NumericalData",
          "title": "NumericalData",
          "description": "Describes value and unit of time.",
          "example": {
            "value": 5,
            "unit": "SECOND"
          },
          "type": "object",
          "properties": {
            "value": {
              "description": "Numerical value.",
              "example": 5,
              "type": "integer",
              "format": "int32"
            },
            "unit": {
              "title": "NumericalDataUnit",
              "description": "Unit of time.",
              "example": "MINUTE",
              "type": "string",
              "enum": [
                "SECOND",
                "MINUTE",
                "HOUR",
                "DAY"
              ]
            }
          }
        }
      }
    }
- HistorySearchRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "HistorySearchRequest",
      "title": "HistorySearchRequest",
      "description": "Used to filter data by time period or number of devices.",
      "example": {
        "$filter": {
          "accountName": "0000123456-00001",
          "device": {
            "id": "15-digit IMEI",
            "kind": "IMEI"
          }
        }
      },
      "type": "object",
      "properties": {
        "$filter": {
          "id": "HistorySearchFilter",
          "title": "HistorySearchFilter",
          "description": "The selected device and attributes for which a request should retrieve data.",
          "example": {
            "accountName": "0000123456-00001",
            "device": {
              "id": "15-digit IMEI",
              "kind": "IMEI"
            },
            "attributes": {
              "name": "LINK_QUALITY"
            }
          },
          "type": "object",
          "properties": {
            "accountName": {
              "description": "Account name identifier.",
              "example": "0000123456-00001",
              "type": "string"
            },
            "device": {
              "id": "Device",
              "title": "Device",
              "description": "Identifies a particular IoT device.",
              "example": {
                "id": "864508030026238",
                "kind": "IMEI"
              },
              "type": "object",
              "properties": {
                "id": {
                  "description": "Device identifier.",
                  "example": "864508030026238",
                  "type": "string"
                },
                "kind": {
                  "description": "Device kind identifier.",
                  "example": "IMEI",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "kind"
              ]
            },
            "attributes": {
              "id": "HistorySearchFilterAttributes",
              "title": "HistorySearchFilterAttributes",
              "description": "Streaming RF parameters for which you want to retrieve history data.",
              "example": {
                "name": "LINK_QUALITY"
              },
              "type": "object",
              "properties": {
                "name": {
                  "title": "AttributeIdentifier",
                  "description": "Attribute identifier.",
                  "example": "RADIO_SIGNAL_STRENGTH",
                  "type": "string",
                  "enum": [
                    "NETWORK_BEARER",
                    "RADIO_SIGNAL_STRENGTH",
                    "LINK_QUALITY",
                    "CELL_ID",
                    "MANUFACTURER"
                  ]
                }
              }
            }
          },
          "required": [
            "accountName",
            "device"
          ]
        },
        "$limitNumber": {
          "description": "The maximum number of historical attributes to include in the response. If the request matches more than this number of attributes, the response will contain an X-Next value in the header that can be used as the page value in the next request to retrieve the next page of events.",
          "example": 3,
          "type": "integer",
          "format": "int32"
        },
        "$limitTime": {
          "id": "HistorySearchLimitTime",
          "title": "HistorySearchLimitTime",
          "description": "The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration.",
          "example": {
            "startOn": "2019-08-29T00:47:59.240Z",
            "duration": {
              "value": 5,
              "unit": "SECOND"
            }
          },
          "type": "object",
          "properties": {
            "startOn": {
              "description": "The starting date-time for this request.",
              "example": "2019-08-29T00:47:59.240Z",
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "id": "NumericalData",
              "title": "NumericalData",
              "description": "Describes value and unit of time.",
              "example": {
                "value": 5,
                "unit": "SECOND"
              },
              "type": "object",
              "properties": {
                "value": {
                  "description": "Numerical value.",
                  "example": 5,
                  "type": "integer",
                  "format": "int32"
                },
                "unit": {
                  "title": "NumericalDataUnit",
                  "description": "Unit of time.",
                  "example": "MINUTE",
                  "type": "string",
                  "enum": [
                    "SECOND",
                    "MINUTE",
                    "HOUR",
                    "DAY"
                  ]
                }
              }
            }
          }
        },
        "$page": {
          "description": "Page number for pagination purposes.",
          "type": "string"
        }
      },
      "required": [
        "$filter"
      ]
    }
- History: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "History",
      "title": "History",
      "description": "History data for a selected device and its attributes at a specific time.",
      "example": {
        "accountName": "0000123456-00001",
        "attributes": {
          "createdOn": "2022-02-10T16:02:21.406Z",
          "name": "LINK_QUALITY",
          "value": "47"
        },
        "device": {
          "id": "15-digit IMEI",
          "kind": "IMEI"
        }
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which you want retrieve history data. An account name is usually numeric, and must include any leading zeros.",
          "example": "0000123456-00001",
          "type": "string"
        },
        "device": {
          "id": "Device",
          "title": "Device",
          "description": "Identifies a particular IoT device.",
          "example": {
            "id": "864508030026238",
            "kind": "IMEI"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Device identifier.",
              "example": "864508030026238",
              "type": "string"
            },
            "kind": {
              "description": "Device kind identifier.",
              "example": "IMEI",
              "type": "string"
            }
          },
          "required": [
            "id",
            "kind"
          ]
        },
        "attributes": {
          "id": "HistoryAttributeValue",
          "title": "HistoryAttributeValue",
          "description": "Streaming RF parameter for which you want to retrieve history data.",
          "example": {
            "createdOn": "2022-02-10T16:02:21.406Z",
            "name": "LINK_QUALITY",
            "value": "47"
          },
          "type": "object",
          "properties": {
            "name": {
              "title": "AttributeIdentifier",
              "description": "Attribute identifier.",
              "example": "RADIO_SIGNAL_STRENGTH",
              "type": "string",
              "enum": [
                "NETWORK_BEARER",
                "RADIO_SIGNAL_STRENGTH",
                "LINK_QUALITY",
                "CELL_ID",
                "MANUFACTURER"
              ]
            },
            "value": {
              "description": "Attribute value.",
              "example": "47",
              "type": "string"
            },
            "createdOn": {
              "description": "Date and time the request was created.",
              "example": "2022-02-10T16:02:21.406Z",
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "required": [
        "accountName",
        "device"
      ]
    }
- Device: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Device",
      "title": "Device",
      "description": "Identifies a particular IoT device.",
      "example": {
        "id": "864508030026238",
        "kind": "IMEI"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Device identifier.",
          "example": "864508030026238",
          "type": "string"
        },
        "kind": {
          "description": "Device kind identifier.",
          "example": "IMEI",
          "type": "string"
        }
      },
      "required": [
        "id",
        "kind"
      ]
    }
- NumericalData: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "NumericalData",
      "title": "NumericalData",
      "description": "Describes value and unit of time.",
      "example": {
        "value": 5,
        "unit": "SECOND"
      },
      "type": "object",
      "properties": {
        "value": {
          "description": "Numerical value.",
          "example": 5,
          "type": "integer",
          "format": "int32"
        },
        "unit": {
          "title": "NumericalDataUnit",
          "description": "Unit of time.",
          "example": "MINUTE",
          "type": "string",
          "enum": [
            "SECOND",
            "MINUTE",
            "HOUR",
            "DAY"
          ]
        }
      }
    }
- NumericalDataUnit: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "NumericalDataUnit",
      "description": "Unit of time.",
      "example": "MINUTE",
      "type": "string",
      "enum": [
        "SECOND",
        "MINUTE",
        "HOUR",
        "DAY"
      ]
    }
- DeviceDiagnosticsResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceDiagnosticsResult",
      "title": "DeviceDiagnosticsResult",
      "description": "All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.",
      "example": {
        "errorCode": "INTERNAL_SYSTEM_ERROR",
        "errorMessage": "The system encountered an internal error."
      },
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Simple error code.",
          "example": "INVALID_PARAMETER",
          "type": "string"
        },
        "errorMessage": {
          "description": "Detailed error message.",
          "example": "The request parameter is invalid.",
          "type": "string"
        }
      },
      "required": [
        "errorCode",
        "errorMessage"
      ]
    }
- DeviceResetRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceResetRequest",
      "title": "DeviceResetRequest",
      "description": "Request body to Performs a device reboot.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of the account. An account name is usually numeric, and must include any leading zeros.",
          "example": "0642233522-00003",
          "type": "string"
        },
        "action": {
          "description": "The action you want to take on the device.",
          "example": "reboot",
          "type": "string"
        },
        "devices": {
          "description": "The devices for which you want to perform a factory reset or reboot.",
          "type": "array",
          "items": {
            "id": "Device",
            "title": "Device",
            "description": "Identifies a particular IoT device.",
            "example": {
              "id": "864508030026238",
              "kind": "IMEI"
            },
            "type": "object",
            "properties": {
              "id": {
                "description": "Device identifier.",
                "example": "864508030026238",
                "type": "string"
              },
              "kind": {
                "description": "Device kind identifier.",
                "example": "IMEI",
                "type": "string"
              }
            },
            "required": [
              "id",
              "kind"
            ]
          }
        }
      }
    }
- GenerateExternalIDResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GenerateExternalIDResult",
      "title": "GenerateExternalIDResult",
      "description": "A new external ID.",
      "example": {
        "externalid": "ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH=="
      },
      "type": "object",
      "properties": {
        "externalid": {
          "description": "Newly created security string.",
          "example": "ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
          "type": "string"
        }
      }
    }
- GenerateExternalIDRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GenerateExternalIDRequest",
      "title": "GenerateExternalIDRequest",
      "description": "Authenticating account ID.",
      "example": {
        "accountidentifier": {
          "billingaccountid": "0000000000-00001"
        }
      },
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        }
      }
    }
- Subscription: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Subscription",
      "title": "Subscription",
      "description": "Subscription resource definition.",
      "example": {
        "configurationfailures": 0,
        "createdon": "2018-12-21T05:05:02.134Z",
        "delegateid": "00000000-0000-0000-0000-000000000000",
        "id": "d8c145dd-6948-67ec-ed9b-6a298806bb4a",
        "kind": "ts.subscription",
        "laststreamingstatus": "",
        "laststreamingtime": "0001-01-01T00:00:00Z",
        "lastupdated": "2018-12-21T05:22:12.178Z",
        "networkfailures": 0,
        "streamfailures": 0,
        "streamkind": "ts.event",
        "targetid": "4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8",
        "version": "1.0",
        "versionid": "5ed6063f-04e0-11e9-8279-02420a5e1b0b"
      },
      "type": "object",
      "properties": {
        "configurationfailures": {
          "description": "The number of streaming failures due to faulty configuration.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "createdon": {
          "description": "The number of streaming failures due to faulty configuration.",
          "example": "2018-12-21T05:05:02.134Z",
          "type": "string"
        },
        "delegateid": {
          "description": "Not currently used.",
          "example": "00000000-0000-0000-0000-000000000000",
          "type": "string"
        },
        "description": {
          "description": "Description of the subscription.",
          "type": "string"
        },
        "disabled": {
          "description": "Whether the subscription is currently sending data.",
          "example": false,
          "type": "boolean"
        },
        "email": {
          "description": "The address to which any error reports should be delivered.",
          "example": "me@mycompany.com",
          "type": "string"
        },
        "filter": {
          "description": "Filter for events.",
          "type": "string"
        },
        "id": {
          "description": "ThingSpace unique ID for the subscription that was created.",
          "example": "d8c145dd-6948-67ec-ed9b-6a298806bb4a",
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind.",
          "example": "ts.subscription",
          "type": "string"
        },
        "laststreamingstatus": {
          "description": "Possible values: success or fail.",
          "example": "success",
          "type": "string"
        },
        "laststreamingtime": {
          "description": "The date and time that the last stream send was attempted.",
          "example": "0001-01-01T00:00:00Z",
          "type": "string"
        },
        "lastupdated": {
          "description": "The date the resource was last updated.",
          "example": "2018-12-21T05:22:12.178Z",
          "type": "string"
        },
        "name": {
          "description": "Name of the subscription.",
          "example": "Account subscription 1",
          "type": "string"
        },
        "networkfailures": {
          "description": "The number of failures due to network problems.",
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "streamfailures": {
          "example": 0,
          "type": "integer",
          "format": "int32"
        },
        "streamkind": {
          "description": "The event type that will be sent in the data stream.",
          "example": "ts.event",
          "type": "string"
        },
        "targetid": {
          "description": "Target to be used for dispatching events.",
          "example": "4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8",
          "type": "string"
        },
        "targettype": {
          "example": "Amazon Web Services",
          "type": "string"
        },
        "version": {
          "description": "Version of the underlying schema resource.",
          "example": "1.0",
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "example": "5ed6063f-04e0-11e9-8279-02420a5e1b0b",
          "type": "string"
        }
      }
    }
- Target: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Target",
      "title": "Target",
      "description": "Target resource definition.",
      "example": {
        "address": "arn:aws:iam::252156542789:role/ThingSpace",
        "addressscheme": "streamawsiot",
        "createdon": "2019-01-24T19:06:43.577Z",
        "externalid": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
        "id": "cea170cc-a58f-6531-fc4b-fae1ceb1a6c8",
        "kind": "ts.target",
        "lastupdated": "2019-01-24T19:32:31.841Z",
        "name": "AWS Target",
        "region": "us-east-1",
        "version": "1.0",
        "versionid": "caf85ff7-200e-11e9-a85b-02420a621e0a"
      },
      "type": "object",
      "properties": {
        "address": {
          "description": "The endpoint for data streams.",
          "example": "https://myhost.com:1825",
          "type": "string"
        },
        "addressscheme": {
          "description": "The transport format.",
          "example": "streamrest",
          "type": "string"
        },
        "billingaccountid": {
          "description": "The billing account ID.",
          "type": "string"
        },
        "createdon": {
          "description": "The date the resource was created.",
          "example": "2019-01-24T19:06:43.577Z",
          "type": "string"
        },
        "externalid": {
          "description": "Security identification string.",
          "example": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
          "type": "string"
        },
        "id": {
          "description": "ThingSpace unique ID for the target that was created.",
          "example": "cea170cc-a58f-6531-fc4b-fae1ceb1a6c8",
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind. Targets are ts.target.",
          "example": "ts.target",
          "type": "string"
        },
        "lastupdated": {
          "description": "The date the resource was last updated.",
          "example": "2019-01-24T19:32:31.841Z",
          "type": "string"
        },
        "name": {
          "description": "Name of the target.",
          "example": "AWS Target",
          "type": "string"
        },
        "region": {
          "description": "AWS region value.",
          "example": "us-east-1",
          "type": "string"
        },
        "version": {
          "description": "Version of the underlying schema resource.",
          "example": "1.0",
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "example": "caf85ff7-200e-11e9-a85b-02420a621e0a",
          "type": "string"
        },
        "description": {
          "description": "Description of the target.",
          "type": "string"
        }
      }
    }
- QueryTargetRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "QueryTargetRequest",
      "title": "QueryTargetRequest",
      "description": "Search for targets by property values.",
      "example": {
        "accountidentifier": {
          "billingaccountid": "1223334444-00001"
        },
        "resourceidentifier": {
          "id": "dd1682d3-2d80-cefc-f3ee-25154800beff"
        }
      },
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "$selection": {
          "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
          "example": {
            "addressscheme": "streamawsiot"
          },
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceidentifier": {
          "id": "ResourceIdentifier",
          "title": "ResourceIdentifier",
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "example": {
            "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Target ID.",
              "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
              "type": "string"
            },
            "imei": {
              "description": "Device IMEI.",
              "type": "string"
            }
          }
        }
      }
    }
- AccountIdentifier: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AccountIdentifier",
      "title": "AccountIdentifier",
      "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
      "example": {
        "billingaccountid": "0000000000-00001"
      },
      "type": "object",
      "properties": {
        "billingaccountid": {
          "example": "1223334444-00001",
          "type": "string"
        }
      }
    }
- DeleteTargetRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeleteTargetRequest",
      "title": "DeleteTargetRequest",
      "description": "Target to delete.",
      "example": {
        "accountidentifier": {
          "billingaccountid": "0000000000-00001"
        },
        "resourceidentifier": {
          "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
        }
      },
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "resourceidentifier": {
          "id": "ResourceIdentifier",
          "title": "ResourceIdentifier",
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "example": {
            "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Target ID.",
              "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
              "type": "string"
            },
            "imei": {
              "description": "Device IMEI.",
              "type": "string"
            }
          }
        }
      }
    }
- ResourceIdentifier: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ResourceIdentifier",
      "title": "ResourceIdentifier",
      "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
      "example": {
        "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "Target ID.",
          "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
          "type": "string"
        },
        "imei": {
          "description": "Device IMEI.",
          "type": "string"
        }
      }
    }
- CreateTargetRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateTargetRequest",
      "title": "CreateTargetRequest",
      "description": "Details of the target that you want to create.",
      "example": {
        "accountidentifier": {
          "billingaccountid": "0000000000-00001"
        },
        "billingaccountid": "0000000000-00001",
        "kind": "ts.target",
        "address": "https://your_IoT_Central_Application.azureiotcentral.com",
        "addressscheme": "streamazureiot",
        "fields": {
          "httpheaders": {
            "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
          },
          "devicetypes": [
            "cHeAssetTracker",
            "cHeAssetTrackerV2",
            "tgAssetTracker",
            "tgAssetTrackerV2"
          ]
        }
      },
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "billingaccountid": {
          "description": "The ID of the authenticating billing account.",
          "example": "1223334444-00001",
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind. Targets are ts.target.",
          "example": "ts.target",
          "type": "string"
        },
        "address": {
          "description": "The endpoint for notifications or data streams. The format depends on the selected `addressscheme`.<br />`streamrest` requires a `host:port` value <br />`streamawsiot` requres a valid ARN.",
          "example": "https://myhost.com:1825",
          "type": "string"
        },
        "addressscheme": {
          "description": "The transport format. Valid values are: <br />streamawsiot - streamed data to an AWS account <br />streamrest - streamed REST data to a defined endpoint.",
          "example": "streamrest",
          "type": "string"
        },
        "fields": {
          "id": "CreateTargetRequestFields",
          "title": "CreateTargetRequestFields",
          "example": {
            "httpheaders": {
              "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
            },
            "devicetypes": [
              "cHeAssetTracker",
              "cHeAssetTrackerV2",
              "tgAssetTracker",
              "tgAssetTrackerV2"
            ]
          },
          "type": "object",
          "properties": {
            "httpheaders": {
              "id": "FieldsHttpHeaders",
              "title": "FieldsHttpHeaders",
              "example": {
                "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
              },
              "type": "object",
              "properties": {
                "Authorization": {
                  "example": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410",
                  "type": "string"
                }
              }
            },
            "devicetypes": {
              "description": "List of device types.",
              "example": [
                "cHeAssetTracker",
                "cHeAssetTrackerV2",
                "tgAssetTracker",
                "tgAssetTrackerV2"
              ],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "description": {
          "description": "Descriptive information about the target.",
          "type": "string"
        },
        "externalid": {
          "description": "Security identification string created by a POST /targets/actions/newextid request.",
          "example": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
          "type": "string"
        },
        "name": {
          "description": "Name of the target.",
          "example": "AWS Target",
          "type": "string"
        },
        "region": {
          "description": "AWS region value.",
          "example": "us-east-1",
          "type": "string"
        },
        "key1": {
          "description": "OAuth 2.0 bearer token.",
          "example": "Bearer MmY3ZefqefqDk4Ni00MzZmLWJkYzgtYTI4qfqBjNTc2",
          "type": "string"
        },
        "oauth": {
          "id": "TargetAuthentication",
          "title": "TargetAuthentication",
          "description": "OAuth 2 token and refresh token for TS to stream events to Target.",
          "type": "object",
          "properties": {
            "body": {
              "id": "TargetAuthenticationBody",
              "title": "TargetAuthenticationBody",
              "example": {
                "grant_type": "refresh_token",
                "refresh_token": "qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1",
                "headers": {
                  "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
                  "Content-Type": "application/x-www-form-urlencoded"
                },
                "host": {
                  "hostandpath": "https:// myhost.com:1825"
                }
              },
              "type": "object",
              "properties": {
                "grant_type": {
                  "description": "Authentication grant type.",
                  "example": "refresh_token",
                  "type": "string"
                },
                "refresh_token": {
                  "description": "Refresh token.",
                  "example": "qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1",
                  "type": "string"
                },
                "scope": {
                  "description": "Authentication scopes.",
                  "type": "string"
                },
                "headers": {
                  "id": "TargetAuthenticationBodyHeaders",
                  "title": "TargetAuthenticationBodyHeaders",
                  "description": "Authentication headers.",
                  "example": {
                    "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
                    "Content-Type": "application/x-www-form-urlencoded"
                  },
                  "type": "object",
                  "properties": {
                    "Authorization": {
                      "description": "Authorization header.",
                      "example": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
                      "type": "string"
                    },
                    "Content-Type": {
                      "description": "Content-Type header.",
                      "example": "application/x-www-form-urlencoded",
                      "type": "string"
                    }
                  }
                },
                "host": {
                  "id": "TargetAuthenticationBodyHost",
                  "title": "TargetAuthenticationBodyHost",
                  "description": "Host information.",
                  "example": {
                    "hostandpath": "https:// myhost.com:1825"
                  },
                  "type": "object",
                  "properties": {
                    "hostandpath": {
                      "example": "https:// myhost.com:1825",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "version": {
              "example": "1.0",
              "type": "string"
            }
          }
        }
      }
    }
- TargetAuthentication: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TargetAuthentication",
      "title": "TargetAuthentication",
      "description": "OAuth 2 token and refresh token for TS to stream events to Target.",
      "type": "object",
      "properties": {
        "body": {
          "id": "TargetAuthenticationBody",
          "title": "TargetAuthenticationBody",
          "example": {
            "grant_type": "refresh_token",
            "refresh_token": "qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1",
            "headers": {
              "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
              "Content-Type": "application/x-www-form-urlencoded"
            },
            "host": {
              "hostandpath": "https:// myhost.com:1825"
            }
          },
          "type": "object",
          "properties": {
            "grant_type": {
              "description": "Authentication grant type.",
              "example": "refresh_token",
              "type": "string"
            },
            "refresh_token": {
              "description": "Refresh token.",
              "example": "qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1",
              "type": "string"
            },
            "scope": {
              "description": "Authentication scopes.",
              "type": "string"
            },
            "headers": {
              "id": "TargetAuthenticationBodyHeaders",
              "title": "TargetAuthenticationBodyHeaders",
              "description": "Authentication headers.",
              "example": {
                "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
                "Content-Type": "application/x-www-form-urlencoded"
              },
              "type": "object",
              "properties": {
                "Authorization": {
                  "description": "Authorization header.",
                  "example": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
                  "type": "string"
                },
                "Content-Type": {
                  "description": "Content-Type header.",
                  "example": "application/x-www-form-urlencoded",
                  "type": "string"
                }
              }
            },
            "host": {
              "id": "TargetAuthenticationBodyHost",
              "title": "TargetAuthenticationBodyHost",
              "description": "Host information.",
              "example": {
                "hostandpath": "https:// myhost.com:1825"
              },
              "type": "object",
              "properties": {
                "hostandpath": {
                  "example": "https:// myhost.com:1825",
                  "type": "string"
                }
              }
            }
          }
        },
        "version": {
          "example": "1.0",
          "type": "string"
        }
      }
    }
- TargetAuthenticationBody: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TargetAuthenticationBody",
      "title": "TargetAuthenticationBody",
      "example": {
        "grant_type": "refresh_token",
        "refresh_token": "qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1",
        "headers": {
          "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
          "Content-Type": "application/x-www-form-urlencoded"
        },
        "host": {
          "hostandpath": "https:// myhost.com:1825"
        }
      },
      "type": "object",
      "properties": {
        "grant_type": {
          "description": "Authentication grant type.",
          "example": "refresh_token",
          "type": "string"
        },
        "refresh_token": {
          "description": "Refresh token.",
          "example": "qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1",
          "type": "string"
        },
        "scope": {
          "description": "Authentication scopes.",
          "type": "string"
        },
        "headers": {
          "id": "TargetAuthenticationBodyHeaders",
          "title": "TargetAuthenticationBodyHeaders",
          "description": "Authentication headers.",
          "example": {
            "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
            "Content-Type": "application/x-www-form-urlencoded"
          },
          "type": "object",
          "properties": {
            "Authorization": {
              "description": "Authorization header.",
              "example": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
              "type": "string"
            },
            "Content-Type": {
              "description": "Content-Type header.",
              "example": "application/x-www-form-urlencoded",
              "type": "string"
            }
          }
        },
        "host": {
          "id": "TargetAuthenticationBodyHost",
          "title": "TargetAuthenticationBodyHost",
          "description": "Host information.",
          "example": {
            "hostandpath": "https:// myhost.com:1825"
          },
          "type": "object",
          "properties": {
            "hostandpath": {
              "example": "https:// myhost.com:1825",
              "type": "string"
            }
          }
        }
      }
    }
- TargetAuthenticationBodyHost: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TargetAuthenticationBodyHost",
      "title": "TargetAuthenticationBodyHost",
      "description": "Host information.",
      "example": {
        "hostandpath": "https:// myhost.com:1825"
      },
      "type": "object",
      "properties": {
        "hostandpath": {
          "example": "https:// myhost.com:1825",
          "type": "string"
        }
      }
    }
- TargetAuthenticationBodyHeaders: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TargetAuthenticationBodyHeaders",
      "title": "TargetAuthenticationBodyHeaders",
      "description": "Authentication headers.",
      "example": {
        "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
        "Content-Type": "application/x-www-form-urlencoded"
      },
      "type": "object",
      "properties": {
        "Authorization": {
          "description": "Authorization header.",
          "example": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
          "type": "string"
        },
        "Content-Type": {
          "description": "Content-Type header.",
          "example": "application/x-www-form-urlencoded",
          "type": "string"
        }
      }
    }
- CreateTargetRequestFields: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateTargetRequestFields",
      "title": "CreateTargetRequestFields",
      "example": {
        "httpheaders": {
          "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
        },
        "devicetypes": [
          "cHeAssetTracker",
          "cHeAssetTrackerV2",
          "tgAssetTracker",
          "tgAssetTrackerV2"
        ]
      },
      "type": "object",
      "properties": {
        "httpheaders": {
          "id": "FieldsHttpHeaders",
          "title": "FieldsHttpHeaders",
          "example": {
            "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
          },
          "type": "object",
          "properties": {
            "Authorization": {
              "example": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410",
              "type": "string"
            }
          }
        },
        "devicetypes": {
          "description": "List of device types.",
          "example": [
            "cHeAssetTracker",
            "cHeAssetTrackerV2",
            "tgAssetTracker",
            "tgAssetTrackerV2"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- FieldsHttpHeaders: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FieldsHttpHeaders",
      "title": "FieldsHttpHeaders",
      "example": {
        "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
      },
      "type": "object",
      "properties": {
        "Authorization": {
          "example": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410",
          "type": "string"
        }
      }
    }
- CreateSubscriptionRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateSubscriptionRequest",
      "title": "CreateSubscriptionRequest",
      "description": "The details of the subscription that you want to create.",
      "example": {
        "accountidentifier": {
          "billingaccountid": "0000000000-00001"
        },
        "billingaccountid": "0000000000-00001",
        "streamkind": "ts.event",
        "targetid": "your target ID UUID such as ae110c40-2685-6c70-f46e-286f7370b8a9",
        "name": "name your subscription"
      },
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "description": {
          "description": "Descriptive information about the subscription.",
          "type": "string"
        },
        "disabled": {
          "description": "Enable or disable the subscription. A disabled subscription will not send any data.",
          "example": false,
          "type": "boolean"
        },
        "email": {
          "description": "The address to which any error reports should be delivered.",
          "example": "me@mycompany.com",
          "type": "string"
        },
        "filter": {
          "description": "String containing a $filter object with a property and value to filter out non-matching events.",
          "type": "string"
        },
        "billingaccountid": {
          "example": "1223334444-00001",
          "type": "string"
        },
        "streamkind": {
          "description": "The type of event data to send via this subscription. This will be `ts.event` in most cases. Other event types are `ts.event.diagnostics` for device diagnostic data, `ts.event.configuration` for device configuration events, or `ts.event.security`. Note that the device ThingSpace client must support sending specific event types for anything other than `ts.event`.",
          "example": "ts.event",
          "type": "string"
        },
        "targetid": {
          "description": "The ID of the target resource to be used when dispatching events. The corresponding target should have a “stream” addressscheme.",
          "example": "4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8",
          "type": "string"
        },
        "name": {
          "description": "Name of the subscription.",
          "example": "Account subscription 1",
          "type": "string"
        },
        "allowaggregation": {
          "description": "Setting this value to `false` prevents the data returned from being aggregated and makes the data easier to parse.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- QuerySubscriptionRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "QuerySubscriptionRequest",
      "title": "QuerySubscriptionRequest",
      "description": "Fields and values to match.",
      "example": {
        "accountidentifier": {
          "billingaccountid": "1223334444-00001"
        },
        "resourceidentifier": {
          "id": "dd1682d3-2d80-cefc-f3ee-25154800beff"
        }
      },
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "$selection": {
          "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
          "example": {
            "addressscheme": "streamawsiot"
          },
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceidentifier": {
          "id": "ResourceIdentifier",
          "title": "ResourceIdentifier",
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "example": {
            "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Target ID.",
              "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
              "type": "string"
            },
            "imei": {
              "description": "Device IMEI.",
              "type": "string"
            }
          }
        }
      }
    }
- DeleteSubscriptionRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeleteSubscriptionRequest",
      "title": "DeleteSubscriptionRequest",
      "description": "The subscription to delete.",
      "example": {
        "accountidentifier": {
          "billingaccountid": "1223334444-00001"
        },
        "resourceidentifier": {
          "id": "f8b112df-739c-6236-f059-106c67bafd99"
        }
      },
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "resourceidentifier": {
          "id": "ResourceIdentifier",
          "title": "ResourceIdentifier",
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "example": {
            "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Target ID.",
              "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
              "type": "string"
            },
            "imei": {
              "description": "Device IMEI.",
              "type": "string"
            }
          }
        }
      }
    }
- ChangeConfigurationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangeConfigurationRequest",
      "title": "ChangeConfigurationRequest",
      "description": "The request body identifies the device and the values to set.",
      "example": {
        "accountidentifier": {
          "billingaccountid": "1223334444-00001"
        },
        "resourceidentifier": {
          "id": "f8b112df-739c-6236-f059-106c67bafd99"
        },
        "configuration": {
          "frequency": "Low"
        }
      },
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "resourceidentifier": {
          "id": "ResourceIdentifier",
          "title": "ResourceIdentifier",
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "example": {
            "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Target ID.",
              "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
              "type": "string"
            },
            "imei": {
              "description": "Device IMEI.",
              "type": "string"
            }
          }
        },
        "configuration": {
          "id": "configuration",
          "title": "configuration",
          "description": "List of the field names and values to set.",
          "example": {
            "frequency": "Low"
          },
          "type": "object",
          "properties": {
            "frequency": {
              "example": "Low",
              "type": "string"
            }
          }
        }
      }
    }
- configuration: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "configuration",
      "title": "configuration",
      "description": "List of the field names and values to set.",
      "example": {
        "frequency": "Low"
      },
      "type": "object",
      "properties": {
        "frequency": {
          "example": "Low",
          "type": "string"
        }
      }
    }
- ChangeConfigurationResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangeConfigurationResponse",
      "title": "ChangeConfigurationResponse",
      "description": "Change Configuration resource definition.",
      "type": "object",
      "properties": {
        "action": {
          "description": "The action requested in this event; “change” for device configuration changes.",
          "example": "set",
          "type": "string"
        },
        "createdon": {
          "description": "The date and time of the change request.",
          "example": "2019-02-14T01:41:03.619217664Z",
          "type": "string"
        },
        "deviceid": {
          "description": "The device’s ThingSpace UUID.",
          "example": "8461f530-2e31-6e87-e357-6c38251d4d01",
          "type": "string"
        },
        "fields": {
          "id": "Fields",
          "title": "Fields",
          "description": "List of fields affected by the event.",
          "example": {
            "configuration": {
              "frequency": "Low"
            }
          },
          "type": "object",
          "properties": {
            "configuration": {
              "id": "configuration",
              "title": "configuration",
              "description": "List of the field names and values to set.",
              "example": {
                "frequency": "Low"
              },
              "type": "object",
              "properties": {
                "frequency": {
                  "example": "Low",
                  "type": "string"
                }
              }
            }
          }
        },
        "foreignid": {
          "description": "foreign id",
          "example": "e1f15861-7de7-69cb-ed7d-b4a92e091bc4",
          "type": "string"
        },
        "id": {
          "description": "The unique ID of this ts.event.configuration event.",
          "example": "05c12adc-50c0-6ebb-feb0-b9f9637a1dba",
          "type": "string"
        },
        "kind": {
          "description": "The kind of the ThingSpace resource that is being reported",
          "example": "ts.event.configuration",
          "type": "string"
        },
        "lastupdated": {
          "description": "The date and time that the event was last updated.",
          "example": "2019-02-14T01:41:03.619217727Z",
          "type": "string"
        },
        "name": {
          "description": "The name of the event; “SetConfigurationReq” for device configuration changes.",
          "example": "SetConfigurationReq",
          "type": "string"
        },
        "state": {
          "description": "The current status of the request. The value will be “pending” until the device wakes up and ThingSpace can send the request to the device.",
          "example": "pending",
          "type": "string"
        },
        "transactionid": {
          "description": "transaction id",
          "example": "1d38aae7-558d-4cb9-8269-e8d4c0519045",
          "type": "string"
        },
        "version": {
          "description": "version",
          "example": "1.0",
          "type": "string"
        }
      }
    }
- FindDeviceByPropertyResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FindDeviceByPropertyResponse",
      "title": "FindDeviceByPropertyResponse",
      "description": "Change Configuration resource definition.",
      "type": "object",
      "properties": {
        "billingaccountid": {
          "description": "Billing account ID of the resource.",
          "example": "1223334444-00001",
          "type": "string"
        },
        "createdon": {
          "description": "The date the resource was created.",
          "example": "2018-12-19T06:45:41.496Z",
          "type": "string"
        },
        "eventretention": {
          "example": "90",
          "type": "string"
        },
        "iccid": {
          "description": "Cellular SIM card identifier.",
          "example": "20332350053095597842",
          "type": "string"
        },
        "id": {
          "description": "ThingSpace unique ID for the device that was added.",
          "example": "64612cb3-3685-6dad-fd2b-ea1adeb5a269",
          "type": "string"
        },
        "imei": {
          "description": "4G hardware device identifier.",
          "example": "320778042285497",
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind.",
          "example": "ts.device",
          "type": "string"
        },
        "lastupdated": {
          "description": "The date the resource was last updated.",
          "example": "2018-12-19T06:45:41.508Z",
          "type": "string"
        },
        "providerid": {
          "description": "The device’s service provider.",
          "example": "8a314f07-849e-6568-e3c1-8381c1f61bfc",
          "type": "string"
        },
        "refid": {
          "description": "The value of the refidtype identifier.",
          "example": "20332350053095597842",
          "type": "string"
        },
        "refidtype": {
          "description": "The device identifier type used to refer to this device.",
          "example": "iccid",
          "type": "string"
        },
        "state": {
          "description": "Service state of the device.",
          "example": "registered",
          "type": "string"
        },
        "version": {
          "description": "Version of the underlying schema resource.",
          "example": "1.0",
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "example": "b3cdaddb-0359-11e9-aba2-02420a4e1b0a",
          "type": "string"
        }
      }
    }
- FindDeviceByPropertyResponseList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FindDeviceByPropertyResponseList",
      "title": "FindDeviceByPropertyResponseList",
      "description": "A success response includes an array of all matching devices. Each device includes the full device resource definition.",
      "type": "object",
      "properties": {
        "DeviceProperty": {
          "description": "",
          "type": "array",
          "items": {
            "id": "FindDeviceByPropertyResponse",
            "title": "FindDeviceByPropertyResponse",
            "description": "Change Configuration resource definition.",
            "type": "object",
            "properties": {
              "billingaccountid": {
                "description": "Billing account ID of the resource.",
                "example": "1223334444-00001",
                "type": "string"
              },
              "createdon": {
                "description": "The date the resource was created.",
                "example": "2018-12-19T06:45:41.496Z",
                "type": "string"
              },
              "eventretention": {
                "example": "90",
                "type": "string"
              },
              "iccid": {
                "description": "Cellular SIM card identifier.",
                "example": "20332350053095597842",
                "type": "string"
              },
              "id": {
                "description": "ThingSpace unique ID for the device that was added.",
                "example": "64612cb3-3685-6dad-fd2b-ea1adeb5a269",
                "type": "string"
              },
              "imei": {
                "description": "4G hardware device identifier.",
                "example": "320778042285497",
                "type": "string"
              },
              "kind": {
                "description": "Identifies the resource kind.",
                "example": "ts.device",
                "type": "string"
              },
              "lastupdated": {
                "description": "The date the resource was last updated.",
                "example": "2018-12-19T06:45:41.508Z",
                "type": "string"
              },
              "providerid": {
                "description": "The device’s service provider.",
                "example": "8a314f07-849e-6568-e3c1-8381c1f61bfc",
                "type": "string"
              },
              "refid": {
                "description": "The value of the refidtype identifier.",
                "example": "20332350053095597842",
                "type": "string"
              },
              "refidtype": {
                "description": "The device identifier type used to refer to this device.",
                "example": "iccid",
                "type": "string"
              },
              "state": {
                "description": "Service state of the device.",
                "example": "registered",
                "type": "string"
              },
              "version": {
                "description": "Version of the underlying schema resource.",
                "example": "1.0",
                "type": "string"
              },
              "versionid": {
                "description": "The version of the resource.",
                "example": "b3cdaddb-0359-11e9-aba2-02420a4e1b0a",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- SearchDeviceByPropertyResponseList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SearchDeviceByPropertyResponseList",
      "title": "SearchDeviceByPropertyResponseList",
      "description": "A success response includes an array of all matching devices.",
      "type": "object",
      "properties": {
        "DeviceProperty": {
          "description": "",
          "type": "array",
          "items": {
            "id": "SearchDeviceByPropertyResponse",
            "title": "SearchDeviceByPropertyResponse",
            "description": "The device identifier and fields to match in the search.",
            "type": "object",
            "properties": {
              "billingaccountid": {
                "description": "Billing account ID of the resource.",
                "example": "1223334444-00001",
                "type": "string"
              },
              "createdon": {
                "description": "The date the resource was created.",
                "example": "2018-12-19T06:45:41.496Z",
                "type": "string"
              },
              "eventretention": {
                "example": "90",
                "type": "string"
              },
              "fields": {
                "id": "Fields1",
                "title": "Fields1",
                "type": "object",
                "properties": {
                  "item": {
                    "id": "SearchDeviceByPropertyFields",
                    "title": "SearchDeviceByPropertyFields",
                    "description": "List of device sensors and their most recently reported values.",
                    "type": "object",
                    "properties": {
                      "acceleration": {
                        "id": "acceleration",
                        "title": "acceleration",
                        "type": "object",
                        "properties": {
                          "x": {
                            "example": "0.0277",
                            "type": "string"
                          },
                          "y": {
                            "example": "-1.0334",
                            "type": "string"
                          },
                          "z": {
                            "example": "-0.0134",
                            "type": "string"
                          }
                        }
                      },
                      "battery": {
                        "example": "95",
                        "type": "string"
                      },
                      "humidity": {
                        "example": "29",
                        "type": "string"
                      },
                      "light": {
                        "example": "150",
                        "type": "string"
                      },
                      "pressure": {
                        "example": "888",
                        "type": "string"
                      },
                      "signalStrength": {
                        "example": "-58",
                        "type": "string"
                      },
                      "temperature": {
                        "example": "19.2",
                        "type": "string"
                      },
                      "DevicePropertylocation": {
                        "id": "DevicePropertylocation",
                        "title": "DevicePropertylocation",
                        "type": "object",
                        "properties": {
                          "latitude": {
                            "example": "37.2314796",
                            "type": "string"
                          },
                          "longitude": {
                            "example": "-119.4692153",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "iccid": {
                "description": "Cellular SIM card identifier.",
                "example": "20332350053095597842",
                "type": "string"
              },
              "id": {
                "description": "ThingSpace unique ID for the device that was added.",
                "example": "64612cb3-3685-6dad-fd2b-ea1adeb5a269",
                "type": "string"
              },
              "imei": {
                "description": "4G hardware device identifier.",
                "example": "320778042285497",
                "type": "string"
              },
              "kind": {
                "description": "Identifies the resource kind.",
                "example": "ts.device",
                "type": "string"
              },
              "lastupdated": {
                "description": "The date the resource was last updated.",
                "example": "2018-12-19T06:45:41.508Z",
                "type": "string"
              },
              "providerid": {
                "description": "The device’s service provider.",
                "example": "8a314f07-849e-6568-e3c1-8381c1f61bfc",
                "type": "string"
              },
              "refid": {
                "description": "The value of the refidtype identifier.",
                "example": "20332350053095597842",
                "type": "string"
              },
              "refidtype": {
                "description": "The device identifier type used to refer to this device.",
                "example": "iccid",
                "type": "string"
              },
              "state": {
                "description": "Service state of the device.",
                "example": "registered",
                "type": "string"
              },
              "version": {
                "description": "Version of the underlying schema resource.",
                "example": "1.0",
                "type": "string"
              },
              "versionid": {
                "description": "The version of the resource.",
                "example": "b3cdaddb-0359-11e9-aba2-02420a4e1b0a",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- SearchDeviceByPropertyResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SearchDeviceByPropertyResponse",
      "title": "SearchDeviceByPropertyResponse",
      "description": "The device identifier and fields to match in the search.",
      "type": "object",
      "properties": {
        "billingaccountid": {
          "description": "Billing account ID of the resource.",
          "example": "1223334444-00001",
          "type": "string"
        },
        "createdon": {
          "description": "The date the resource was created.",
          "example": "2018-12-19T06:45:41.496Z",
          "type": "string"
        },
        "eventretention": {
          "example": "90",
          "type": "string"
        },
        "fields": {
          "id": "Fields1",
          "title": "Fields1",
          "type": "object",
          "properties": {
            "item": {
              "id": "SearchDeviceByPropertyFields",
              "title": "SearchDeviceByPropertyFields",
              "description": "List of device sensors and their most recently reported values.",
              "type": "object",
              "properties": {
                "acceleration": {
                  "id": "acceleration",
                  "title": "acceleration",
                  "type": "object",
                  "properties": {
                    "x": {
                      "example": "0.0277",
                      "type": "string"
                    },
                    "y": {
                      "example": "-1.0334",
                      "type": "string"
                    },
                    "z": {
                      "example": "-0.0134",
                      "type": "string"
                    }
                  }
                },
                "battery": {
                  "example": "95",
                  "type": "string"
                },
                "humidity": {
                  "example": "29",
                  "type": "string"
                },
                "light": {
                  "example": "150",
                  "type": "string"
                },
                "pressure": {
                  "example": "888",
                  "type": "string"
                },
                "signalStrength": {
                  "example": "-58",
                  "type": "string"
                },
                "temperature": {
                  "example": "19.2",
                  "type": "string"
                },
                "DevicePropertylocation": {
                  "id": "DevicePropertylocation",
                  "title": "DevicePropertylocation",
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "example": "37.2314796",
                      "type": "string"
                    },
                    "longitude": {
                      "example": "-119.4692153",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "iccid": {
          "description": "Cellular SIM card identifier.",
          "example": "20332350053095597842",
          "type": "string"
        },
        "id": {
          "description": "ThingSpace unique ID for the device that was added.",
          "example": "64612cb3-3685-6dad-fd2b-ea1adeb5a269",
          "type": "string"
        },
        "imei": {
          "description": "4G hardware device identifier.",
          "example": "320778042285497",
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind.",
          "example": "ts.device",
          "type": "string"
        },
        "lastupdated": {
          "description": "The date the resource was last updated.",
          "example": "2018-12-19T06:45:41.508Z",
          "type": "string"
        },
        "providerid": {
          "description": "The device’s service provider.",
          "example": "8a314f07-849e-6568-e3c1-8381c1f61bfc",
          "type": "string"
        },
        "refid": {
          "description": "The value of the refidtype identifier.",
          "example": "20332350053095597842",
          "type": "string"
        },
        "refidtype": {
          "description": "The device identifier type used to refer to this device.",
          "example": "iccid",
          "type": "string"
        },
        "state": {
          "description": "Service state of the device.",
          "example": "registered",
          "type": "string"
        },
        "version": {
          "description": "Version of the underlying schema resource.",
          "example": "1.0",
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "example": "b3cdaddb-0359-11e9-aba2-02420a4e1b0a",
          "type": "string"
        }
      }
    }
- SearchDeviceByPropertyFields: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SearchDeviceByPropertyFields",
      "title": "SearchDeviceByPropertyFields",
      "description": "List of device sensors and their most recently reported values.",
      "type": "object",
      "properties": {
        "acceleration": {
          "id": "acceleration",
          "title": "acceleration",
          "type": "object",
          "properties": {
            "x": {
              "example": "0.0277",
              "type": "string"
            },
            "y": {
              "example": "-1.0334",
              "type": "string"
            },
            "z": {
              "example": "-0.0134",
              "type": "string"
            }
          }
        },
        "battery": {
          "example": "95",
          "type": "string"
        },
        "humidity": {
          "example": "29",
          "type": "string"
        },
        "light": {
          "example": "150",
          "type": "string"
        },
        "pressure": {
          "example": "888",
          "type": "string"
        },
        "signalStrength": {
          "example": "-58",
          "type": "string"
        },
        "temperature": {
          "example": "19.2",
          "type": "string"
        },
        "DevicePropertylocation": {
          "id": "DevicePropertylocation",
          "title": "DevicePropertylocation",
          "type": "object",
          "properties": {
            "latitude": {
              "example": "37.2314796",
              "type": "string"
            },
            "longitude": {
              "example": "-119.4692153",
              "type": "string"
            }
          }
        }
      }
    }
- DevicePropertylocation: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DevicePropertylocation",
      "title": "DevicePropertylocation",
      "type": "object",
      "properties": {
        "latitude": {
          "example": "37.2314796",
          "type": "string"
        },
        "longitude": {
          "example": "-119.4692153",
          "type": "string"
        }
      }
    }
- acceleration: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "acceleration",
      "title": "acceleration",
      "type": "object",
      "properties": {
        "x": {
          "example": "0.0277",
          "type": "string"
        },
        "y": {
          "example": "-1.0334",
          "type": "string"
        },
        "z": {
          "example": "-0.0134",
          "type": "string"
        }
      }
    }
- SearchDeviceEventHistoryRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SearchDeviceEventHistoryRequest",
      "title": "SearchDeviceEventHistoryRequest",
      "description": "Search Device By Property resource definition.",
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "resourceidentifier": {
          "id": "ResourceIdentifier",
          "title": "ResourceIdentifier",
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "example": {
            "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Target ID.",
              "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
              "type": "string"
            },
            "imei": {
              "description": "Device IMEI.",
              "type": "string"
            }
          }
        },
        "$selection": {
          "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
          "example": {
            "addressscheme": "streamawsiot"
          },
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "$limitnumber": {
          "description": "The maximum number of events to include in the response.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "$page": {
          "description": "The maximum number of events to include in the response.",
          "type": "string"
        }
      },
      "required": [
        "accountidentifier",
        "resourceidentifier"
      ]
    }
- SearchDeviceEventHistoryResponseList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SearchDeviceEventHistoryResponseList",
      "title": "SearchDeviceEventHistoryResponseList",
      "description": "A success response includes an array of all matching events.",
      "type": "object",
      "properties": {
        "SearchDeviceEventHistory": {
          "description": "",
          "type": "array",
          "items": {
            "id": "SearchDeviceResponse",
            "title": "SearchDeviceResponse",
            "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
            "type": "object",
            "properties": {
              "action": {
                "description": "The action requested in this event; “change” for device configuration changes.",
                "example": "set",
                "type": "string"
              },
              "createdon": {
                "description": "The date and time of the change request.",
                "example": "2019-02-21T02:05:25.270417481Z",
                "type": "string"
              },
              "deviceid": {
                "description": "The device’s ThingSpace UUID.",
                "example": "8461f530-2e31-6e87-e357-6c38251d4d01",
                "type": "string"
              },
              "fields": {
                "id": "Fields2",
                "title": "Fields2",
                "description": "List of fields affected by the event.",
                "type": "object",
                "properties": {
                  "temperature": {
                    "example": "18.4",
                    "type": "string"
                  }
                }
              },
              "id": {
                "description": "The unique ID of this ts.event.configuration event.",
                "example": "e521b8ae-440d-6cc1-f687-7c80e085ff29",
                "type": "string"
              },
              "kind": {
                "description": "The kind of the ThingSpace resource that is being reported; “ts.event.configuration” for device configuration changes.",
                "example": "ts.event.configuration",
                "type": "string"
              },
              "lastupdated": {
                "description": "The date and time that the event was last updated.",
                "example": "2019-02-21T02:05:25.394230017Z",
                "type": "string"
              },
              "name": {
                "description": "The name of the event",
                "example": "SetConfigurationReq",
                "type": "string"
              },
              "state": {
                "description": "The current status of the request.",
                "example": "update",
                "type": "string"
              },
              "tagids": {
                "description": "UUIDs of tag resources that are applied to this device.",
                "example": [
                  "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
                  "cd81ed16-18ae-6c7d-eaba-2883b0395387"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "transactionid": {
                "description": "transaction id",
                "example": "c7a0a8cf-6856-4733-93ea-69913650e4ca",
                "type": "string"
              },
              "version": {
                "description": "The version of the resource.",
                "example": "1.0",
                "type": "string"
              },
              "versionid": {
                "description": "The version of the resource.",
                "example": "270e4820-357d-11e9-9d6c-02420a470c06",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- SearchDeviceResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SearchDeviceResponse",
      "title": "SearchDeviceResponse",
      "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
      "type": "object",
      "properties": {
        "action": {
          "description": "The action requested in this event; “change” for device configuration changes.",
          "example": "set",
          "type": "string"
        },
        "createdon": {
          "description": "The date and time of the change request.",
          "example": "2019-02-21T02:05:25.270417481Z",
          "type": "string"
        },
        "deviceid": {
          "description": "The device’s ThingSpace UUID.",
          "example": "8461f530-2e31-6e87-e357-6c38251d4d01",
          "type": "string"
        },
        "fields": {
          "id": "Fields2",
          "title": "Fields2",
          "description": "List of fields affected by the event.",
          "type": "object",
          "properties": {
            "temperature": {
              "example": "18.4",
              "type": "string"
            }
          }
        },
        "id": {
          "description": "The unique ID of this ts.event.configuration event.",
          "example": "e521b8ae-440d-6cc1-f687-7c80e085ff29",
          "type": "string"
        },
        "kind": {
          "description": "The kind of the ThingSpace resource that is being reported; “ts.event.configuration” for device configuration changes.",
          "example": "ts.event.configuration",
          "type": "string"
        },
        "lastupdated": {
          "description": "The date and time that the event was last updated.",
          "example": "2019-02-21T02:05:25.394230017Z",
          "type": "string"
        },
        "name": {
          "description": "The name of the event",
          "example": "SetConfigurationReq",
          "type": "string"
        },
        "state": {
          "description": "The current status of the request.",
          "example": "update",
          "type": "string"
        },
        "tagids": {
          "description": "UUIDs of tag resources that are applied to this device.",
          "example": [
            "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
            "cd81ed16-18ae-6c7d-eaba-2883b0395387"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "transactionid": {
          "description": "transaction id",
          "example": "c7a0a8cf-6856-4733-93ea-69913650e4ca",
          "type": "string"
        },
        "version": {
          "description": "The version of the resource.",
          "example": "1.0",
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "example": "270e4820-357d-11e9-9d6c-02420a470c06",
          "type": "string"
        }
      }
    }
- SearchSensorHistoryRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SearchSensorHistoryRequest",
      "title": "SearchSensorHistoryRequest",
      "description": "Search Device By Property resource definition.",
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "resourceidentifier": {
          "id": "ResourceIdentifier",
          "title": "ResourceIdentifier",
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "example": {
            "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Target ID.",
              "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
              "type": "string"
            },
            "imei": {
              "description": "Device IMEI.",
              "type": "string"
            }
          }
        },
        "$limitnumber": {
          "description": "The maximum number of events to include in the response.",
          "example": 2,
          "type": "integer",
          "format": "int32"
        },
        "$page": {
          "description": "The maximum number of events to include in the response.",
          "type": "string"
        }
      },
      "required": [
        "accountidentifier",
        "resourceidentifier"
      ]
    }
- SearchSensorHistoryResponseList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SearchSensorHistoryResponseList",
      "title": "SearchSensorHistoryResponseList",
      "description": "A success response includes an array of all matching events.",
      "type": "object",
      "properties": {
        "SearchSensorHistory": {
          "description": "",
          "type": "array",
          "items": {
            "id": "SearchDeviceResponse",
            "title": "SearchDeviceResponse",
            "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
            "type": "object",
            "properties": {
              "action": {
                "description": "The action requested in this event; “change” for device configuration changes.",
                "example": "set",
                "type": "string"
              },
              "createdon": {
                "description": "The date and time of the change request.",
                "example": "2019-02-21T02:05:25.270417481Z",
                "type": "string"
              },
              "deviceid": {
                "description": "The device’s ThingSpace UUID.",
                "example": "8461f530-2e31-6e87-e357-6c38251d4d01",
                "type": "string"
              },
              "fields": {
                "id": "Fields2",
                "title": "Fields2",
                "description": "List of fields affected by the event.",
                "type": "object",
                "properties": {
                  "temperature": {
                    "example": "18.4",
                    "type": "string"
                  }
                }
              },
              "id": {
                "description": "The unique ID of this ts.event.configuration event.",
                "example": "e521b8ae-440d-6cc1-f687-7c80e085ff29",
                "type": "string"
              },
              "kind": {
                "description": "The kind of the ThingSpace resource that is being reported; “ts.event.configuration” for device configuration changes.",
                "example": "ts.event.configuration",
                "type": "string"
              },
              "lastupdated": {
                "description": "The date and time that the event was last updated.",
                "example": "2019-02-21T02:05:25.394230017Z",
                "type": "string"
              },
              "name": {
                "description": "The name of the event",
                "example": "SetConfigurationReq",
                "type": "string"
              },
              "state": {
                "description": "The current status of the request.",
                "example": "update",
                "type": "string"
              },
              "tagids": {
                "description": "UUIDs of tag resources that are applied to this device.",
                "example": [
                  "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
                  "cd81ed16-18ae-6c7d-eaba-2883b0395387"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "transactionid": {
                "description": "transaction id",
                "example": "c7a0a8cf-6856-4733-93ea-69913650e4ca",
                "type": "string"
              },
              "version": {
                "description": "The version of the resource.",
                "example": "1.0",
                "type": "string"
              },
              "versionid": {
                "description": "The version of the resource.",
                "example": "270e4820-357d-11e9-9d6c-02420a470c06",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- RemoveDeviceRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RemoveDeviceRequest",
      "title": "RemoveDeviceRequest",
      "description": "The request body identifies the device to delete.",
      "type": "object",
      "properties": {
        "accountidentifier": {
          "id": "AccountIdentifier",
          "title": "AccountIdentifier",
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "example": {
            "billingaccountid": "0000000000-00001"
          },
          "type": "object",
          "properties": {
            "billingaccountid": {
              "example": "1223334444-00001",
              "type": "string"
            }
          }
        },
        "resourceidentifier": {
          "id": "ResourceIdentifier",
          "title": "ResourceIdentifier",
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "example": {
            "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
          },
          "type": "object",
          "properties": {
            "id": {
              "description": "Target ID.",
              "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
              "type": "string"
            },
            "imei": {
              "description": "Device IMEI.",
              "type": "string"
            }
          }
        }
      },
      "required": [
        "accountidentifier",
        "resourceidentifier"
      ]
    }
- CreateIoTApplicationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateIoTApplicationRequest",
      "title": "CreateIoTApplicationRequest",
      "description": "The request body must include the UUID of the subscription that you want to update plus any properties that you want to change.",
      "type": "object",
      "properties": {
        "appName": {
          "description": "A user defined name for the application being deployed in Azure IoT Central.",
          "example": "newarmapp1",
          "type": "string"
        },
        "billingAccountID": {
          "description": "The ThingSpace ID of the authenticating billing account",
          "example": "0000123456-00001",
          "type": "string"
        },
        "clientID": {
          "description": "The Azure ClientID of the associated Azure target account",
          "example": "UUID",
          "type": "string"
        },
        "clientSecret": {
          "description": "The Azure Client Secret of the associated Azure target account",
          "example": "client secret",
          "type": "string"
        },
        "emailIDs": {
          "description": "The “email IDs” to be added to/sent to with this API.",
          "example": "email@domain.com",
          "type": "string"
        },
        "resourcegroup": {
          "description": "The Azure Resource group of the associated Azure target account",
          "example": "Myresourcegroup",
          "type": "string"
        },
        "sampleIOTcApp": {
          "description": "This is the reference Azure IoT Central application developed by Verizon.",
          "example": "app ID",
          "type": "string"
        },
        "subscriptionID": {
          "description": "The Azure Subscription ID of the associated Azure target account",
          "example": "subscription ID",
          "type": "string"
        },
        "tenantID": {
          "description": "The Azure Tenant ID of the associated Azure target account",
          "example": "tenant ID",
          "type": "string"
        }
      }
    }
- CreateIoTApplicationResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateIoTApplicationResponse",
      "title": "CreateIoTApplicationResponse",
      "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
      "type": "object",
      "properties": {
        "appName": {
          "description": "An application will be created under the user's Azure subscription with this name and of type IOT central.",
          "example": "newarmapp1",
          "type": "string"
        },
        "sharedSecret": {
          "description": "Part of the user credentials (from Azure) the user needs to use for calling further TS Core APIs for setting up Azure cloud connector.",
          "example": "SharedAccessSignaturesr={client secret}",
          "type": "string"
        },
        "url": {
          "description": "An IOT central endpoint the user can use to see the data that is being streamed.",
          "example": "https://newarmapp1.azureiotcentral.com",
          "type": "string"
        }
      }
    }
- Fields: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Fields",
      "title": "Fields",
      "description": "List of fields affected by the event.",
      "example": {
        "configuration": {
          "frequency": "Low"
        }
      },
      "type": "object",
      "properties": {
        "configuration": {
          "id": "configuration",
          "title": "configuration",
          "description": "List of the field names and values to set.",
          "example": {
            "frequency": "Low"
          },
          "type": "object",
          "properties": {
            "frequency": {
              "example": "Low",
              "type": "string"
            }
          }
        }
      }
    }
- Fields1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Fields1",
      "title": "Fields1",
      "type": "object",
      "properties": {
        "item": {
          "id": "SearchDeviceByPropertyFields",
          "title": "SearchDeviceByPropertyFields",
          "description": "List of device sensors and their most recently reported values.",
          "type": "object",
          "properties": {
            "acceleration": {
              "id": "acceleration",
              "title": "acceleration",
              "type": "object",
              "properties": {
                "x": {
                  "example": "0.0277",
                  "type": "string"
                },
                "y": {
                  "example": "-1.0334",
                  "type": "string"
                },
                "z": {
                  "example": "-0.0134",
                  "type": "string"
                }
              }
            },
            "battery": {
              "example": "95",
              "type": "string"
            },
            "humidity": {
              "example": "29",
              "type": "string"
            },
            "light": {
              "example": "150",
              "type": "string"
            },
            "pressure": {
              "example": "888",
              "type": "string"
            },
            "signalStrength": {
              "example": "-58",
              "type": "string"
            },
            "temperature": {
              "example": "19.2",
              "type": "string"
            },
            "DevicePropertylocation": {
              "id": "DevicePropertylocation",
              "title": "DevicePropertylocation",
              "type": "object",
              "properties": {
                "latitude": {
                  "example": "37.2314796",
                  "type": "string"
                },
                "longitude": {
                  "example": "-119.4692153",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
- Fields2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Fields2",
      "title": "Fields2",
      "description": "List of fields affected by the event.",
      "type": "object",
      "properties": {
        "temperature": {
          "example": "18.4",
          "type": "string"
        }
      }
    }
- BullseyeServiceResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BullseyeServiceResult",
      "title": "BullseyeServiceResult",
      "description": "Status of Hyper Precise Location on the device.",
      "example": {
        "accountNumber": "0844021539-00001",
        "deviceList": [
          {
            "imei": "709312034493372",
            "BullseyeEnable": true
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "The account the device belongs to.",
          "example": "0844021539-00001",
          "type": "string"
        },
        "deviceList": {
          "description": "List of devices.",
          "example": [
            {
              "imei": "709312034493372",
              "BullseyeEnable": true
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceServiceInformation",
            "title": "DeviceServiceInformation",
            "description": "Device service information.",
            "example": {
              "imei": "709312034493372",
              "BullseyeEnable": true
            },
            "type": "object",
            "properties": {
              "imei": {
                "description": "The International Mobile Equipment Identifier of the device.",
                "example": "709312034493372",
                "type": "string"
              },
              "BullseyeEnable": {
                "description": "Shows if Hyper Precise is enabled (true) or disabled (false).",
                "example": true,
                "type": "boolean"
              },
              "responseType": {
                "id": "ApiResponseCode",
                "title": "ApiResponseCode",
                "description": "ResponseCode and/or a message indicating success or failure of the request.",
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ResponseCode",
                    "description": "Possible response codes.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "More details about the responseCode received.",
                    "type": "string"
                  }
                },
                "required": [
                  "responseCode",
                  "message"
                ]
              }
            },
            "required": [
              "imei",
              "BullseyeEnable"
            ]
          }
        },
        "responseType": {
          "$ref": "ApiResponseCode"
        }
      }
    }
- DeviceServiceInformation: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceServiceInformation",
      "title": "DeviceServiceInformation",
      "description": "Device service information.",
      "example": {
        "imei": "709312034493372",
        "BullseyeEnable": true
      },
      "type": "object",
      "properties": {
        "imei": {
          "description": "The International Mobile Equipment Identifier of the device.",
          "example": "709312034493372",
          "type": "string"
        },
        "BullseyeEnable": {
          "description": "Shows if Hyper Precise is enabled (true) or disabled (false).",
          "example": true,
          "type": "boolean"
        },
        "responseType": {
          "id": "ApiResponseCode",
          "title": "ApiResponseCode",
          "description": "ResponseCode and/or a message indicating success or failure of the request.",
          "type": "object",
          "properties": {
            "responseCode": {
              "title": "ResponseCode",
              "description": "Possible response codes.",
              "example": "INVALID_ACCESS",
              "type": "string",
              "enum": [
                "INVALID_ACCESS",
                "INVALID_PARAMETER",
                "INTERNAL_ERROR",
                "SUCCESS"
              ]
            },
            "message": {
              "description": "More details about the responseCode received.",
              "type": "string"
            }
          },
          "required": [
            "responseCode",
            "message"
          ]
        }
      },
      "required": [
        "imei",
        "BullseyeEnable"
      ]
    }
- BullseyeServiceRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BullseyeServiceRequest",
      "title": "BullseyeServiceRequest",
      "description": "Account number and list of devices.",
      "example": {
        "deviceList": [
          {
            "imei": "354658090356210",
            "BullseyeEnable": true
          }
        ],
        "accountNumber": "0242080353-00001"
      },
      "type": "object",
      "properties": {
        "deviceList": {
          "description": "A list of devices.",
          "example": [
            {
              "imei": "354658090356210",
              "BullseyeEnable": true
            }
          ],
          "type": "array",
          "items": {
            "id": "DeviceServiceRequest",
            "title": "DeviceServiceRequest",
            "description": "Device information.",
            "example": {
              "imei": "354658090356210",
              "BullseyeEnable": true
            },
            "type": "object",
            "properties": {
              "imei": {
                "description": "International Mobile Equipment Identifier. The unique ID of a device.",
                "example": "354658090356210",
                "type": "string",
                "pattern": "^[0-9]{15}$"
              },
              "BullseyeEnable": {
                "description": "Set to Enable (true) or Disable (false).",
                "example": true,
                "type": "boolean"
              }
            },
            "required": [
              "imei",
              "BullseyeEnable"
            ]
          }
        },
        "accountNumber": {
          "description": "A unique identifier for an account.",
          "example": "0242080353-00001",
          "type": "string"
        }
      },
      "required": [
        "deviceList",
        "accountNumber"
      ]
    }
- DeviceServiceRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceServiceRequest",
      "title": "DeviceServiceRequest",
      "description": "Device information.",
      "example": {
        "imei": "354658090356210",
        "BullseyeEnable": true
      },
      "type": "object",
      "properties": {
        "imei": {
          "description": "International Mobile Equipment Identifier. The unique ID of a device.",
          "example": "354658090356210",
          "type": "string",
          "pattern": "^[0-9]{15}$"
        },
        "BullseyeEnable": {
          "description": "Set to Enable (true) or Disable (false).",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "imei",
        "BullseyeEnable"
      ]
    }
- ErrorResponseCode: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ErrorResponseCode",
      "description": "Error Code.",
      "example": "INVALID_ACCESS",
      "type": "string",
      "enum": [
        "INVALID_ACCESS",
        "INVALID_PARAMETER",
        "INTERNAL_ERROR",
        "SUCCESS"
      ]
    }
- HyperPreciseLocationResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "HyperPreciseLocationResult",
      "title": "HyperPreciseLocationResult",
      "description": "Error response.",
      "type": "object",
      "properties": {
        "responseCode": {
          "title": "ErrorResponseCode",
          "description": "Error Code.",
          "example": "INVALID_ACCESS",
          "type": "string",
          "enum": [
            "INVALID_ACCESS",
            "INVALID_PARAMETER",
            "INTERNAL_ERROR",
            "SUCCESS"
          ]
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "fault": {
          "id": "HyperPreciseLocationFault",
          "title": "HyperPreciseLocationFault",
          "description": "Fault occurred while responding.",
          "example": {
            "code": "900906",
            "message": "No matching resource found in the API for the given request",
            "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
          },
          "type": "object",
          "properties": {
            "code": {
              "description": "Hyper precise location fault code.",
              "example": "900906",
              "type": "string"
            },
            "message": {
              "description": "Hyper precise location fault message.",
              "example": "No matching resource found in the API for the given request",
              "type": "string"
            },
            "description": {
              "description": "Hyper precise location fault description.",
              "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
              "type": "string"
            }
          }
        },
        "example": {}
      }
    }
- HyperPreciseLocationFault: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "HyperPreciseLocationFault",
      "title": "HyperPreciseLocationFault",
      "description": "Fault occurred while responding.",
      "example": {
        "code": "900906",
        "message": "No matching resource found in the API for the given request",
        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
      },
      "type": "object",
      "properties": {
        "code": {
          "description": "Hyper precise location fault code.",
          "example": "900906",
          "type": "string"
        },
        "message": {
          "description": "Hyper precise location fault message.",
          "example": "No matching resource found in the API for the given request",
          "type": "string"
        },
        "description": {
          "description": "Hyper precise location fault description.",
          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
          "type": "string"
        }
      }
    }
- ApiResponseCode: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ApiResponseCode",
      "title": "ApiResponseCode",
      "description": "ResponseCode and/or a message indicating success or failure of the request.",
      "type": "object",
      "properties": {
        "responseCode": {
          "title": "ResponseCode",
          "description": "Possible response codes.",
          "example": "INVALID_ACCESS",
          "type": "string",
          "enum": [
            "INVALID_ACCESS",
            "INVALID_PARAMETER",
            "INTERNAL_ERROR",
            "SUCCESS"
          ]
        },
        "message": {
          "description": "More details about the responseCode received.",
          "type": "string"
        }
      },
      "required": [
        "responseCode",
        "message"
      ]
    }
- ResponseCode: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ResponseCode",
      "description": "Possible response codes.",
      "example": "INVALID_ACCESS",
      "type": "string",
      "enum": [
        "INVALID_ACCESS",
        "INVALID_PARAMETER",
        "INTERNAL_ERROR",
        "SUCCESS"
      ]
    }
- AggregateSessionReportRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AggregateSessionReportRequest",
      "title": "AggregateSessionReportRequest",
      "description": "Request for getting an aggregated session report.",
      "example": {
        "accountNumber": "0844021539-00001",
        "startDate": "2022-12-09T22:01:06.217Z",
        "endDate": "2022-12-09T22:01:08.734Z",
        "imei": [
          "709312034493372"
        ],
        "deviceGroup": null,
        "dataPlan": null,
        "noSessionFlag": "false"
      },
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "The unique identifier for the account.",
          "example": "0844021539-00001",
          "type": "string"
        },
        "imei": {
          "description": "Devices for which return usage info. Could be 0, 1 or more. In case of 0 will return all devices belonging to customer (except of filtered by other parameters).",
          "example": [
            "709312034493372"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "startDate": {
          "description": "Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.",
          "example": "2022-12-09T22:01:06.217Z",
          "type": "string"
        },
        "endDate": {
          "description": "End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.",
          "example": "2022-12-09T22:01:08.734Z",
          "type": "string"
        },
        "deviceGroup": {
          "description": "User defined group name the devices are a member of.",
          "type": [
            "string",
            "null"
          ]
        },
        "deviceLabel": {
          "description": "Optional filter parameter.",
          "type": [
            "string",
            "null"
          ]
        },
        "dataPlan": {
          "description": "The data plan the devices beign queried belong to.",
          "type": [
            "string",
            "null"
          ]
        },
        "noSessionFlag": {
          "description": "Optional filter parameter which return only devices with no sessions.",
          "example": "false",
          "type": "string"
        }
      },
      "required": [
        "accountNumber",
        "imei"
      ]
    }
- AggregateUsageError: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AggregateUsageError",
      "title": "AggregateUsageError",
      "description": "Error reported by a device.",
      "type": "object",
      "properties": {
        "imei": {
          "description": "International Mobile Equipment Identifier. This is the ID of the device reporting errors.",
          "type": "string"
        },
        "errorMessage": {
          "description": "A general error message.",
          "type": "string"
        },
        "errorResponse": {
          "id": "IErrorMessage",
          "title": "IErrorMessage",
          "description": "Error message.",
          "example": {
            "httpStatusCode": "200 OK",
            "errorCode": "INVALID_ACCESS"
          },
          "type": "object",
          "properties": {
            "errorCode": {
              "title": "ErrorResponseCode",
              "description": "Error Code.",
              "example": "INVALID_ACCESS",
              "type": "string",
              "enum": [
                "INVALID_ACCESS",
                "INVALID_PARAMETER",
                "INTERNAL_ERROR",
                "SUCCESS"
              ]
            },
            "errorMessage": {
              "description": "Details and additional information about the error code.",
              "type": "string"
            },
            "httpStatusCode": {
              "title": "HttpStatusCode",
              "description": "HTML error code and description.",
              "example": "200 OK",
              "type": "string",
              "enum": [
                "100 CONTINUE",
                "101 SWITCHING_PROTOCOLS",
                "102 PROCESSING",
                "103 CHECKPOINT",
                "200 OK",
                "201 CREATED",
                "202 ACCEPTED",
                "203 NON_AUTHORITATIVE_INFORMATION",
                "204 NO_CONTENT",
                "205 RESET_CONTENT",
                "206 PARTIAL_CONTENT",
                "207 MULTI_STATUS",
                "208 ALREADY_REPORTED",
                "226 IM_USED",
                "300 MULTIPLE_CHOICES",
                "301 MOVED_PERMANENTLY",
                "302 FOUND",
                "302 MOVED_TEMPORARILY",
                "303 SEE_OTHER",
                "304 NOT_MODIFIED",
                "305 USE_PROXY",
                "307 TEMPORARY_REDIRECT",
                "308 PERMANENT_REDIRECT",
                "400 BAD_REQUEST",
                "401 UNAUTHORIZED",
                "402 PAYMENT_REQUIRED",
                "403 FORBIDDEN",
                "404 NOT_FOUND",
                "405 METHOD_NOT_ALLOWED",
                "406 NOT_ACCEPTABLE",
                "407 PROXY_AUTHENTICATION_REQUIRED",
                "408 REQUEST_TIMEOUT",
                "409 CONFLICT",
                "410 GONE",
                "411 LENGTH_REQUIRED",
                "412 PRECONDITION_FAILED",
                "413 PAYLOAD_TOO_LARGE",
                "413 REQUEST_ENTITY_TOO_LARGE",
                "414 URI_TOO_LONG",
                "414 REQUEST_URI_TOO_LONG",
                "415 UNSUPPORTED_MEDIA_TYPE",
                "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                "417 EXPECTATION_FAILED",
                "418 I_AM_A_TEAPOT",
                "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                "420 METHOD_FAILURE",
                "421 DESTINATION_LOCKED",
                "422 UNPROCESSABLE_ENTITY",
                "423 LOCKED",
                "424 FAILED_DEPENDENCY",
                "425 TOO_EARLY",
                "426 UPGRADE_REQUIRED",
                "428 PRECONDITION_REQUIRED",
                "429 TOO_MANY_REQUESTS",
                "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                "500 INTERNAL_SERVER_ERROR",
                "501 NOT_IMPLEMENTED",
                "502 BAD_GATEWAY",
                "503 SERVICE_UNAVAILABLE",
                "504 GATEWAY_TIMEOUT",
                "505 HTTP_VERSION_NOT_SUPPORTED",
                "506 VARIANT_ALSO_NEGOTIATES",
                "507 INSUFFICIENT_STORAGE",
                "508 LOOP_DETECTED",
                "509 BANDWIDTH_LIMIT_EXCEEDED",
                "510 NOT_EXTENDED",
                "511 NETWORK_AUTHENTICATION_REQUIRED"
              ]
            },
            "detailErrorMessage": {
              "description": "More detail and information about the HTML error code.",
              "type": "string"
            }
          }
        }
      }
    }
- AggregateUsageItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AggregateUsageItem",
      "title": "AggregateUsageItem",
      "description": "Contains usage information per device.",
      "type": "object",
      "properties": {
        "imei": {
          "description": "International Mobile Equipment Identifier. This is the ID of the device reporting usage.",
          "example": "709312034493372",
          "type": "string"
        },
        "numberOfSessions": {
          "description": "Number of sessions established by the device reporting usage.",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "bytesTransferred": {
          "description": "The amount of data transferred by the device reporting usage, measured in Bytes.",
          "example": 2057,
          "type": "integer",
          "format": "int32"
        },
        "example": {}
      }
    }
- IErrorMessage: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "IErrorMessage",
      "title": "IErrorMessage",
      "description": "Error message.",
      "example": {
        "httpStatusCode": "200 OK",
        "errorCode": "INVALID_ACCESS"
      },
      "type": "object",
      "properties": {
        "errorCode": {
          "title": "ErrorResponseCode",
          "description": "Error Code.",
          "example": "INVALID_ACCESS",
          "type": "string",
          "enum": [
            "INVALID_ACCESS",
            "INVALID_PARAMETER",
            "INTERNAL_ERROR",
            "SUCCESS"
          ]
        },
        "errorMessage": {
          "description": "Details and additional information about the error code.",
          "type": "string"
        },
        "httpStatusCode": {
          "title": "HttpStatusCode",
          "description": "HTML error code and description.",
          "example": "200 OK",
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "detailErrorMessage": {
          "description": "More detail and information about the HTML error code.",
          "type": "string"
        }
      }
    }
- HttpStatusCode: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "HttpStatusCode",
      "description": "HTML error code and description.",
      "example": "200 OK",
      "type": "string",
      "enum": [
        "100 CONTINUE",
        "101 SWITCHING_PROTOCOLS",
        "102 PROCESSING",
        "103 CHECKPOINT",
        "200 OK",
        "201 CREATED",
        "202 ACCEPTED",
        "203 NON_AUTHORITATIVE_INFORMATION",
        "204 NO_CONTENT",
        "205 RESET_CONTENT",
        "206 PARTIAL_CONTENT",
        "207 MULTI_STATUS",
        "208 ALREADY_REPORTED",
        "226 IM_USED",
        "300 MULTIPLE_CHOICES",
        "301 MOVED_PERMANENTLY",
        "302 FOUND",
        "302 MOVED_TEMPORARILY",
        "303 SEE_OTHER",
        "304 NOT_MODIFIED",
        "305 USE_PROXY",
        "307 TEMPORARY_REDIRECT",
        "308 PERMANENT_REDIRECT",
        "400 BAD_REQUEST",
        "401 UNAUTHORIZED",
        "402 PAYMENT_REQUIRED",
        "403 FORBIDDEN",
        "404 NOT_FOUND",
        "405 METHOD_NOT_ALLOWED",
        "406 NOT_ACCEPTABLE",
        "407 PROXY_AUTHENTICATION_REQUIRED",
        "408 REQUEST_TIMEOUT",
        "409 CONFLICT",
        "410 GONE",
        "411 LENGTH_REQUIRED",
        "412 PRECONDITION_FAILED",
        "413 PAYLOAD_TOO_LARGE",
        "413 REQUEST_ENTITY_TOO_LARGE",
        "414 URI_TOO_LONG",
        "414 REQUEST_URI_TOO_LONG",
        "415 UNSUPPORTED_MEDIA_TYPE",
        "416 REQUESTED_RANGE_NOT_SATISFIABLE",
        "417 EXPECTATION_FAILED",
        "418 I_AM_A_TEAPOT",
        "419 INSUFFICIENT_SPACE_ON_RESOURCE",
        "420 METHOD_FAILURE",
        "421 DESTINATION_LOCKED",
        "422 UNPROCESSABLE_ENTITY",
        "423 LOCKED",
        "424 FAILED_DEPENDENCY",
        "425 TOO_EARLY",
        "426 UPGRADE_REQUIRED",
        "428 PRECONDITION_REQUIRED",
        "429 TOO_MANY_REQUESTS",
        "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
        "451 UNAVAILABLE_FOR_LEGAL_REASONS",
        "500 INTERNAL_SERVER_ERROR",
        "501 NOT_IMPLEMENTED",
        "502 BAD_GATEWAY",
        "503 SERVICE_UNAVAILABLE",
        "504 GATEWAY_TIMEOUT",
        "505 HTTP_VERSION_NOT_SUPPORTED",
        "506 VARIANT_ALSO_NEGOTIATES",
        "507 INSUFFICIENT_STORAGE",
        "508 LOOP_DETECTED",
        "509 BANDWIDTH_LIMIT_EXCEEDED",
        "510 NOT_EXTENDED",
        "511 NETWORK_AUTHENTICATION_REQUIRED"
      ]
    }
- AggregateSessionReport: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AggregateSessionReport",
      "title": "AggregateSessionReport",
      "description": "Session and usage details for up to 10 devices.",
      "example": {
        "txid": null,
        "usage": [
          {
            "imei": "709312034493372",
            "numberOfSessions": 1,
            "bytesTransferred": 2057
          }
        ]
      },
      "type": "object",
      "properties": {
        "txid": {
          "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
          "type": [
            "string",
            "null"
          ]
        },
        "usage": {
          "description": "Contains usage per device.",
          "example": [
            {
              "imei": "709312034493372",
              "numberOfSessions": 1,
              "bytesTransferred": 2057
            }
          ],
          "type": "array",
          "items": {
            "id": "AggregateUsageItem",
            "title": "AggregateUsageItem",
            "description": "Contains usage information per device.",
            "type": "object",
            "properties": {
              "imei": {
                "description": "International Mobile Equipment Identifier. This is the ID of the device reporting usage.",
                "example": "709312034493372",
                "type": "string"
              },
              "numberOfSessions": {
                "description": "Number of sessions established by the device reporting usage.",
                "example": 1,
                "type": "integer",
                "format": "int32"
              },
              "bytesTransferred": {
                "description": "The amount of data transferred by the device reporting usage, measured in Bytes.",
                "example": 2057,
                "type": "integer",
                "format": "int32"
              },
              "example": {}
            }
          },
          "uniqueItems": true
        },
        "errors": {
          "description": "An object containing any errors reported by the device.",
          "type": "array",
          "items": {
            "id": "AggregateUsageError",
            "title": "AggregateUsageError",
            "description": "Error reported by a device.",
            "type": "object",
            "properties": {
              "imei": {
                "description": "International Mobile Equipment Identifier. This is the ID of the device reporting errors.",
                "type": "string"
              },
              "errorMessage": {
                "description": "A general error message.",
                "type": "string"
              },
              "errorResponse": {
                "id": "IErrorMessage",
                "title": "IErrorMessage",
                "description": "Error message.",
                "example": {
                  "httpStatusCode": "200 OK",
                  "errorCode": "INVALID_ACCESS"
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "errorMessage": {
                    "description": "Details and additional information about the error code.",
                    "type": "string"
                  },
                  "httpStatusCode": {
                    "title": "HttpStatusCode",
                    "description": "HTML error code and description.",
                    "example": "200 OK",
                    "type": "string",
                    "enum": [
                      "100 CONTINUE",
                      "101 SWITCHING_PROTOCOLS",
                      "102 PROCESSING",
                      "103 CHECKPOINT",
                      "200 OK",
                      "201 CREATED",
                      "202 ACCEPTED",
                      "203 NON_AUTHORITATIVE_INFORMATION",
                      "204 NO_CONTENT",
                      "205 RESET_CONTENT",
                      "206 PARTIAL_CONTENT",
                      "207 MULTI_STATUS",
                      "208 ALREADY_REPORTED",
                      "226 IM_USED",
                      "300 MULTIPLE_CHOICES",
                      "301 MOVED_PERMANENTLY",
                      "302 FOUND",
                      "302 MOVED_TEMPORARILY",
                      "303 SEE_OTHER",
                      "304 NOT_MODIFIED",
                      "305 USE_PROXY",
                      "307 TEMPORARY_REDIRECT",
                      "308 PERMANENT_REDIRECT",
                      "400 BAD_REQUEST",
                      "401 UNAUTHORIZED",
                      "402 PAYMENT_REQUIRED",
                      "403 FORBIDDEN",
                      "404 NOT_FOUND",
                      "405 METHOD_NOT_ALLOWED",
                      "406 NOT_ACCEPTABLE",
                      "407 PROXY_AUTHENTICATION_REQUIRED",
                      "408 REQUEST_TIMEOUT",
                      "409 CONFLICT",
                      "410 GONE",
                      "411 LENGTH_REQUIRED",
                      "412 PRECONDITION_FAILED",
                      "413 PAYLOAD_TOO_LARGE",
                      "413 REQUEST_ENTITY_TOO_LARGE",
                      "414 URI_TOO_LONG",
                      "414 REQUEST_URI_TOO_LONG",
                      "415 UNSUPPORTED_MEDIA_TYPE",
                      "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                      "417 EXPECTATION_FAILED",
                      "418 I_AM_A_TEAPOT",
                      "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                      "420 METHOD_FAILURE",
                      "421 DESTINATION_LOCKED",
                      "422 UNPROCESSABLE_ENTITY",
                      "423 LOCKED",
                      "424 FAILED_DEPENDENCY",
                      "425 TOO_EARLY",
                      "426 UPGRADE_REQUIRED",
                      "428 PRECONDITION_REQUIRED",
                      "429 TOO_MANY_REQUESTS",
                      "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                      "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                      "500 INTERNAL_SERVER_ERROR",
                      "501 NOT_IMPLEMENTED",
                      "502 BAD_GATEWAY",
                      "503 SERVICE_UNAVAILABLE",
                      "504 GATEWAY_TIMEOUT",
                      "505 HTTP_VERSION_NOT_SUPPORTED",
                      "506 VARIANT_ALSO_NEGOTIATES",
                      "507 INSUFFICIENT_STORAGE",
                      "508 LOOP_DETECTED",
                      "509 BANDWIDTH_LIMIT_EXCEEDED",
                      "510 NOT_EXTENDED",
                      "511 NETWORK_AUTHENTICATION_REQUIRED"
                    ]
                  },
                  "detailErrorMessage": {
                    "description": "More detail and information about the HTML error code.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "uniqueItems": true
        }
      },
      "required": [
        "txid"
      ]
    }
- AggregatedReportCallbackResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AggregatedReportCallbackResult",
      "title": "AggregatedReportCallbackResult",
      "description": "Aggregated usage report (Asynchronous).",
      "example": {
        "txid": "60c07fff-470b-4d6d-afcc-75e6a7c238f6",
        "status": "QUEUED"
      },
      "type": "object",
      "properties": {
        "txid": {
          "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
          "example": "60c07fff-470b-4d6d-afcc-75e6a7c238f6",
          "type": "string"
        },
        "status": {
          "title": "AggregatedReportCallbackStatus",
          "description": "QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all other requests are QUEUED.",
          "example": "QUEUED",
          "type": "string",
          "enum": [
            "QUEUED",
            "COMPLETED"
          ]
        }
      },
      "required": [
        "txid"
      ]
    }
- AggregatedReportCallbackStatus: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "AggregatedReportCallbackStatus",
      "description": "QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all other requests are QUEUED.",
      "example": "QUEUED",
      "type": "string",
      "enum": [
        "QUEUED",
        "COMPLETED"
      ]
    }
- SessionReportRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SessionReportRequest",
      "title": "SessionReportRequest",
      "description": "Request for obtaining a session report.",
      "example": {
        "accountNumber": "0844021539-00001",
        "startDate": "2022-12-09T22:01:06.217Z",
        "endDate": "2022-12-09T22:01:08.734Z",
        "imei": "709312034493372",
        "durationLow": null,
        "durationHigh": null
      },
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "Account Number.",
          "example": "0844021539-00001",
          "type": "string"
        },
        "imei": {
          "description": "Device ids.",
          "example": "709312034493372",
          "type": "string"
        },
        "startDate": {
          "description": "Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.",
          "example": "CURRENT_MONTH",
          "type": "string"
        },
        "endDate": {
          "description": "End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.",
          "example": "CURRENT_MONTH",
          "type": "string"
        },
        "durationLow": {
          "description": "The Low value of session duration.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "durationHigh": {
          "description": "The High value of session duration.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        }
      },
      "required": [
        "accountNumber",
        "imei"
      ]
    }
- DailyUsageItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DailyUsageItem",
      "title": "DailyUsageItem",
      "description": "Contains only dates when device had sessions.",
      "type": "object",
      "properties": {
        "startTime": {
          "description": "Start date of session. ISO 8601 format.",
          "type": "string"
        },
        "endTime": {
          "description": "End date of session. ISO 8601 format.",
          "type": "string"
        },
        "numBytes": {
          "description": "Amount of data transferred, measured in Bytes.",
          "type": "integer",
          "format": "int32"
        }
      }
    }
- SessionReport: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SessionReport",
      "title": "SessionReport",
      "description": "Session report for a device.",
      "example": {
        "id": "709312034493372",
        "txid": "60c07fff-470b-4d6d-afcc-75e6a7c238f6"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The 10-digit ID of the device.",
          "example": "709312034493372",
          "type": "string"
        },
        "txid": {
          "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
          "example": "60c07fff-470b-4d6d-afcc-75e6a7c238f6",
          "type": [
            "string",
            "null"
          ]
        },
        "sessions": {
          "description": "An object containing the start and end time of the session with the amount of data transferred.",
          "type": "array",
          "items": {
            "id": "DailyUsageItem",
            "title": "DailyUsageItem",
            "description": "Contains only dates when device had sessions.",
            "type": "object",
            "properties": {
              "startTime": {
                "description": "Start date of session. ISO 8601 format.",
                "type": "string"
              },
              "endTime": {
                "description": "End date of session. ISO 8601 format.",
                "type": "string"
              },
              "numBytes": {
                "description": "Amount of data transferred, measured in Bytes.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "example": {}
      },
      "required": [
        "id",
        "txid"
      ]
    }
- CallbackCreated: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CallbackCreated",
      "title": "CallbackCreated",
      "example": {
        "aname": "0844021539-00001",
        "name": "BullseyeReporting",
        "url": "https://tsustgtests.mocklab.io/notifications/bullseye"
      },
      "type": "object",
      "properties": {
        "aname": {
          "description": "The billing account number for which callback messages will be sent.",
          "example": "0844021539-00001",
          "type": "string"
        },
        "name": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "example": "BullseyeReporting",
          "type": "string"
        },
        "url": {
          "description": "The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.",
          "example": "https://tsustgtests.mocklab.io/notifications/bullseye",
          "type": "string"
        }
      },
      "required": [
        "aname",
        "name"
      ]
    }
- CallbackRegistered: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CallbackRegistered",
      "title": "CallbackRegistered",
      "description": "Registered callback listener.",
      "example": {
        "accountName": "0844021539-00001",
        "name": "BullseyeReporting"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The billing account number for which callback messages will be sent.",
          "example": "0844021539-00001",
          "type": "string"
        },
        "name": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "example": "BullseyeReporting",
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "name"
      ]
    }
- HyperPreciseLocationCallback: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "HyperPreciseLocationCallback",
      "title": "HyperPreciseLocationCallback",
      "description": "Callback registration request.",
      "example": {
        "name": "BullseyeReporting",
        "url": "https://tsustgtests.mocklab.io/notifications/bullseye"
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the callback service that you want to subscribe to.",
          "example": "BullseyeReporting",
          "type": "string"
        },
        "url": {
          "description": "The address on your server where you have enabled a listening service for the specific type of callback messages. Specify a URL that is reachable from the Verizon data centers. If your service is running on HTTPS, you should use a one-way authentication certificate with a white-listed IP address.",
          "example": "https://tsustgtests.mocklab.io/notifications/bullseye",
          "type": "string"
        }
      },
      "required": [
        "name",
        "url"
      ]
    }
- TriggerType1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TriggerType1",
      "title": "TriggerType1",
      "description": "Trigger details.",
      "example": {
        "name": "Anomaly Daily Usage REST Test-Patch 1",
        "triggerCategory": "UsageAnomaly",
        "accountName": "0000123456-00001",
        "anomalyTriggerRequest": {
          "accountNames": "0000123456-00001",
          "includeAbnormal": true,
          "includeVeryAbnormal": true,
          "includeUnderExpectedUsage": true,
          "includeOverExpectedUsage": true
        },
        "notification": {
          "notificationType": "DailySummary",
          "callback": true,
          "emailNotification": false,
          "notificationGroupName": "Anomaly Test API",
          "notificationFrequencyFactor": 3,
          "notificationFrequencyInterval": "Hourly",
          "externalEmailRecipients": "placeholder@verizon.com",
          "smsNotification": true,
          "smsNumbers": [
            {
              "carrier": "US Cellular",
              "number": "9299280711"
            }
          ],
          "reminder": true,
          "severity": "Critical"
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "Trigger name.",
          "example": "User defined name of the trigger",
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "example": "UsageAnomaly",
          "type": "string"
        },
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "anomalyTriggerRequest": {
          "id": "AnomalyTriggerRequest",
          "title": "AnomalyTriggerRequest",
          "description": "The details of the UsageAnomaly trigger.",
          "example": {
            "accountNames": "0000123456-00001",
            "includeAbnormal": true,
            "includeVeryAbnormal": true,
            "includeUnderExpectedUsage": true,
            "includeOverExpectedUsage": true
          },
          "type": "object",
          "properties": {
            "accountNames": {
              "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
              "example": "0000123456-00001",
              "type": "string",
              "minLength": 3,
              "maxLength": 32
            },
            "includeAbnormal": {
              "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeVeryAbnormal": {
              "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeUnderExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "includeOverExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
              "example": true,
              "type": "boolean"
            }
          }
        },
        "notification": {
          "id": "Notification",
          "title": "Notification",
          "description": "The notification details of the trigger.",
          "example": {
            "notificationType": "DailySummary",
            "callback": true,
            "emailNotification": false,
            "notificationGroupName": "Anomaly Test API",
            "notificationFrequencyFactor": 3,
            "notificationFrequencyInterval": "Hourly",
            "externalEmailRecipients": "placeholder@verizon.com",
            "smsNotification": true,
            "smsNumbers": [
              {
                "carrier": "US Cellular",
                "number": "9299280711"
              }
            ],
            "reminder": true,
            "severity": "Critical"
          },
          "type": "object",
          "properties": {
            "notificationType": {
              "description": "The type of notification, i.e. 'DailySummary'.",
              "example": "DailySummary",
              "type": "string"
            },
            "callback": {
              "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "emailNotification": {
              "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
              "example": false,
              "type": "boolean"
            },
            "notificationGroupName": {
              "description": "Name for the notification group.",
              "example": "Anomaly Test API",
              "type": "string"
            },
            "notificationFrequencyFactor": {
              "description": "Frequency factor for notification.",
              "example": 3,
              "type": "integer",
              "format": "int32"
            },
            "notificationFrequencyInterval": {
              "description": "Frequency interval for notification.",
              "example": "Hourly",
              "type": "string"
            },
            "externalEmailRecipients": {
              "description": "E-mail address(es) where the notification should be delivered.",
              "example": "placeholder@gmail.com",
              "type": "string"
            },
            "smsNotification": {
              "description": "SMS notification.",
              "example": true,
              "type": "boolean"
            },
            "smsNumbers": {
              "description": "List of SMS numbers.",
              "example": [
                {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                }
              ],
              "type": "array",
              "items": {
                "id": "SMSNumber",
                "title": "SMSNumber",
                "description": "Notification SMS details.",
                "example": {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                },
                "type": "object",
                "properties": {
                  "carrier": {
                    "example": "Verizon",
                    "type": "string"
                  },
                  "number": {
                    "example": "1234567890",
                    "type": "string"
                  }
                }
              },
              "maxItems": 10
            },
            "reminder": {
              "example": true,
              "type": "boolean"
            },
            "severity": {
              "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
              "example": "Critical",
              "type": "string"
            }
          }
        }
      }
    }
- TriggerType2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TriggerType2",
      "title": "TriggerType2",
      "description": "Trigger details.",
      "example": {
        "anomalyattributes": {
          "accountNames": "0000123456-00001",
          "deviceGroup": "User Group 1",
          "includeAbnormal": true,
          "includeVeryAbnormal": true,
          "includeUnderExpectedUsage": true,
          "includeOverExpectedUsage": true
        },
        "notification": {
          "notificationType": "DailySummary",
          "callback": true,
          "emailNotification": true,
          "notificationGroupName": "Anomaly Test API",
          "notificationFrequencyFactor": -2147483648,
          "externalEmailRecipients": "placeholder@verizon.com",
          "smsNotification": true,
          "smsNumbers": [
            {
              "carrier": "US Cellular",
              "number": "9299280711"
            }
          ],
          "reminder": false,
          "severity": "Critical"
        }
      },
      "type": "object",
      "properties": {
        "anomalyattributes": {
          "id": "UsageAnomalyAttributes",
          "title": "UsageAnomalyAttributes",
          "description": "The details of the UsageAnomaly trigger.",
          "example": {
            "accountNames": "0000123456-00001",
            "deviceGroup": "User Group 1",
            "includeAbnormal": true,
            "includeVeryAbnormal": true,
            "includeUnderExpectedUsage": true,
            "includeOverExpectedUsage": true
          },
          "type": "object",
          "properties": {
            "accountNames": {
              "description": "The Verizon billing account associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
              "example": "0000123456-00001",
              "type": "string",
              "minLength": 3,
              "maxLength": 32
            },
            "deviceGroup": {
              "description": "The names of device groups associated with the anomaly triggers for this trigger to be active for devices in those groups.",
              "example": "The group name for devices using this trigger (optional))",
              "type": "string"
            },
            "includeAbnormal": {
              "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeVeryAbnormal": {
              "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeUnderExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "includeOverExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
              "example": true,
              "type": "boolean"
            }
          }
        },
        "notification": {
          "id": "Notification",
          "title": "Notification",
          "description": "The notification details of the trigger.",
          "example": {
            "notificationType": "DailySummary",
            "callback": true,
            "emailNotification": false,
            "notificationGroupName": "Anomaly Test API",
            "notificationFrequencyFactor": 3,
            "notificationFrequencyInterval": "Hourly",
            "externalEmailRecipients": "placeholder@verizon.com",
            "smsNotification": true,
            "smsNumbers": [
              {
                "carrier": "US Cellular",
                "number": "9299280711"
              }
            ],
            "reminder": true,
            "severity": "Critical"
          },
          "type": "object",
          "properties": {
            "notificationType": {
              "description": "The type of notification, i.e. 'DailySummary'.",
              "example": "DailySummary",
              "type": "string"
            },
            "callback": {
              "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "emailNotification": {
              "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
              "example": false,
              "type": "boolean"
            },
            "notificationGroupName": {
              "description": "Name for the notification group.",
              "example": "Anomaly Test API",
              "type": "string"
            },
            "notificationFrequencyFactor": {
              "description": "Frequency factor for notification.",
              "example": 3,
              "type": "integer",
              "format": "int32"
            },
            "notificationFrequencyInterval": {
              "description": "Frequency interval for notification.",
              "example": "Hourly",
              "type": "string"
            },
            "externalEmailRecipients": {
              "description": "E-mail address(es) where the notification should be delivered.",
              "example": "placeholder@gmail.com",
              "type": "string"
            },
            "smsNotification": {
              "description": "SMS notification.",
              "example": true,
              "type": "boolean"
            },
            "smsNumbers": {
              "description": "List of SMS numbers.",
              "example": [
                {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                }
              ],
              "type": "array",
              "items": {
                "id": "SMSNumber",
                "title": "SMSNumber",
                "description": "Notification SMS details.",
                "example": {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                },
                "type": "object",
                "properties": {
                  "carrier": {
                    "example": "Verizon",
                    "type": "string"
                  },
                  "number": {
                    "example": "1234567890",
                    "type": "string"
                  }
                }
              },
              "maxItems": 10
            },
            "reminder": {
              "example": true,
              "type": "boolean"
            },
            "severity": {
              "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
              "example": "Critical",
              "type": "string"
            }
          }
        }
      }
    }
- TriggerType3: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TriggerType3",
      "title": "TriggerType3",
      "description": "Trigger details.",
      "example": {
        "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d",
        "triggerName": "Anomaly Daily Usage REST Test-Patch Update 4",
        "accountName": "0000123456-00001",
        "triggerCategory": "UsageAnomaly",
        "anomalyTriggerRequest": {
          "accountNames": "0000123456-00001",
          "includeAbnormal": true,
          "includeVeryAbnormal": true,
          "includeUnderExpectedUsage": false,
          "includeOverExpectedUsage": true
        },
        "notification": {
          "notificationType": "DailySummary",
          "callback": true,
          "emailNotification": false,
          "notificationGroupName": "Anomaly Test API",
          "notificationFrequencyFactor": 3,
          "notificationFrequencyInterval": "Hourly",
          "externalEmailRecipients": "placeholder@verizon.com",
          "smsNotification": true,
          "smsNumbers": [
            {
              "carrier": "US Cellular",
              "number": "9299280711"
            }
          ],
          "reminder": true,
          "severity": "Critical"
        }
      },
      "type": "object",
      "properties": {
        "triggerId": {
          "description": "Trigger ID.",
          "example": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
          "type": "string"
        },
        "triggerName": {
          "description": "Trigger name.",
          "example": "User defined name of the trigger",
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "example": "UsageAnomaly",
          "type": "string"
        },
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "anomalyTriggerRequest": {
          "id": "AnomalyTriggerRequest",
          "title": "AnomalyTriggerRequest",
          "description": "The details of the UsageAnomaly trigger.",
          "example": {
            "accountNames": "0000123456-00001",
            "includeAbnormal": true,
            "includeVeryAbnormal": true,
            "includeUnderExpectedUsage": true,
            "includeOverExpectedUsage": true
          },
          "type": "object",
          "properties": {
            "accountNames": {
              "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
              "example": "0000123456-00001",
              "type": "string",
              "minLength": 3,
              "maxLength": 32
            },
            "includeAbnormal": {
              "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeVeryAbnormal": {
              "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeUnderExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "includeOverExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
              "example": true,
              "type": "boolean"
            }
          }
        },
        "notification": {
          "id": "Notification",
          "title": "Notification",
          "description": "The notification details of the trigger.",
          "example": {
            "notificationType": "DailySummary",
            "callback": true,
            "emailNotification": false,
            "notificationGroupName": "Anomaly Test API",
            "notificationFrequencyFactor": 3,
            "notificationFrequencyInterval": "Hourly",
            "externalEmailRecipients": "placeholder@verizon.com",
            "smsNotification": true,
            "smsNumbers": [
              {
                "carrier": "US Cellular",
                "number": "9299280711"
              }
            ],
            "reminder": true,
            "severity": "Critical"
          },
          "type": "object",
          "properties": {
            "notificationType": {
              "description": "The type of notification, i.e. 'DailySummary'.",
              "example": "DailySummary",
              "type": "string"
            },
            "callback": {
              "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "emailNotification": {
              "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
              "example": false,
              "type": "boolean"
            },
            "notificationGroupName": {
              "description": "Name for the notification group.",
              "example": "Anomaly Test API",
              "type": "string"
            },
            "notificationFrequencyFactor": {
              "description": "Frequency factor for notification.",
              "example": 3,
              "type": "integer",
              "format": "int32"
            },
            "notificationFrequencyInterval": {
              "description": "Frequency interval for notification.",
              "example": "Hourly",
              "type": "string"
            },
            "externalEmailRecipients": {
              "description": "E-mail address(es) where the notification should be delivered.",
              "example": "placeholder@gmail.com",
              "type": "string"
            },
            "smsNotification": {
              "description": "SMS notification.",
              "example": true,
              "type": "boolean"
            },
            "smsNumbers": {
              "description": "List of SMS numbers.",
              "example": [
                {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                }
              ],
              "type": "array",
              "items": {
                "id": "SMSNumber",
                "title": "SMSNumber",
                "description": "Notification SMS details.",
                "example": {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                },
                "type": "object",
                "properties": {
                  "carrier": {
                    "example": "Verizon",
                    "type": "string"
                  },
                  "number": {
                    "example": "1234567890",
                    "type": "string"
                  }
                }
              },
              "maxItems": 10
            },
            "reminder": {
              "example": true,
              "type": "boolean"
            },
            "severity": {
              "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
              "example": "Critical",
              "type": "string"
            }
          }
        }
      }
    }
- AnomalyTriggerRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AnomalyTriggerRequest",
      "title": "AnomalyTriggerRequest",
      "description": "The details of the UsageAnomaly trigger.",
      "example": {
        "accountNames": "0000123456-00001",
        "includeAbnormal": true,
        "includeVeryAbnormal": true,
        "includeUnderExpectedUsage": true,
        "includeOverExpectedUsage": true
      },
      "type": "object",
      "properties": {
        "accountNames": {
          "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "includeAbnormal": {
          "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
          "example": true,
          "type": "boolean"
        },
        "includeVeryAbnormal": {
          "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
          "example": true,
          "type": "boolean"
        },
        "includeUnderExpectedUsage": {
          "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
          "example": true,
          "type": "boolean"
        },
        "includeOverExpectedUsage": {
          "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- UsageAnomalyAttributes: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UsageAnomalyAttributes",
      "title": "UsageAnomalyAttributes",
      "description": "The details of the UsageAnomaly trigger.",
      "example": {
        "accountNames": "0000123456-00001",
        "deviceGroup": "User Group 1",
        "includeAbnormal": true,
        "includeVeryAbnormal": true,
        "includeUnderExpectedUsage": true,
        "includeOverExpectedUsage": true
      },
      "type": "object",
      "properties": {
        "accountNames": {
          "description": "The Verizon billing account associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "deviceGroup": {
          "description": "The names of device groups associated with the anomaly triggers for this trigger to be active for devices in those groups.",
          "example": "The group name for devices using this trigger (optional))",
          "type": "string"
        },
        "includeAbnormal": {
          "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
          "example": true,
          "type": "boolean"
        },
        "includeVeryAbnormal": {
          "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
          "example": true,
          "type": "boolean"
        },
        "includeUnderExpectedUsage": {
          "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
          "example": true,
          "type": "boolean"
        },
        "includeOverExpectedUsage": {
          "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- SMSNumber: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SMSNumber",
      "title": "SMSNumber",
      "description": "Notification SMS details.",
      "example": {
        "carrier": "US Cellular",
        "number": "9299280711"
      },
      "type": "object",
      "properties": {
        "carrier": {
          "example": "Verizon",
          "type": "string"
        },
        "number": {
          "example": "1234567890",
          "type": "string"
        }
      }
    }
- Notification: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Notification",
      "title": "Notification",
      "description": "The notification details of the trigger.",
      "example": {
        "notificationType": "DailySummary",
        "callback": true,
        "emailNotification": false,
        "notificationGroupName": "Anomaly Test API",
        "notificationFrequencyFactor": 3,
        "notificationFrequencyInterval": "Hourly",
        "externalEmailRecipients": "placeholder@verizon.com",
        "smsNotification": true,
        "smsNumbers": [
          {
            "carrier": "US Cellular",
            "number": "9299280711"
          }
        ],
        "reminder": true,
        "severity": "Critical"
      },
      "type": "object",
      "properties": {
        "notificationType": {
          "description": "The type of notification, i.e. 'DailySummary'.",
          "example": "DailySummary",
          "type": "string"
        },
        "callback": {
          "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
          "example": true,
          "type": "boolean"
        },
        "emailNotification": {
          "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
          "example": false,
          "type": "boolean"
        },
        "notificationGroupName": {
          "description": "Name for the notification group.",
          "example": "Anomaly Test API",
          "type": "string"
        },
        "notificationFrequencyFactor": {
          "description": "Frequency factor for notification.",
          "example": 3,
          "type": "integer",
          "format": "int32"
        },
        "notificationFrequencyInterval": {
          "description": "Frequency interval for notification.",
          "example": "Hourly",
          "type": "string"
        },
        "externalEmailRecipients": {
          "description": "E-mail address(es) where the notification should be delivered.",
          "example": "placeholder@gmail.com",
          "type": "string"
        },
        "smsNotification": {
          "description": "SMS notification.",
          "example": true,
          "type": "boolean"
        },
        "smsNumbers": {
          "description": "List of SMS numbers.",
          "example": [
            {
              "carrier": "US Cellular",
              "number": "9299280711"
            }
          ],
          "type": "array",
          "items": {
            "id": "SMSNumber",
            "title": "SMSNumber",
            "description": "Notification SMS details.",
            "example": {
              "carrier": "US Cellular",
              "number": "9299280711"
            },
            "type": "object",
            "properties": {
              "carrier": {
                "example": "Verizon",
                "type": "string"
              },
              "number": {
                "example": "1234567890",
                "type": "string"
              }
            }
          },
          "maxItems": 10
        },
        "reminder": {
          "example": true,
          "type": "boolean"
        },
        "severity": {
          "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
          "example": "Critical",
          "type": "string"
        }
      }
    }
- UpdateTriggerRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UpdateTriggerRequest",
      "title": "UpdateTriggerRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "active": {
          "type": "boolean"
        },
        "anomalyTriggerRequest": {
          "id": "AnomalyTriggerRequest",
          "title": "AnomalyTriggerRequest",
          "description": "The details of the UsageAnomaly trigger.",
          "example": {
            "accountNames": "0000123456-00001",
            "includeAbnormal": true,
            "includeVeryAbnormal": true,
            "includeUnderExpectedUsage": true,
            "includeOverExpectedUsage": true
          },
          "type": "object",
          "properties": {
            "accountNames": {
              "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
              "example": "0000123456-00001",
              "type": "string",
              "minLength": 3,
              "maxLength": 32
            },
            "includeAbnormal": {
              "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeVeryAbnormal": {
              "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeUnderExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "includeOverExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
              "example": true,
              "type": "boolean"
            }
          }
        },
        "cycleType": {
          "title": "CycleType",
          "type": "string",
          "enum": [
            "cycleone",
            "cycletwo"
          ]
        },
        "dataTriggerRequest": {
          "id": "DataTriggerRequest",
          "title": "DataTriggerRequest",
          "type": "object",
          "properties": {
            "comparator": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "threshold": {
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "thresholdUnit": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            }
          }
        },
        "groupName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "promoAlertTriggerRequest": {
          "id": "PromoAlertTriggerRequest",
          "title": "PromoAlertTriggerRequest",
          "type": "object",
          "properties": {
            "dataPercentage50": {
              "type": "boolean"
            },
            "dataPercentage75": {
              "type": "boolean"
            },
            "dataPercentage90": {
              "type": "boolean"
            },
            "noOfDaysB4PromoExp": {
              "type": "integer",
              "minimum": 0.0,
              "maximum": 180.0,
              "format": "int32"
            },
            "smsPercentage50": {
              "type": "boolean"
            },
            "smsPercentage75": {
              "type": "boolean"
            },
            "smsPercentage90": {
              "type": "boolean"
            }
          }
        },
        "sessionTriggerRequest": {
          "id": "SessionTriggerRequest",
          "title": "SessionTriggerRequest",
          "type": "object",
          "properties": {
            "comparator": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "threshold": {
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            }
          }
        },
        "smsTriggerRequest": {
          "id": "SMSTriggerRequest",
          "title": "SMSTriggerRequest",
          "type": "object",
          "properties": {
            "comparator": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "smsType": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "threshold": {
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            }
          }
        },
        "triggerCategory": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "triggerId": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "triggerName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- PromoAlertTriggerRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PromoAlertTriggerRequest",
      "title": "PromoAlertTriggerRequest",
      "type": "object",
      "properties": {
        "dataPercentage50": {
          "type": "boolean"
        },
        "dataPercentage75": {
          "type": "boolean"
        },
        "dataPercentage90": {
          "type": "boolean"
        },
        "noOfDaysB4PromoExp": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 180.0,
          "format": "int32"
        },
        "smsPercentage50": {
          "type": "boolean"
        },
        "smsPercentage75": {
          "type": "boolean"
        },
        "smsPercentage90": {
          "type": "boolean"
        }
      }
    }
- CreateTriggerRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateTriggerRequest",
      "title": "CreateTriggerRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "anomalyTriggerRequest": {
          "id": "AnomalyTriggerRequest",
          "title": "AnomalyTriggerRequest",
          "description": "The details of the UsageAnomaly trigger.",
          "example": {
            "accountNames": "0000123456-00001",
            "includeAbnormal": true,
            "includeVeryAbnormal": true,
            "includeUnderExpectedUsage": true,
            "includeOverExpectedUsage": true
          },
          "type": "object",
          "properties": {
            "accountNames": {
              "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
              "example": "0000123456-00001",
              "type": "string",
              "minLength": 3,
              "maxLength": 32
            },
            "includeAbnormal": {
              "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeVeryAbnormal": {
              "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeUnderExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "includeOverExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
              "example": true,
              "type": "boolean"
            }
          }
        },
        "dataTriggerRequest": {
          "id": "DataTriggerRequest",
          "title": "DataTriggerRequest",
          "type": "object",
          "properties": {
            "comparator": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "threshold": {
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            },
            "thresholdUnit": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            }
          }
        },
        "groupName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "sessionTriggerRequest": {
          "id": "SessionTriggerRequest",
          "title": "SessionTriggerRequest",
          "type": "object",
          "properties": {
            "comparator": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "threshold": {
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            }
          }
        },
        "smsTriggerRequest": {
          "id": "SMSTriggerRequest",
          "title": "SMSTriggerRequest",
          "type": "object",
          "properties": {
            "comparator": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "smsType": {
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[A-Za-z0-9]{3,32}$"
            },
            "threshold": {
              "type": "integer",
              "minimum": 0.0,
              "maximum": 100.0,
              "format": "int32"
            }
          }
        },
        "triggerCategory": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "triggerCycle": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- DataTriggerRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DataTriggerRequest",
      "title": "DataTriggerRequest",
      "type": "object",
      "properties": {
        "comparator": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "threshold": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        },
        "thresholdUnit": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- SessionTriggerRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SessionTriggerRequest",
      "title": "SessionTriggerRequest",
      "type": "object",
      "properties": {
        "comparator": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "threshold": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        }
      }
    }
- SMSTriggerRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SMSTriggerRequest",
      "title": "SMSTriggerRequest",
      "type": "object",
      "properties": {
        "comparator": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "smsType": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "threshold": {
          "type": "integer",
          "minimum": 0.0,
          "maximum": 100.0,
          "format": "int32"
        }
      }
    }
- CreateTriggerRequestOptions: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CreateTriggerRequestOptions",
      "title": "CreateTriggerRequestOptions",
      "example": {
        "name": "Anomaly Daily Usage REST Test-Patch 1",
        "triggerCategory": "UsageAnomaly",
        "accountName": "0000123456-00001",
        "anomalyTriggerRequest": {
          "accountNames": "0000123456-00001",
          "includeAbnormal": true,
          "includeVeryAbnormal": true,
          "includeUnderExpectedUsage": true,
          "includeOverExpectedUsage": true
        },
        "notification": {
          "notificationType": "DailySummary",
          "callback": true,
          "emailNotification": false,
          "notificationGroupName": "Anomaly Test API",
          "notificationFrequencyFactor": 3,
          "notificationFrequencyInterval": "Hourly",
          "externalEmailRecipients": "placeholder@verizon.com",
          "smsNotification": true,
          "smsNumbers": [
            {
              "carrier": "US Cellular",
              "number": "9299280711"
            }
          ],
          "reminder": true,
          "severity": "Critical"
        }
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "Trigger name.",
          "example": "User defined name of the trigger",
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "example": "UsageAnomaly",
          "type": "string"
        },
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "anomalyTriggerRequest": {
          "id": "AnomalyTriggerRequest",
          "title": "AnomalyTriggerRequest",
          "description": "The details of the UsageAnomaly trigger.",
          "example": {
            "accountNames": "0000123456-00001",
            "includeAbnormal": true,
            "includeVeryAbnormal": true,
            "includeUnderExpectedUsage": true,
            "includeOverExpectedUsage": true
          },
          "type": "object",
          "properties": {
            "accountNames": {
              "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
              "example": "0000123456-00001",
              "type": "string",
              "minLength": 3,
              "maxLength": 32
            },
            "includeAbnormal": {
              "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeVeryAbnormal": {
              "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeUnderExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "includeOverExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
              "example": true,
              "type": "boolean"
            }
          }
        },
        "notification": {
          "id": "Notification",
          "title": "Notification",
          "description": "The notification details of the trigger.",
          "example": {
            "notificationType": "DailySummary",
            "callback": true,
            "emailNotification": false,
            "notificationGroupName": "Anomaly Test API",
            "notificationFrequencyFactor": 3,
            "notificationFrequencyInterval": "Hourly",
            "externalEmailRecipients": "placeholder@verizon.com",
            "smsNotification": true,
            "smsNumbers": [
              {
                "carrier": "US Cellular",
                "number": "9299280711"
              }
            ],
            "reminder": true,
            "severity": "Critical"
          },
          "type": "object",
          "properties": {
            "notificationType": {
              "description": "The type of notification, i.e. 'DailySummary'.",
              "example": "DailySummary",
              "type": "string"
            },
            "callback": {
              "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "emailNotification": {
              "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
              "example": false,
              "type": "boolean"
            },
            "notificationGroupName": {
              "description": "Name for the notification group.",
              "example": "Anomaly Test API",
              "type": "string"
            },
            "notificationFrequencyFactor": {
              "description": "Frequency factor for notification.",
              "example": 3,
              "type": "integer",
              "format": "int32"
            },
            "notificationFrequencyInterval": {
              "description": "Frequency interval for notification.",
              "example": "Hourly",
              "type": "string"
            },
            "externalEmailRecipients": {
              "description": "E-mail address(es) where the notification should be delivered.",
              "example": "placeholder@gmail.com",
              "type": "string"
            },
            "smsNotification": {
              "description": "SMS notification.",
              "example": true,
              "type": "boolean"
            },
            "smsNumbers": {
              "description": "List of SMS numbers.",
              "example": [
                {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                }
              ],
              "type": "array",
              "items": {
                "id": "SMSNumber",
                "title": "SMSNumber",
                "description": "Notification SMS details.",
                "example": {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                },
                "type": "object",
                "properties": {
                  "carrier": {
                    "example": "Verizon",
                    "type": "string"
                  },
                  "number": {
                    "example": "1234567890",
                    "type": "string"
                  }
                }
              },
              "maxItems": 10
            },
            "reminder": {
              "example": true,
              "type": "boolean"
            },
            "severity": {
              "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
              "example": "Critical",
              "type": "string"
            }
          }
        },
        "active": {
          "description": "Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- UpdateTriggerRequestOptions: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "UpdateTriggerRequestOptions",
      "title": "UpdateTriggerRequestOptions",
      "example": {
        "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d",
        "triggerName": "Anomaly Daily Usage REST Test-Patch Update 4",
        "accountName": "0000123456-00001",
        "triggerCategory": "UsageAnomaly",
        "anomalyTriggerRequest": {
          "accountNames": "0000123456-00001",
          "includeAbnormal": true,
          "includeVeryAbnormal": true,
          "includeUnderExpectedUsage": false,
          "includeOverExpectedUsage": true
        },
        "notification": {
          "notificationType": "DailySummary",
          "callback": true,
          "emailNotification": false,
          "notificationGroupName": "Anomaly Test API",
          "notificationFrequencyFactor": 3,
          "notificationFrequencyInterval": "Hourly",
          "externalEmailRecipients": "placeholder@verizon.com",
          "smsNotification": true,
          "smsNumbers": [
            {
              "carrier": "US Cellular",
              "number": "9299280711"
            }
          ],
          "reminder": true,
          "severity": "Critical"
        }
      },
      "type": "object",
      "properties": {
        "triggerId": {
          "description": "Trigger ID.",
          "example": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
          "type": "string"
        },
        "triggerName": {
          "description": "Trigger name.",
          "example": "User defined name of the trigger",
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "example": "UsageAnomaly",
          "type": "string"
        },
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "anomalyTriggerRequest": {
          "id": "AnomalyTriggerRequest",
          "title": "AnomalyTriggerRequest",
          "description": "The details of the UsageAnomaly trigger.",
          "example": {
            "accountNames": "0000123456-00001",
            "includeAbnormal": true,
            "includeVeryAbnormal": true,
            "includeUnderExpectedUsage": true,
            "includeOverExpectedUsage": true
          },
          "type": "object",
          "properties": {
            "accountNames": {
              "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
              "example": "0000123456-00001",
              "type": "string",
              "minLength": 3,
              "maxLength": 32
            },
            "includeAbnormal": {
              "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeVeryAbnormal": {
              "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeUnderExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "includeOverExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
              "example": true,
              "type": "boolean"
            }
          }
        },
        "notification": {
          "id": "Notification",
          "title": "Notification",
          "description": "The notification details of the trigger.",
          "example": {
            "notificationType": "DailySummary",
            "callback": true,
            "emailNotification": false,
            "notificationGroupName": "Anomaly Test API",
            "notificationFrequencyFactor": 3,
            "notificationFrequencyInterval": "Hourly",
            "externalEmailRecipients": "placeholder@verizon.com",
            "smsNotification": true,
            "smsNumbers": [
              {
                "carrier": "US Cellular",
                "number": "9299280711"
              }
            ],
            "reminder": true,
            "severity": "Critical"
          },
          "type": "object",
          "properties": {
            "notificationType": {
              "description": "The type of notification, i.e. 'DailySummary'.",
              "example": "DailySummary",
              "type": "string"
            },
            "callback": {
              "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "emailNotification": {
              "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
              "example": false,
              "type": "boolean"
            },
            "notificationGroupName": {
              "description": "Name for the notification group.",
              "example": "Anomaly Test API",
              "type": "string"
            },
            "notificationFrequencyFactor": {
              "description": "Frequency factor for notification.",
              "example": 3,
              "type": "integer",
              "format": "int32"
            },
            "notificationFrequencyInterval": {
              "description": "Frequency interval for notification.",
              "example": "Hourly",
              "type": "string"
            },
            "externalEmailRecipients": {
              "description": "E-mail address(es) where the notification should be delivered.",
              "example": "placeholder@gmail.com",
              "type": "string"
            },
            "smsNotification": {
              "description": "SMS notification.",
              "example": true,
              "type": "boolean"
            },
            "smsNumbers": {
              "description": "List of SMS numbers.",
              "example": [
                {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                }
              ],
              "type": "array",
              "items": {
                "id": "SMSNumber",
                "title": "SMSNumber",
                "description": "Notification SMS details.",
                "example": {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                },
                "type": "object",
                "properties": {
                  "carrier": {
                    "example": "Verizon",
                    "type": "string"
                  },
                  "number": {
                    "example": "1234567890",
                    "type": "string"
                  }
                }
              },
              "maxItems": 10
            },
            "reminder": {
              "example": true,
              "type": "boolean"
            },
            "severity": {
              "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
              "example": "Critical",
              "type": "string"
            }
          }
        },
        "active": {
          "description": "Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- GetTriggerResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetTriggerResponse",
      "title": "GetTriggerResponse",
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "comparator": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "groupName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "notificationGroupName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "organizationName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "smsType": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "threshold": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "thresholdUnit": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "triggerCategory": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "triggerCycle": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "triggerId": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "triggerName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- GetTriggerResponseList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetTriggerResponseList",
      "title": "GetTriggerResponseList",
      "type": "object",
      "properties": {
        "triggers": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GetTriggerResponse",
            "title": "GetTriggerResponse",
            "type": "object",
            "properties": {
              "accountName": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "comparator": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "groupName": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "modifiedAt": {
                "type": "string",
                "format": "date-time"
              },
              "notificationGroupName": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "organizationName": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "smsType": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "threshold": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "thresholdUnit": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "triggerCategory": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "triggerCycle": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "triggerId": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "triggerName": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              }
            }
          },
          "maxItems": 3
        }
      }
    }
- ActiveAnomalyIndicator: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ActiveAnomalyIndicator",
      "title": "ActiveAnomalyIndicator",
      "description": "Whether the anomaly detection is active or not.",
      "example": {
        "active": true
      },
      "type": "object",
      "properties": {
        "active": {
          "description": "Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- ActiveTriggerIndicator: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ActiveTriggerIndicator",
      "title": "ActiveTriggerIndicator",
      "description": "Whether the trigger is active or not.",
      "example": {
        "active": true
      },
      "type": "object",
      "properties": {
        "active": {
          "description": "Indicates if the trigger is active<br />True - trigger is active<br />False - trigger is not active.",
          "example": true,
          "type": "boolean"
        }
      }
    }
- AnomalyTriggerResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AnomalyTriggerResult",
      "title": "AnomalyTriggerResult",
      "description": "A result containing a list of anomaly triggers.",
      "example": {
        "triggers": [
          {
            "triggerId": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
            "triggerName": "Anomaly Daily Usage REST Test-1",
            "organizationName": "AnamolyDetectionRTRTest",
            "triggerCategory": "UsageAnomaly",
            "triggerAttributes": [
              {
                "key": "DataPercentage50",
                "value": false
              }
            ],
            "createdAt": "2021-10-21T23:57:03.397.0000Z",
            "modifiedAt": "2021-10-21T23:57:03.397.0000Z",
            "notification": {
              "notificationType": "DailySummary",
              "callback": true,
              "emailNotification": true,
              "notificationGroupName": "Anomaly Test API",
              "notificationFrequencyFactor": -2147483648,
              "externalEmailRecipients": "placeholder@verizon.com",
              "smsNotification": true,
              "smsNumbers": [
                {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                }
              ],
              "reminder": false,
              "severity": "Critical"
            }
          }
        ]
      },
      "type": "object",
      "properties": {
        "triggers": {
          "description": "Trigger value chunk details.",
          "example": [
            {
              "triggerId": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
              "triggerName": "Anomaly Daily Usage REST Test-1",
              "organizationName": "AnamolyDetectionRTRTest",
              "triggerCategory": "UsageAnomaly",
              "triggerAttributes": [
                {
                  "key": "DataPercentage50",
                  "value": false
                }
              ],
              "createdAt": "2021-10-21T23:57:03.397.0000Z",
              "modifiedAt": "2021-10-21T23:57:03.397.0000Z",
              "notification": {
                "notificationType": "DailySummary",
                "callback": true,
                "emailNotification": true,
                "notificationGroupName": "Anomaly Test API",
                "notificationFrequencyFactor": -2147483648,
                "externalEmailRecipients": "placeholder@verizon.com",
                "smsNotification": true,
                "smsNumbers": [
                  {
                    "carrier": "US Cellular",
                    "number": "9299280711"
                  }
                ],
                "reminder": false,
                "severity": "Critical"
              }
            }
          ],
          "type": "array",
          "items": {
            "id": "TriggersListOptions",
            "title": "TriggersListOptions",
            "example": {
              "triggerId": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
              "triggerName": "Anomaly Daily Usage REST Test-1",
              "organizationName": "AnamolyDetectionRTRTest",
              "triggerCategory": "UsageAnomaly",
              "triggerAttributes": [
                {
                  "key": "DataPercentage50",
                  "value": false
                }
              ],
              "createdAt": "2021-10-21T23:57:03.397Z",
              "modifiedAt": "2021-10-21T23:57:03.397Z"
            },
            "type": "object",
            "properties": {
              "triggerId": {
                "description": "The system assigned name of the trigger being updated.",
                "example": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
                "type": "string"
              },
              "triggerName": {
                "description": "The user defined name of the trigger.",
                "example": "A user defined name of the trigger",
                "type": "string"
              },
              "organizationName": {
                "description": "The user assigned name of the organization associated with the trigger.",
                "example": "Group name the trigger is assigned to (optional)",
                "type": "string"
              },
              "triggerCategory": {
                "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
                "example": "UsageAnomaly",
                "type": "string"
              },
              "triggerAttributes": {
                "description": "Additional details and keys for the trigger.",
                "example": [
                  {
                    "key": "DataPercentage50",
                    "value": false
                  }
                ],
                "type": "array",
                "items": {
                  "id": "TriggerAttributesOptions",
                  "title": "TriggerAttributesOptions",
                  "example": {
                    "key": "DataPercentage50"
                  },
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "If present, the NotificationGroupName will be listed here.",
                      "example": "NotificationGroupName",
                      "type": "string"
                    },
                    "value": {
                      "description": "DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.",
                      "example": false,
                      "type": "boolean"
                    }
                  }
                }
              },
              "createdAt": {
                "description": "Timestamp for whe the trigger was created.",
                "example": "2021-10-21T23:57:03.397.0000Z",
                "type": "string"
              },
              "modifiedAt": {
                "description": "Timestamp for the most recent time the trigger was modified.",
                "example": "2021-10-21T23:57:03.397.0000Z",
                "type": "string"
              },
              "anomalyattributes": {
                "id": "UsageAnomalyAttributes",
                "title": "UsageAnomalyAttributes",
                "description": "The details of the UsageAnomaly trigger.",
                "example": {
                  "accountNames": "0000123456-00001",
                  "deviceGroup": "User Group 1",
                  "includeAbnormal": true,
                  "includeVeryAbnormal": true,
                  "includeUnderExpectedUsage": true,
                  "includeOverExpectedUsage": true
                },
                "type": "object",
                "properties": {
                  "accountNames": {
                    "description": "The Verizon billing account associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
                    "example": "0000123456-00001",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32
                  },
                  "deviceGroup": {
                    "description": "The names of device groups associated with the anomaly triggers for this trigger to be active for devices in those groups.",
                    "example": "The group name for devices using this trigger (optional))",
                    "type": "string"
                  },
                  "includeAbnormal": {
                    "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
                    "example": true,
                    "type": "boolean"
                  },
                  "includeVeryAbnormal": {
                    "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
                    "example": true,
                    "type": "boolean"
                  },
                  "includeUnderExpectedUsage": {
                    "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
                    "example": true,
                    "type": "boolean"
                  },
                  "includeOverExpectedUsage": {
                    "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
                    "example": true,
                    "type": "boolean"
                  }
                }
              },
              "notification": {
                "id": "Notification",
                "title": "Notification",
                "description": "The notification details of the trigger.",
                "example": {
                  "notificationType": "DailySummary",
                  "callback": true,
                  "emailNotification": false,
                  "notificationGroupName": "Anomaly Test API",
                  "notificationFrequencyFactor": 3,
                  "notificationFrequencyInterval": "Hourly",
                  "externalEmailRecipients": "placeholder@verizon.com",
                  "smsNotification": true,
                  "smsNumbers": [
                    {
                      "carrier": "US Cellular",
                      "number": "9299280711"
                    }
                  ],
                  "reminder": true,
                  "severity": "Critical"
                },
                "type": "object",
                "properties": {
                  "notificationType": {
                    "description": "The type of notification, i.e. 'DailySummary'.",
                    "example": "DailySummary",
                    "type": "string"
                  },
                  "callback": {
                    "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
                    "example": true,
                    "type": "boolean"
                  },
                  "emailNotification": {
                    "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
                    "example": false,
                    "type": "boolean"
                  },
                  "notificationGroupName": {
                    "description": "Name for the notification group.",
                    "example": "Anomaly Test API",
                    "type": "string"
                  },
                  "notificationFrequencyFactor": {
                    "description": "Frequency factor for notification.",
                    "example": 3,
                    "type": "integer",
                    "format": "int32"
                  },
                  "notificationFrequencyInterval": {
                    "description": "Frequency interval for notification.",
                    "example": "Hourly",
                    "type": "string"
                  },
                  "externalEmailRecipients": {
                    "description": "E-mail address(es) where the notification should be delivered.",
                    "example": "placeholder@gmail.com",
                    "type": "string"
                  },
                  "smsNotification": {
                    "description": "SMS notification.",
                    "example": true,
                    "type": "boolean"
                  },
                  "smsNumbers": {
                    "description": "List of SMS numbers.",
                    "example": [
                      {
                        "carrier": "US Cellular",
                        "number": "9299280711"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "SMSNumber",
                      "title": "SMSNumber",
                      "description": "Notification SMS details.",
                      "example": {
                        "carrier": "US Cellular",
                        "number": "9299280711"
                      },
                      "type": "object",
                      "properties": {
                        "carrier": {
                          "example": "Verizon",
                          "type": "string"
                        },
                        "number": {
                          "example": "1234567890",
                          "type": "string"
                        }
                      }
                    },
                    "maxItems": 10
                  },
                  "reminder": {
                    "example": true,
                    "type": "boolean"
                  },
                  "severity": {
                    "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
                    "example": "Critical",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
- TriggersListOptions: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TriggersListOptions",
      "title": "TriggersListOptions",
      "example": {
        "triggerId": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
        "triggerName": "Anomaly Daily Usage REST Test-1",
        "organizationName": "AnamolyDetectionRTRTest",
        "triggerCategory": "UsageAnomaly",
        "triggerAttributes": [
          {
            "key": "DataPercentage50",
            "value": false
          }
        ],
        "createdAt": "2021-10-21T23:57:03.397Z",
        "modifiedAt": "2021-10-21T23:57:03.397Z"
      },
      "type": "object",
      "properties": {
        "triggerId": {
          "description": "The system assigned name of the trigger being updated.",
          "example": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
          "type": "string"
        },
        "triggerName": {
          "description": "The user defined name of the trigger.",
          "example": "A user defined name of the trigger",
          "type": "string"
        },
        "organizationName": {
          "description": "The user assigned name of the organization associated with the trigger.",
          "example": "Group name the trigger is assigned to (optional)",
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "example": "UsageAnomaly",
          "type": "string"
        },
        "triggerAttributes": {
          "description": "Additional details and keys for the trigger.",
          "example": [
            {
              "key": "DataPercentage50",
              "value": false
            }
          ],
          "type": "array",
          "items": {
            "id": "TriggerAttributesOptions",
            "title": "TriggerAttributesOptions",
            "example": {
              "key": "DataPercentage50"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "If present, the NotificationGroupName will be listed here.",
                "example": "NotificationGroupName",
                "type": "string"
              },
              "value": {
                "description": "DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.",
                "example": false,
                "type": "boolean"
              }
            }
          }
        },
        "createdAt": {
          "description": "Timestamp for whe the trigger was created.",
          "example": "2021-10-21T23:57:03.397.0000Z",
          "type": "string"
        },
        "modifiedAt": {
          "description": "Timestamp for the most recent time the trigger was modified.",
          "example": "2021-10-21T23:57:03.397.0000Z",
          "type": "string"
        },
        "anomalyattributes": {
          "id": "UsageAnomalyAttributes",
          "title": "UsageAnomalyAttributes",
          "description": "The details of the UsageAnomaly trigger.",
          "example": {
            "accountNames": "0000123456-00001",
            "deviceGroup": "User Group 1",
            "includeAbnormal": true,
            "includeVeryAbnormal": true,
            "includeUnderExpectedUsage": true,
            "includeOverExpectedUsage": true
          },
          "type": "object",
          "properties": {
            "accountNames": {
              "description": "The Verizon billing account associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
              "example": "0000123456-00001",
              "type": "string",
              "minLength": 3,
              "maxLength": 32
            },
            "deviceGroup": {
              "description": "The names of device groups associated with the anomaly triggers for this trigger to be active for devices in those groups.",
              "example": "The group name for devices using this trigger (optional))",
              "type": "string"
            },
            "includeAbnormal": {
              "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeVeryAbnormal": {
              "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
              "example": true,
              "type": "boolean"
            },
            "includeUnderExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "includeOverExpectedUsage": {
              "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
              "example": true,
              "type": "boolean"
            }
          }
        },
        "notification": {
          "id": "Notification",
          "title": "Notification",
          "description": "The notification details of the trigger.",
          "example": {
            "notificationType": "DailySummary",
            "callback": true,
            "emailNotification": false,
            "notificationGroupName": "Anomaly Test API",
            "notificationFrequencyFactor": 3,
            "notificationFrequencyInterval": "Hourly",
            "externalEmailRecipients": "placeholder@verizon.com",
            "smsNotification": true,
            "smsNumbers": [
              {
                "carrier": "US Cellular",
                "number": "9299280711"
              }
            ],
            "reminder": true,
            "severity": "Critical"
          },
          "type": "object",
          "properties": {
            "notificationType": {
              "description": "The type of notification, i.e. 'DailySummary'.",
              "example": "DailySummary",
              "type": "string"
            },
            "callback": {
              "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
              "example": true,
              "type": "boolean"
            },
            "emailNotification": {
              "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
              "example": false,
              "type": "boolean"
            },
            "notificationGroupName": {
              "description": "Name for the notification group.",
              "example": "Anomaly Test API",
              "type": "string"
            },
            "notificationFrequencyFactor": {
              "description": "Frequency factor for notification.",
              "example": 3,
              "type": "integer",
              "format": "int32"
            },
            "notificationFrequencyInterval": {
              "description": "Frequency interval for notification.",
              "example": "Hourly",
              "type": "string"
            },
            "externalEmailRecipients": {
              "description": "E-mail address(es) where the notification should be delivered.",
              "example": "placeholder@gmail.com",
              "type": "string"
            },
            "smsNotification": {
              "description": "SMS notification.",
              "example": true,
              "type": "boolean"
            },
            "smsNumbers": {
              "description": "List of SMS numbers.",
              "example": [
                {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                }
              ],
              "type": "array",
              "items": {
                "id": "SMSNumber",
                "title": "SMSNumber",
                "description": "Notification SMS details.",
                "example": {
                  "carrier": "US Cellular",
                  "number": "9299280711"
                },
                "type": "object",
                "properties": {
                  "carrier": {
                    "example": "Verizon",
                    "type": "string"
                  },
                  "number": {
                    "example": "1234567890",
                    "type": "string"
                  }
                }
              },
              "maxItems": 10
            },
            "reminder": {
              "example": true,
              "type": "boolean"
            },
            "severity": {
              "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
              "example": "Critical",
              "type": "string"
            }
          }
        }
      }
    }
- AnomalyTriggerValue: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AnomalyTriggerValue",
      "title": "AnomalyTriggerValue",
      "description": "Trigger details.",
      "example": {
        "triggerId": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
        "triggerName": "Anomaly Daily Usage REST Test-1",
        "organizationName": "AnamolyDetectionRTRTest",
        "triggerCategory": "UsageAnomaly",
        "triggerAttributes": [
          {
            "key": "DataPercentage50",
            "value": false
          }
        ],
        "createdAt": "2021-10-21T23:57:03.397.0000Z",
        "modifiedAt": "2021-10-21T23:57:03.397.0000Z"
      },
      "type": "object",
      "properties": {
        "triggerId": {
          "description": "The system assigned name of the trigger being updated.",
          "example": "BE1B5958-3E11-41DB-9ABD-B1B7618C0035",
          "type": "string"
        },
        "triggerName": {
          "description": "The user defined name of the trigger.",
          "example": "A user defined name of the trigger",
          "type": "string"
        },
        "organizationName": {
          "description": "The user assigned name of the organization associated with the trigger.",
          "example": "Group name the trigger is assigned to (optional)",
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "example": "UsageAnomaly",
          "type": "string"
        },
        "triggerAttributes": {
          "description": "Additional details and keys for the trigger.",
          "example": [
            {
              "key": "DataPercentage50",
              "value": false
            }
          ],
          "type": "array",
          "items": {
            "id": "TriggerAttributesOptions",
            "title": "TriggerAttributesOptions",
            "example": {
              "key": "DataPercentage50"
            },
            "type": "object",
            "properties": {
              "key": {
                "description": "If present, the NotificationGroupName will be listed here.",
                "example": "NotificationGroupName",
                "type": "string"
              },
              "value": {
                "description": "DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.",
                "example": false,
                "type": "boolean"
              }
            }
          }
        },
        "createdAt": {
          "description": "Timestamp for whe the trigger was created.",
          "example": "2021-10-21T23:57:03.397.0000Z",
          "type": "string"
        },
        "modifiedAt": {
          "description": "Timestamp for the most recent time the trigger was modified.",
          "example": "2021-10-21T23:57:03.397.0000Z",
          "type": "string"
        }
      }
    }
- TriggerAttributesOptions: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TriggerAttributesOptions",
      "title": "TriggerAttributesOptions",
      "example": {
        "key": "DataPercentage50"
      },
      "type": "object",
      "properties": {
        "key": {
          "description": "If present, the NotificationGroupName will be listed here.",
          "example": "NotificationGroupName",
          "type": "string"
        },
        "value": {
          "description": "DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- NotificationGroupNameTriggerAttribute: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "NotificationGroupNameTriggerAttribute",
      "title": "NotificationGroupNameTriggerAttribute",
      "description": "Notification group name trigger attribute.",
      "example": {
        "key": "NotificationGroupName"
      },
      "type": "object",
      "properties": {
        "key": {
          "description": "If present, the NotificationGroupName will be listed here.",
          "example": "NotificationGroupName",
          "type": "string"
        }
      }
    }
- ServicePlanTriggerAttribute: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ServicePlanTriggerAttribute",
      "title": "ServicePlanTriggerAttribute",
      "description": "Key service plan trigger attribute.",
      "example": {
        "key": "ServicePlan"
      },
      "type": "object",
      "properties": {
        "key": {
          "description": "The ServicePlan name will be listed here.",
          "example": "ServicePlan",
          "type": "string"
        }
      }
    }
- DataPercentage50TriggerAttribute: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DataPercentage50TriggerAttribute",
      "title": "DataPercentage50TriggerAttribute",
      "description": "Trigger attribute for when data percentage is over 50% used.",
      "example": {
        "key": "DataPercentage50",
        "value": false
      },
      "type": "object",
      "properties": {
        "key": {
          "description": "Key data percentage 50.",
          "example": "DataPercentage50",
          "type": "string"
        },
        "value": {
          "description": "DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- DataPercentage75TriggerAttribute: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DataPercentage75TriggerAttribute",
      "title": "DataPercentage75TriggerAttribute",
      "description": "Trigger attribute for when data percentage is over 75% used.",
      "example": {
        "key": "DataPercentage75",
        "value": false
      },
      "type": "object",
      "properties": {
        "key": {
          "description": "Key data percentage 75.",
          "example": "DataPercentage75",
          "type": "string"
        },
        "value": {
          "description": "DataPercentage75<br />True - Trigger on Data percentage is over 75% used<br />False - Do not trigger when over 75% used.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- DataPercentage90TriggerAttribute: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DataPercentage90TriggerAttribute",
      "title": "DataPercentage90TriggerAttribute",
      "description": "Trigger attribute for when data percentage is over 90% used.",
      "example": {
        "key": "DataPercentage90",
        "value": false
      },
      "type": "object",
      "properties": {
        "key": {
          "description": "Key data percentage 90.",
          "example": "DataPercentage90",
          "type": "string"
        },
        "value": {
          "description": "DataPercentage90<br />True - Trigger on Data percentage is over 90% used<br />False - Do not trigger when over 90% used.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- DataPercentage100TriggerAttribute: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DataPercentage100TriggerAttribute",
      "title": "DataPercentage100TriggerAttribute",
      "description": "Trigger attribute for when data percentage is over 100% used.",
      "example": {
        "key": "DataPercentage100",
        "value": false
      },
      "type": "object",
      "properties": {
        "key": {
          "description": "Key data percentage 100.",
          "example": "DataPercentage100",
          "type": "string"
        },
        "value": {
          "description": "DataPercentage100<br />True - Trigger on Data percentage is over 100% used<br />False - Do not trigger when over 100% used.",
          "example": false,
          "type": "boolean"
        }
      }
    }
- AnomalyDetectionSettings: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AnomalyDetectionSettings",
      "title": "AnomalyDetectionSettings",
      "description": "Settings for anomaly detection.",
      "example": {
        "accountName": "Success",
        "sensitivityParameter": {
          "abnormalMaxValue": 1.1,
          "enableAbnormal": true,
          "enableVeryAbnormal": true,
          "veryAbnormalMaxValue": 0.55
        },
        "status": "Active"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Indicates if the account name used has anomaly detection.<br />Success - The account has anomaly detection.<br />Failure - The account does not have anomaly detection.",
          "example": "Success",
          "type": "string"
        },
        "sensitivityParameter": {
          "id": "SensitivityParameters",
          "title": "SensitivityParameters",
          "description": "Details for sensitivity parameters.",
          "example": {
            "abnormalMaxValue": 1.1,
            "enableAbnormal": true,
            "enableVeryAbnormal": true,
            "veryAbnormalMaxValue": 0.55
          },
          "type": "object",
          "properties": {
            "abnormalMaxValue": {
              "description": "The maximum value of the threshold in the units being measured.",
              "example": 1.1,
              "type": "number"
            },
            "enableAbnormal": {
              "description": "If abnormal values are being monitored.<br />true - Monitor for abnormal values<br />false - Do not monitor for abnormal values.",
              "example": true,
              "type": "boolean"
            },
            "enableVeryAbnormal": {
              "description": "If very abnormal values are being monitored.<br />true - Monitor for very abnormal values<br />false - Do not monitor for very abnormal values.",
              "example": true,
              "type": "boolean"
            },
            "veryAbnormalMaxValue": {
              "description": "The maximum value of the threshold in the units being measured.",
              "example": 0.55,
              "type": "number"
            }
          }
        },
        "status": {
          "description": "Indicates if anomaly detection is active on the account<br />Active - Anomaly detection is active<br />Disabled- Anomaly detection is not active.",
          "example": "Active",
          "type": "string"
        }
      }
    }
- AnomalyDetectionRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AnomalyDetectionRequest",
      "title": "AnomalyDetectionRequest",
      "description": "Anomaly detection request.",
      "example": {
        "accountName": "0000123456-00001",
        "requestType": "anomaly",
        "sensitivityParameter": {
          "abnormalMaxValue": 1.1,
          "enableAbnormal": true,
          "enableVeryAbnormal": true,
          "veryAbnormalMaxValue": 0.55
        }
      },
      "type": "object",
      "properties": {
        "accountName": {
          "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32
        },
        "requestType": {
          "description": "The type of request being made. anomaly is the request to activate anomaly detection.",
          "example": "anomaly",
          "type": "string"
        },
        "sensitivityParameter": {
          "id": "SensitivityParameters",
          "title": "SensitivityParameters",
          "description": "Details for sensitivity parameters.",
          "example": {
            "abnormalMaxValue": 1.1,
            "enableAbnormal": true,
            "enableVeryAbnormal": true,
            "veryAbnormalMaxValue": 0.55
          },
          "type": "object",
          "properties": {
            "abnormalMaxValue": {
              "description": "The maximum value of the threshold in the units being measured.",
              "example": 1.1,
              "type": "number"
            },
            "enableAbnormal": {
              "description": "If abnormal values are being monitored.<br />true - Monitor for abnormal values<br />false - Do not monitor for abnormal values.",
              "example": true,
              "type": "boolean"
            },
            "enableVeryAbnormal": {
              "description": "If very abnormal values are being monitored.<br />true - Monitor for very abnormal values<br />false - Do not monitor for very abnormal values.",
              "example": true,
              "type": "boolean"
            },
            "veryAbnormalMaxValue": {
              "description": "The maximum value of the threshold in the units being measured.",
              "example": 0.55,
              "type": "number"
            }
          }
        }
      }
    }
- SensitivityParameters: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SensitivityParameters",
      "title": "SensitivityParameters",
      "description": "Details for sensitivity parameters.",
      "example": {
        "abnormalMaxValue": 1.1,
        "enableAbnormal": true,
        "enableVeryAbnormal": true,
        "veryAbnormalMaxValue": 0.55
      },
      "type": "object",
      "properties": {
        "abnormalMaxValue": {
          "description": "The maximum value of the threshold in the units being measured.",
          "example": 1.1,
          "type": "number"
        },
        "enableAbnormal": {
          "description": "If abnormal values are being monitored.<br />true - Monitor for abnormal values<br />false - Do not monitor for abnormal values.",
          "example": true,
          "type": "boolean"
        },
        "enableVeryAbnormal": {
          "description": "If very abnormal values are being monitored.<br />true - Monitor for very abnormal values<br />false - Do not monitor for very abnormal values.",
          "example": true,
          "type": "boolean"
        },
        "veryAbnormalMaxValue": {
          "description": "The maximum value of the threshold in the units being measured.",
          "example": 0.55,
          "type": "number"
        }
      }
    }
- IntelligenceSuccessResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "IntelligenceSuccessResult",
      "title": "IntelligenceSuccessResult",
      "description": "Success response.",
      "example": {
        "status": "Success"
      },
      "type": "object",
      "properties": {
        "status": {
          "description": "Anomaly detection status.",
          "example": "Success",
          "type": "string"
        }
      }
    }
- AnomalyDetectionTrigger: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AnomalyDetectionTrigger",
      "title": "AnomalyDetectionTrigger",
      "description": "Trigger for anomaly detection.",
      "example": {
        "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d"
      },
      "type": "object",
      "properties": {
        "triggerId": {
          "description": "Trigger ID to identify the request in a callback.",
          "example": "be1b5958-3e11-41db-9abd-b1b7618c0035",
          "type": "string"
        }
      }
    }
- IntelligenceResult: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "IntelligenceResult",
      "title": "IntelligenceResult",
      "description": "An error occurred.",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "The 3-digit HTML error code.",
          "type": "string",
          "maxLength": 3,
          "pattern": "^[0-9]{3}$"
        },
        "errorMessage": {
          "description": "Error Message.",
          "type": "string",
          "minLength": 3,
          "maxLength": 1000,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- CycleType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "CycleType",
      "type": "string",
      "enum": [
        "cycleone",
        "cycletwo"
      ]
    }
- GetDeviceExperienceScoreHistoryRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetDeviceExperienceScoreHistoryRequest",
      "title": "GetDeviceExperienceScoreHistoryRequest",
      "description": "Get device experience score history.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9-]{3,32}$"
        },
        "deviceId": {
          "id": "DeviceIdentifier",
          "title": "DeviceIdentifier",
          "description": "Device Id details.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "Kind of device.",
              "example": "iccid",
              "type": "string",
              "minLength": 3,
              "maxLength": 6,
              "pattern": "^[A-Za-z]{3,6}$"
            },
            "id": {
              "description": "Device Identity number.",
              "example": "01234567899876543210",
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[0-9]{3,32}$"
            },
            "mdn": {
              "description": "Device MDN number.",
              "example": "0123456789",
              "type": "string",
              "minLength": 3,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9]{3,10}$"
            }
          },
          "required": [
            "kind",
            "id"
          ]
        }
      },
      "required": [
        "accountName",
        "deviceId"
      ]
    }
- GetDeviceExperienceScoreBulkRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetDeviceExperienceScoreBulkRequest",
      "title": "GetDeviceExperienceScoreBulkRequest",
      "description": "Get device experience score bulk request.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9-]{3,32}$"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceIdentifier",
            "title": "DeviceIdentifier",
            "description": "Device Id details.",
            "type": "object",
            "properties": {
              "kind": {
                "description": "Kind of device.",
                "example": "iccid",
                "type": "string",
                "minLength": 3,
                "maxLength": 6,
                "pattern": "^[A-Za-z]{3,6}$"
              },
              "id": {
                "description": "Device Identity number.",
                "example": "01234567899876543210",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9]{3,32}$"
              },
              "mdn": {
                "description": "Device MDN number.",
                "example": "0123456789",
                "type": "string",
                "minLength": 3,
                "maxLength": 10,
                "pattern": "^[A-Za-z0-9]{3,10}$"
              }
            },
            "required": [
              "kind",
              "id"
            ]
          },
          "maxItems": 100
        }
      },
      "required": [
        "accountName",
        "deviceList"
      ]
    }
- GetNetworkConditionsRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetNetworkConditionsRequest",
      "title": "GetNetworkConditionsRequest",
      "description": "Get network conditions.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9-]{3,32}$"
        },
        "locationType": {
          "description": "Type of location detail.",
          "example": "LONGLAT",
          "type": "string",
          "minLength": 3,
          "maxLength": 10,
          "pattern": "^[A-Za-z]{3,10}$"
        },
        "coordinates": {
          "id": "Coordinates",
          "title": "Coordinates",
          "description": "Coordinates information.",
          "type": "object",
          "properties": {
            "latitude": {
              "description": "Latitude value of location.",
              "example": "-33.84819",
              "type": "string",
              "minLength": 3,
              "maxLength": 12,
              "pattern": "^[-+]?([0-9.]{3,12})$"
            },
            "longitude": {
              "description": "Longitude value of location.",
              "example": "151.22049",
              "type": "string",
              "minLength": 3,
              "maxLength": 12,
              "pattern": "^[-+]?([0-9.]{3,12})$"
            }
          }
        }
      },
      "required": [
        "accountName",
        "locationType",
        "coordinates"
      ]
    }
- GetWirelessCoverageRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetWirelessCoverageRequest",
      "title": "GetWirelessCoverageRequest",
      "description": "Get wireless coverage.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9-]{3,32}$"
        },
        "requestType": {
          "description": "Type of request.",
          "example": "NW",
          "type": "string",
          "minLength": 2,
          "maxLength": 12,
          "pattern": "^[A-Za-z]{2,12}$"
        },
        "locationType": {
          "description": "Type of location detail.",
          "example": "LONGLAT",
          "type": "string",
          "minLength": 3,
          "maxLength": 12,
          "pattern": "^[A-Za-z]{3,12}$"
        },
        "locations": {
          "id": "Locationscoord",
          "title": "Locationscoord",
          "description": "Location coordinates.",
          "type": "object",
          "properties": {
            "coordinatesList": {
              "description": "",
              "type": "array",
              "items": {
                "id": "Coordinates",
                "title": "Coordinates",
                "description": "Coordinates information.",
                "type": "object",
                "properties": {
                  "latitude": {
                    "description": "Latitude value of location.",
                    "example": "-33.84819",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 12,
                    "pattern": "^[-+]?([0-9.]{3,12})$"
                  },
                  "longitude": {
                    "description": "Longitude value of location.",
                    "example": "151.22049",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 12,
                    "pattern": "^[-+]?([0-9.]{3,12})$"
                  }
                }
              },
              "maxItems": 100
            }
          },
          "required": [
            "coordinatesList"
          ]
        },
        "networkTypesList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "NetworkType",
            "title": "NetworkType",
            "description": "Network type.",
            "type": "object",
            "properties": {
              "networkType": {
                "example": "LTE",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        }
      },
      "required": [
        "accountName",
        "requestType",
        "locationType",
        "locations",
        "networkTypesList"
      ]
    }
- GetWirelessCoverageRequestFWA: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetWirelessCoverageRequestFWA",
      "title": "GetWirelessCoverageRequestFWA",
      "description": "Get wireless coverage FWA.",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "Account name.",
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9-]{3,32}$"
        },
        "requestType": {
          "description": "Type of request.",
          "example": "FWA",
          "type": "string",
          "minLength": 3,
          "maxLength": 12,
          "pattern": "^[A-Za-z]{3,12}$"
        },
        "locationType": {
          "description": "Type of location detail.",
          "example": "ADDRESS",
          "type": "string",
          "minLength": 3,
          "maxLength": 12,
          "pattern": "^[A-Za-z]{3,12}$"
        },
        "locations": {
          "id": "Locations",
          "title": "Locations",
          "description": "Location details.",
          "type": "object",
          "properties": {
            "addressList": {
              "description": "",
              "type": "array",
              "items": {
                "id": "AddressItem",
                "title": "AddressItem",
                "description": "Address details.",
                "type": "object",
                "properties": {
                  "addressLine1": {
                    "description": "Street Address.",
                    "example": "street number and name",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9 ,]{3,32}$"
                  },
                  "addressLine2": {
                    "description": "Optional address information.",
                    "example": "optional address information",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9 ,]{3,32}$"
                  },
                  "city": {
                    "description": "Name of the city.",
                    "example": "name of the city",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9 ]{3,32}$"
                  },
                  "state": {
                    "description": "State code.",
                    "example": "NY",
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 3,
                    "pattern": "^[A-Za-z]{2,3}$"
                  },
                  "country": {
                    "description": "Country.",
                    "example": "USA",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "pattern": "^[A-Za-z]{3,3}$"
                  },
                  "zip": {
                    "description": "Five digit zipcode.",
                    "example": "10001",
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 5,
                    "pattern": "^[0-9]{5,5}$"
                  },
                  "zip4": {
                    "description": "Four digit zip code.",
                    "example": "0727",
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "pattern": "^[0-9]{4,4}$"
                  }
                }
              },
              "maxItems": 100
            }
          }
        },
        "networkTypesList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "NetworkType",
            "title": "NetworkType",
            "description": "Network type.",
            "type": "object",
            "properties": {
              "networkType": {
                "example": "LTE",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        }
      },
      "required": [
        "accountName",
        "requestType",
        "locationType",
        "locations",
        "networkTypesList"
      ]
    }
- Locationscoord: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Locationscoord",
      "title": "Locationscoord",
      "description": "Location coordinates.",
      "type": "object",
      "properties": {
        "coordinatesList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Coordinates",
            "title": "Coordinates",
            "description": "Coordinates information.",
            "type": "object",
            "properties": {
              "latitude": {
                "description": "Latitude value of location.",
                "example": "-33.84819",
                "type": "string",
                "minLength": 3,
                "maxLength": 12,
                "pattern": "^[-+]?([0-9.]{3,12})$"
              },
              "longitude": {
                "description": "Longitude value of location.",
                "example": "151.22049",
                "type": "string",
                "minLength": 3,
                "maxLength": 12,
                "pattern": "^[-+]?([0-9.]{3,12})$"
              }
            }
          },
          "maxItems": 100
        }
      },
      "required": [
        "coordinatesList"
      ]
    }
- Locations: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Locations",
      "title": "Locations",
      "description": "Location details.",
      "type": "object",
      "properties": {
        "addressList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "AddressItem",
            "title": "AddressItem",
            "description": "Address details.",
            "type": "object",
            "properties": {
              "addressLine1": {
                "description": "Street Address.",
                "example": "street number and name",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9 ,]{3,32}$"
              },
              "addressLine2": {
                "description": "Optional address information.",
                "example": "optional address information",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9 ,]{3,32}$"
              },
              "city": {
                "description": "Name of the city.",
                "example": "name of the city",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9 ]{3,32}$"
              },
              "state": {
                "description": "State code.",
                "example": "NY",
                "type": "string",
                "minLength": 2,
                "maxLength": 3,
                "pattern": "^[A-Za-z]{2,3}$"
              },
              "country": {
                "description": "Country.",
                "example": "USA",
                "type": "string",
                "minLength": 3,
                "maxLength": 3,
                "pattern": "^[A-Za-z]{3,3}$"
              },
              "zip": {
                "description": "Five digit zipcode.",
                "example": "10001",
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{5,5}$"
              },
              "zip4": {
                "description": "Four digit zip code.",
                "example": "0727",
                "type": "string",
                "minLength": 4,
                "maxLength": 4,
                "pattern": "^[0-9]{4,4}$"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- NetworkType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "NetworkType",
      "title": "NetworkType",
      "description": "Network type.",
      "type": "object",
      "properties": {
        "networkType": {
          "example": "LTE",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- Coordinates: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Coordinates",
      "title": "Coordinates",
      "description": "Coordinates information.",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude value of location.",
          "example": "-33.84819",
          "type": "string",
          "minLength": 3,
          "maxLength": 12,
          "pattern": "^[-+]?([0-9.]{3,12})$"
        },
        "longitude": {
          "description": "Longitude value of location.",
          "example": "151.22049",
          "type": "string",
          "minLength": 3,
          "maxLength": 12,
          "pattern": "^[-+]?([0-9.]{3,12})$"
        }
      }
    }
- AddressItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "AddressItem",
      "title": "AddressItem",
      "description": "Address details.",
      "type": "object",
      "properties": {
        "addressLine1": {
          "description": "Street Address.",
          "example": "street number and name",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ,]{3,32}$"
        },
        "addressLine2": {
          "description": "Optional address information.",
          "example": "optional address information",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ,]{3,32}$"
        },
        "city": {
          "description": "Name of the city.",
          "example": "name of the city",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        },
        "state": {
          "description": "State code.",
          "example": "NY",
          "type": "string",
          "minLength": 2,
          "maxLength": 3,
          "pattern": "^[A-Za-z]{2,3}$"
        },
        "country": {
          "description": "Country.",
          "example": "USA",
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "pattern": "^[A-Za-z]{3,3}$"
        },
        "zip": {
          "description": "Five digit zipcode.",
          "example": "10001",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5,5}$"
        },
        "zip4": {
          "description": "Four digit zip code.",
          "example": "0727",
          "type": "string",
          "minLength": 4,
          "maxLength": 4,
          "pattern": "^[0-9]{4,4}$"
        }
      }
    }
- DeviceIdentifier: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceIdentifier",
      "title": "DeviceIdentifier",
      "description": "Device Id details.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kind of device.",
          "example": "iccid",
          "type": "string",
          "minLength": 3,
          "maxLength": 6,
          "pattern": "^[A-Za-z]{3,6}$"
        },
        "id": {
          "description": "Device Identity number.",
          "example": "01234567899876543210",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9]{3,32}$"
        },
        "mdn": {
          "description": "Device MDN number.",
          "example": "0123456789",
          "type": "string",
          "minLength": 3,
          "maxLength": 10,
          "pattern": "^[A-Za-z0-9]{3,10}$"
        }
      },
      "required": [
        "kind",
        "id"
      ]
    }
- WNPRequestResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "WNPRequestResponse",
      "title": "WNPRequestResponse",
      "description": "Wireless network performance request response.",
      "type": "object",
      "properties": {
        "requestId": {
          "description": "Request id.",
          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
          "type": "string",
          "minLength": 3,
          "maxLength": 64,
          "pattern": "^[A-Za-z0-9-]{3,64}$"
        }
      }
    }
- WNPRestErrorResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "WNPRestErrorResponse",
      "title": "WNPRestErrorResponse",
      "description": "Wireless network performance rest error response.",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Rest error response.",
          "example": "400",
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "pattern": "^[0-9]{3,3}$"
        },
        "errorMessage": {
          "description": "Error message details.",
          "example": "A brief description of the error code",
          "type": "string",
          "minLength": 3,
          "maxLength": 64,
          "pattern": "^[A-Za-z0-9 ]{3,64}$"
        }
      }
    }
- StatusResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "StatusResponse",
      "title": "StatusResponse",
      "type": "object",
      "properties": {
        "requestId": {
          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
          "type": "string",
          "minLength": 3,
          "maxLength": 64,
          "pattern": "^[a-z-0-9]{3,64}$"
        },
        "status": {
          "example": "Success",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "subrequests": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Subrequest",
            "title": "Subrequest",
            "type": "object",
            "properties": {
              "ids": {
                "id": "GIODeviceId",
                "title": "GIODeviceId",
                "type": "object",
                "properties": {
                  "kind": {
                    "example": "eid",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 6,
                    "pattern": "^[A-Za-z]{3,6}$"
                  },
                  "id": {
                    "example": "12345678901234567890123456789012",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[0-9]{3,32}$"
                  }
                }
              },
              "status": {
                "example": "Success",
                "type": "string",
                "minLength": 3,
                "maxLength": 8,
                "pattern": "^[A-Za-z]{3,8}$"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- Subrequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Subrequest",
      "title": "Subrequest",
      "type": "object",
      "properties": {
        "ids": {
          "id": "GIODeviceId",
          "title": "GIODeviceId",
          "type": "object",
          "properties": {
            "kind": {
              "example": "eid",
              "type": "string",
              "minLength": 3,
              "maxLength": 6,
              "pattern": "^[A-Za-z]{3,6}$"
            },
            "id": {
              "example": "12345678901234567890123456789012",
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[0-9]{3,32}$"
            }
          }
        },
        "status": {
          "example": "Success",
          "type": "string",
          "minLength": 3,
          "maxLength": 8,
          "pattern": "^[A-Za-z]{3,8}$"
        }
      }
    }
- ProvhistoryRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ProvhistoryRequest",
      "title": "ProvhistoryRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Z a-z 0-9 \\-]{3,32}$"
        },
        "deviceFilter": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIODeviceId",
            "title": "GIODeviceId",
            "type": "object",
            "properties": {
              "kind": {
                "example": "eid",
                "type": "string",
                "minLength": 3,
                "maxLength": 6,
                "pattern": "^[A-Za-z]{3,6}$"
              },
              "id": {
                "example": "12345678901234567890123456789012",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        },
        "earliest": {
          "example": "2021-10-15T04:49:35-00:00",
          "type": "string",
          "format": "date-time"
        },
        "latest": {
          "example": "2021-10-15T04:49:49-00:00",
          "type": "string",
          "format": "date-time"
        }
      }
    }
- GetDeviceListWithProfilesRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetDeviceListWithProfilesRequest",
      "title": "GetDeviceListWithProfilesRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9\\-]{3,32}$"
        },
        "provisioningStatusFilter": {
          "example": "ACTIVE",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "profileStatusFilter": {
          "example": "UNKNOWN",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "carrierNameFilter": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "deviceFilter": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIODeviceId",
            "title": "GIODeviceId",
            "type": "object",
            "properties": {
              "kind": {
                "example": "eid",
                "type": "string",
                "minLength": 3,
                "maxLength": 6,
                "pattern": "^[A-Za-z]{3,6}$"
              },
              "id": {
                "example": "12345678901234567890123456789012",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9]{3,32}$"
              }
            }
          },
          "maxItems": 50
        }
      },
      "required": [
        "accountName"
      ]
    }
- SMSEventHistoryRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SMSEventHistoryRequest",
      "title": "SMSEventHistoryRequest",
      "type": "object",
      "properties": {
        "deviceId": {
          "id": "GIODeviceId",
          "title": "GIODeviceId",
          "type": "object",
          "properties": {
            "kind": {
              "example": "eid",
              "type": "string",
              "minLength": 3,
              "maxLength": 6,
              "pattern": "^[A-Za-z]{3,6}$"
            },
            "id": {
              "example": "12345678901234567890123456789012",
              "type": "string",
              "minLength": 3,
              "maxLength": 32,
              "pattern": "^[0-9]{3,32}$"
            }
          }
        },
        "earliest": {
          "type": "string",
          "format": "date-time"
        },
        "latest": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "deviceId"
      ]
    }
- SmsMessagesResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SmsMessagesResponse",
      "title": "SmsMessagesResponse",
      "type": "object",
      "properties": {
        "messages": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIOSmsMessage",
            "title": "GIOSmsMessage",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "GIODeviceId",
                  "title": "GIODeviceId",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "example": "eid",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 6,
                      "pattern": "^[A-Za-z]{3,6}$"
                    },
                    "id": {
                      "example": "12345678901234567890123456789012",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[0-9]{3,32}$"
                    }
                  }
                },
                "maxItems": 100
              },
              "message": {
                "example": "a text message",
                "type": "string",
                "minLength": 3,
                "maxLength": 120,
                "pattern": "^[A-Za-z0-9 ]{3,120}$"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "maxItems": 5
        },
        "hasMoreData": {
          "example": false,
          "type": "boolean"
        }
      }
    }
- GIOSmsMessage: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GIOSmsMessage",
      "title": "GIOSmsMessage",
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIODeviceId",
            "title": "GIODeviceId",
            "type": "object",
            "properties": {
              "kind": {
                "example": "eid",
                "type": "string",
                "minLength": 3,
                "maxLength": 6,
                "pattern": "^[A-Za-z]{3,6}$"
              },
              "id": {
                "example": "12345678901234567890123456789012",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        },
        "message": {
          "example": "a text message",
          "type": "string",
          "minLength": 3,
          "maxLength": 120,
          "pattern": "^[A-Za-z0-9 ]{3,120}$"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
- GIOSMSSendRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GIOSMSSendRequest",
      "title": "GIOSMSSendRequest",
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIODeviceId",
            "title": "GIODeviceId",
            "type": "object",
            "properties": {
              "kind": {
                "example": "eid",
                "type": "string",
                "minLength": 3,
                "maxLength": 6,
                "pattern": "^[A-Za-z]{3,6}$"
              },
              "id": {
                "example": "12345678901234567890123456789012",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        },
        "smsMessage": {
          "example": "A text message",
          "type": "string",
          "minLength": 3,
          "maxLength": 64,
          "pattern": "^[A-Za-z0-9 ]{3,64}$"
        },
        "accountName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "customFields": {
          "description": "",
          "type": "array",
          "items": {
            "id": "KvPair",
            "title": "KvPair",
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "value": {
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              }
            }
          },
          "maxItems": 5
        },
        "dataEncoding": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "groupName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "servicePlan": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "timeToLive": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      },
      "required": [
        "deviceIds",
        "smsMessage"
      ]
    }
- KvPair: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "KvPair",
      "title": "KvPair",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        },
        "value": {
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9]{3,32}$"
        }
      }
    }
- SMSOptionsSendRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SMSOptionsSendRequest",
      "title": "SMSOptionsSendRequest",
      "type": "object",
      "properties": {
        "servicePlan": {
          "example": "the name of a service plan",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        },
        "smsMessage": {
          "example": "A text message",
          "type": "string",
          "minLength": 3,
          "maxLength": 64,
          "pattern": "^[A-Za-z0-9 ]{3,64}$"
        }
      }
    }
- GIOProfileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GIOProfileRequest",
      "title": "GIOProfileRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIODeviceList",
            "title": "GIODeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "GIODeviceId",
                  "title": "GIODeviceId",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "example": "eid",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 6,
                      "pattern": "^[A-Za-z]{3,6}$"
                    },
                    "id": {
                      "example": "12345678901234567890123456789012",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[0-9]{3,32}$"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9\\-]{3,32}$"
        },
        "mdnZipCode": {
          "example": "12345",
          "type": "string",
          "minLength": 5,
          "maxLength": 5,
          "pattern": "^[0-9]{5,5}$"
        },
        "servicePlan": {
          "example": "service plan name",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        }
      },
      "required": [
        "devices",
        "accountName"
      ]
    }
- GIODeactivateDeviceProfileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GIODeactivateDeviceProfileRequest",
      "title": "GIODeactivateDeviceProfileRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIODeviceList",
            "title": "GIODeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "GIODeviceId",
                  "title": "GIODeviceId",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "example": "eid",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 6,
                      "pattern": "^[A-Za-z]{3,6}$"
                    },
                    "id": {
                      "example": "12345678901234567890123456789012",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[0-9]{3,32}$"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9\\-]{3,32}$"
        },
        "servicePlan": {
          "example": "service plan name",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        },
        "etfWaiver": {
          "type": "boolean",
          "default": false
        },
        "reasonCode": {
          "example": "FF",
          "type": "string",
          "minLength": 2,
          "maxLength": 32,
          "pattern": "^[0-9A-Z]{2,32}$"
        }
      }
    }
- DeviceProfileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceProfileRequest",
      "title": "DeviceProfileRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIODeviceList",
            "title": "GIODeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "GIODeviceId",
                  "title": "GIODeviceId",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "example": "eid",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 6,
                      "pattern": "^[A-Za-z]{3,6}$"
                    },
                    "id": {
                      "example": "12345678901234567890123456789012",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[0-9]{3,32}$"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9\\-]{3,32}$"
        },
        "servicePlan": {
          "example": "service plan name",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        }
      }
    }
- GIODeviceId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GIODeviceId",
      "title": "GIODeviceId",
      "type": "object",
      "properties": {
        "kind": {
          "example": "eid",
          "type": "string",
          "minLength": 3,
          "maxLength": 6,
          "pattern": "^[A-Za-z]{3,6}$"
        },
        "id": {
          "example": "12345678901234567890123456789012",
          "type": "string",
          "minLength": 3,
          "maxLength": 32,
          "pattern": "^[0-9]{3,32}$"
        }
      }
    }
- GIODeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GIODeviceList",
      "title": "GIODeviceList",
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "GIODeviceId",
            "title": "GIODeviceId",
            "type": "object",
            "properties": {
              "kind": {
                "example": "eid",
                "type": "string",
                "minLength": 3,
                "maxLength": 6,
                "pattern": "^[A-Za-z]{3,6}$"
              },
              "id": {
                "example": "12345678901234567890123456789012",
                "type": "string",
                "minLength": 3,
                "maxLength": 32,
                "pattern": "^[0-9]{3,32}$"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- GIORequestResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GIORequestResponse",
      "title": "GIORequestResponse",
      "type": "object",
      "properties": {
        "requestId": {
          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
          "type": "string",
          "minLength": 3,
          "maxLength": 64,
          "pattern": "^[A-Za-z0-9\\-]{3,64}$"
        }
      }
    }
- SuccessResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "SuccessResponse",
      "title": "SuccessResponse",
      "type": "object",
      "properties": {
        "success": {
          "example": true,
          "type": "boolean"
        }
      }
    }
- GIORestErrorResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GIORestErrorResponse",
      "title": "GIORestErrorResponse",
      "type": "object",
      "properties": {
        "errorCode": {
          "example": "400",
          "type": "string",
          "minLength": 3,
          "maxLength": 3,
          "pattern": "^[0-9]{3,3}$"
        },
        "errorMessage": {
          "example": "a brief description of the error",
          "type": "string",
          "minLength": 3,
          "maxLength": 1000,
          "pattern": "^[A-Za-z0-9 ]{3,32}$"
        }
      }
    }
- subscribeRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "subscribeRequest",
      "title": "subscribeRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "example": "0000123456-00001",
          "type": "string"
        },
        "deviceInfo": {
          "description": "",
          "type": "array",
          "items": {
            "id": "QOSdeviceInfo",
            "title": "QOSdeviceInfo",
            "type": "object",
            "properties": {
              "deviceId": {
                "id": "QOSdeviceId",
                "title": "QOSdeviceId",
                "type": "object",
                "properties": {
                  "id": {
                    "example": "10-digit phone number",
                    "type": "string"
                  },
                  "kind": {
                    "example": "mdn",
                    "type": "string"
                  }
                }
              },
              "flowInfo": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "FlowInfo",
                  "title": "FlowInfo",
                  "type": "object",
                  "properties": {
                    "flowServer": {
                      "example": "[IPv6 address]:port",
                      "type": "string"
                    },
                    "flowDevice": {
                      "example": "[IPv6 address]:port",
                      "type": "string"
                    },
                    "flowDirection": {
                      "example": "UPLINK",
                      "type": "string"
                    },
                    "flowProtocol": {
                      "example": "UDP",
                      "type": "string"
                    },
                    "qciOption": {
                      "example": "Premium",
                      "type": "string"
                    }
                  }
                }
              },
              "deviceIPv6Addr": {
                "example": "IPv6 address",
                "type": "string"
              }
            },
            "required": [
              "deviceId",
              "flowInfo"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "deviceInfo"
      ]
    }
- QOSdeviceId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "QOSdeviceId",
      "title": "QOSdeviceId",
      "type": "object",
      "properties": {
        "id": {
          "example": "10-digit phone number",
          "type": "string"
        },
        "kind": {
          "example": "mdn",
          "type": "string"
        }
      }
    }
- DefaultResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DefaultResponse",
      "title": "DefaultResponse",
      "type": "object",
      "properties": {
        "errorCode": {
          "example": "3 or 4 digit error code",
          "type": "string"
        },
        "errorMessage": {
          "example": "A short description of the error",
          "type": "string"
        }
      }
    }
- 201success: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "201success",
      "title": "201success",
      "type": "object",
      "properties": {
        "requestId": {
          "example": "be36accb-0a9a-4367-93ab-0af6c4ed256a",
          "type": "string"
        }
      }
    }
- FlowInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "FlowInfo",
      "title": "FlowInfo",
      "type": "object",
      "properties": {
        "flowServer": {
          "example": "[IPv6 address]:port",
          "type": "string"
        },
        "flowDevice": {
          "example": "[IPv6 address]:port",
          "type": "string"
        },
        "flowDirection": {
          "example": "UPLINK",
          "type": "string"
        },
        "flowProtocol": {
          "example": "UDP",
          "type": "string"
        },
        "qciOption": {
          "example": "Premium",
          "type": "string"
        }
      }
    }
- QOSdeviceInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "QOSdeviceInfo",
      "title": "QOSdeviceInfo",
      "type": "object",
      "properties": {
        "deviceId": {
          "id": "QOSdeviceId",
          "title": "QOSdeviceId",
          "type": "object",
          "properties": {
            "id": {
              "example": "10-digit phone number",
              "type": "string"
            },
            "kind": {
              "example": "mdn",
              "type": "string"
            }
          }
        },
        "flowInfo": {
          "description": "",
          "type": "array",
          "items": {
            "id": "FlowInfo",
            "title": "FlowInfo",
            "type": "object",
            "properties": {
              "flowServer": {
                "example": "[IPv6 address]:port",
                "type": "string"
              },
              "flowDevice": {
                "example": "[IPv6 address]:port",
                "type": "string"
              },
              "flowDirection": {
                "example": "UPLINK",
                "type": "string"
              },
              "flowProtocol": {
                "example": "UDP",
                "type": "string"
              },
              "qciOption": {
                "example": "Premium",
                "type": "string"
              }
            }
          }
        },
        "deviceIPv6Addr": {
          "example": "IPv6 address",
          "type": "string"
        }
      },
      "required": [
        "deviceId",
        "flowInfo"
      ]
    }
- ChangePmecDeviceState-ActivateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangePmecDeviceState-ActivateRequest",
      "title": "ChangePmecDeviceState-ActivateRequest",
      "example": {
        "accountName": "0342351414-00001",
        "deviceList": [
          {
            "deviceIds": [
              {
                "id": "99948099913024600001",
                "kind": "iccid"
              }
            ]
          }
        ],
        "activate": {
          "profile": "HSS EsmProfile Enterprise 5G"
        }
      },
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceList",
            "title": "MECDeviceList",
            "example": {
              "deviceIds": [
                {
                  "id": "99948099913024600001",
                  "kind": "iccid"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "MECDeviceId",
                  "title": "MECDeviceId",
                  "example": {
                    "id": "99948099913024600001",
                    "kind": "iccid"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ]
                }
              }
            },
            "required": [
              "deviceIds"
            ]
          }
        },
        "activate": {
          "id": "Activate",
          "title": "Activate",
          "example": {
            "profile": "HSS EsmProfile Enterprise 5G"
          },
          "type": "object",
          "properties": {
            "profile": {
              "type": "string"
            }
          },
          "required": [
            "profile"
          ]
        }
      },
      "required": [
        "accountName",
        "deviceList",
        "activate"
      ]
    }
- MECDeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECDeviceList",
      "title": "MECDeviceList",
      "example": {
        "deviceIds": [
          {
            "id": "99948099913024600001",
            "kind": "iccid"
          }
        ]
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceId",
            "title": "MECDeviceId",
            "example": {
              "id": "99948099913024600001",
              "kind": "iccid"
            },
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "kind"
            ]
          }
        }
      },
      "required": [
        "deviceIds"
      ]
    }
- MECDeviceId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECDeviceId",
      "title": "MECDeviceId",
      "example": {
        "id": "99948099913024600001",
        "kind": "iccid"
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "kind"
      ]
    }
- Activate: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Activate",
      "title": "Activate",
      "example": {
        "profile": "HSS EsmProfile Enterprise 5G"
      },
      "type": "object",
      "properties": {
        "profile": {
          "type": "string"
        }
      },
      "required": [
        "profile"
      ]
    }
- ChangePmecDeviceState-BulkActivateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangePmecDeviceState-BulkActivateRequest",
      "title": "ChangePmecDeviceState-BulkActivateRequest",
      "example": {
        "accountName": "0342351414-00001",
        "deviceList": [
          {
            "deviceIds": [
              {
                "id": "99948099913031600000",
                "kind": "iccid"
              }
            ],
            "ipAddress": "10.3.4.9",
            "apn": "1"
          },
          {
            "deviceIds": [
              {
                "id": "99948099913031700000",
                "kind": "iccid"
              }
            ],
            "ipAddress": "10.4.5.2",
            "apn": "2"
          }
        ],
        "activate": {
          "profile": "HSS EsmProfile Enterprise 5G internet"
        }
      },
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList1",
            "title": "DeviceList1",
            "example": {
              "deviceIds": [
                {
                  "id": "99948099913031600000",
                  "kind": "iccid"
                }
              ],
              "ipAddress": "10.3.4.9",
              "apn": "1"
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "MECDeviceId",
                  "title": "MECDeviceId",
                  "example": {
                    "id": "99948099913024600001",
                    "kind": "iccid"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ]
                }
              },
              "ipAddress": {
                "type": "string"
              },
              "apn": {
                "type": "string"
              }
            },
            "required": [
              "deviceIds",
              "ipAddress",
              "apn"
            ]
          }
        },
        "activate": {
          "id": "Activate",
          "title": "Activate",
          "example": {
            "profile": "HSS EsmProfile Enterprise 5G"
          },
          "type": "object",
          "properties": {
            "profile": {
              "type": "string"
            }
          },
          "required": [
            "profile"
          ]
        }
      },
      "required": [
        "accountName",
        "deviceList",
        "activate"
      ]
    }
- DeviceList1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceList1",
      "title": "DeviceList1",
      "example": {
        "deviceIds": [
          {
            "id": "99948099913031600000",
            "kind": "iccid"
          }
        ],
        "ipAddress": "10.3.4.9",
        "apn": "1"
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceId",
            "title": "MECDeviceId",
            "example": {
              "id": "99948099913024600001",
              "kind": "iccid"
            },
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "kind"
            ]
          }
        },
        "ipAddress": {
          "type": "string"
        },
        "apn": {
          "type": "string"
        }
      },
      "required": [
        "deviceIds",
        "ipAddress",
        "apn"
      ]
    }
- ChangePmecDeviceState-BulkDeactivateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangePmecDeviceState-BulkDeactivateRequest",
      "title": "ChangePmecDeviceState-BulkDeactivateRequest",
      "example": {
        "accountName": "0342351414-00001",
        "deviceList": [
          {
            "deviceIds": [
              {
                "id": "99948099913031600000",
                "kind": "iccid"
              }
            ]
          },
          {
            "deviceIds": [
              {
                "id": "99948099913031700000",
                "kind": "iccid"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceList",
            "title": "MECDeviceList",
            "example": {
              "deviceIds": [
                {
                  "id": "99948099913024600001",
                  "kind": "iccid"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "MECDeviceId",
                  "title": "MECDeviceId",
                  "example": {
                    "id": "99948099913024600001",
                    "kind": "iccid"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ]
                }
              }
            },
            "required": [
              "deviceIds"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "deviceList"
      ]
    }
- ChangePmecDeviceState-DeactivateRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangePmecDeviceState-DeactivateRequest",
      "title": "ChangePmecDeviceState-DeactivateRequest",
      "example": {
        "accountName": "0342351414-00001",
        "deviceList": [
          {
            "deviceIds": [
              {
                "id": "99948099913024600000",
                "kind": "iccid"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceList",
            "title": "MECDeviceList",
            "example": {
              "deviceIds": [
                {
                  "id": "99948099913024600001",
                  "kind": "iccid"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "MECDeviceId",
                  "title": "MECDeviceId",
                  "example": {
                    "id": "99948099913024600001",
                    "kind": "iccid"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ]
                }
              }
            },
            "required": [
              "deviceIds"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "deviceList"
      ]
    }
- ChangePmecDeviceProfileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangePmecDeviceProfileRequest",
      "title": "ChangePmecDeviceProfileRequest",
      "example": {
        "accountName": "0342351414-00001",
        "deviceList": [
          {
            "deviceIds": [
              {
                "id": "99948099913024600000",
                "kind": "iccid"
              }
            ]
          }
        ],
        "newProfile": "HSS EsmProfile Enterprise 5G internet"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceList",
            "title": "MECDeviceList",
            "example": {
              "deviceIds": [
                {
                  "id": "99948099913024600001",
                  "kind": "iccid"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "MECDeviceId",
                  "title": "MECDeviceId",
                  "example": {
                    "id": "99948099913024600001",
                    "kind": "iccid"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ]
                }
              }
            },
            "required": [
              "deviceIds"
            ]
          }
        },
        "newProfile": {
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "deviceList",
        "newProfile"
      ]
    }
- ChangePmecDeviceProfileBulkRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangePmecDeviceProfileBulkRequest",
      "title": "ChangePmecDeviceProfileBulkRequest",
      "example": {
        "accountName": "0342351414-00001",
        "deviceList": [
          {
            "deviceIds": [
              {
                "id": "99948099913032000000",
                "kind": "iccid"
              }
            ]
          },
          {
            "deviceIds": [
              {
                "id": "99948099913032100000",
                "kind": "iccid"
              }
            ]
          }
        ],
        "newProfile": "HSS EsmProfile Enterprise 5G"
      },
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceList",
            "title": "MECDeviceList",
            "example": {
              "deviceIds": [
                {
                  "id": "99948099913024600001",
                  "kind": "iccid"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "MECDeviceId",
                  "title": "MECDeviceId",
                  "example": {
                    "id": "99948099913024600001",
                    "kind": "iccid"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ]
                }
              }
            },
            "required": [
              "deviceIds"
            ]
          }
        },
        "newProfile": {
          "type": "string"
        }
      },
      "required": [
        "accountName",
        "deviceList",
        "newProfile"
      ]
    }
- ChangePmecDeviceIPaddressBulkRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangePmecDeviceIPaddressBulkRequest",
      "title": "ChangePmecDeviceIPaddressBulkRequest",
      "example": {
        "accountName": "0342351414-00001",
        "deviceList": [
          {
            "deviceIds": [
              {
                "id": "99948099913031600000",
                "kind": "iccid"
              }
            ]
          },
          {
            "deviceIds": [
              {
                "id": "99948099913031700000",
                "kind": "iccid"
              }
            ]
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceList",
            "title": "MECDeviceList",
            "example": {
              "deviceIds": [
                {
                  "id": "99948099913024600001",
                  "kind": "iccid"
                }
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "MECDeviceId",
                  "title": "MECDeviceId",
                  "example": {
                    "id": "99948099913024600001",
                    "kind": "iccid"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ]
                }
              }
            },
            "required": [
              "deviceIds"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "deviceList"
      ]
    }
- ChangePmecDeviceIPaddressRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangePmecDeviceIPaddressRequest",
      "title": "ChangePmecDeviceIPaddressRequest",
      "example": {
        "accountName": "0342351414-00001",
        "deviceList": [
          {
            "deviceIds": [
              {
                "id": "99948099913024600000",
                "kind": "iccid"
              }
            ],
            "ipAddress": "10.3.4.5"
          },
          {
            "deviceIds": [
              {
                "id": "999480500019111000001",
                "kind": "iccid"
              }
            ],
            "ipAddress": "10.4.5.7"
          }
        ]
      },
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList7",
            "title": "DeviceList7",
            "example": {
              "deviceIds": [
                {
                  "id": "99948099913024600000",
                  "kind": "iccid"
                }
              ],
              "ipAddress": "10.3.4.5"
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "MECDeviceId",
                  "title": "MECDeviceId",
                  "example": {
                    "id": "99948099913024600001",
                    "kind": "iccid"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ]
                }
              },
              "ipAddress": {
                "type": "string"
              }
            },
            "required": [
              "deviceIds",
              "ipAddress"
            ]
          }
        }
      },
      "required": [
        "accountName",
        "deviceList"
      ]
    }
- DeviceList7: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceList7",
      "title": "DeviceList7",
      "example": {
        "deviceIds": [
          {
            "id": "99948099913024600000",
            "kind": "iccid"
          }
        ],
        "ipAddress": "10.3.4.5"
      },
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECDeviceId",
            "title": "MECDeviceId",
            "example": {
              "id": "99948099913024600001",
              "kind": "iccid"
            },
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "kind"
            ]
          }
        },
        "ipAddress": {
          "type": "string"
        }
      },
      "required": [
        "deviceIds",
        "ipAddress"
      ]
    }
- ChangeMecDeviceStateResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangeMecDeviceStateResponse",
      "title": "ChangeMecDeviceStateResponse",
      "description": "Response to change mec device state",
      "example": {
        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
      },
      "type": "object",
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback service.",
          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
          "type": "string"
        }
      }
    }
- ChangeMecDeviceProfileResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangeMecDeviceProfileResponse",
      "title": "ChangeMecDeviceProfileResponse",
      "description": "Response to change mec device profile",
      "example": {
        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
      },
      "type": "object",
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback service.",
          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
          "type": "string"
        }
      }
    }
- ChangeMecDeviceIPAddressResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ChangeMecDeviceIPAddressResponse",
      "title": "ChangeMecDeviceIPAddressResponse",
      "description": "Response to change mec device ip address.",
      "example": {
        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
      },
      "type": "object",
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback service.",
          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
          "type": "string"
        }
      }
    }
- GetMECPerformanceConsentResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GetMECPerformanceConsentResponse",
      "title": "GetMECPerformanceConsentResponse",
      "description": "MEC Performance Consent Response",
      "example": {
        "consent": "false"
      },
      "type": "object",
      "properties": {
        "consent": {
          "description": "MEC Performance Consent Response.",
          "example": "false",
          "type": "string"
        }
      }
    }
- KPIInfo: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "KPIInfo",
      "title": "KPIInfo",
      "description": "KPI Info Object",
      "example": {
        "name": "DOWNLINK_THROUGHPUT",
        "value": "23.2",
        "nodeName": "132924_ENB_VZ_EULESS_OLTE_RD-01",
        "nodeType": "BASEBAND",
        "description": "Downlink throughput (4G)",
        "unit": "Mbps",
        "category": "Network Performance Radio",
        "timeOfLastUpdate": "2022-12-07T08:39:59.228Z"
      },
      "type": "object",
      "properties": {
        "name": {
          "example": "DOWNLINK_THROUGHPUT",
          "type": "string"
        },
        "value": {
          "example": "23.2",
          "type": "string"
        },
        "nodeName": {
          "example": "132924_ENB_VZ_EULESS_OLTE_RD-01",
          "type": "string"
        },
        "nodeType": {
          "example": "BASEBAND",
          "type": "string"
        },
        "description": {
          "example": "Downlink throughput (4G)",
          "type": "string"
        },
        "unit": {
          "example": "Mbps",
          "type": "string"
        },
        "category": {
          "example": "Network Performance Radio",
          "type": "string"
        },
        "timeOfLastUpdate": {
          "example": "2022-12-07T08:39:59.228Z",
          "type": "string"
        }
      }
    }
- KPIInfoList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "KPIInfoList",
      "title": "KPIInfoList",
      "example": {
        "KpiInfoList": [
          {
            "name": "DOWNLINK_THROUGHPUT",
            "value": "23.2",
            "nodeName": "132924_ENB_VZ_EULESS_OLTE_RD-01",
            "nodeType": "BASEBAND",
            "description": "Downlink throughput (4G)",
            "unit": "Mbps",
            "category": "Network Performance Radio",
            "timeOfLastUpdate": "2022-12-07T08:39:59.228Z"
          }
        ]
      },
      "type": "object",
      "properties": {
        "KpiInfoList": {
          "description": "",
          "type": "array",
          "items": {
            "id": "KPIInfo",
            "title": "KPIInfo",
            "description": "KPI Info Object",
            "example": {
              "name": "DOWNLINK_THROUGHPUT",
              "value": "23.2",
              "nodeName": "132924_ENB_VZ_EULESS_OLTE_RD-01",
              "nodeType": "BASEBAND",
              "description": "Downlink throughput (4G)",
              "unit": "Mbps",
              "category": "Network Performance Radio",
              "timeOfLastUpdate": "2022-12-07T08:39:59.228Z"
            },
            "type": "object",
            "properties": {
              "name": {
                "example": "DOWNLINK_THROUGHPUT",
                "type": "string"
              },
              "value": {
                "example": "23.2",
                "type": "string"
              },
              "nodeName": {
                "example": "132924_ENB_VZ_EULESS_OLTE_RD-01",
                "type": "string"
              },
              "nodeType": {
                "example": "BASEBAND",
                "type": "string"
              },
              "description": {
                "example": "Downlink throughput (4G)",
                "type": "string"
              },
              "unit": {
                "example": "Mbps",
                "type": "string"
              },
              "category": {
                "example": "Network Performance Radio",
                "type": "string"
              },
              "timeOfLastUpdate": {
                "example": "2022-12-07T08:39:59.228Z",
                "type": "string"
              }
            }
          }
        }
      }
    }
- MECProfileList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECProfileList",
      "title": "MECProfileList",
      "example": {
        "profiles": [
          {
            "profileId": "HSS-EsmProfile_Enterprise",
            "profileName": "HSS EsmProfile Enterprise"
          }
        ]
      },
      "type": "object",
      "properties": {
        "profiles": {
          "description": "",
          "type": "array",
          "items": {
            "id": "MECProfile",
            "title": "MECProfile",
            "example": {
              "profileId": "HSS-EsmProfile_Enterprise",
              "profileName": "HSS EsmProfile Enterprise"
            },
            "type": "object",
            "properties": {
              "profileId": {
                "type": "string"
              },
              "profileName": {
                "type": "string"
              }
            }
          }
        }
      }
    }
- MECProfile: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MECProfile",
      "title": "MECProfile",
      "example": {
        "profileId": "HSS-EsmProfile_Enterprise",
        "profileName": "HSS EsmProfile Enterprise"
      },
      "type": "object",
      "properties": {
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        }
      }
    }
- ResponsetoUsageQuery: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ResponsetoUsageQuery",
      "title": "ResponsetoUsageQuery",
      "type": "object",
      "properties": {
        "hasmoredata": {
          "example": false,
          "type": "boolean"
        },
        "deviceId": {
          "id": "ReadySimDeviceId",
          "title": "ReadySimDeviceId",
          "type": "object",
          "properties": {
            "kind": {
              "example": "iccid",
              "type": "string"
            },
            "id": {
              "example": "20-digit iccid",
              "type": "string"
            }
          }
        },
        "usageHistory": {
          "description": "",
          "type": "array",
          "items": {
            "id": "usagehistory",
            "title": "usagehistory",
            "type": "object",
            "properties": {
              "bytesUsed": {
                "example": 3072,
                "type": "integer",
                "format": "int32"
              },
              "serviceplan": {
                "example": "The serviceplan name",
                "type": "string"
              },
              "smsUsed": {
                "type": "integer",
                "format": "int32"
              },
              "moSMS": {
                "type": "integer",
                "format": "int32"
              },
              "mtSMS": {
                "type": "integer",
                "format": "int32"
              },
              "source": {
                "example": "Raw Usage",
                "type": "string"
              },
              "eventDateTime": {
                "example": "2021-08-15T05:00:00Z",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
- RequestBodyforUsage: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RequestBodyforUsage",
      "title": "RequestBodyforUsage",
      "type": "object",
      "properties": {
        "accountId": {
          "example": "0000123456-000001",
          "type": "string"
        },
        "deviceId": {
          "description": "",
          "type": "array",
          "items": {
            "id": "ReadySimDeviceId",
            "title": "ReadySimDeviceId",
            "type": "object",
            "properties": {
              "kind": {
                "example": "iccid",
                "type": "string"
              },
              "id": {
                "example": "20-digit iccid",
                "type": "string"
              }
            }
          }
        },
        "startTime": {
          "example": "2021-08-15T05:00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "example": "2021-08-16T05:00:00Z",
          "type": "string",
          "format": "date-time"
        }
      }
    }
- RequestBodyforUsage1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RequestBodyforUsage1",
      "title": "RequestBodyforUsage1",
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "",
          "type": "array",
          "items": {
            "id": "ReadySimDeviceId",
            "title": "ReadySimDeviceId",
            "type": "object",
            "properties": {
              "kind": {
                "example": "iccid",
                "type": "string"
              },
              "id": {
                "example": "20-digit iccid",
                "type": "string"
              }
            }
          }
        },
        "startTime": {
          "example": "2021-08-15T05:00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "example": "2021-08-16T05:00:00Z",
          "type": "string",
          "format": "date-time"
        }
      }
    }
- ReadySimDeviceId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ReadySimDeviceId",
      "title": "ReadySimDeviceId",
      "type": "object",
      "properties": {
        "kind": {
          "example": "iccid",
          "type": "string"
        },
        "id": {
          "example": "20-digit iccid",
          "type": "string"
        }
      }
    }
- usagehistory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "usagehistory",
      "title": "usagehistory",
      "type": "object",
      "properties": {
        "bytesUsed": {
          "example": 3072,
          "type": "integer",
          "format": "int32"
        },
        "serviceplan": {
          "example": "The serviceplan name",
          "type": "string"
        },
        "smsUsed": {
          "type": "integer",
          "format": "int32"
        },
        "moSMS": {
          "type": "integer",
          "format": "int32"
        },
        "mtSMS": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "example": "Raw Usage",
          "type": "string"
        },
        "eventDateTime": {
          "example": "2021-08-15T05:00:00Z",
          "type": "string",
          "format": "date-time"
        }
      }
    }
- TriggerValueResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TriggerValueResponse",
      "title": "TriggerValueResponse",
      "type": "object",
      "properties": {
        "triggers": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Triggervalues",
            "title": "Triggervalues",
            "type": "object",
            "properties": {
              "triggerId": {
                "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
                "type": "string"
              },
              "triggerName": {
                "example": "PromoAlerts_0000000000-00001_23456789",
                "type": "string"
              },
              "accountName": {
                "example": "0000123456-000001",
                "type": "string"
              },
              "organizationName": {
                "example": "Optional group name",
                "type": "string"
              },
              "triggerCategory": {
                "example": "PromoAlerts",
                "type": "string"
              },
              "triggerAttributes": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "keyDataPercentage50",
                  "title": "keyDataPercentage50",
                  "type": "object",
                  "properties": {
                    "key": {
                      "example": "DataPercentage50",
                      "type": "string"
                    },
                    "value": {
                      "example": false,
                      "type": "boolean"
                    }
                  }
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "modifiedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
- Triggervalues: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Triggervalues",
      "title": "Triggervalues",
      "type": "object",
      "properties": {
        "triggerId": {
          "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
          "type": "string"
        },
        "triggerName": {
          "example": "PromoAlerts_0000000000-00001_23456789",
          "type": "string"
        },
        "accountName": {
          "example": "0000123456-000001",
          "type": "string"
        },
        "organizationName": {
          "example": "Optional group name",
          "type": "string"
        },
        "triggerCategory": {
          "example": "PromoAlerts",
          "type": "string"
        },
        "triggerAttributes": {
          "description": "",
          "type": "array",
          "items": {
            "id": "keyDataPercentage50",
            "title": "keyDataPercentage50",
            "type": "object",
            "properties": {
              "key": {
                "example": "DataPercentage50",
                "type": "string"
              },
              "value": {
                "example": false,
                "type": "boolean"
              }
            }
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
- TriggerValueResponse2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "TriggerValueResponse2",
      "title": "TriggerValueResponse2",
      "type": "object",
      "properties": {
        "triggers": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Triggervalues2",
            "title": "Triggervalues2",
            "type": "object",
            "properties": {
              "triggerId": {
                "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
                "type": "string"
              },
              "triggerName": {
                "example": "PromoAlerts_0000000000-00001_23456789",
                "type": "string"
              },
              "accountName": {
                "example": "0000123456-000001",
                "type": "string"
              },
              "organizationName": {
                "example": "Optional group name",
                "type": "string"
              },
              "triggerCategory": {
                "example": "PromoAlerts",
                "type": "string"
              },
              "promoAlerts": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "PromoAlert",
                  "title": "PromoAlert",
                  "type": "object",
                  "properties": {
                    "filterCriteria": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "ReadySimServicePlan",
                        "title": "ReadySimServicePlan",
                        "type": "object",
                        "properties": {
                          "servicePlan": {
                            "example": "123456",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "condition": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "keyschunk2",
                        "title": "keyschunk2",
                        "type": "object",
                        "properties": {
                          "dataPercentage50": {
                            "example": false,
                            "type": "boolean"
                          },
                          "dataPercentage75": {
                            "example": false,
                            "type": "boolean"
                          },
                          "dataPercentage90": {
                            "example": false,
                            "type": "boolean"
                          },
                          "dataPercentage100": {
                            "example": false,
                            "type": "boolean"
                          },
                          "smsPercentage50": {
                            "example": false,
                            "type": "boolean"
                          },
                          "smsPercentage75": {
                            "example": false,
                            "type": "boolean"
                          },
                          "smsPercentage90": {
                            "example": false,
                            "type": "boolean"
                          },
                          "smsPercentage100": {
                            "example": true,
                            "type": "boolean"
                          },
                          "NoOfDaysB4PromoExp": {
                            "example": 5,
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "enablePromoExp": {
                      "example": true,
                      "type": "boolean"
                    }
                  }
                }
              },
              "active": {
                "type": "boolean"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "modifiedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
- Triggervalues2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Triggervalues2",
      "title": "Triggervalues2",
      "type": "object",
      "properties": {
        "triggerId": {
          "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
          "type": "string"
        },
        "triggerName": {
          "example": "PromoAlerts_0000000000-00001_23456789",
          "type": "string"
        },
        "accountName": {
          "example": "0000123456-000001",
          "type": "string"
        },
        "organizationName": {
          "example": "Optional group name",
          "type": "string"
        },
        "triggerCategory": {
          "example": "PromoAlerts",
          "type": "string"
        },
        "promoAlerts": {
          "description": "",
          "type": "array",
          "items": {
            "id": "PromoAlert",
            "title": "PromoAlert",
            "type": "object",
            "properties": {
              "filterCriteria": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "ReadySimServicePlan",
                  "title": "ReadySimServicePlan",
                  "type": "object",
                  "properties": {
                    "servicePlan": {
                      "example": "123456",
                      "type": "string"
                    }
                  }
                }
              },
              "condition": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "keyschunk2",
                  "title": "keyschunk2",
                  "type": "object",
                  "properties": {
                    "dataPercentage50": {
                      "example": false,
                      "type": "boolean"
                    },
                    "dataPercentage75": {
                      "example": false,
                      "type": "boolean"
                    },
                    "dataPercentage90": {
                      "example": false,
                      "type": "boolean"
                    },
                    "dataPercentage100": {
                      "example": false,
                      "type": "boolean"
                    },
                    "smsPercentage50": {
                      "example": false,
                      "type": "boolean"
                    },
                    "smsPercentage75": {
                      "example": false,
                      "type": "boolean"
                    },
                    "smsPercentage90": {
                      "example": false,
                      "type": "boolean"
                    },
                    "smsPercentage100": {
                      "example": true,
                      "type": "boolean"
                    },
                    "NoOfDaysB4PromoExp": {
                      "example": 5,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "enablePromoExp": {
                "example": true,
                "type": "boolean"
              }
            }
          }
        },
        "active": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
- requestTrigger: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "requestTrigger",
      "title": "requestTrigger",
      "type": "object",
      "properties": {
        "triggerId": {
          "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
          "type": "string"
        },
        "triggerName": {
          "example": "PromoAlerts_0000000000-00001_23456789",
          "type": "string"
        },
        "accountName": {
          "example": "0000123456-000001",
          "type": "string"
        },
        "organizationName": {
          "example": "Optional group name",
          "type": "string"
        },
        "triggerCategory": {
          "example": "PromoAlerts",
          "type": "string"
        },
        "promoAlerts": {
          "description": "",
          "type": "array",
          "items": {
            "id": "PromoAlert1",
            "title": "PromoAlert1",
            "type": "object",
            "properties": {
              "filterCriteria": {
                "description": "",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "condition": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "keyschunk2",
                  "title": "keyschunk2",
                  "type": "object",
                  "properties": {
                    "dataPercentage50": {
                      "example": false,
                      "type": "boolean"
                    },
                    "dataPercentage75": {
                      "example": false,
                      "type": "boolean"
                    },
                    "dataPercentage90": {
                      "example": false,
                      "type": "boolean"
                    },
                    "dataPercentage100": {
                      "example": false,
                      "type": "boolean"
                    },
                    "smsPercentage50": {
                      "example": false,
                      "type": "boolean"
                    },
                    "smsPercentage75": {
                      "example": false,
                      "type": "boolean"
                    },
                    "smsPercentage90": {
                      "example": false,
                      "type": "boolean"
                    },
                    "smsPercentage100": {
                      "example": true,
                      "type": "boolean"
                    },
                    "NoOfDaysB4PromoExp": {
                      "example": 5,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "enablePromoExp": {
                "example": true,
                "type": "boolean"
              }
            }
          }
        }
      }
    }
- condition: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "condition",
      "title": "condition",
      "type": "object",
      "properties": {
        "condition": {
          "description": "",
          "type": "array",
          "items": {
            "id": "keyschunk2",
            "title": "keyschunk2",
            "type": "object",
            "properties": {
              "dataPercentage50": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage75": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage90": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage100": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage50": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage75": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage90": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage100": {
                "example": true,
                "type": "boolean"
              },
              "NoOfDaysB4PromoExp": {
                "example": 5,
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    }
- keyschunk2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "keyschunk2",
      "title": "keyschunk2",
      "type": "object",
      "properties": {
        "dataPercentage50": {
          "example": false,
          "type": "boolean"
        },
        "dataPercentage75": {
          "example": false,
          "type": "boolean"
        },
        "dataPercentage90": {
          "example": false,
          "type": "boolean"
        },
        "dataPercentage100": {
          "example": false,
          "type": "boolean"
        },
        "smsPercentage50": {
          "example": false,
          "type": "boolean"
        },
        "smsPercentage75": {
          "example": false,
          "type": "boolean"
        },
        "smsPercentage90": {
          "example": false,
          "type": "boolean"
        },
        "smsPercentage100": {
          "example": true,
          "type": "boolean"
        },
        "NoOfDaysB4PromoExp": {
          "example": 5,
          "type": "integer",
          "format": "int32"
        }
      }
    }
- enablePromoExp: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "enablePromoExp",
      "title": "enablePromoExp",
      "type": "object",
      "properties": {
        "enablePromoExp": {
          "example": true,
          "type": "boolean"
        }
      }
    }
- filtercriteria: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "filtercriteria",
      "title": "filtercriteria",
      "type": "object",
      "properties": {
        "filterCriteria": {
          "description": "",
          "type": "array",
          "items": {
            "id": "ReadySimServicePlan",
            "title": "ReadySimServicePlan",
            "type": "object",
            "properties": {
              "servicePlan": {
                "example": "123456",
                "type": "string"
              }
            }
          }
        }
      }
    }
- filtercriteria2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "filtercriteria2",
      "title": "filtercriteria2",
      "type": "object",
      "properties": {
        "filterCriteria": {
          "description": "",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    }
- ReadySimServicePlan: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ReadySimServicePlan",
      "title": "ReadySimServicePlan",
      "type": "object",
      "properties": {
        "servicePlan": {
          "example": "123456",
          "type": "string"
        }
      }
    }
- keyServicePlan: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "keyServicePlan",
      "title": "keyServicePlan",
      "type": "object",
      "properties": {
        "key": {
          "example": "ServicePlan",
          "type": "string"
        }
      }
    }
- keyDataPercentage50: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "keyDataPercentage50",
      "title": "keyDataPercentage50",
      "type": "object",
      "properties": {
        "key": {
          "example": "DataPercentage50",
          "type": "string"
        },
        "value": {
          "example": false,
          "type": "boolean"
        }
      }
    }
- keysmsPercentage50: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "keysmsPercentage50",
      "title": "keysmsPercentage50",
      "type": "object",
      "properties": {
        "key": {
          "example": "SmsPercentage50",
          "type": "string"
        },
        "value": {
          "example": false,
          "type": "boolean"
        }
      }
    }
- NoOfDaysB4PromoExp: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "NoOfDaysB4PromoExp",
      "title": "NoOfDaysB4PromoExp",
      "type": "object",
      "properties": {
        "key": {
          "example": "NoOfDaysB4PromoExp",
          "type": "string"
        },
        "value": {
          "example": 5,
          "type": "integer",
          "format": "int32"
        }
      }
    }
- EnablePromoExp1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "EnablePromoExp1",
      "title": "EnablePromoExp1",
      "type": "object",
      "properties": {
        "key": {
          "example": "EnablePromoExp",
          "type": "string"
        },
        "value": {
          "example": true,
          "type": "boolean"
        }
      }
    }
- usageRequestResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "usageRequestResponse",
      "title": "usageRequestResponse",
      "type": "object",
      "properties": {
        "requestId": {
          "example": "be1b5958-3e11-41db-9abd-b1b7618c0035",
          "type": "string"
        }
      }
    }
- success: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "success",
      "title": "success",
      "type": "object",
      "properties": {
        "status": {
          "example": "Success",
          "type": "string"
        }
      }
    }
- ReadySimRestErrorResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ReadySimRestErrorResponse",
      "title": "ReadySimRestErrorResponse",
      "type": "object",
      "properties": {
        "errorCode": {
          "example": "The 3-digit HTML error code",
          "type": "string"
        },
        "errorMessage": {
          "example": "More details about the error",
          "type": "string"
        }
      }
    }
- PromoAlert: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PromoAlert",
      "title": "PromoAlert",
      "type": "object",
      "properties": {
        "filterCriteria": {
          "description": "",
          "type": "array",
          "items": {
            "id": "ReadySimServicePlan",
            "title": "ReadySimServicePlan",
            "type": "object",
            "properties": {
              "servicePlan": {
                "example": "123456",
                "type": "string"
              }
            }
          }
        },
        "condition": {
          "description": "",
          "type": "array",
          "items": {
            "id": "keyschunk2",
            "title": "keyschunk2",
            "type": "object",
            "properties": {
              "dataPercentage50": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage75": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage90": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage100": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage50": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage75": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage90": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage100": {
                "example": true,
                "type": "boolean"
              },
              "NoOfDaysB4PromoExp": {
                "example": 5,
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "enablePromoExp": {
          "example": true,
          "type": "boolean"
        }
      }
    }
- PromoAlert1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "PromoAlert1",
      "title": "PromoAlert1",
      "type": "object",
      "properties": {
        "filterCriteria": {
          "description": "",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "condition": {
          "description": "",
          "type": "array",
          "items": {
            "id": "keyschunk2",
            "title": "keyschunk2",
            "type": "object",
            "properties": {
              "dataPercentage50": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage75": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage90": {
                "example": false,
                "type": "boolean"
              },
              "dataPercentage100": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage50": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage75": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage90": {
                "example": false,
                "type": "boolean"
              },
              "smsPercentage100": {
                "example": true,
                "type": "boolean"
              },
              "NoOfDaysB4PromoExp": {
                "example": 5,
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "enablePromoExp": {
          "example": true,
          "type": "boolean"
        }
      }
    }
- status: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "status",
      "title": "status",
      "type": "object",
      "properties": {
        "status": {
          "title": "Status1",
          "type": "string",
          "enum": [
            "success",
            "failed"
          ]
        }
      }
    }
- eSIMDeviceId: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "eSIMDeviceId",
      "title": "eSIMDeviceId",
      "type": "object",
      "properties": {
        "id": {
          "example": "32-digit EID",
          "type": "string"
        },
        "kind": {
          "example": "eid",
          "type": "string"
        }
      }
    }
- DeviceId2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceId2",
      "title": "DeviceId2",
      "type": "object",
      "properties": {
        "id": {
          "example": "15-digit IMEI",
          "type": "string"
        },
        "kind": {
          "example": "imei",
          "type": "string"
        }
      }
    }
- eSIMDeviceList: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "eSIMDeviceList",
      "title": "eSIMDeviceList",
      "type": "object",
      "properties": {
        "deviceIds": {
          "description": "",
          "type": "array",
          "items": {
            "id": "eSIMDeviceId",
            "title": "eSIMDeviceId",
            "type": "object",
            "properties": {
              "id": {
                "example": "32-digit EID",
                "type": "string"
              },
              "kind": {
                "example": "eid",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- DeviceList2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "DeviceList2",
      "title": "DeviceList2",
      "type": "object",
      "properties": {
        "ids": {
          "description": "",
          "type": "array",
          "items": {
            "id": "eSIMDeviceId",
            "title": "eSIMDeviceId",
            "type": "object",
            "properties": {
              "id": {
                "example": "32-digit EID",
                "type": "string"
              },
              "kind": {
                "example": "eid",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- eSIMProfileRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "eSIMProfileRequest",
      "title": "eSIMProfileRequest",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "eSIMDeviceList",
            "title": "eSIMDeviceList",
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "eSIMDeviceId",
                  "title": "eSIMDeviceId",
                  "type": "object",
                  "properties": {
                    "id": {
                      "example": "32-digit EID",
                      "type": "string"
                    },
                    "kind": {
                      "example": "eid",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "carrierName": {
          "example": "name of the mobile service provider",
          "type": "string"
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string"
        },
        "servicePlan": {
          "example": "The service plan name (The value used for Consumer eSIM for Enterprise will be HybridESim)",
          "type": "string"
        },
        "mdnZipCode": {
          "example": "five digit zip code",
          "type": "string"
        }
      }
    }
- ProfileRequest2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ProfileRequest2",
      "title": "ProfileRequest2",
      "type": "object",
      "properties": {
        "devices": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceList2",
            "title": "DeviceList2",
            "type": "object",
            "properties": {
              "ids": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "eSIMDeviceId",
                  "title": "eSIMDeviceId",
                  "type": "object",
                  "properties": {
                    "id": {
                      "example": "32-digit EID",
                      "type": "string"
                    },
                    "kind": {
                      "example": "eid",
                      "type": "string"
                    }
                  }
                },
                "maxItems": 100
              }
            }
          },
          "maxItems": 100
        },
        "accountName": {
          "example": "0000123456-00001",
          "type": "string"
        },
        "carrierName": {
          "example": "Verizon Wireless",
          "type": "string"
        },
        "reasonCode": {
          "example": "FF",
          "type": "string"
        },
        "etfWaiver": {
          "type": "boolean",
          "default": true
        },
        "checkFallbackProfile": {
          "type": "boolean",
          "default": false
        }
      }
    }
- eSIMRequestResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "eSIMRequestResponse",
      "title": "eSIMRequestResponse",
      "type": "object",
      "properties": {
        "requestId": {
          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
          "type": "string"
        }
      }
    }
- eSIMRestErrorResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "eSIMRestErrorResponse",
      "title": "eSIMRestErrorResponse",
      "type": "object",
      "properties": {
        "errorCode": {
          "example": "The 3-digit HTML error code",
          "type": "string"
        },
        "errorMessage": {
          "example": "a description of the error",
          "type": "string"
        }
      }
    }
- eSIMProvhistoryRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "eSIMProvhistoryRequest",
      "title": "eSIMProvhistoryRequest",
      "type": "object",
      "properties": {
        "accountName": {
          "example": "0000123456-00001",
          "type": "string"
        },
        "deviceFilter": {
          "description": "",
          "type": "array",
          "items": {
            "id": "DeviceId2",
            "title": "DeviceId2",
            "type": "object",
            "properties": {
              "id": {
                "example": "15-digit IMEI",
                "type": "string"
              },
              "kind": {
                "example": "imei",
                "type": "string"
              }
            }
          },
          "maxItems": 100
        },
        "earliest": {
          "example": "2021-10-15T04:49:35-00:00",
          "type": "string",
          "format": "date-time"
        },
        "latest": {
          "example": "2021-10-15T04:49:49-00:00",
          "type": "string",
          "format": "date-time"
        }
      }
    }
- eSIMStatusResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "eSIMStatusResponse",
      "title": "eSIMStatusResponse",
      "type": "object",
      "properties": {
        "requestId": {
          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
          "type": "string"
        },
        "status": {
          "example": "Success",
          "type": "string"
        },
        "subrequests": {
          "description": "",
          "type": "array",
          "items": {
            "id": "eSIMsubrequest",
            "title": "eSIMsubrequest",
            "type": "object",
            "properties": {
              "id": {
                "example": "32-digit EID",
                "type": "string"
              },
              "kind": {
                "example": "eid",
                "type": "string"
              },
              "status": {
                "title": "Status1",
                "type": "string",
                "enum": [
                  "success",
                  "failed"
                ]
              }
            }
          },
          "maxItems": 100
        }
      }
    }
- eSIMsubrequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "eSIMsubrequest",
      "title": "eSIMsubrequest",
      "type": "object",
      "properties": {
        "id": {
          "example": "32-digit EID",
          "type": "string"
        },
        "kind": {
          "example": "eid",
          "type": "string"
        },
        "status": {
          "title": "Status1",
          "type": "string",
          "enum": [
            "success",
            "failed"
          ]
        }
      }
    }
- Status1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Status1",
      "type": "string",
      "enum": [
        "success",
        "failed"
      ]
    }
- VendorRegistrationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "VendorRegistrationRequest",
      "title": "VendorRegistrationRequest",
      "description": "Request for /vendors/registration endpoint. It requires the VendorID and ThingSpace Billing Account number to be defined.",
      "example": {
        "VendorID": "VerizonIMP",
        "ThingSpaceBillingAccount": "0242080520-00001"
      },
      "type": "object",
      "properties": {
        "VendorID": {
          "description": "The ID the vendor wants it's devices to be registered under. E.g. Verizon, GM, Ford, etc.",
          "example": "VerizonIMP",
          "type": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9]+$"
        },
        "ThingSpaceBillingAccount": {
          "description": "The ThingSpace Billing Account number.",
          "example": "0242080520-00001",
          "type": "string",
          "maxLength": 16,
          "pattern": "^\\d{10}-\\d{5}$"
        }
      },
      "required": [
        "VendorID",
        "ThingSpaceBillingAccount"
      ]
    }
- VendorRegistrationResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "VendorRegistrationResponse",
      "title": "VendorRegistrationResponse",
      "description": "Response for /vendors/registration. It provides a response if the vendor wa added to the system or updated with the new data.",
      "type": "object",
      "properties": {
        "ActionType": {
          "title": "ActionType",
          "description": "The type of action the vendor registration service took for the request\n\nValues:\n- **Added** - A new vendor was added to the system\n- **Updated** - The existing vendor was updated with the newly provided properties",
          "example": "Added",
          "type": "string",
          "enum": [
            "Added",
            "Updated"
          ]
        }
      },
      "required": [
        "ActionType"
      ]
    }
- ClientRegistrationRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ClientRegistrationRequest",
      "title": "ClientRegistrationRequest",
      "description": "Request for /clients/registration endpoint. It requires the Client Type, Subtype and Vendor to be defined.",
      "type": "object",
      "properties": {
        "ClientType": {},
        "ClientSubtype": {
          "title": "ClientSubtype",
          "description": "The subtype or subgroup of the client type. This further specifies the client type. For example it will specify if the client is a passenger car or a truck. See the ClientType description for the supported Subtypes for each client type.",
          "type": "string",
          "enum": [
            "PassengerCar",
            "Truck",
            "Bus",
            "EmergencyVehicle",
            "SchoolBus",
            "MaintenanceVehicle",
            "Pedestrian",
            "Bicycle",
            "Scooter",
            "Motorcycle",
            "RoadSideUnit",
            "Camera",
            "Lidar",
            "Radar",
            "InductiveLoop",
            "MagneticSensor",
            "NA"
          ]
        },
        "VendorID": {
          "description": "The vendor that the client belongs to. E.g. Verizon, GM, Ford, etc.",
          "example": "Verizon",
          "type": "string",
          "maxLength": 64,
          "pattern": "^[a-zA-Z0-9]+$"
        }
      },
      "required": [
        "ClientType",
        "ClientSubtype",
        "VendorID"
      ]
    }
- ClientRegistrationResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ClientRegistrationResponse",
      "title": "ClientRegistrationResponse",
      "description": "Response for /clients/registration. It provides a generated device ID and the certificates needed to connect the IMP Message Exchange.",
      "type": "object",
      "properties": {
        "DeviceID": {
          "description": "The generated ID for the device. It has to be used as the MQTT Client ID when connecting to the Message Exchange system or when asking for the connection endpoint.",
          "example": "a4fcd16a-343d-4527-8203-2f46e3e4ff4b",
          "type": "string",
          "format": "uuid"
        },
        "Certificate": {
          "id": "Certificate",
          "title": "Certificate",
          "description": "Structure for the credentials required to connect to the IMP MQTT Message Exchange.",
          "type": "object",
          "properties": {
            "cert.pem": {
              "description": "The string containing the certificate",
              "example": "\"-----BEGIN CERTIFICATE-----\nMIIDrjCCApagAwIBAgICEAEwDQYJKoZIhvcNAQELBQAwUjELMAkGA1UEBhMCQVUx\n...\nuuA1Zog3aBOeeEzp9SEJBMTJRYPXbK4e8Xer+7m98OL/3g==\n-----END CERTIFICATE-----\" \n",
              "type": "string",
              "minLength": 0,
              "maxLength": 4096,
              "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
            },
            "key.pem": {
              "description": "The string containing the private key",
              "example": "\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDa1lF7DWudshQ5\n...\nJbjD2hacWGzpKzTfn5Mt1frE\n-----END PRIVATE KEY-----\"\n",
              "type": "string",
              "minLength": 0,
              "maxLength": 4096,
              "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
            }
          },
          "required": [
            "cert.pem",
            "key.pem"
          ]
        }
      },
      "required": [
        "DeviceID",
        "Certificate"
      ]
    }
- ConnectionRequest: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConnectionRequest",
      "title": "ConnectionRequest",
      "description": "Request for /clients/connection. It requires the device ID acquired in the registration request call; the geolocation of the device at the time of the request; and the network type (Verizon or non-Verizon). The system uses this information to determine with MQTT endpoint the device should use to connect the IMP Message Exchange.",
      "example": {
        "DeviceID": "976c4bad-03d3-4dcb-9688-ee57db7890e4",
        "Geolocation": {
          "Latitude": 42.36,
          "Longitude": -71.06
        },
        "NetworkType": "non-VZ"
      },
      "type": "object",
      "properties": {
        "DeviceID": {
          "description": "The device ID acquired through the registration API.",
          "example": "976c4bad-03d3-4dcb-9688-ee57db7890e4",
          "type": "string",
          "format": "uuid"
        },
        "Geolocation": {
          "id": "Geolocation",
          "title": "Geolocation",
          "description": "Geolocation of the device at the time of the connection request in GPS coordinates.",
          "example": {
            "Latitude": 42.36,
            "Longitude": -71.06
          },
          "type": "object",
          "properties": {
            "Latitude": {
              "description": "The GPS Latitude value",
              "example": 42.36,
              "type": "number",
              "minimum": -90.0,
              "maximum": 90.0
            },
            "Longitude": {
              "description": "The GPS Longitude value",
              "example": -71.06,
              "type": "number",
              "minimum": -180.0,
              "maximum": 180.0
            }
          },
          "required": [
            "Latitude",
            "Longitude"
          ]
        },
        "NetworkType": {}
      },
      "required": [
        "DeviceID",
        "Geolocation",
        "NetworkType"
      ]
    }
- ConnectionResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ConnectionResponse",
      "title": "ConnectionResponse",
      "description": "response for /clients/connection",
      "type": "object",
      "properties": {
        "MqttURL": {
          "type": "string",
          "maxLength": 1024,
          "pattern": "^(http?mqtt)://[^\\s/$.?#].[^\\s]*$"
        }
      },
      "required": [
        "MqttURL"
      ]
    }
- Certificate: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Certificate",
      "title": "Certificate",
      "description": "Structure for the credentials required to connect to the IMP MQTT Message Exchange.",
      "type": "object",
      "properties": {
        "cert.pem": {
          "description": "The string containing the certificate",
          "example": "\"-----BEGIN CERTIFICATE-----\nMIIDrjCCApagAwIBAgICEAEwDQYJKoZIhvcNAQELBQAwUjELMAkGA1UEBhMCQVUx\n...\nuuA1Zog3aBOeeEzp9SEJBMTJRYPXbK4e8Xer+7m98OL/3g==\n-----END CERTIFICATE-----\" \n",
          "type": "string",
          "minLength": 0,
          "maxLength": 4096,
          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
        },
        "key.pem": {
          "description": "The string containing the private key",
          "example": "\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDa1lF7DWudshQ5\n...\nJbjD2hacWGzpKzTfn5Mt1frE\n-----END PRIVATE KEY-----\"\n",
          "type": "string",
          "minLength": 0,
          "maxLength": 4096,
          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
        }
      },
      "required": [
        "cert.pem",
        "key.pem"
      ]
    }
- Geolocation: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Geolocation",
      "title": "Geolocation",
      "description": "Geolocation of the device at the time of the connection request in GPS coordinates.",
      "example": {
        "Latitude": 42.36,
        "Longitude": -71.06
      },
      "type": "object",
      "properties": {
        "Latitude": {
          "description": "The GPS Latitude value",
          "example": 42.36,
          "type": "number",
          "minimum": -90.0,
          "maximum": 90.0
        },
        "Longitude": {
          "description": "The GPS Longitude value",
          "example": -71.06,
          "type": "number",
          "minimum": -180.0,
          "maximum": 180.0
        }
      },
      "required": [
        "Latitude",
        "Longitude"
      ]
    }
- IMPResponseError: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "IMPResponseError",
      "title": "IMPResponseError",
      "description": "error response structure",
      "type": "object",
      "properties": {
        "error": {
          "description": "The short summary of the error",
          "example": "Error Summary",
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
        },
        "description": {
          "description": "The detailed description of the error",
          "example": "Error Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 4096,
          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
        }
      },
      "required": [
        "error",
        "description"
      ]
    }
- IMPClientType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "IMPClientType",
      "description": "The type of the client that is to be registered. This is one of the major traffic participant groups considered in V2X communication. The system uses this value to define which topics the client will be able to publish and subscribe to.\n\nValues:\n- **Vehicle** - Vehicle with an enclosure around the passengers. (Subtypes: PassengerCar, Truck, Bus, EmergencyVehicle, SchoolBus, MaintenanceVehicle)\n- **VulnerableRoadUser** - Traffic participants without a protecting enclosure. (Subtypes: Motorcycle, Bicycle, Pedestrian, Scooter)\n- **TrafficLightController** - A Traffic light controller system. (Subtypes: NA)\n- **InfrastructureSensor** - Sensors that are deployed in the infrastructure. (Subtypes: RoadSideUnit, Camera, Lidar, Radar, InductiveLoop, MagneticSensor)\n- **OnboardSensor** - Sensors that are onboard on a vehicle(Subtypes: Camera, Lidar, Radar)\n- **Software** - A software system or application. (Subtypes: NA)",
      "type": "string",
      "enum": [
        "Vehicle",
        "VulnerableRoadUser",
        "TrafficLightController",
        "InfrastructureSensor",
        "OnboardSensor",
        "Software"
      ]
    }
- IMPNetworkType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "IMPNetworkType",
      "description": "The type of the device's network connection at the time of the request. If the device is on the Verizon cellular network it should use the \"VZ\" value otherwise the \"non-VZ\" value.\n\nDevices on the Verizon network can directly access the IMP Message Exchange on the MEC (Mobile Edge Compute server)",
      "example": "non-VZ",
      "type": "string",
      "enum": [
        "VZ",
        "non-VZ"
      ]
    }
- ActionType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ActionType",
      "description": "The type of action the vendor registration service took for the request\n\nValues:\n- **Added** - A new vendor was added to the system\n- **Updated** - The existing vendor was updated with the newly provided properties",
      "example": "Added",
      "type": "string",
      "enum": [
        "Added",
        "Updated"
      ]
    }
- ClientSubtype: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "ClientSubtype",
      "description": "The subtype or subgroup of the client type. This further specifies the client type. For example it will specify if the client is a passenger car or a truck. See the ClientType description for the supported Subtypes for each client type.",
      "type": "string",
      "enum": [
        "PassengerCar",
        "Truck",
        "Bus",
        "EmergencyVehicle",
        "SchoolBus",
        "MaintenanceVehicle",
        "Pedestrian",
        "Bicycle",
        "Scooter",
        "Motorcycle",
        "RoadSideUnit",
        "Camera",
        "Lidar",
        "Radar",
        "InductiveLoop",
        "MagneticSensor",
        "NA"
      ]
    }
- Polygon: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Polygon",
      "title": "Polygon",
      "type": "object",
      "properties": {
        "type": {
          "example": "Polygon",
          "type": "string",
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9]*$"
        },
        "coordinates": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Coordinate",
            "title": "Coordinate",
            "type": "object",
            "properties": {
              "latitude": {
                "type": "string",
                "maxLength": 10,
                "pattern": "^\\d2\\.\\d*$"
              },
              "longitude": {
                "type": "string",
                "maxLength": 10,
                "pattern": "^\\d2\\.\\d*$"
              }
            }
          },
          "maxItems": 20
        }
      }
    }
- MapDataResponseError: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MapDataResponseError",
      "title": "MapDataResponseError",
      "description": "error response structure",
      "type": "object",
      "properties": {
        "error": {
          "description": "The short summary of the error",
          "example": "Error Summary",
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
        },
        "description": {
          "description": "The detailed description of the error",
          "example": "Error Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 4096,
          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
        }
      },
      "required": [
        "error",
        "description"
      ]
    }
- Coordinate: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Coordinate",
      "title": "Coordinate",
      "type": "object",
      "properties": {
        "latitude": {
          "type": "string",
          "maxLength": 10,
          "pattern": "^\\d2\\.\\d*$"
        },
        "longitude": {
          "type": "string",
          "maxLength": 10,
          "pattern": "^\\d2\\.\\d*$"
        }
      }
    }
securitySchemes:
- thingspace_oauth:
    type: OAuth 2.0
    settings:
      authorizationUri: ''
      accessTokenUri: https://thingspace.verizon.com/api/ts/v1/oauth2/token
      authorizationGrants:
      - credentials
      scopes:
      - discovery:read
      - serviceprofile:read
      - serviceprofile:write
      - serviceregistry:read
      - serviceregistry:write
      - ts.mec.fullaccess
      - ts.mec.limitaccess
      - ts.application.ro
      - edge:discovery:read
      - edge:serviceprofile:read
      - edge:serviceprofile:write
      - edge:serviceregistry:read
      - edge:serviceregistry:write
      - read
      - write
- VZ-M2M-Token:
    description: M2M Session Token ([How to generate an M2M session token?](page:getting-started/5g-edge-developer-creds-token#obtaining-a-vz-m2m-sessiontoken-programmatically))
    type: x-custom
    describedBy:
      headers:
        VZ-M2M-Token:
          description: M2M Session Token ([How to generate an M2M session token?](page:getting-started/5g-edge-developer-creds-token#obtaining-a-vz-m2m-sessiontoken-programmatically))
          type: string
          required: true
          displayName: VZ-M2M-Token
/mecplatforms:
  get:
    description: Returns a list of optimal MEC Platforms where you can register your deployed application. **Note:** If a query is sent with all of the parameters, it will fail with a "400" error. You can search based on the following parameter combinations - region plus Service Profile ID and subscriber density (density is optional but recommended), region plus UEIdentity(Including UEIdentity Type) or Service Profile ID plus UEIdentity(Including UEIdentity Type).
    queryParameters:
      region:
        description: MEC region name. Current valid values are US_WEST_2 and US_EAST_1.
        type: string
        example: US_WEST_2
        required: false
        displayName: region
      serviceProfileId:
        description: Unique identifier of the service profile.
        type: string
        required: false
        displayName: serviceProfileId
        pattern: ^[a-zA-Z0-9!@#$&()\-`.+,/"]{3,36}$
        maxLength: '36'
      subscriberDensity:
        description: Minimum number of 4G/5G subscribers per square kilometer.
        type: integer
        required: false
        displayName: subscriberDensity
        minimum: '1'
        maximum: '100'
      UEIdentityType:
        description: Type of User Equipment identifier used in `UEIdentity`.
        example: IPAddress
        required: false
        displayName: UEIdentityType
        enum:
        - IPAddress
      UEIdentity:
        description: The identifier value for User Equipment. The type of identifier is defined by the 'UEIdentityType' parameter. The`IPAddress`format can be IPv4 or IPv6.
        type: string
        example: 2600:1010:b1d0:0000:0000:0000:0000:0012
        required: false
        displayName: UEIdentity
    responses:
      '200':
        description: MEC platforms matching query parameters.
        body:
          application/json:
            schema: |
              {
                "id": "ListMECPlatformsResult",
                "title": "ListMECPlatformsResult",
                "description": "Response to return the optimal 5G Edge platforms for deployment based on a region, service profile of the service that you want to deploy or user equipment.",
                "example": {
                  "MECPlatforms": [
                    {
                      "ern": "5x4VBwmfZbzSL3",
                      "zone": "e5oV52kMGjDLhnJSsLJZL",
                      "region": "US_WEST_2",
                      "status": "unknown"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "MECPlatforms": {
                    "description": "A list of optimal MEC Platforms where you can register your deployed application.",
                    "type": "array",
                    "items": {
                      "id": "MECPlatformResource",
                      "title": "MECPlatformResource",
                      "description": "5G Edge platform used for deployment of a service. The ern of each platform contains the name of the matching AWS Wavelength zone that can be used when deploying.",
                      "type": "object",
                      "properties": {
                        "ern": {
                          "description": "Edge Resource Name. A string identifier for a set of edge resources.",
                          "example": "5x4VBwmfZbzSL3",
                          "type": "string",
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9-]{3,32}$"
                        },
                        "zone": {
                          "description": "Unique identifier representing a zone. *Note:* This will have a null value as a placeholder.",
                          "example": "e5oV52kMGjDLhnJSsLJZL",
                          "type": [
                            "string",
                            "null"
                          ],
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        },
                        "region": {
                          "description": "MEC region name. Current valid values are US_WEST_2 and US_EAST_1.",
                          "example": "US_WEST_2",
                          "type": "string"
                        },
                        "status": {
                          "title": "MECPlatformStatus",
                          "description": "Status of the MEC Platform (default is 'unknown')",
                          "type": "string",
                          "enum": [
                            "Active",
                            "Inactive",
                            "unknown"
                          ]
                        },
                        "properties": {}
                      }
                    },
                    "maxItems": 100
                  }
                }
              }
            example: '{"MECPlatforms":[{"ern":"5x4VBwmfZbzSL3","zone":"e5oV52kMGjDLhnJSsLJZL","region":"US_WEST_2","status":"unknown"}]}'
      '400':
        description: HTTP 400 Bad Request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '401':
        description: HTTP 401 Unauthorized.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '0':
        description: HTTP 500 Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
/regions:
  get:
    description: List the geographical regions available, based on the user's bearer token. **Note:** Country code, Metropolitan area, Area and Zone are future functionality and will currently return a "null" value.
    responses:
      '200':
        description: List of geographical regions.
        body:
          application/json:
            schema: |
              {
                "id": "ListRegionsResult",
                "title": "ListRegionsResult",
                "description": "Response to return an array of all regions in the Verizon 5G Edge service. You can use the region IDs from the response to find optimal Edge platforms or service endpoints.",
                "example": {
                  "regions": [
                    {
                      "regionId": "consectetur",
                      "name": "US_EAST_1",
                      "countryCode": "nr",
                      "metro": "e1D",
                      "area": "IdUESF"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "regions": {
                    "description": "An array of all regions in the Verizon 5G Edge service.",
                    "type": "array",
                    "items": {
                      "id": "Region",
                      "title": "Region",
                      "description": "Information representing a certain geographical or logical area where MEC resources and services are provided.",
                      "type": "object",
                      "properties": {
                        "regionId": {
                          "description": "The unique identifier of the region.",
                          "example": "consectetur",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "A relevant and identifiable region name.",
                          "example": "US_EAST_1",
                          "type": [
                            "string",
                            "null"
                          ],
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9_]{3,32}$"
                        },
                        "countryCode": {
                          "description": "A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future functionality, so the value returned is 'null'.",
                          "example": "nr",
                          "type": [
                            "string",
                            "null"
                          ],
                          "maxLength": 3,
                          "pattern": "^[A-Za-z0-9]{2,3}$"
                        },
                        "metro": {
                          "description": "The metropolitan area or 'City' value.  This is future functionality, so the value returned is 'null'.",
                          "example": "e1D",
                          "type": [
                            "string",
                            "null"
                          ],
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        },
                        "area": {
                          "description": "This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the value returned is 'null'.",
                          "example": "IdUESF",
                          "type": [
                            "string",
                            "null"
                          ],
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    },
                    "maxItems": 100
                  }
                }
              }
            example: '{"regions":[{"regionId":"consectetur","name":"US_EAST_1","countryCode":"nr","metro":"e1D","area":"IdUESF"}]}'
      '400':
        description: HTTP 400 Bad Request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '401':
        description: HTTP 401 Unauthorized.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '0':
        description: HTTP 500 Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
/serviceendpoints:
  /{serviceEndpointsId}:
    uriParameters:
      serviceEndpointsId:
        description: A system-defined string identifier representing one or more registered Service Endpoints.
        type: string
        example: 43f3f7bb-d6c5-4bad-b081-9a3a0df2db98
        required: true
        displayName: serviceEndpointsId
    get:
      description: Returns endpoint information for all Service Endpoints registered to a specified serviceEndpointId.
      responses:
        '200':
          description: Registered service endpoint information for a 5G Edge service.
          body:
            application/json:
              schema: |
                {
                  "description": "Registered service endpoint information for a 5G Edge service.",
                  "example": [
                    {
                      "serviceEndpoint": {
                        "FQDN": "thingtest.verizon.com",
                        "IPv4Address": "192.168.11.10",
                        "IPv6Address": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                        "port": 1234,
                        "URI": "http://base_path/some_segment/id"
                      },
                      "applicationId": "IogspaceJan15",
                      "serviceDescription": "ThieIt",
                      "applicationServerProviderId": "AWS",
                      "ern": "us-east-1-wl1-atl-wlz-1",
                      "serviceProfileID": "4054ea9a-593e-4776-b488-697b1bfa4f3b"
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "ResourcesEdgeHostedServiceWithProfileId",
                    "title": "ResourcesEdgeHostedServiceWithProfileId",
                    "description": "Edge hosted service represented by Service Endpoint definition.",
                    "type": "object",
                    "properties": {
                      "ern": {
                        "description": "Edge Resource Name. A string identifier for a set of edge resources.",
                        "example": "us-east-1-wl1-atl-wlz-1",
                        "type": "string",
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9-]{3,32}$"
                      },
                      "serviceEndpoint": {
                        "id": "ResourcesServiceEndpoint",
                        "title": "ResourcesServiceEndpoint",
                        "description": "Service Endpoint path, address, and port.",
                        "type": "object",
                        "properties": {
                          "URI": {
                            "description": "URI of Service Endpoint if available.",
                            "example": "http://base_path/some_segment/id",
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "\\w+:(/?/?)[^\\s]+"
                          },
                          "FQDN": {
                            "description": "FQDN of Service Endpoint if available.",
                            "example": "thingtest.verizon.com",
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "^[A-Za-z0-9.]{3,32}$"
                          },
                          "IPv4Address": {
                            "description": "IPv4 Address of Service Endpoint if available.",
                            "example": "192.168.11.10",
                            "type": "string",
                            "maxLength": 32
                          },
                          "IPv6Address": {
                            "description": "IPv6 Address of Service Endpoint if available.",
                            "example": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                            "type": "string",
                            "maxLength": 64
                          },
                          "port": {
                            "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
                            "example": 1234,
                            "type": "integer",
                            "minimum": 1.0,
                            "maximum": 10000.0,
                            "format": "int32"
                          }
                        }
                      },
                      "applicationServerProviderId": {
                        "description": "Unique ID representing the Edge Application Provider.",
                        "example": "AWS",
                        "type": "string",
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "applicationId": {
                        "description": "Unique ID representing the Edge Application.",
                        "example": "IogspaceJan15",
                        "type": "string",
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "serviceDescription": {
                        "example": "ThieIt",
                        "type": "string",
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "serviceProfileID": {
                        "description": "The system assigned ID of the service profile.",
                        "example": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
                        "type": "string"
                      }
                    }
                  },
                  "maxItems": 100
                }
              example: '[{"serviceEndpoint":{"FQDN":"thingtest.verizon.com","IPv4Address":"192.168.11.10","IPv6Address":"2001:0db8:85a3:0000:0000:8a2e:0370:1234","port":1234,"URI":"http://base_path/some_segment/id"},"applicationId":"IogspaceJan15","serviceDescription":"ThieIt","applicationServerProviderId":"AWS","ern":"us-east-1-wl1-atl-wlz-1","serviceProfileID":"4054ea9a-593e-4776-b488-697b1bfa4f3b"}]'
        '400':
          description: HTTP 400 Bad Request.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '401':
          description: HTTP 401 Unauthorized.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '0':
          description: HTTP 500 Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
    put:
      description: Update registered Service Endpoint information.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "description": "Data needed for Service Endpoint information. The request body passes the rest of the needed parameters to create a service endpoint. Parameters other than `serviceEndpointsId` will be edited here rather than the **Parameters** section above. The `ern`,`applicationServerProviderId` and `applicationId` parameters are required. **Note:** Currently, the only valid value for `applicationServerProviderId`is **AWS**.",
              "example": [
                {
                  "serviceEndpoint": {
                    "FQDN": "thingtest.verizon.com",
                    "IPv4Address": "192.168.11.10",
                    "IPv6Address": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                    "port": 1234,
                    "URI": "http://base_path/some_segment/id"
                  },
                  "applicationId": "IogspaceJan15",
                  "serviceDescription": "ThieIt",
                  "applicationServerProviderId": "AWS",
                  "ern": "us-east-1-wl1-atl-wlz-1",
                  "serviceProfileID": "4054ea9a-593e-4776-b488-697b1bfa4f3b"
                }
              ],
              "type": "array",
              "items": {
                "id": "ResourcesEdgeHostedServiceWithProfileId",
                "title": "ResourcesEdgeHostedServiceWithProfileId",
                "description": "Edge hosted service represented by Service Endpoint definition.",
                "type": "object",
                "properties": {
                  "ern": {
                    "description": "Edge Resource Name. A string identifier for a set of edge resources.",
                    "example": "us-east-1-wl1-atl-wlz-1",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9-]{3,32}$"
                  },
                  "serviceEndpoint": {
                    "id": "ResourcesServiceEndpoint",
                    "title": "ResourcesServiceEndpoint",
                    "description": "Service Endpoint path, address, and port.",
                    "type": "object",
                    "properties": {
                      "URI": {
                        "description": "URI of Service Endpoint if available.",
                        "example": "http://base_path/some_segment/id",
                        "type": "string",
                        "maxLength": 32,
                        "pattern": "\\w+:(/?/?)[^\\s]+"
                      },
                      "FQDN": {
                        "description": "FQDN of Service Endpoint if available.",
                        "example": "thingtest.verizon.com",
                        "type": "string",
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9.]{3,32}$"
                      },
                      "IPv4Address": {
                        "description": "IPv4 Address of Service Endpoint if available.",
                        "example": "192.168.11.10",
                        "type": "string",
                        "maxLength": 32
                      },
                      "IPv6Address": {
                        "description": "IPv6 Address of Service Endpoint if available.",
                        "example": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                        "type": "string",
                        "maxLength": 64
                      },
                      "port": {
                        "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
                        "example": 1234,
                        "type": "integer",
                        "minimum": 1.0,
                        "maximum": 10000.0,
                        "format": "int32"
                      }
                    }
                  },
                  "applicationServerProviderId": {
                    "description": "Unique ID representing the Edge Application Provider.",
                    "example": "AWS",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "applicationId": {
                    "description": "Unique ID representing the Edge Application.",
                    "example": "IogspaceJan15",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "serviceDescription": {
                    "example": "ThieIt",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "serviceProfileID": {
                    "description": "The system assigned ID of the service profile.",
                    "example": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
                    "type": "string"
                  }
                }
              },
              "maxItems": 100
            }
          example: '[{"serviceEndpoint":{"FQDN":"thingtest.verizon.com","IPv4Address":"192.168.11.10","IPv6Address":"2001:0db8:85a3:0000:0000:8a2e:0370:1234","port":1234,"URI":"http://base_path/some_segment/id"},"applicationId":"IogspaceJan15","serviceDescription":"ThieIt","applicationServerProviderId":"AWS","ern":"us-east-1-wl1-atl-wlz-1","serviceProfileID":"4054ea9a-593e-4776-b488-697b1bfa4f3b"}]'
      responses:
        '200':
          description: Update registered Service Endpoint information.
          body:
            application/json:
              schema: |
                {
                  "id": "UpdateServiceEndpointResult",
                  "title": "UpdateServiceEndpointResult",
                  "description": "Response to update registered Service Endpoint information.",
                  "example": {
                    "status": "Success",
                    "message": "EdgeAppServices are updated"
                  },
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code.",
                      "example": "Success",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "EdgeAppServices are updated or error details in case of an error.",
                      "example": "EdgeAppServices are updated",
                      "type": "string",
                      "maxLength": 64
                    }
                  }
                }
              example: '{"status":"Success","message":"EdgeAppServices are updated"}'
        '400':
          description: HTTP 400 Bad Request.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '401':
          description: HTTP 401 Unauthorized.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '0':
          description: HTTP 500 Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
    delete:
      description: Deregister an application's Service Endpoint from the MEC Platform(s).
      responses:
        '200':
          description: Service endpoint deleted.
          body:
            application/json:
              schema: |
                {
                  "id": "DeregisterServiceEndpointResult",
                  "title": "DeregisterServiceEndpointResult",
                  "description": "Response to deregister an application's Service Endpoint from one or more Multi-access Edge Compute (MEC) Platforms.",
                  "example": {
                    "status": "Success",
                    "message": "EdgeAppServicesID Deleted"
                  },
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code.",
                      "example": "Success",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "EdgeAppServicesID that are deleted or error details in case of an error.",
                      "example": "EdgeAppServicesID Deleted",
                      "type": "string",
                      "maxLength": 32
                    }
                  }
                }
              example: '{"status":"Success","message":"EdgeAppServicesID Deleted"}'
        '400':
          description: HTTP 400 Bad Request.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '401':
          description: HTTP 401 Unauthorized.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '0':
          description: HTTP 500 Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
  get:
    description: Returns a list of optimal Service Endpoints that client devices can connect to. **Note:** If a query is sent with all of the parameters, it will fail with a "400" error. You can search based on the following parameter combinations - Region plus Service Endpoints IDs and Subscriber density (density is optional but recommended), Region plus Service Endpoints IDs and UEIdentity(Including UEIdentity Type) and Service Endpoints IDs plus UEIdentity(Including UEIdentity Type).
    queryParameters:
      region:
        description: MEC region name. Current valid values are US_WEST_2 and US_EAST_1.
        type: string
        example: US_WEST_2
        required: false
        displayName: region
      subscriberDensity:
        description: Minimum number of 4G/5G subscribers per square kilometer.
        type: integer
        required: false
        displayName: subscriberDensity
        minimum: '1'
        maximum: '100'
      UEIdentityType:
        description: Type of User Equipment identifier used in `UEIdentity`.
        example: IPAddress
        required: false
        displayName: UEIdentityType
        enum:
        - IPAddress
      UEIdentity:
        description: The identifier value for User Equipment. The type of identifier is defined by the 'UEIdentityType' parameter. The`IPAddress`format can be IPv4 or IPv6.
        type: string
        example: 2600:1010:b1d0:0000:0000:0000:0000:0012
        required: false
        displayName: UEIdentity
      serviceEndpointsIds:
        description: A system-defined string identifier representing one or more registered Service Endpoints.
        type: string
        example: 43f3f7bb-d6c5-4bad-b081-9a3a0df2db98
        required: false
        displayName: serviceEndpointsIds
    responses:
      '200':
        description: An array of optimal Service Endpoint IDs for clients to connect to.
        body:
          application/json:
            schema: |
              {
                "id": "ListOptimalServiceEndpointsResult",
                "title": "ListOptimalServiceEndpointsResult",
                "description": "Response on successful retrieval of optimal service endpoints for clients.",
                "example": {
                  "serviceEndpoints": [
                    {
                      "ern": "LASVEGAS_NV_WL",
                      "serviceEndpoint": {
                        "URI": "http://base_path/some_segment/id",
                        "FQDN": "thingtest.verizon.com",
                        "IPv4Address": "192.168.11.10",
                        "IPv6Address": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                        "port": 1234
                      },
                      "applicationServerProviderId": "AWS",
                      "applicationId": "IogspaceJan15",
                      "serviceDescription": "ThieIt"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "serviceEndpoints": {
                    "description": "An array of optimal Service Endpoint IDs for clients to connect to.",
                    "type": "array",
                    "items": {
                      "id": "ResourcesEdgeHostedService",
                      "title": "ResourcesEdgeHostedService",
                      "description": "Edge hosted service represented by Service Endpoint definition.",
                      "type": "object",
                      "properties": {
                        "ern": {
                          "description": "Edge Resource Name. A string identifier for a set of edge resources.",
                          "example": "LASVEGAS_NV_WL",
                          "type": "string",
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9-_]{3,32}$"
                        },
                        "serviceEndpoint": {
                          "id": "ResourcesServiceEndpoint",
                          "title": "ResourcesServiceEndpoint",
                          "description": "Service Endpoint path, address, and port.",
                          "type": "object",
                          "properties": {
                            "URI": {
                              "description": "URI of Service Endpoint if available.",
                              "example": "http://base_path/some_segment/id",
                              "type": "string",
                              "maxLength": 32,
                              "pattern": "\\w+:(/?/?)[^\\s]+"
                            },
                            "FQDN": {
                              "description": "FQDN of Service Endpoint if available.",
                              "example": "thingtest.verizon.com",
                              "type": "string",
                              "maxLength": 32,
                              "pattern": "^[A-Za-z0-9.]{3,32}$"
                            },
                            "IPv4Address": {
                              "description": "IPv4 Address of Service Endpoint if available.",
                              "example": "192.168.11.10",
                              "type": "string",
                              "maxLength": 32
                            },
                            "IPv6Address": {
                              "description": "IPv6 Address of Service Endpoint if available.",
                              "example": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                              "type": "string",
                              "maxLength": 64
                            },
                            "port": {
                              "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
                              "example": 1234,
                              "type": "integer",
                              "minimum": 1.0,
                              "maximum": 10000.0,
                              "format": "int32"
                            }
                          }
                        },
                        "applicationServerProviderId": {
                          "description": "Unique ID representing the Edge Application Provider.",
                          "example": "AWS",
                          "type": "string",
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        },
                        "applicationId": {
                          "description": "Unique ID representing the Edge Application.",
                          "example": "IogspaceJan15",
                          "type": "string",
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        },
                        "serviceDescription": {
                          "example": "ThieIt",
                          "type": "string",
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    },
                    "maxItems": 100
                  }
                }
              }
            example: '{"serviceEndpoints":[{"ern":"LASVEGAS_NV_WL","serviceEndpoint":{"URI":"http://base_path/some_segment/id","FQDN":"thingtest.verizon.com","IPv4Address":"192.168.11.10","IPv6Address":"2001:0db8:85a3:0000:0000:8a2e:0370:1234","port":1234},"applicationServerProviderId":"AWS","applicationId":"IogspaceJan15","serviceDescription":"ThieIt"}]}'
      '400':
        description: HTTP 400 Bad Request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '401':
        description: HTTP 401 Unauthorized.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '0':
        description: HTTP 500 Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
  post:
    description: Register Service Endpoints of a deployed application to specified MEC Platforms.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "description": "An array of Service Endpoint data for a deployed application. The request body passes all of the needed parameters to create a service endpoint. Parameters will be edited here rather than the **Parameters** section above. The `ern`,`applicationServerProviderId`, `applicationId` and `serviceProfileID` parameters are required. **Note:** Currently, the only valid value for `applicationServerProviderId`is **AWS**. Also, if you do not know one of the optional values (i.e. URI), you can erase the line from the query by back-spacing over it.",
            "example": [
              {
                "serviceEndpoint": {
                  "FQDN": "thingtest.verizon.com",
                  "IPv4Address": "192.168.11.10",
                  "IPv6Address": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                  "port": 1234,
                  "URI": "http://base_path/some_segment/id"
                },
                "applicationId": "IogspaceJan15",
                "serviceDescription": "ThieIt",
                "applicationServerProviderId": "AWS",
                "ern": "us-east-1-wl1-atl-wlz-1",
                "serviceProfileID": "4054ea9a-593e-4776-b488-697b1bfa4f3b"
              }
            ],
            "type": "array",
            "items": {
              "id": "ResourcesEdgeHostedServiceWithProfileId",
              "title": "ResourcesEdgeHostedServiceWithProfileId",
              "description": "Edge hosted service represented by Service Endpoint definition.",
              "type": "object",
              "properties": {
                "ern": {
                  "description": "Edge Resource Name. A string identifier for a set of edge resources.",
                  "example": "us-east-1-wl1-atl-wlz-1",
                  "type": "string",
                  "maxLength": 32,
                  "pattern": "^[A-Za-z0-9-]{3,32}$"
                },
                "serviceEndpoint": {
                  "id": "ResourcesServiceEndpoint",
                  "title": "ResourcesServiceEndpoint",
                  "description": "Service Endpoint path, address, and port.",
                  "type": "object",
                  "properties": {
                    "URI": {
                      "description": "URI of Service Endpoint if available.",
                      "example": "http://base_path/some_segment/id",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "\\w+:(/?/?)[^\\s]+"
                    },
                    "FQDN": {
                      "description": "FQDN of Service Endpoint if available.",
                      "example": "thingtest.verizon.com",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9.]{3,32}$"
                    },
                    "IPv4Address": {
                      "description": "IPv4 Address of Service Endpoint if available.",
                      "example": "192.168.11.10",
                      "type": "string",
                      "maxLength": 32
                    },
                    "IPv6Address": {
                      "description": "IPv6 Address of Service Endpoint if available.",
                      "example": "2001:0db8:85a3:0000:0000:8a2e:0370:1234",
                      "type": "string",
                      "maxLength": 64
                    },
                    "port": {
                      "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
                      "example": 1234,
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 10000.0,
                      "format": "int32"
                    }
                  }
                },
                "applicationServerProviderId": {
                  "description": "Unique ID representing the Edge Application Provider.",
                  "example": "AWS",
                  "type": "string",
                  "maxLength": 32,
                  "pattern": "^[A-Za-z0-9]{3,32}$"
                },
                "applicationId": {
                  "description": "Unique ID representing the Edge Application.",
                  "example": "IogspaceJan15",
                  "type": "string",
                  "maxLength": 32,
                  "pattern": "^[A-Za-z0-9]{3,32}$"
                },
                "serviceDescription": {
                  "example": "ThieIt",
                  "type": "string",
                  "maxLength": 32,
                  "pattern": "^[A-Za-z0-9]{3,32}$"
                },
                "serviceProfileID": {
                  "description": "The system assigned ID of the service profile.",
                  "example": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
                  "type": "string"
                }
              }
            },
            "maxItems": 100
          }
        example: '[{"serviceEndpoint":{"FQDN":"thingtest.verizon.com","IPv4Address":"192.168.11.10","IPv6Address":"2001:0db8:85a3:0000:0000:8a2e:0370:1234","port":1234,"URI":"http://base_path/some_segment/id"},"applicationId":"IogspaceJan15","serviceDescription":"ThieIt","applicationServerProviderId":"AWS","ern":"us-east-1-wl1-atl-wlz-1","serviceProfileID":"4054ea9a-593e-4776-b488-697b1bfa4f3b"}]'
    responses:
      '200':
        description: Returns a service endpoints Id.
        body:
          application/json:
            schema: |
              {
                "id": "RegisterServiceEndpointResult",
                "title": "RegisterServiceEndpointResult",
                "description": "Response to register Service Endpoints of a deployed application to specified Muli-access Edge Compute (MEC) Platforms.",
                "type": "object",
                "properties": {
                  "serviceEndpointsId": {
                    "description": "A system-defined string identifier representing one or more registered Service Endpoints.",
                    "example": "43f3f7bb-d6c5-4bad-b081-9a3a0df2db98",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              }
      '400':
        description: HTTP 400 Bad Request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '401':
        description: HTTP 401 Unauthorized.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '0':
        description: HTTP 500 Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
/serviceendpointsall:
  get:
    description: Returns a list of all registered service endpoints.
    responses:
      '200':
        description: Returns a comma delimited list of all registered service endpoints.
        body:
          application/json:
            schema: |
              {
                "id": "ListAllServiceEndpointsResult",
                "title": "ListAllServiceEndpointsResult",
                "description": "Response on successful retrieval of all registered service endpoints.",
                "example": {
                  "status": "success",
                  "data": [
                    "serviceEndpointsId"
                  ]
                },
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code.",
                    "type": "string",
                    "default": "success",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "data": {
                    "description": "A comma delimited list of all registered service endpoints.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 32
                    },
                    "maxItems": 100
                  }
                }
              }
            example: '{"status":"success","data":["serviceEndpointsId"]}'
      '400':
        description: HTTP 400 Bad Request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '401':
        description: HTTP 401 Unauthorized.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '0':
        description: HTTP 500 Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
/serviceprofiles:
  /{serviceProfileId}:
    uriParameters:
      serviceProfileId:
        type: string
        required: true
        displayName: serviceProfileId
        pattern: ^[a-zA-Z0-9!@#$&()\-`.+,/"]{3,36}$
        maxLength: '36'
    get:
      description: Returns a specified service profile.
      responses:
        '200':
          description: Requested service profile.
          body:
            application/json:
              schema: |
                {
                  "id": "ResourcesServiceProfileWithId",
                  "title": "ResourcesServiceProfileWithId",
                  "description": "Information about the resource requirements and service characteristics of an edge application. Includes serviceProfileId. Used when retrieving a service profile.",
                  "example": {
                    "serviceProfileId": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
                    "ecspFilter": "Verizon",
                    "clientSchedule": "time windows",
                    "clientServiceArea": "BAY AREA",
                    "clientType": "V2X",
                    "networkResources": {
                      "minBandwidthKbits": 1,
                      "serviceContinuitySupport": true,
                      "maxRequestRate": 15,
                      "maxLatencyMs": 20,
                      "minAvailability": 1
                    },
                    "computeResources": {
                      "GPU": {
                        "minCoreClockMHz": 1,
                        "minMemoryClockMHz": 35740,
                        "minBandwidthGBs": 588,
                        "minTFLOPS": 33
                      },
                      "minRAMGB": 1,
                      "minStorageGB": 1
                    }
                  },
                  "type": "object",
                  "properties": {
                    "clientType": {
                      "title": "ClientType",
                      "description": "The category of application client.",
                      "type": "string",
                      "enum": [
                        "V2X",
                        "ComputerVision",
                        "MachineLearning",
                        "IoT",
                        "Gaming",
                        "AR",
                        "VR",
                        "Analytics",
                        "Robotics"
                      ]
                    },
                    "serviceProfileId": {
                      "description": "Unique identifier for a service profile.",
                      "example": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
                      "type": "string"
                    },
                    "ecspFilter": {
                      "description": "Identity of the preferred Edge Computing Service Provider.",
                      "example": "Verizon",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "clientSchedule": {
                      "description": "The expected operation schedule of the application client (e.g. time windows).",
                      "example": "time windows",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9 ]{3,32}$"
                    },
                    "clientServiceArea": {
                      "description": "The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.",
                      "example": "BAY AREA",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9 ]{3,32}$"
                    },
                    "networkResources": {
                      "id": "NetworkResourcesType",
                      "title": "NetworkResourcesType",
                      "description": "Network resources of a service profile.",
                      "type": "object",
                      "properties": {
                        "maxLatencyMs": {
                          "description": "Maximum response time or latency that the application can handle, in milliseconds. Note: this value must be in multiples of 5.",
                          "example": 20,
                          "type": "integer",
                          "minimum": 5.0,
                          "maximum": 1000.0,
                          "format": "int32"
                        },
                        "minBandwidthKbits": {
                          "description": "Minimum required connection bandwidth in Kbit/s for the application.",
                          "example": 1,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 10000.0,
                          "format": "int32"
                        },
                        "serviceContinuitySupport": {
                          "description": "Indicates if service continuity support is required or not for the application.",
                          "example": true,
                          "type": "boolean"
                        },
                        "maxRequestRate": {
                          "description": "Maximum request rate that the application can handle.",
                          "example": 15,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 100.0,
                          "format": "int32"
                        },
                        "minAvailability": {
                          "description": "Minimum availability required for the server.",
                          "example": 1,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 100.0,
                          "format": "int32"
                        }
                      },
                      "required": [
                        "maxLatencyMs"
                      ]
                    },
                    "computeResources": {
                      "id": "ComputeResourcesType",
                      "title": "ComputeResourcesType",
                      "description": "Compute resources of a service profile.",
                      "type": "object",
                      "properties": {
                        "GPU": {
                          "id": "GPU",
                          "title": "GPU",
                          "description": "GPU resources of a service profile.",
                          "type": "object",
                          "properties": {
                            "minCoreClockMHz": {
                              "description": "Minimum Core Clock value in megahertz.",
                              "example": 1,
                              "type": "integer",
                              "minimum": 1.0,
                              "maximum": 10000.0,
                              "format": "int32"
                            },
                            "minMemoryClockMHz": {
                              "description": "Minimum Memory Clock value in megahertz.",
                              "example": 35740,
                              "type": "integer",
                              "minimum": 1.0,
                              "maximum": 100000.0,
                              "format": "int32"
                            },
                            "minBandwidthGBs": {
                              "description": "Minimum GPU bandwidth in GB/s.",
                              "example": 588,
                              "type": "integer",
                              "minimum": 1.0,
                              "maximum": 1000.0,
                              "format": "int32"
                            },
                            "minTFLOPS": {
                              "description": "Minimum Floating Point Operations Per Second in Teraflops.",
                              "example": 33,
                              "type": "integer",
                              "minimum": 1.0,
                              "maximum": 100.0,
                              "format": "int32"
                            }
                          }
                        },
                        "minRAMGB": {
                          "description": "Minimum RAM required in Gigabytes.",
                          "example": 1,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 100.0,
                          "format": "int32"
                        },
                        "minStorageGB": {
                          "description": "Minimum storage requirement in Gigabytes.",
                          "example": 1,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 100.0,
                          "format": "int32"
                        }
                      }
                    },
                    "properties": {
                      "id": "MECPlatformsAdditionalSupportInfo",
                      "title": "MECPlatformsAdditionalSupportInfo",
                      "description": "Additional service support information for the MEC platform.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "Type of additional service support information for the MEC platform.",
                          "type": "string",
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        },
                        "data": {
                          "id": "MECPlatformsAdditionalSupportInfoData",
                          "title": "MECPlatformsAdditionalSupportInfoData",
                          "description": "Data about additional service support information for the MEC platform.",
                          "type": "object",
                          "properties": {
                            "additionalInfo": {
                              "type": "string",
                              "maxLength": 32
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "clientType"
                  ]
                }
              example: '{"serviceProfileId":"4054ea9a-593e-4776-b488-697b1bfa4f3b","ecspFilter":"Verizon","clientSchedule":"time windows","clientServiceArea":"BAY AREA","clientType":"V2X","networkResources":{"minBandwidthKbits":1,"serviceContinuitySupport":true,"maxRequestRate":15,"maxLatencyMs":20,"minAvailability":1},"computeResources":{"GPU":{"minCoreClockMHz":1,"minMemoryClockMHz":35740,"minBandwidthGBs":588,"minTFLOPS":33},"minRAMGB":1,"minStorageGB":1}}'
        '400':
          description: HTTP 400 Bad Request.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '401':
          description: HTTP 401 Unauthorized.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '0':
          description: HTTP 500 Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
    put:
      description: Update the definition of a Service Profile.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "ResourcesServiceProfile",
              "title": "ResourcesServiceProfile",
              "description": "The request body passes the rest of the needed parameters to create a service profile. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Additionally, \"GPU\" is future functionality and the values are not captured. Default values to use are shown.",
              "example": {
                "clientType": "V2X",
                "ecspFilter": "Verizon",
                "clientSchedule": "time windows",
                "clientServiceArea": "BAY AREA",
                "networkResources": {
                  "minBandwidthKbits": 1,
                  "serviceContinuitySupport": true,
                  "maxRequestRate": 15,
                  "maxLatencyMs": 20,
                  "minAvailability": 1
                },
                "computeResources": {
                  "GPU": {
                    "minCoreClockMHz": 1
                  },
                  "minRAMGB": 1,
                  "minStorageGB": 1
                }
              },
              "type": "object",
              "properties": {
                "clientType": {
                  "title": "ClientType",
                  "description": "The category of application client.",
                  "type": "string",
                  "enum": [
                    "V2X",
                    "ComputerVision",
                    "MachineLearning",
                    "IoT",
                    "Gaming",
                    "AR",
                    "VR",
                    "Analytics",
                    "Robotics"
                  ]
                },
                "ecspFilter": {
                  "description": "Identity of the preferred Edge Computing Service Provider.",
                  "example": "Verizon",
                  "type": "string",
                  "maxLength": 32,
                  "pattern": "^[A-Za-z0-9]{3,32}$"
                },
                "clientSchedule": {
                  "description": "The expected operation schedule of the application client (e.g. time windows).",
                  "example": "time windows",
                  "type": "string",
                  "maxLength": 32,
                  "pattern": "^[A-Za-z0-9 ]{3,32}$"
                },
                "clientServiceArea": {
                  "description": "The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.",
                  "example": "BAY AREA",
                  "type": "string",
                  "maxLength": 32,
                  "pattern": "^[A-Za-z0-9 ]{3,32}$"
                },
                "networkResources": {
                  "id": "NetworkResourcesType",
                  "title": "NetworkResourcesType",
                  "description": "Network resources of a service profile.",
                  "type": "object",
                  "properties": {
                    "maxLatencyMs": {
                      "description": "Maximum response time or latency that the application can handle, in milliseconds. Note: this value must be in multiples of 5.",
                      "example": 20,
                      "type": "integer",
                      "minimum": 5.0,
                      "maximum": 1000.0,
                      "format": "int32"
                    },
                    "minBandwidthKbits": {
                      "description": "Minimum required connection bandwidth in Kbit/s for the application.",
                      "example": 1,
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 10000.0,
                      "format": "int32"
                    },
                    "serviceContinuitySupport": {
                      "description": "Indicates if service continuity support is required or not for the application.",
                      "example": true,
                      "type": "boolean"
                    },
                    "maxRequestRate": {
                      "description": "Maximum request rate that the application can handle.",
                      "example": 15,
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 100.0,
                      "format": "int32"
                    },
                    "minAvailability": {
                      "description": "Minimum availability required for the server.",
                      "example": 1,
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 100.0,
                      "format": "int32"
                    }
                  },
                  "required": [
                    "maxLatencyMs"
                  ]
                },
                "computeResources": {
                  "id": "ComputeResourcesType",
                  "title": "ComputeResourcesType",
                  "description": "Compute resources of a service profile.",
                  "type": "object",
                  "properties": {
                    "GPU": {
                      "id": "GPU",
                      "title": "GPU",
                      "description": "GPU resources of a service profile.",
                      "type": "object",
                      "properties": {
                        "minCoreClockMHz": {
                          "description": "Minimum Core Clock value in megahertz.",
                          "example": 1,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 10000.0,
                          "format": "int32"
                        },
                        "minMemoryClockMHz": {
                          "description": "Minimum Memory Clock value in megahertz.",
                          "example": 35740,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 100000.0,
                          "format": "int32"
                        },
                        "minBandwidthGBs": {
                          "description": "Minimum GPU bandwidth in GB/s.",
                          "example": 588,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 1000.0,
                          "format": "int32"
                        },
                        "minTFLOPS": {
                          "description": "Minimum Floating Point Operations Per Second in Teraflops.",
                          "example": 33,
                          "type": "integer",
                          "minimum": 1.0,
                          "maximum": 100.0,
                          "format": "int32"
                        }
                      }
                    },
                    "minRAMGB": {
                      "description": "Minimum RAM required in Gigabytes.",
                      "example": 1,
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 100.0,
                      "format": "int32"
                    },
                    "minStorageGB": {
                      "description": "Minimum storage requirement in Gigabytes.",
                      "example": 1,
                      "type": "integer",
                      "minimum": 1.0,
                      "maximum": 100.0,
                      "format": "int32"
                    }
                  }
                },
                "properties": {
                  "id": "MECPlatformsAdditionalSupportInfo",
                  "title": "MECPlatformsAdditionalSupportInfo",
                  "description": "Additional service support information for the MEC platform.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Type of additional service support information for the MEC platform.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "data": {
                      "id": "MECPlatformsAdditionalSupportInfoData",
                      "title": "MECPlatformsAdditionalSupportInfoData",
                      "description": "Data about additional service support information for the MEC platform.",
                      "type": "object",
                      "properties": {
                        "additionalInfo": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "clientType"
              ]
            }
          example: '{"clientType":"V2X","ecspFilter":"Verizon","clientSchedule":"time windows","clientServiceArea":"BAY AREA","networkResources":{"minBandwidthKbits":1,"serviceContinuitySupport":true,"maxRequestRate":15,"maxLatencyMs":20,"minAvailability":1},"computeResources":{"GPU":{"minCoreClockMHz":1},"minRAMGB":1,"minStorageGB":1}}'
      responses:
        '200':
          description: Update a service profile.
          body:
            application/json:
              schema: |
                {
                  "id": "UpdateServiceProfileResult",
                  "title": "UpdateServiceProfileResult",
                  "description": "Response on successful update of service profile.",
                  "example": {
                    "status": "Success",
                    "message": "Service Profile Updated"
                  },
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code.",
                      "example": "Success",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Service Profile that are updated or error details in case of an error.",
                      "example": "Service Profile Updated",
                      "type": "string",
                      "maxLength": 32
                    }
                  }
                }
              example: '{"status":"Success","message":"Service Profile Updated"}'
        '400':
          description: HTTP 400 Bad Request.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '401':
          description: HTTP 401 Unauthorized.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '0':
          description: HTTP 500 Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
    delete:
      description: Delete Service Profile based on unique service profile ID.
      responses:
        '200':
          description: Delete a service profile.
          body:
            application/json:
              schema: |
                {
                  "id": "DeleteServiceProfileResult",
                  "title": "DeleteServiceProfileResult",
                  "description": "Response on successful deletion of service profile.",
                  "example": {
                    "status": "Success",
                    "message": "Service Profile Deleted"
                  },
                  "type": "object",
                  "properties": {
                    "status": {
                      "example": "Success",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "example": "Service Profile Deleted",
                      "type": "string",
                      "maxLength": 32
                    }
                  }
                }
              example: '{"status":"Success","message":"Service Profile Deleted"}'
        '400':
          description: HTTP 400 Bad Request.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '401':
          description: HTTP 401 Unauthorized.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
        '0':
          description: HTTP 500 Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "EdgeDiscoveryResult",
                  "title": "EdgeDiscoveryResult",
                  "description": "Base type for all errors.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "HTTP status code or status of response.",
                      "type": "string",
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "message": {
                      "description": "Error details.",
                      "type": "string",
                      "maxLength": 32
                    },
                    "data": {
                      "id": "EdgeDiscoveryResultData",
                      "title": "EdgeDiscoveryResultData",
                      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                      "type": "object",
                      "properties": {
                        "additionalMessage": {
                          "type": "string",
                          "maxLength": 32
                        }
                      }
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                }
  post:
    description: Creates a service profile that describes the resource requirements of a service.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "ResourcesServiceProfile",
            "title": "ResourcesServiceProfile",
            "description": "The request body passes all of the needed parameters to create a service profile. Parameters will be edited here rather than the **Parameters** section above. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Additionally, \"GPU\" is future functionality and the values are not captured.",
            "example": {
              "clientType": "V2X",
              "ecspFilter": "Verizon",
              "clientSchedule": "time windows",
              "clientServiceArea": "BAY AREA",
              "networkResources": {
                "minBandwidthKbits": 1,
                "serviceContinuitySupport": true,
                "maxRequestRate": 15,
                "maxLatencyMs": 20,
                "minAvailability": 1
              },
              "computeResources": {
                "GPU": {
                  "minCoreClockMHz": 1,
                  "minMemoryClockMHz": 35740,
                  "minBandwidthGBs": 588,
                  "minTFLOPS": 33
                },
                "minRAMGB": 1,
                "minStorageGB": 1
              }
            },
            "type": "object",
            "properties": {
              "clientType": {
                "title": "ClientType",
                "description": "The category of application client.",
                "type": "string",
                "enum": [
                  "V2X",
                  "ComputerVision",
                  "MachineLearning",
                  "IoT",
                  "Gaming",
                  "AR",
                  "VR",
                  "Analytics",
                  "Robotics"
                ]
              },
              "ecspFilter": {
                "description": "Identity of the preferred Edge Computing Service Provider.",
                "example": "Verizon",
                "type": "string",
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9]{3,32}$"
              },
              "clientSchedule": {
                "description": "The expected operation schedule of the application client (e.g. time windows).",
                "example": "time windows",
                "type": "string",
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9 ]{3,32}$"
              },
              "clientServiceArea": {
                "description": "The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.",
                "example": "BAY AREA",
                "type": "string",
                "maxLength": 32,
                "pattern": "^[A-Za-z0-9 ]{3,32}$"
              },
              "networkResources": {
                "id": "NetworkResourcesType",
                "title": "NetworkResourcesType",
                "description": "Network resources of a service profile.",
                "type": "object",
                "properties": {
                  "maxLatencyMs": {
                    "description": "Maximum response time or latency that the application can handle, in milliseconds. Note: this value must be in multiples of 5.",
                    "example": 20,
                    "type": "integer",
                    "minimum": 5.0,
                    "maximum": 1000.0,
                    "format": "int32"
                  },
                  "minBandwidthKbits": {
                    "description": "Minimum required connection bandwidth in Kbit/s for the application.",
                    "example": 1,
                    "type": "integer",
                    "minimum": 1.0,
                    "maximum": 10000.0,
                    "format": "int32"
                  },
                  "serviceContinuitySupport": {
                    "description": "Indicates if service continuity support is required or not for the application.",
                    "example": true,
                    "type": "boolean"
                  },
                  "maxRequestRate": {
                    "description": "Maximum request rate that the application can handle.",
                    "example": 15,
                    "type": "integer",
                    "minimum": 1.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "minAvailability": {
                    "description": "Minimum availability required for the server.",
                    "example": 1,
                    "type": "integer",
                    "minimum": 1.0,
                    "maximum": 100.0,
                    "format": "int32"
                  }
                },
                "required": [
                  "maxLatencyMs"
                ]
              },
              "computeResources": {
                "id": "ComputeResourcesType",
                "title": "ComputeResourcesType",
                "description": "Compute resources of a service profile.",
                "type": "object",
                "properties": {
                  "GPU": {
                    "id": "GPU",
                    "title": "GPU",
                    "description": "GPU resources of a service profile.",
                    "type": "object",
                    "properties": {
                      "minCoreClockMHz": {
                        "description": "Minimum Core Clock value in megahertz.",
                        "example": 1,
                        "type": "integer",
                        "minimum": 1.0,
                        "maximum": 10000.0,
                        "format": "int32"
                      },
                      "minMemoryClockMHz": {
                        "description": "Minimum Memory Clock value in megahertz.",
                        "example": 35740,
                        "type": "integer",
                        "minimum": 1.0,
                        "maximum": 100000.0,
                        "format": "int32"
                      },
                      "minBandwidthGBs": {
                        "description": "Minimum GPU bandwidth in GB/s.",
                        "example": 588,
                        "type": "integer",
                        "minimum": 1.0,
                        "maximum": 1000.0,
                        "format": "int32"
                      },
                      "minTFLOPS": {
                        "description": "Minimum Floating Point Operations Per Second in Teraflops.",
                        "example": 33,
                        "type": "integer",
                        "minimum": 1.0,
                        "maximum": 100.0,
                        "format": "int32"
                      }
                    }
                  },
                  "minRAMGB": {
                    "description": "Minimum RAM required in Gigabytes.",
                    "example": 1,
                    "type": "integer",
                    "minimum": 1.0,
                    "maximum": 100.0,
                    "format": "int32"
                  },
                  "minStorageGB": {
                    "description": "Minimum storage requirement in Gigabytes.",
                    "example": 1,
                    "type": "integer",
                    "minimum": 1.0,
                    "maximum": 100.0,
                    "format": "int32"
                  }
                }
              },
              "properties": {
                "id": "MECPlatformsAdditionalSupportInfo",
                "title": "MECPlatformsAdditionalSupportInfo",
                "description": "Additional service support information for the MEC platform.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Type of additional service support information for the MEC platform.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "data": {
                    "id": "MECPlatformsAdditionalSupportInfoData",
                    "title": "MECPlatformsAdditionalSupportInfoData",
                    "description": "Data about additional service support information for the MEC platform.",
                    "type": "object",
                    "properties": {
                      "additionalInfo": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "clientType"
            ]
          }
        example: '{"clientType":"V2X","ecspFilter":"Verizon","clientSchedule":"time windows","clientServiceArea":"BAY AREA","networkResources":{"minBandwidthKbits":1,"serviceContinuitySupport":true,"maxRequestRate":15,"maxLatencyMs":20,"minAvailability":1},"computeResources":{"GPU":{"minCoreClockMHz":1,"minMemoryClockMHz":35740,"minBandwidthGBs":588,"minTFLOPS":33},"minRAMGB":1,"minStorageGB":1}}'
    responses:
      '200':
        description: Service profile ID.
        body:
          application/json:
            schema: |
              {
                "id": "CreateServiceProfileResult",
                "title": "CreateServiceProfileResult",
                "description": "A successful request returns a serviceProfileId that you can use in subsequent requests.",
                "type": "object",
                "properties": {
                  "serviceProfileId": {
                    "description": "Unique identifier for a service profile.",
                    "example": "4054ea9a-593e-4776-b488-697b1bfa4f3b",
                    "type": "string"
                  }
                }
              }
      '400':
        description: HTTP 400 Bad Request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '401':
        description: HTTP 401 Unauthorized.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '0':
        description: HTTP 500 Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
  get:
    description: List all service profiles registered under your API key.
    responses:
      '200':
        description: A comma delimited list of all the service profiles registered under your API key.
        body:
          application/json:
            schema: |
              {
                "id": "ListServiceProfilesResult",
                "title": "ListServiceProfilesResult",
                "description": "Response on successful retrieval of service profiles.",
                "example": {
                  "status": "Success",
                  "data": [
                    "serviceProfileId"
                  ]
                },
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code.",
                    "example": "Success",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "data": {
                    "description": "A comma delimited list of all the service profiles registered under your API key.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 32
                    },
                    "maxItems": 100
                  }
                }
              }
            example: '{"status":"Success","data":["serviceProfileId"]}'
      '400':
        description: HTTP 400 Bad Request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '401':
        description: HTTP 401 Unauthorized.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
      '0':
        description: HTTP 500 Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "EdgeDiscoveryResult",
                "title": "EdgeDiscoveryResult",
                "description": "Base type for all errors.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code or status of response.",
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "message": {
                    "description": "Error details.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "data": {
                    "id": "EdgeDiscoveryResultData",
                    "title": "EdgeDiscoveryResultData",
                    "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
                    "type": "object",
                    "properties": {
                      "additionalMessage": {
                        "type": "string",
                        "maxLength": 32
                      }
                    }
                  }
                },
                "required": [
                  "status",
                  "message"
                ]
              }
/locations:
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: This locations endpoint retrieves the locations for a list of devices.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "LocationRequest",
            "title": "LocationRequest",
            "description": "Request to obtain location of devices.",
            "example": {
              "accountName": "1234567890-00001",
              "accuracyMode": "0",
              "cacheMode": "1",
              "deviceList": [
                {
                  "id": "980003420535573",
                  "kind": "imei",
                  "mdn": "7892345678"
                },
                {
                  "id": "375535024300089",
                  "kind": "imei",
                  "mdn": "7897654321"
                },
                {
                  "id": "A100003861E585",
                  "kind": "meid",
                  "mdn": "7897650914"
                }
              ]
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "Account identifier in \"##########-#####\".",
                "example": "1234567890-00001",
                "type": "string"
              },
              "accuracyMode": {
                "title": "AccuracyMode",
                "description": "Accurary, currently only 0-coarse supported.",
                "example": "0",
                "type": "string",
                "enum": [
                  "0"
                ]
              },
              "cacheMode": {
                "title": "CacheMode",
                "description": "Location cache mode.",
                "example": "1",
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "deviceList": {
                "description": "Device list.",
                "example": [
                  {
                    "id": "980003420535573",
                    "kind": "imei",
                    "mdn": "7892345678"
                  },
                  {
                    "id": "375535024300089",
                    "kind": "imei",
                    "mdn": "7897654321"
                  },
                  {
                    "id": "A100003861E585",
                    "kind": "meid",
                    "mdn": "7897650914"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceInfo",
                  "title": "DeviceInfo",
                  "description": "The devices that you want to locate. The array cannot contain more than 20 devices.",
                  "example": {
                    "id": "980003420535573",
                    "kind": "imei",
                    "mdn": "7892345678"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Device identifier.",
                      "example": "980003420535573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Device identifier kind.",
                      "example": "imei",
                      "type": "string"
                    },
                    "mdn": {
                      "description": "Device MDN.",
                      "example": "7892345678",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind",
                    "mdn"
                  ]
                }
              }
            },
            "required": [
              "accountName",
              "accuracyMode",
              "cacheMode",
              "deviceList"
            ]
          }
        example: '{"accountName":"1234567890-00001","accuracyMode":"0","cacheMode":"1","deviceList":[{"id":"980003420535573","kind":"imei","mdn":"7892345678"},{"id":"375535024300089","kind":"imei","mdn":"7897654321"},{"id":"A100003861E585","kind":"meid","mdn":"7897650914"}]}'
    responses:
      '200':
        description: List of JSON objects, each containing the position data or an error for a device in the request.
        body:
          application/json:
            schema: |
              {
                "description": "Location data e.g. the position data for a device or an error in the request.",
                "example": [
                  {
                    "msid": "7892345678",
                    "pd": {
                      "time": "20170520004421",
                      "x": "33.45324",
                      "y": "-84.59621",
                      "radius": "5571",
                      "qos": false
                    },
                    "error": {}
                  },
                  {
                    "msid": "8583239709",
                    "pd": {
                      "time": "20170525214342",
                      "x": "38.8408694",
                      "y": "-105.0422583",
                      "radius": "3866",
                      "qos": false
                    },
                    "error": {}
                  },
                  {
                    "msid": "7897654321",
                    "pd": {},
                    "error": {
                      "time": "20170525214342",
                      "type": "POSITION METHOD FAILURE",
                      "info": "Exception code=ABSENT SUBSCRIBER"
                    }
                  }
                ],
                "type": "array",
                "items": {
                  "id": "Location",
                  "title": "Location",
                  "description": "Device location information.",
                  "example": {
                    "msid": "7892345678",
                    "pd": {
                      "time": "20170520004421",
                      "x": "33.45324",
                      "y": "-84.59621",
                      "radius": "5571",
                      "qos": false
                    },
                    "error": {}
                  },
                  "type": "object",
                  "properties": {
                    "msid": {
                      "description": "MDN.",
                      "example": "7892345678",
                      "type": "string"
                    },
                    "pd": {
                      "id": "PositionData",
                      "title": "PositionData",
                      "description": "Position data.",
                      "example": {
                        "qos": false,
                        "radius": "5571",
                        "time": "20170520004421",
                        "x": "33.45324",
                        "y": "-84.59621"
                      },
                      "type": "object",
                      "properties": {
                        "time": {
                          "description": "Time location obtained.",
                          "example": "20170520004421",
                          "type": "string"
                        },
                        "utcoffset": {
                          "description": "UTC offset of time.",
                          "example": "0",
                          "type": "string"
                        },
                        "x": {
                          "description": "X coordinate of location.",
                          "example": "38.8408694",
                          "type": "string"
                        },
                        "y": {
                          "description": "Y coordinate of location.",
                          "example": "-105.0422583",
                          "type": "string"
                        },
                        "radius": {
                          "description": "Radius of the location in meters.",
                          "example": "3866",
                          "type": "string"
                        },
                        "qos": {
                          "description": "Whether requested accurary is met or not.",
                          "example": false,
                          "type": "boolean"
                        }
                      }
                    },
                    "error": {
                      "id": "PositionError",
                      "title": "PositionError",
                      "description": "Position error.",
                      "example": {
                        "time": "20170525214342",
                        "type": "POSITION METHOD FAILURE",
                        "info": "Exception code=ABSENT SUBSCRIBER"
                      },
                      "type": "object",
                      "properties": {
                        "time": {
                          "description": "Time location obtained.",
                          "example": "20170525214342",
                          "type": "string"
                        },
                        "utcoffset": {
                          "description": "UTC offset of time.",
                          "example": "0",
                          "type": "string"
                        },
                        "type": {
                          "description": "Error type returned from location server.",
                          "example": "POSITION METHOD FAILURE",
                          "type": "string"
                        },
                        "info": {
                          "description": "Additional information about the error.",
                          "example": "Exception code=ABSENT SUBSCRIBER",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            example: '[{"msid":"7892345678","pd":{"time":"20170520004421","x":"33.45324","y":"-84.59621","radius":"5571","qos":false},"error":{}},{"msid":"8583239709","pd":{"time":"20170525214342","x":"38.8408694","y":"-105.0422583","radius":"3866","qos":false},"error":{}},{"msid":"7897654321","pd":{},"error":{"time":"20170525214342","type":"POSITION METHOD FAILURE","info":"Exception code=ABSENT SUBSCRIBER"}}]'
      '0':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceLocationResult",
                "title": "DeviceLocationResult",
                "description": "Will be empty if there was no error.",
                "example": {
                  "errorCode": "The type of error, such as INVALID_REQUEST.",
                  "errorMessage": "Additional error information."
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "example": "The type of error, such as INVALID_REQUEST.",
                    "type": "string"
                  },
                  "errorMessage": {
                    "example": "Additional error information.",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
/devicelocations:
  /{txid}:
    uriParameters:
      txid:
        description: Transaction ID of the request to cancel, from the synchronous response to the original request.
        type: string
        example: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
        required: true
        displayName: txid
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Cancel a queued or unfinished device location request.
      queryParameters:
        accountName:
          description: Account identifier in "##########-#####".
          type: string
          example: 1234567890-00001
          required: true
          displayName: accountName
      responses:
        '200':
          description: Request canceled.
          body:
            application/json:
              schema: |
                {
                  "id": "TransactionID",
                  "title": "TransactionID",
                  "description": "The transaction ID of the request that you want to cancel, from the POST /devicelocations synchronus response.",
                  "example": {
                    "txid": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33"
                  },
                  "type": "object",
                  "properties": {
                    "txid": {
                      "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
                      "type": "string"
                    }
                  }
                }
              example: '{"txid":"2c90bd28-ece4-42ef-9f02-7e3bd4fbff33"}'
        '0':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceLocationResult",
                  "title": "DeviceLocationResult",
                  "description": "Will be empty if there was no error.",
                  "example": {
                    "errorCode": "The type of error, such as INVALID_REQUEST.",
                    "errorMessage": "Additional error information."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "example": "The type of error, such as INVALID_REQUEST.",
                      "type": "string"
                    },
                    "errorMessage": {
                      "example": "Additional error information.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Requests the current or cached location of up to 10,000 IoT or consumer devices (phones, tablets. etc.). This request returns a synchronous transaction ID, and the location information for each device is returned asynchronously as a DeviceLocation callback message.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - '*/*'
    body:
      '*/*':
        schema: |
          {
            "id": "LocationRequest",
            "title": "LocationRequest",
            "description": "An asynchronous request to obtain locations of devices.",
            "example": {
              "accountName": "1234567890-00001",
              "accuracyMode": "0",
              "cacheMode": "1",
              "deviceList": [
                {
                  "id": "980003420535573",
                  "kind": "imei",
                  "mdn": "7892345678"
                },
                {
                  "id": "375535024300089",
                  "kind": "imei",
                  "mdn": "7897654321"
                },
                {
                  "id": "A100003861E585",
                  "kind": "meid",
                  "mdn": "7897650914"
                }
              ]
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "Account identifier in \"##########-#####\".",
                "example": "1234567890-00001",
                "type": "string"
              },
              "accuracyMode": {
                "title": "AccuracyMode",
                "description": "Accurary, currently only 0-coarse supported.",
                "example": "0",
                "type": "string",
                "enum": [
                  "0"
                ]
              },
              "cacheMode": {
                "title": "CacheMode",
                "description": "Location cache mode.",
                "example": "1",
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "deviceList": {
                "description": "Device list.",
                "example": [
                  {
                    "id": "980003420535573",
                    "kind": "imei",
                    "mdn": "7892345678"
                  },
                  {
                    "id": "375535024300089",
                    "kind": "imei",
                    "mdn": "7897654321"
                  },
                  {
                    "id": "A100003861E585",
                    "kind": "meid",
                    "mdn": "7897650914"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceInfo",
                  "title": "DeviceInfo",
                  "description": "The devices that you want to locate. The array cannot contain more than 20 devices.",
                  "example": {
                    "id": "980003420535573",
                    "kind": "imei",
                    "mdn": "7892345678"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Device identifier.",
                      "example": "980003420535573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Device identifier kind.",
                      "example": "imei",
                      "type": "string"
                    },
                    "mdn": {
                      "description": "Device MDN.",
                      "example": "7892345678",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind",
                    "mdn"
                  ]
                }
              }
            },
            "required": [
              "accountName",
              "accuracyMode",
              "cacheMode",
              "deviceList"
            ]
          }
        example: '{"accountName":"2234434445-32333","accuracyMode":"0","cacheMode":"2","deviceList":[{"id":"354677790348290","kind":"imei","mdn":"5557337468"}]}'
    responses:
      '200':
        description: Request accepted; location report in progress
        body:
          application/json:
            schema: |
              {
                "id": "SynchronousLocationRequestResult",
                "title": "SynchronousLocationRequestResult",
                "example": {
                  "txid": "4be7c858-0ef9-4b15-a0c1-95061456d835",
                  "status": "QUEUED"
                },
                "type": "object",
                "properties": {
                  "txid": {
                    "description": "The transaction ID of the report.",
                    "example": "4be7c858-0ef9-4b15-a0c1-95061456d835",
                    "type": "string"
                  },
                  "status": {
                    "title": "ReportStatus",
                    "description": "Status of the report.",
                    "example": "INPROGRESS",
                    "type": "string",
                    "enum": [
                      "QUEUED",
                      "INPROGRESS",
                      "COMPLETED"
                    ]
                  }
                },
                "required": [
                  "txid",
                  "status"
                ]
              }
            example: '{"txid":"4be7c858-0ef9-4b15-a0c1-95061456d835","status":"QUEUED"}'
      '0':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceLocationResult",
                "title": "DeviceLocationResult",
                "description": "Will be empty if there was no error.",
                "example": {
                  "errorCode": "The type of error, such as INVALID_REQUEST.",
                  "errorMessage": "Additional error information."
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "example": "The type of error, such as INVALID_REQUEST.",
                    "type": "string"
                  },
                  "errorMessage": {
                    "example": "Additional error information.",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"INVALID_PARAMETER","errorMessage":"Unregistered account"}'
/locationreports:
  /{account}/report/{txid}:
    uriParameters:
      account:
        description: Account identifier in "##########-#####".
        type: string
        example: 0252012345-00001
        required: true
        displayName: account
      txid:
        description: Transaction ID of the report to cancel.
        type: string
        example: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
        required: true
        displayName: txid
    /index/{startindex}:
      uriParameters:
        startindex:
          description: Zero-based number of the first record to return.
          type: integer
          example: '0'
          required: true
          displayName: startindex
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Download a completed asynchronous device location report.
        responses:
          '200':
            description: Location information for up to 1,000 devices.
            body:
              application/json:
                schema: |
                  {
                    "id": "LocationReport",
                    "title": "LocationReport",
                    "description": "Location information for up to 1,000 devices.",
                    "example": {
                      "startIndex": "0",
                      "txid": "2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9",
                      "totalCount": 3,
                      "hasMoreData": false,
                      "devLocationList": [
                        {
                          "error": {},
                          "msid": "7892345678",
                          "pd": {
                            "qos": false,
                            "radius": "5571",
                            "time": "20170520004421",
                            "x": "33.45324",
                            "y": "-84.59621"
                          }
                        },
                        {
                          "error": {},
                          "msid": "8583239709",
                          "pd": {
                            "qos": false,
                            "radius": "3866",
                            "time": "20170525214342",
                            "x": "38.8408694",
                            "y": "-105.0422583"
                          }
                        },
                        {
                          "error": {
                            "time": "20170525214342",
                            "type": "POSITION METHOD FAILURE",
                            "info": "Exception code=ABSENT SUBSCRIBER"
                          },
                          "msid": "7897654321",
                          "pd": {}
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "devLocationList": {
                        "description": "Device location information.",
                        "example": [
                          {
                            "msid": "7892345678",
                            "pd": {
                              "time": "20170520004421",
                              "x": "33.45324",
                              "y": "-84.59621",
                              "radius": "5571",
                              "qos": false
                            },
                            "error": {}
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "Location",
                          "title": "Location",
                          "description": "Device location information.",
                          "example": {
                            "msid": "7892345678",
                            "pd": {
                              "time": "20170520004421",
                              "x": "33.45324",
                              "y": "-84.59621",
                              "radius": "5571",
                              "qos": false
                            },
                            "error": {}
                          },
                          "type": "object",
                          "properties": {
                            "msid": {
                              "description": "MDN.",
                              "example": "7892345678",
                              "type": "string"
                            },
                            "pd": {
                              "id": "PositionData",
                              "title": "PositionData",
                              "description": "Position data.",
                              "example": {
                                "qos": false,
                                "radius": "5571",
                                "time": "20170520004421",
                                "x": "33.45324",
                                "y": "-84.59621"
                              },
                              "type": "object",
                              "properties": {
                                "time": {
                                  "description": "Time location obtained.",
                                  "example": "20170520004421",
                                  "type": "string"
                                },
                                "utcoffset": {
                                  "description": "UTC offset of time.",
                                  "example": "0",
                                  "type": "string"
                                },
                                "x": {
                                  "description": "X coordinate of location.",
                                  "example": "38.8408694",
                                  "type": "string"
                                },
                                "y": {
                                  "description": "Y coordinate of location.",
                                  "example": "-105.0422583",
                                  "type": "string"
                                },
                                "radius": {
                                  "description": "Radius of the location in meters.",
                                  "example": "3866",
                                  "type": "string"
                                },
                                "qos": {
                                  "description": "Whether requested accurary is met or not.",
                                  "example": false,
                                  "type": "boolean"
                                }
                              }
                            },
                            "error": {
                              "id": "PositionError",
                              "title": "PositionError",
                              "description": "Position error.",
                              "example": {
                                "time": "20170525214342",
                                "type": "POSITION METHOD FAILURE",
                                "info": "Exception code=ABSENT SUBSCRIBER"
                              },
                              "type": "object",
                              "properties": {
                                "time": {
                                  "description": "Time location obtained.",
                                  "example": "20170525214342",
                                  "type": "string"
                                },
                                "utcoffset": {
                                  "description": "UTC offset of time.",
                                  "example": "0",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Error type returned from location server.",
                                  "example": "POSITION METHOD FAILURE",
                                  "type": "string"
                                },
                                "info": {
                                  "description": "Additional information about the error.",
                                  "example": "Exception code=ABSENT SUBSCRIBER",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "hasMoreData": {
                        "description": "True if there are more device locations to retrieve.",
                        "example": false,
                        "type": "boolean"
                      },
                      "startIndex": {
                        "description": "The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices to be returned (hasMoreData=true), set startIndex=1000 for the second request, 2000 for the third request, etc.",
                        "example": "0",
                        "type": "string"
                      },
                      "totalCount": {
                        "description": "The total number of devices in the original request and in the report.",
                        "example": 4,
                        "type": "integer",
                        "format": "int32"
                      },
                      "txid": {
                        "description": "The transaction ID of the report.",
                        "example": "4be7c858-0ef9-4b15-a0c1-95061456d835",
                        "type": "string"
                      }
                    }
                  }
                example: '{"startIndex":"0","txid":"2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9","totalCount":3,"hasMoreData":false,"devLocationList":[{"error":{},"msid":"7892345678","pd":{"qos":false,"radius":"5571","time":"20170520004421","x":"33.45324","y":"-84.59621"}},{"error":{},"msid":"8583239709","pd":{"qos":false,"radius":"3866","time":"20170525214342","x":"38.8408694","y":"-105.0422583"}},{"error":{"time":"20170525214342","type":"POSITION METHOD FAILURE","info":"Exception code=ABSENT SUBSCRIBER"},"msid":"7897654321","pd":{}}]}'
          '0':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceLocationResult",
                    "title": "DeviceLocationResult",
                    "description": "Will be empty if there was no error.",
                    "example": {
                      "errorCode": "The type of error, such as INVALID_REQUEST.",
                      "errorMessage": "Additional error information."
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "The type of error, such as INVALID_REQUEST.",
                        "type": "string"
                      },
                      "errorMessage": {
                        "example": "Additional error information.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
    /status:
      uriParameters: {}
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Returns the current status of a requested device location report.
        responses:
          '200':
            description: Location report status.
            body:
              application/json:
                schema: |
                  {
                    "id": "LocationReportStatus",
                    "title": "LocationReportStatus",
                    "description": "Status of the report.",
                    "example": {
                      "txid": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
                      "status": "QUEUED"
                    },
                    "type": "object",
                    "properties": {
                      "txid": {
                        "description": "The transaction ID of the report.",
                        "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
                        "type": "string"
                      },
                      "status": {
                        "title": "ReportStatus",
                        "description": "Status of the report.",
                        "example": "INPROGRESS",
                        "type": "string",
                        "enum": [
                          "QUEUED",
                          "INPROGRESS",
                          "COMPLETED"
                        ]
                      }
                    }
                  }
                example: '{"txid":"2c90bd28-ece4-42ef-9f02-7e3bd4fbff33","status":"INPROGRESS"}'
          '0':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceLocationResult",
                    "title": "DeviceLocationResult",
                    "description": "Will be empty if there was no error.",
                    "example": {
                      "errorCode": "The type of error, such as INVALID_REQUEST.",
                      "errorMessage": "Additional error information."
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "The type of error, such as INVALID_REQUEST.",
                        "type": "string"
                      },
                      "errorMessage": {
                        "example": "Additional error information.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Cancel a queued device location report.
      responses:
        '200':
          description: Report generation cancelled.
          body:
            application/json:
              schema: |
                {
                  "id": "TransactionID",
                  "title": "TransactionID",
                  "description": "The transaction ID of the request that you want to cancel, from the POST /devicelocations synchronus response.",
                  "example": {
                    "txid": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33"
                  },
                  "type": "object",
                  "properties": {
                    "txid": {
                      "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
                      "type": "string"
                    }
                  }
                }
              example: '{"txid":"2c90bd28-ece4-42ef-9f02-7e3bd4fbff33"}'
        '0':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceLocationResult",
                  "title": "DeviceLocationResult",
                  "description": "Will be empty if there was no error.",
                  "example": {
                    "errorCode": "The type of error, such as INVALID_REQUEST.",
                    "errorMessage": "Additional error information."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "example": "The type of error, such as INVALID_REQUEST.",
                      "type": "string"
                    },
                    "errorMessage": {
                      "example": "Additional error information.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Request an asynchronous device location report.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - '*/*'
    body:
      '*/*':
        schema: |
          {
            "id": "LocationRequest",
            "title": "LocationRequest",
            "description": "Request for device location report.",
            "example": {
              "accountName": "1234567890-00001",
              "accuracyMode": "0",
              "cacheMode": "1",
              "deviceList": [
                {
                  "id": "980003420535573",
                  "kind": "imei",
                  "mdn": "7892345678"
                },
                {
                  "id": "375535024300089",
                  "kind": "imei",
                  "mdn": "7897654321"
                },
                {
                  "id": "A100003861E585",
                  "kind": "meid",
                  "mdn": "7897650914"
                }
              ]
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "Account identifier in \"##########-#####\".",
                "example": "1234567890-00001",
                "type": "string"
              },
              "accuracyMode": {
                "title": "AccuracyMode",
                "description": "Accurary, currently only 0-coarse supported.",
                "example": "0",
                "type": "string",
                "enum": [
                  "0"
                ]
              },
              "cacheMode": {
                "title": "CacheMode",
                "description": "Location cache mode.",
                "example": "1",
                "type": "string",
                "enum": [
                  "0",
                  "1",
                  "2"
                ]
              },
              "deviceList": {
                "description": "Device list.",
                "example": [
                  {
                    "id": "980003420535573",
                    "kind": "imei",
                    "mdn": "7892345678"
                  },
                  {
                    "id": "375535024300089",
                    "kind": "imei",
                    "mdn": "7897654321"
                  },
                  {
                    "id": "A100003861E585",
                    "kind": "meid",
                    "mdn": "7897650914"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceInfo",
                  "title": "DeviceInfo",
                  "description": "The devices that you want to locate. The array cannot contain more than 20 devices.",
                  "example": {
                    "id": "980003420535573",
                    "kind": "imei",
                    "mdn": "7892345678"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Device identifier.",
                      "example": "980003420535573",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Device identifier kind.",
                      "example": "imei",
                      "type": "string"
                    },
                    "mdn": {
                      "description": "Device MDN.",
                      "example": "7892345678",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind",
                    "mdn"
                  ]
                }
              }
            },
            "required": [
              "accountName",
              "accuracyMode",
              "cacheMode",
              "deviceList"
            ]
          }
        example: '{"accountName":"1234567890-00001","accuracyMode":"0","cacheMode":"1","deviceList":[{"id":"980003420535573","kind":"imei","mdn":"7892345678"},{"id":"375535024300089","kind":"imei","mdn":"7897654321"},{"id":"A100003861E585","kind":"meid","mdn":"7897650914"}]}'
    responses:
      '200':
        description: Request accepted; location report in progress.
        body:
          application/json:
            schema: |
              {
                "id": "AsynchronousLocationRequestResult",
                "title": "AsynchronousLocationRequestResult",
                "example": {
                  "txid": "2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9"
                },
                "type": "object",
                "properties": {
                  "txid": {
                    "description": "The transaction ID of the report.",
                    "example": "4be7c858-0ef9-4b15-a0c1-95061456d835",
                    "type": "string"
                  },
                  "status": {
                    "title": "ReportStatus",
                    "description": "Status of the report.",
                    "example": "INPROGRESS",
                    "type": "string",
                    "enum": [
                      "QUEUED",
                      "INPROGRESS",
                      "COMPLETED"
                    ]
                  },
                  "estimatedDuration": {
                    "description": "Estimated number of minutes required to complete the report.",
                    "example": "12",
                    "type": "string"
                  }
                }
              }
            example: '{"txid":"2c90bd28-ece4-42ef-9f02-7e3bd4fbff33","status":"QUEUED"}'
      '0':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceLocationResult",
                "title": "DeviceLocationResult",
                "description": "Will be empty if there was no error.",
                "example": {
                  "errorCode": "The type of error, such as INVALID_REQUEST.",
                  "errorMessage": "Additional error information."
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "example": "The type of error, such as INVALID_REQUEST.",
                    "type": "string"
                  },
                  "errorMessage": {
                    "example": "Additional error information.",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
/consents:
  /{account}/index/{startIndex}:
    uriParameters:
      account:
        description: Account identifier in "##########-#####".
        type: string
        example: 0252012345-00001
        required: true
        displayName: account
      startIndex:
        description: Zero-based number of the first record to return.
        type: string
        example: '0'
        required: true
        displayName: startIndex
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This consents endpoint retrieves a list of excluded devices in an account.
      responses:
        '200':
          description: Excluded devices result.
          body:
            application/json:
              schema: |
                {
                  "id": "DevicesConsentResult",
                  "title": "DevicesConsentResult",
                  "example": {
                    "accountName": "2024009649-00001",
                    "allDevice": false,
                    "hasMoreData": false,
                    "totalCount": 4,
                    "updateTime": "2018-05-18 19:20:50.076 +0000 UTC",
                    "exclusion": [
                      "990003420535375",
                      "420535399000375",
                      "A100003861E585",
                      "205353759900034"
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account identifier in \"##########-#####\".",
                      "example": "2234434445-32333",
                      "type": "string"
                    },
                    "allDevice": {
                      "description": "Exclude all devices or not?",
                      "example": false,
                      "type": "boolean"
                    },
                    "hasMoreData": {
                      "description": "Are there more devices to retrieve or not?",
                      "example": false,
                      "type": "boolean"
                    },
                    "totalCount": {
                      "description": "Total number of excluded devices in the account.",
                      "example": 4,
                      "type": "integer",
                      "format": "int32"
                    },
                    "updateTime": {
                      "description": "Last update time.",
                      "example": "2018-05-18 19:20:50.076 +0000 UTC",
                      "type": "string"
                    },
                    "exclusion": {
                      "description": "Device ID list.",
                      "example": [
                        "990003420535375",
                        "420535399000375",
                        "A100003861E585",
                        "205353759900034"
                      ],
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              example: '{"accountName":"2024009649-00001","allDevice":false,"hasMoreData":false,"totalCount":4,"updateTime":"2018-05-18 19:20:50.076 +0000 UTC","exclusion":["990003420535375","420535399000375","A100003861E585","205353759900034"]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceLocationResult",
                  "title": "DeviceLocationResult",
                  "description": "Will be empty if there was no error.",
                  "example": {
                    "errorCode": "The type of error, such as INVALID_REQUEST.",
                    "errorMessage": "Additional error information."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "example": "The type of error, such as INVALID_REQUEST.",
                      "type": "string"
                    },
                    "errorMessage": {
                      "example": "Additional error information.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: This consents endpoint sets a new exclusion list.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - '*/*'
    body:
      '*/*':
        schema: |
          {
            "id": "ConsentRequest",
            "title": "ConsentRequest",
            "description": "Request to update account consent exclusion list.",
            "example": {
              "accountName": "1234567890-00001",
              "type": "replace",
              "allDevice": false,
              "exclusion": [
                "980003420535573",
                "375535024300089",
                "A100003861E585"
              ]
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "Account identifier in \"##########-#####\".",
                "example": "2234434445-32333",
                "type": "string"
              },
              "allDevice": {
                "description": "Exclude all devices or not.",
                "example": false,
                "type": "boolean"
              },
              "type": {
                "description": "The change to make: append or replace.",
                "example": "replace",
                "type": "string"
              },
              "exclusion": {
                "description": "Device ID list.",
                "example": [
                  "980003420535573",
                  "375535024300089",
                  "A100003861E585"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        example: ''
    responses:
      '200':
        description: Success response.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceLocationSuccessResult",
                "title": "DeviceLocationSuccessResult",
                "description": "Whether the device location request was successful or not.",
                "type": "object",
                "properties": {
                  "success": {
                    "example": true,
                    "type": "boolean"
                  }
                }
              }
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceLocationResult",
                "title": "DeviceLocationResult",
                "description": "Will be empty if there was no error.",
                "example": {
                  "errorCode": "The type of error, such as INVALID_REQUEST.",
                  "errorMessage": "Additional error information."
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "example": "The type of error, such as INVALID_REQUEST.",
                    "type": "string"
                  },
                  "errorMessage": {
                    "example": "Additional error information.",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"INVALID_PARAMETER","errorMessage":"UWS verification failure (Could not find account {account}.)"}'
  delete:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Removes devices from the exclusion list so that they can be located with Device Location Services requests.
    queryParameters:
      accountName:
        description: The numeric name of the account.
        type: string
        example: 0000123456-00001
        required: true
        displayName: accountName
      deviceList:
        description: A list of the device IDs to remove from the exclusion list.
        type: string
        example: IMEI
        required: true
        displayName: deviceList
    responses:
      '200':
        description: Devices successfully removed from list.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceLocationSuccessResult",
                "title": "DeviceLocationSuccessResult",
                "description": "Whether the device location request was successful or not.",
                "example": {
                  "success": true
                },
                "type": "object",
                "properties": {
                  "success": {
                    "example": true,
                    "type": "boolean"
                  }
                }
              }
            example: '{"success":true}'
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceLocationResult",
                "title": "DeviceLocationResult",
                "description": "Will be empty if there was no error.",
                "example": {
                  "errorCode": "The type of error, such as INVALID_REQUEST.",
                  "errorMessage": "Additional error information."
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "example": "The type of error, such as INVALID_REQUEST.",
                    "type": "string"
                  },
                  "errorMessage": {
                    "example": "Additional error information.",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
/usage:
  /triggers:
    /{triggerId}:
      uriParameters:
        triggerId:
          description: Usage trigger ID
          type: string
          example: 595f5c44-c31c-4552-8670-020a1545a84d
          required: true
          displayName: triggerId
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: >
          Update an existing usage trigger
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "UsageTriggerUpdateRequest",
                "title": "UsageTriggerUpdateRequest",
                "description": "New trigger values",
                "example": {
                  "accountName": "1000012345-00001",
                  "thresholdValue": "95"
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "Account name",
                    "example": "0212312345-00001",
                    "type": "string"
                  },
                  "triggerName": {
                    "description": "Usage trigger name",
                    "example": "95% usage alert",
                    "type": "string"
                  },
                  "thresholdValue": {
                    "description": "The percent of subscribed usage required to activate the trigger, such as 90 or 100.",
                    "example": "95",
                    "type": "string"
                  },
                  "smsPhoneNumbers": {
                    "description": "Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or parentheses, etc.",
                    "example": "5551231234",
                    "type": "string"
                  },
                  "emailAddresses": {
                    "description": "Comma-separated list of email addresses to send alerts to.",
                    "example": "me@theinternet.com, you@theinternet.com",
                    "type": "string"
                  }
                },
                "required": [
                  "accountName"
                ]
              }
            example: '{"accountName":"1000012345-00001","thresholdValue":"95"}'
        responses:
          '200':
            description: Usage trigger Modify result
            body:
              application/json:
                schema: |
                  {
                    "id": "UsageTriggerResponse",
                    "title": "UsageTriggerResponse",
                    "example": {
                      "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d",
                      "triggerName": "90 percent",
                      "accountName": "1000012345-00001",
                      "serviceName": "Location",
                      "thresholdValue": "90",
                      "allowExcess": true,
                      "sendSmsNotification": true,
                      "smsPhoneNumbers": "5558794321",
                      "sendEmailNotification": false,
                      "emailAddresses": "",
                      "createDate": "2018-08-11",
                      "updateDate": "2018-08-12"
                    },
                    "type": "object",
                    "properties": {
                      "triggerId": {
                        "description": "Unique usage triggerId",
                        "example": "3bb4777e-5292-4de7-97df-f578df4a2dbe",
                        "type": "string"
                      },
                      "triggerName": {
                        "description": "Usage trigger name",
                        "example": "95% usage alert",
                        "type": "string"
                      },
                      "accountName": {
                        "description": "Account name",
                        "example": "0212312345-00001",
                        "type": "string"
                      },
                      "serviceName": {
                        "title": "serviceName",
                        "description": "Service name",
                        "type": "string",
                        "enum": [
                          "Location",
                          "fota"
                        ]
                      },
                      "thresholdValue": {
                        "description": "Percent of subscription at which trigger will send an alert",
                        "example": "95",
                        "type": "string"
                      },
                      "allowExcess": {
                        "description": "allowExcess determines whether to restrict usage after exceeds limits",
                        "type": "boolean"
                      },
                      "sendSmsNotification": {
                        "description": "Send SMS (text) alerts when the thresholdValue is reached.",
                        "type": "boolean"
                      },
                      "smsPhoneNumbers": {
                        "description": "comma seperated value of list of Phone numbers for SMS notifications",
                        "example": "5551231234",
                        "type": "string"
                      },
                      "sendEmailNotification": {
                        "description": "Send email alerts when the thresholdValue is reached.",
                        "type": "boolean"
                      },
                      "emailAddresses": {
                        "description": "comma seperated value of list of Email addresses for Email notifications",
                        "example": "me@theinternet.com, you@theinternet.com",
                        "type": "string"
                      },
                      "createDate": {
                        "description": "UTC Date when the usage trigger was created",
                        "example": "2018-08-31",
                        "type": "string"
                      },
                      "updateDate": {
                        "description": "UTC Date when the usage trigger was last updated",
                        "example": "2018-09-03",
                        "type": "string"
                      }
                    },
                    "required": [
                      "triggerId",
                      "triggerName",
                      "accountName",
                      "serviceName",
                      "thresholdValue",
                      "allowExcess",
                      "sendSmsNotification",
                      "smsPhoneNumbers",
                      "sendEmailNotification",
                      "emailAddresses",
                      "createDate",
                      "updateDate"
                    ]
                  }
                example: '{"triggerId":"595f5c44-c31c-4552-8670-020a1545a84d","triggerName":"90 percent","accountName":"1000012345-00001","serviceName":"Location","thresholdValue":"90","allowExcess":true,"sendSmsNotification":true,"smsPhoneNumbers":"5558794321","sendEmailNotification":false,"emailAddresses":"","createDate":"2018-08-11","updateDate":"2018-08-12"}'
          '400':
            description: Unexpected error
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceLocationResult",
                    "title": "DeviceLocationResult",
                    "description": "Will be empty if there was no error.",
                    "example": {
                      "errorCode": "The type of error, such as INVALID_REQUEST.",
                      "errorMessage": "Additional error information."
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "The type of error, such as INVALID_REQUEST.",
                        "type": "string"
                      },
                      "errorMessage": {
                        "example": "Additional error information.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: >
        Create a new usage trigger, which will send an alert when the number of device location service transactions reaches a specified percentage of the monthly subscription amount.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "UsageTriggerAddRequest",
              "title": "UsageTriggerAddRequest",
              "description": "License assignment.",
              "example": {
                "triggerName": "95% usage alert",
                "accountName": "0212312345-00001",
                "serviceName": "Location",
                "thresholdValue": "95",
                "allowExcess": true,
                "sendSmsNotification": true,
                "smsPhoneNumbers": "5551231234",
                "sendEmailNotification": true,
                "emailAddresses": "you@theinternet.com"
              },
              "type": "object",
              "properties": {
                "accountName": {
                  "description": "Account name",
                  "example": "0212312345-00001",
                  "type": "string"
                },
                "serviceName": {
                  "title": "serviceName",
                  "description": "Service name",
                  "type": "string",
                  "enum": [
                    "Location",
                    "fota"
                  ]
                },
                "thresholdValue": {
                  "description": "The percent of subscribed usage required to activate the trigger, such as 90 or 100.",
                  "example": "95",
                  "type": "string"
                },
                "triggerName": {
                  "description": "Usage trigger name",
                  "example": "95% usage alert",
                  "type": "string"
                },
                "allowExcess": {
                  "description": "Allow additional requests after thresholdValue is reached. (currently not functional)",
                  "type": "boolean"
                },
                "sendSmsNotification": {
                  "description": "Send SMS (text) alerts when the thresholdValue is reached.",
                  "type": "boolean"
                },
                "smsPhoneNumbers": {
                  "description": "Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or parentheses, etc.",
                  "example": "5551231234",
                  "type": "string"
                },
                "sendEmailNotification": {
                  "description": "Send email alerts when the thresholdValue is reached.",
                  "type": "boolean"
                },
                "emailAddresses": {
                  "description": "Comma-separated list of email addresses to send alerts to.",
                  "example": "you@theinternet.com",
                  "type": "string"
                }
              },
              "required": [
                "accountName",
                "serviceName",
                "thresholdValue"
              ]
            }
          example: '{"triggerName":"95% usage alert","accountName":"0212312345-00001","serviceName":"Location","thresholdValue":"95","allowExcess":true,"sendSmsNotification":true,"smsPhoneNumbers":"5551231234","sendEmailNotification":true,"emailAddresses":"you@theinternet.com"}'
      responses:
        '200':
          description: Usage trigger Add result
          body:
            application/json:
              schema: |
                {
                  "id": "UsageTriggerResponse",
                  "title": "UsageTriggerResponse",
                  "example": {
                    "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d",
                    "triggerName": "90 percent",
                    "accountName": "1000012345-00001",
                    "serviceName": "Location",
                    "thresholdValue": "90",
                    "allowExcess": true,
                    "sendSmsNotification": true,
                    "smsPhoneNumbers": "5558794321",
                    "sendEmailNotification": false,
                    "emailAddresses": "",
                    "createDate": "2018-08-11",
                    "updateDate": "2018-08-12"
                  },
                  "type": "object",
                  "properties": {
                    "triggerId": {
                      "description": "Unique usage triggerId",
                      "example": "3bb4777e-5292-4de7-97df-f578df4a2dbe",
                      "type": "string"
                    },
                    "triggerName": {
                      "description": "Usage trigger name",
                      "example": "95% usage alert",
                      "type": "string"
                    },
                    "accountName": {
                      "description": "Account name",
                      "example": "0212312345-00001",
                      "type": "string"
                    },
                    "serviceName": {
                      "title": "serviceName",
                      "description": "Service name",
                      "type": "string",
                      "enum": [
                        "Location",
                        "fota"
                      ]
                    },
                    "thresholdValue": {
                      "description": "Percent of subscription at which trigger will send an alert",
                      "example": "95",
                      "type": "string"
                    },
                    "allowExcess": {
                      "description": "allowExcess determines whether to restrict usage after exceeds limits",
                      "type": "boolean"
                    },
                    "sendSmsNotification": {
                      "description": "Send SMS (text) alerts when the thresholdValue is reached.",
                      "type": "boolean"
                    },
                    "smsPhoneNumbers": {
                      "description": "comma seperated value of list of Phone numbers for SMS notifications",
                      "example": "5551231234",
                      "type": "string"
                    },
                    "sendEmailNotification": {
                      "description": "Send email alerts when the thresholdValue is reached.",
                      "type": "boolean"
                    },
                    "emailAddresses": {
                      "description": "comma seperated value of list of Email addresses for Email notifications",
                      "example": "me@theinternet.com, you@theinternet.com",
                      "type": "string"
                    },
                    "createDate": {
                      "description": "UTC Date when the usage trigger was created",
                      "example": "2018-08-31",
                      "type": "string"
                    },
                    "updateDate": {
                      "description": "UTC Date when the usage trigger was last updated",
                      "example": "2018-09-03",
                      "type": "string"
                    }
                  },
                  "required": [
                    "triggerId",
                    "triggerName",
                    "accountName",
                    "serviceName",
                    "thresholdValue",
                    "allowExcess",
                    "sendSmsNotification",
                    "smsPhoneNumbers",
                    "sendEmailNotification",
                    "emailAddresses",
                    "createDate",
                    "updateDate"
                  ]
                }
              example: '{"triggerId":"595f5c44-c31c-4552-8670-020a1545a84d","triggerName":"90 percent","accountName":"1000012345-00001","serviceName":"Location","thresholdValue":"90","allowExcess":true,"sendSmsNotification":true,"smsPhoneNumbers":"5558794321","sendEmailNotification":false,"emailAddresses":"","createDate":"2018-08-11","updateDate":"2018-08-12"}'
        '400':
          description: Unexpected error
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceLocationResult",
                  "title": "DeviceLocationResult",
                  "description": "Will be empty if there was no error.",
                  "example": {
                    "errorCode": "The type of error, such as INVALID_REQUEST.",
                    "errorMessage": "Additional error information."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "example": "The type of error, such as INVALID_REQUEST.",
                      "type": "string"
                    },
                    "errorMessage": {
                      "example": "Additional error information.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /accounts/{accountName}/triggers/{triggerId}:
    uriParameters:
      accountName:
        description: Account name
        type: string
        example: 0212312345-00001
        required: true
        displayName: accountName
      triggerId:
        description: Usage trigger ID
        type: string
        example: 595f5c44-c31c-4552-8670-020a1545a84d
        required: true
        displayName: triggerId
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: eletes the specified usage trigger from the given account
      responses:
        '200':
          description: Delete result
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceLocationSuccessResult",
                  "title": "DeviceLocationSuccessResult",
                  "description": "Whether the device location request was successful or not.",
                  "example": {
                    "success": true
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "example": true,
                      "type": "boolean"
                    }
                  }
                }
              example: '{"success":true}'
        '400':
          description: Unexpected error
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceLocationResult",
                  "title": "DeviceLocationResult",
                  "description": "Will be empty if there was no error.",
                  "example": {
                    "errorCode": "The type of error, such as INVALID_REQUEST.",
                    "errorMessage": "Additional error information."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "example": "The type of error, such as INVALID_REQUEST.",
                      "type": "string"
                    },
                    "errorMessage": {
                      "example": "Additional error information.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: This endpoint allows user to search for billable usage for accounts based on the provided date range.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - '*/*'
    body:
      '*/*':
        schema: |
          {
            "id": "BillUsageRequest",
            "title": "BillUsageRequest",
            "description": "Request to obtain billable usage for accounts.",
            "example": {
              "accountName": "1234567890-00001",
              "startDate": "04-01-2018",
              "endDate": "04-30-2018",
              "usageForAllAccounts": true
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "Account identifier.",
                "example": "1234567890-00001",
                "type": "string"
              },
              "startDate": {
                "description": "Start date to search for billable usage, mm-dd-yyyy.",
                "example": "04-01-2018",
                "type": "string"
              },
              "endDate": {
                "description": "End date to search for billable usage, mm-dd-yyyy.",
                "example": "04-30-2018",
                "type": "string"
              },
              "usageForAllAccounts": {
                "description": "Request usage for single or multiple accounts.",
                "example": true,
                "type": "boolean"
              }
            }
          }
        example: '{"accountName":"1234567890-00001","startDate":"04-01-2018","endDate":"04-30-2018","usageForAllAccounts":true}'
    responses:
      '200':
        description: Billable usage report.
        body:
          application/json:
            schema: |
              {
                "example": {
                  "accountName": "1223334444-00001",
                  "usageForAllAcounts": false,
                  "skuName": "TS-LOC-COARSE-CellID-Aggr",
                  "transactionsAllowed": "5000",
                  "totalTransactionCount": "350",
                  "PrimaryAccount": {
                    "accountName": "1223334444-00001",
                    "transactionsCount": "125"
                  },
                  "ManagedAccounts": []
                },
                "type": "object"
              }
            example: '{"accountName":"1223334444-00001","usageForAllAcounts":false,"skuName":"TS-LOC-COARSE-CellID-Aggr","transactionsAllowed":"5000","totalTransactionCount":"350","PrimaryAccount":{"accountName":"1223334444-00001","transactionsCount":"125"},"ManagedAccounts":[]}'
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceLocationResult",
                "title": "DeviceLocationResult",
                "description": "Will be empty if there was no error.",
                "example": {
                  "errorCode": "The type of error, such as INVALID_REQUEST.",
                  "errorMessage": "Additional error information."
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "example": "The type of error, such as INVALID_REQUEST.",
                    "type": "string"
                  },
                  "errorMessage": {
                    "example": "Additional error information.",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
/upgrades:
  /{account}/upgrade/{upgradeId}:
    uriParameters:
      account:
        description: Account identifier in "##########-#####".
        type: string
        example: 0242078689-00001
        required: true
        displayName: account
      upgradeId:
        description: The UUID of the upgrade, returned by POST /upgrades when the upgrade was scheduled.
        type: string
        example: e3a8d88a-04c6-4ef3-b039-89b62f91e962
        required: true
        displayName: upgradeId
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Returns information about a specified upgrade, include the target date of the upgrade, the list of devices in the upgrade, and the status of the upgrade for each device.
      responses:
        '200':
          description: Firmware upgrade information.
          body:
            application/json:
              schema: |
                {
                  "id": "FirmwareUpgrade",
                  "title": "FirmwareUpgrade",
                  "description": "Array of upgrade objects with the specified status.",
                  "example": {
                    "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                    "accountName": "0402196254-00001",
                    "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
                    "firmwareTo": "VerizonFirmwareVersion-02",
                    "startDate": "2018-04-01",
                    "status": "Queued",
                    "deviceList": [
                      {
                        "deviceId": "900000000000002",
                        "status": "Device Accepted",
                        "resultReason": "success"
                      },
                      {
                        "deviceId": "900000000000003",
                        "status": "Device Accepted",
                        "resultReason": "success"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The unique identifier for this upgrade.",
                      "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                      "type": "string"
                    },
                    "accountName": {
                      "description": "Account identifier in \"##########-#####\".",
                      "example": "0402196254-00001",
                      "type": "string"
                    },
                    "firmwareName": {
                      "description": "The name of the firmware image that will be used for the upgrade.",
                      "example": "FOTA_Verizon_Model-A_01To02_HF",
                      "type": "string"
                    },
                    "firmwareTo": {
                      "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
                      "example": "VerizonFirmwareVersion-02",
                      "type": "string"
                    },
                    "startDate": {
                      "description": "The intended start date for the upgrade.",
                      "example": "2018-04-01",
                      "type": "string"
                    },
                    "status": {
                      "description": "The current status of the upgrade.",
                      "example": "Queued",
                      "type": "string"
                    },
                    "deviceList": {
                      "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
                      "example": [
                        {
                          "deviceId": "900000000000002",
                          "status": "Device Accepted",
                          "resultReason": "success"
                        },
                        {
                          "deviceId": "900000000000003",
                          "status": "Device Accepted",
                          "resultReason": "success"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "FirmwareUpgradeDeviceListItem",
                        "title": "FirmwareUpgradeDeviceListItem",
                        "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
                        "example": {
                          "deviceId": "900000000000002",
                          "status": "Device Accepted",
                          "resultReason": "success"
                        },
                        "type": "object",
                        "properties": {
                          "deviceId": {
                            "description": "Device IMEI.",
                            "example": "900000000000002",
                            "type": "string"
                          },
                          "status": {
                            "description": "The status of the upgrade for this device.",
                            "example": "Device Accepted",
                            "type": "string"
                          },
                          "resultReason": {
                            "description": "Additional details about the status. Not included when status='Request Pending.'",
                            "example": "success",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","accountName":"0402196254-00001","firmwareName":"FOTA_Verizon_Model-A_01To02_HF","firmwareTo":"VerizonFirmwareVersion-02","startDate":"2018-04-01","status":"Queued","deviceList":[{"deviceId":"900000000000002","status":"Device Accepted","resultReason":"success"},{"deviceId":"900000000000003","status":"Device Accepted","resultReason":"success"}]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV1Result",
                  "title": "FotaV1Result",
                  "description": "Response in case of any errors.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error response code.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Description of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    put:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Add or remove devices from a scheduled upgrade.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - '*/*'
      body:
        '*/*':
          schema: |
            {
              "id": "FirmwareUpgradeChangeRequest",
              "title": "FirmwareUpgradeChangeRequest",
              "description": "List of devices to add or remove.",
              "example": {
                "type": "append",
                "deviceList": [
                  "15-digit IMEI",
                  "15-digit IMEI"
                ]
              },
              "type": "object",
              "properties": {
                "type": {
                  "title": "FirmwareTypeList",
                  "description": "Possible values are `append` or `remove`",
                  "example": "append",
                  "type": "string",
                  "enum": [
                    "append",
                    "remove"
                  ]
                },
                "deviceList": {
                  "description": "The IMEIs of the devices.",
                  "example": [
                    "990003425730535",
                    "990000473475989",
                    "990005733420535",
                    "990000347475989",
                    "990007303425535",
                    "990007590473489"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "type",
                "deviceList"
              ]
            }
          example: '{"type":"append","deviceList":["15-digit IMEI","15-digit IMEI"]}'
      responses:
        '200':
          description: Upgrade information.
          body:
            application/json:
              schema: |
                {
                  "id": "FirmwareUpgradeChangeResult",
                  "title": "FirmwareUpgradeChangeResult",
                  "description": "Upgrade information.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                    "deviceList": [
                      {
                        "deviceId": "15-digit IMEI",
                        "status": "AddDeviceSucceed",
                        "Reason": "Device added Successfully"
                      },
                      {
                        "deviceId": "15-digit IMEI",
                        "status": "AddDeviceSucceed",
                        "Reason": "Device added Successfully"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account identifier in \"##########-#####\".",
                      "example": "0000123456-00001",
                      "type": "string"
                    },
                    "id": {
                      "description": "The unique identifier for this upgrade.",
                      "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                      "type": "string"
                    },
                    "deviceList": {
                      "description": "A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.",
                      "example": [
                        {
                          "deviceId": "15-digit IMEI",
                          "status": "AddDeviceSucceed",
                          "Reason": "Device added Successfully"
                        },
                        {
                          "deviceId": "15-digit IMEI",
                          "status": "AddDeviceSucceed",
                          "Reason": "Device added Successfully"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V1DeviceListItem",
                        "title": "V1DeviceListItem",
                        "description": "A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.",
                        "example": {
                          "deviceId": "900000000000001",
                          "status": "LicenseAssignSuccess",
                          "Reason": "Success"
                        },
                        "type": "object",
                        "properties": {
                          "deviceId": {
                            "description": "Device IMEI.",
                            "example": "900000000000001",
                            "type": "string"
                          },
                          "status": {
                            "description": "Whether the device was successfully added or removed from the campaign.",
                            "example": "LicenseAssignSuccess",
                            "type": "string"
                          },
                          "Reason": {
                            "description": "Additional details about the status.",
                            "example": "Success",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"accountName":"0000123456-00001","id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","deviceList":[{"deviceId":"15-digit IMEI","status":"AddDeviceSucceed","Reason":"Device added Successfully"},{"deviceId":"15-digit IMEI","status":"AddDeviceSucceed","Reason":"Device added Successfully"}]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV1Result",
                  "title": "FotaV1Result",
                  "description": "Response in case of any errors.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error response code.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Description of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Cancel a scheduled firmware upgrade.
      responses:
        '200':
          description: Upgrade canceled.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV1SuccessResult",
                  "title": "FotaV1SuccessResult",
                  "description": "A response to a successful request contains a single Boolean value.",
                  "example": {
                    "success": true
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "True is returned in case of success.",
                      "example": true,
                      "type": "boolean"
                    }
                  }
                }
              example: '{"success":true}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV1Result",
                  "title": "FotaV1Result",
                  "description": "Response in case of any errors.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error response code.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Description of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Schedules a firmware upgrade for devices.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "FirmwareUpgradeRequest",
            "title": "FirmwareUpgradeRequest",
            "description": "Details of the firmware upgrade request.",
            "example": {
              "accountName": "0402196254-00001",
              "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
              "firmwareTo": "VerizonFirmwareVersion-02",
              "startDate": "2018-04-01T16:03:00.000Z",
              "deviceList": [
                "990003425730535",
                "990000473475989"
              ]
            },
            "type": "object",
            "properties": {
              "accountName": {
                "description": "Account identifier in \"##########-#####\".",
                "example": "0402196254-00001",
                "type": "string"
              },
              "firmwareName": {
                "description": "The name of the firmware image that will be used for the upgrade, from a GET /firmware response.",
                "example": "FOTA_Verizon_Model-A_01To02_HF",
                "type": "string"
              },
              "firmwareTo": {
                "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
                "example": "VerizonFirmwareVersion-02",
                "type": "string"
              },
              "startDate": {
                "description": "The date that the upgrade should begin.",
                "example": "2018-04-01T16:03:00.000Z",
                "type": "string",
                "format": "date-time"
              },
              "deviceList": {
                "description": "The IMEIs of the devices.",
                "example": [
                  "990003425730535",
                  "990000473475989",
                  "990005733420535",
                  "990000347475989",
                  "990007303425535",
                  "990007590473489"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "accountName",
              "firmwareName",
              "firmwareTo",
              "startDate",
              "deviceList"
            ]
          }
        example: '{"accountName":"0402196254-00001","firmwareName":"FOTA_Verizon_Model-A_01To02_HF","firmwareTo":"VerizonFirmwareVersion-02","startDate":"2018-04-01T16:03:00.000Z","deviceList":["990003425730535","990000473475989"]}'
    responses:
      '200':
        description: Confirmation of successful firmware upgrade.
        body:
          application/json:
            schema: |
              {
                "id": "FirmwareUpgrade",
                "title": "FirmwareUpgrade",
                "description": "Array of upgrade objects with the specified status.",
                "example": {
                  "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                  "accountName": "0402196254-00001",
                  "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
                  "firmwareTo": "VerizonFirmwareVersion-02",
                  "startDate": "2018-04-01",
                  "status": "Queued",
                  "deviceList": [
                    {
                      "deviceId": "900000000000002",
                      "status": "Device Accepted",
                      "resultReason": "success"
                    },
                    {
                      "deviceId": "900000000000003",
                      "status": "Device Accepted",
                      "resultReason": "success"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The unique identifier for this upgrade.",
                    "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                    "type": "string"
                  },
                  "accountName": {
                    "description": "Account identifier in \"##########-#####\".",
                    "example": "0402196254-00001",
                    "type": "string"
                  },
                  "firmwareName": {
                    "description": "The name of the firmware image that will be used for the upgrade.",
                    "example": "FOTA_Verizon_Model-A_01To02_HF",
                    "type": "string"
                  },
                  "firmwareTo": {
                    "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
                    "example": "VerizonFirmwareVersion-02",
                    "type": "string"
                  },
                  "startDate": {
                    "description": "The intended start date for the upgrade.",
                    "example": "2018-04-01",
                    "type": "string"
                  },
                  "status": {
                    "description": "The current status of the upgrade.",
                    "example": "Queued",
                    "type": "string"
                  },
                  "deviceList": {
                    "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
                    "example": [
                      {
                        "deviceId": "900000000000002",
                        "status": "Device Accepted",
                        "resultReason": "success"
                      },
                      {
                        "deviceId": "900000000000003",
                        "status": "Device Accepted",
                        "resultReason": "success"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "FirmwareUpgradeDeviceListItem",
                      "title": "FirmwareUpgradeDeviceListItem",
                      "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
                      "example": {
                        "deviceId": "900000000000002",
                        "status": "Device Accepted",
                        "resultReason": "success"
                      },
                      "type": "object",
                      "properties": {
                        "deviceId": {
                          "description": "Device IMEI.",
                          "example": "900000000000002",
                          "type": "string"
                        },
                        "status": {
                          "description": "The status of the upgrade for this device.",
                          "example": "Device Accepted",
                          "type": "string"
                        },
                        "resultReason": {
                          "description": "Additional details about the status. Not included when status='Request Pending.'",
                          "example": "success",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            example: '{"id":"e3a8d88a-04c6-4ef3-b039-89b62f91e962","accountName":"0242078689-00001","firmwareName":"FOTA_Verizon_Model-A_01To02_HF","firmwareTo":"VerizonFirmwareVersion-02","startDate":"2018-04-01","status":"RequestPending","deviceList":[{"deviceId":"990003425730535","status":"RequestPending"},{"deviceId":"990000473475989","status":"RequestPending"}]}'
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "FotaV1Result",
                "title": "FotaV1Result",
                "description": "Response in case of any errors.",
                "example": {
                  "errorCode": "error code string",
                  "errorMessage": "error message string"
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Error response code.",
                    "example": "error code string",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Description of the error.",
                    "example": "error message string",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"error code string","errorMessage":"error message string"}'
/software/{account}:
  uriParameters:
    account:
      description: Account identifier.
      type: string
      example: 0000123456-00001
      required: true
      displayName: account
  get:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: This endpoint allows user to list a certain type of software of an account.
    queryParameters:
      distributionType:
        description: Filter distributionType to get specific type of software. Value is LWM2M, OMD-DM or HTTP.
        type: string
        example: HTTP
        required: false
        displayName: distributionType
    responses:
      '200':
        description: Return array of software.
        body:
          application/json:
            schema: |
              {
                "description": "Software package information.",
                "example": [
                  {
                    "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                    "launchDate": "2020-08-31",
                    "releaseNote": "",
                    "model": "Model-A",
                    "make": "Verizon",
                    "distributionType": "HTTP",
                    "devicePlatformId": "IoT"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "SoftwarePackage",
                  "title": "SoftwarePackage",
                  "description": "Software package information.",
                  "example": {
                    "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                    "launchDate": "2020-08-31",
                    "releaseNote": "",
                    "model": "Model-A",
                    "make": "Verizon",
                    "distributionType": "HTTP",
                    "devicePlatformId": "IoT"
                  },
                  "type": "object",
                  "properties": {
                    "softwareName": {
                      "description": "Software name.",
                      "example": "FOTA_Verizon_Model-A_02To03_HF",
                      "type": "string"
                    },
                    "launchDate": {
                      "description": "Software launch date.",
                      "example": "2020-08-31",
                      "type": "string",
                      "format": "date"
                    },
                    "model": {
                      "description": "Software applicable device model.",
                      "example": "Model-A",
                      "type": "string"
                    },
                    "make": {
                      "description": "Software applicable device make.",
                      "example": "Verizon",
                      "type": "string"
                    },
                    "distributionType": {
                      "description": "LWM2M, OMD-DM or HTTP.",
                      "example": "HTTP",
                      "type": "string"
                    },
                    "devicePlatformId": {
                      "description": "The platform (Android, iOS, etc.) that the software can be applied to.",
                      "example": "IoT",
                      "type": "string"
                    },
                    "releaseNote": {
                      "description": "Software release note reserved for future use.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "softwareName",
                    "launchDate",
                    "model",
                    "make",
                    "distributionType",
                    "devicePlatformId"
                  ]
                }
              }
            example: '[{"softwareName":"FOTA_Verizon_Model-A_02To03_HF","launchDate":"2020-08-31","releaseNote":"","model":"Model-A","make":"Verizon","distributionType":"HTTP","devicePlatformId":"IoT"}]'
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "FotaV2Result",
                "title": "FotaV2Result",
                "description": "Response for error cases.",
                "example": {
                  "errorCode": "error code string",
                  "errorMessage": "error message string"
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Code of the error.",
                    "example": "error code string",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Details of the error.",
                    "example": "error message string",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"error code string","errorMessage":"error message string"}'
/logging/{account}/devices:
  uriParameters:
    account:
      description: Account identifier.
      type: string
      example: 0000123456-00001
      required: true
      displayName: account
  /{deviceId}:
    uriParameters:
      deviceId:
        description: Device IMEI identifier.
        type: string
        example: '990013907835573'
        required: true
        displayName: deviceId
    /logs:
      uriParameters: {}
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Gets logs for a specific device.
        responses:
          '200':
            description: List of device logs.
            body:
              application/json:
                schema: |
                  {
                    "description": "List of device logs.",
                    "example": [
                      {
                        "deviceId": "990013907835573",
                        "logTime": "2020-10-22T19:29:50.901Z",
                        "logType": "string",
                        "eventLog": "string",
                        "binaryLogFileBase64": "string",
                        "binaryLogFilename": "string"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "DeviceLog",
                      "title": "DeviceLog",
                      "description": "Device logging information.",
                      "type": "object",
                      "properties": {
                        "deviceId": {
                          "description": "Device IMEI.",
                          "example": "990013907835573",
                          "type": "string"
                        },
                        "logTime": {
                          "description": "Time of log.",
                          "example": "2020-10-22T19:29:50.901Z",
                          "type": "string",
                          "format": "date-time"
                        },
                        "logType": {
                          "description": "Log type (one of SoftwareUpdate, Event, UserNotification, AgentService, Wireless, WirelessWeb, MobileBroadbandModem, WindowsMDM).",
                          "type": "string"
                        },
                        "eventLog": {
                          "description": "Event log.",
                          "type": "string"
                        },
                        "binaryLogFileBase64": {
                          "description": "Base64-encoded contents of binary log file.",
                          "type": "string"
                        },
                        "binaryLogFilename": {
                          "description": "File name of binary log file.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "deviceId",
                        "logTime",
                        "logType",
                        "eventLog",
                        "binaryLogFileBase64",
                        "binaryLogFilename"
                      ]
                    }
                  }
                example: '[{"deviceId":"990013907835573","logTime":"2020-10-22T19:29:50.901Z","logType":"string","eventLog":"string","binaryLogFileBase64":"string","binaryLogFilename":"string"}]'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /checkInHistory:
      uriParameters: {}
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Check-in history can be retrieved for any device belonging to the account, not necessarily with logging enabled.
        responses:
          '200':
            description: List of check-in history entries.
            body:
              application/json:
                schema: |
                  {
                    "description": "List of check-in history entries.",
                    "type": "array",
                    "items": {
                      "id": "CheckInHistoryItem",
                      "title": "CheckInHistoryItem",
                      "description": "Check-in history for a device.",
                      "type": "object",
                      "properties": {
                        "deviceId": {
                          "description": "Device IMEI.",
                          "example": "990013907835573",
                          "type": "string"
                        },
                        "clientType": {
                          "description": "Type of client.",
                          "type": "string"
                        },
                        "result": {
                          "type": "string"
                        },
                        "failureType": {
                          "type": "string"
                        },
                        "timeCompleted": {
                          "example": "2020-10-22T19:35:07.753Z",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "deviceId",
                        "clientType",
                        "result",
                        "failureType",
                        "timeCompleted"
                      ]
                    }
                  }
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    put:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Enables logging for a specific device.
      responses:
        '200':
          description: Device logging status information.
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceLoggingStatus",
                  "title": "DeviceLoggingStatus",
                  "description": "Device logging status information.",
                  "example": {
                    "deviceId": "990013907835573",
                    "expiryDate": "2020-10-19"
                  },
                  "type": "object",
                  "properties": {
                    "deviceId": {
                      "description": "Device IMEI.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "expiryDate": {
                      "description": "The date when device logging expires.",
                      "example": "2020-10-19",
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "required": [
                    "deviceId",
                    "expiryDate"
                  ]
                }
              example: '{"deviceId":"990013907835573","expiryDate":"2020-10-19"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Disables logging for a specific device.
      responses:
        '200':
          description: Success.
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  get:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Returns an array of all devices in the specified account for which logging is enabled.
    responses:
      '200':
        description: List containing device logging status information.
        body:
          application/json:
            schema: |
              {
                "description": "Array of logging-enabled device objects.",
                "example": [
                  {
                    "deviceId": "990013907835573",
                    "expiryDate": "2020-10-19"
                  },
                  {
                    "deviceId": "991124018926684",
                    "expiryDate": "2020-10-19"
                  },
                  {
                    "deviceId": "992234129057795",
                    "expiryDate": "2020-10-23"
                  },
                  {
                    "deviceId": "998891785613351",
                    "expiryDate": "2020-10-23"
                  },
                  {
                    "deviceId": "990013907835573",
                    "expiryDate": "2020-10-23"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceLoggingStatus",
                  "title": "DeviceLoggingStatus",
                  "description": "Device logging status information.",
                  "example": {
                    "deviceId": "990013907835573",
                    "expiryDate": "2020-10-19"
                  },
                  "type": "object",
                  "properties": {
                    "deviceId": {
                      "description": "Device IMEI.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "expiryDate": {
                      "description": "The date when device logging expires.",
                      "example": "2020-10-19",
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "required": [
                    "deviceId",
                    "expiryDate"
                  ]
                }
              }
            example: '[{"deviceId":"990013907835573","expiryDate":"2020-10-19"},{"deviceId":"991124018926684","expiryDate":"2020-10-19"},{"deviceId":"992234129057795","expiryDate":"2020-10-23"},{"deviceId":"998891785613351","expiryDate":"2020-10-23"},{"deviceId":"990013907835573","expiryDate":"2020-10-23"}]'
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "FotaV2Result",
                "title": "FotaV2Result",
                "description": "Response for error cases.",
                "example": {
                  "errorCode": "error code string",
                  "errorMessage": "error message string"
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Code of the error.",
                    "example": "error code string",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Details of the error.",
                    "example": "error message string",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  put:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Each customer may have a maximum of 20 devices enabled for logging.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - '*/*'
    body:
      '*/*':
        schema: |
          {
            "id": "DeviceLoggingRequest",
            "title": "DeviceLoggingRequest",
            "description": "Device logging information.",
            "example": {
              "deviceIds": [
                "990013907835573",
                "991124018926684",
                "992234129057795",
                "998891785613351",
                "990013907835573"
              ]
            },
            "type": "object",
            "properties": {
              "deviceIds": {
                "description": "List of device IMEI identifiers.",
                "example": [
                  "990013907835573",
                  "991124018926684",
                  "992234129057795",
                  "998891785613351",
                  "990013907835573"
                ],
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "deviceIds"
            ]
          }
        example: '{"deviceIds":["990013907835573","991124018926684","992234129057795","998891785613351","990013907835573"]}'
    responses:
      '200':
        description: List containing device logging status information.
        body:
          application/json:
            schema: |
              {
                "description": "Array of logging-enabled device objects.",
                "example": [
                  {
                    "deviceId": "990013907835573",
                    "expiryDate": "2020-10-19"
                  },
                  {
                    "deviceId": "991124018926684",
                    "expiryDate": "2020-10-19"
                  },
                  {
                    "deviceId": "992234129057795",
                    "expiryDate": "2020-10-23"
                  },
                  {
                    "deviceId": "998891785613351",
                    "expiryDate": "2020-10-23"
                  },
                  {
                    "deviceId": "990013907835573",
                    "expiryDate": "2020-10-23"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "DeviceLoggingStatus",
                  "title": "DeviceLoggingStatus",
                  "description": "Device logging status information.",
                  "example": {
                    "deviceId": "990013907835573",
                    "expiryDate": "2020-10-19"
                  },
                  "type": "object",
                  "properties": {
                    "deviceId": {
                      "description": "Device IMEI.",
                      "example": "990013907835573",
                      "type": "string"
                    },
                    "expiryDate": {
                      "description": "The date when device logging expires.",
                      "example": "2020-10-19",
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "required": [
                    "deviceId",
                    "expiryDate"
                  ]
                }
              }
            example: '[{"deviceId":"990013907835573","expiryDate":"2020-10-19"},{"deviceId":"991124018926684","expiryDate":"2020-10-19"},{"deviceId":"992234129057795","expiryDate":"2020-10-23"},{"deviceId":"998891785613351","expiryDate":"2020-10-23"},{"deviceId":"990013907835573","expiryDate":"2020-10-23"}]'
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "FotaV2Result",
                "title": "FotaV2Result",
                "description": "Response for error cases.",
                "example": {
                  "errorCode": "error code string",
                  "errorMessage": "error message string"
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Code of the error.",
                    "example": "error code string",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Details of the error.",
                    "example": "error message string",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  delete:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Turn logging off for a list of devices.
    queryParameters:
      deviceIds:
        description: The list of device IDs.
        type: string
        example: '990013907835573'
        required: true
        displayName: deviceIds
    responses:
      '200':
        description: Success.
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "FotaV2Result",
                "title": "FotaV2Result",
                "description": "Response for error cases.",
                "example": {
                  "errorCode": "error code string",
                  "errorMessage": "error message string"
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Code of the error.",
                    "example": "error code string",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Details of the error.",
                    "example": "error message string",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"error code string","errorMessage":"error message string"}'
/files/{acc}:
  uriParameters:
    acc:
      description: Account identifier.
      type: string
      example: 0402196254-00001
      required: true
      displayName: acc
  get:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: You can retrieve a list of configuration or supplementary of files for an account.
    queryParameters:
      distributionType:
        description: Filter the distributionType to only retrieve files for a specific distribution type.
        type: string
        example: HTTP
        required: true
        displayName: distributionType
    responses:
      '200':
        description: Successful responses.
        body:
          application/json:
            schema: |
              {
                "id": "RetrievesAvailableFilesResponseList",
                "title": "RetrievesAvailableFilesResponseList",
                "type": "object",
                "properties": {
                  "AvailableFilesResponse": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "RetrievesAvailableFilesResponse",
                      "title": "RetrievesAvailableFilesResponse",
                      "type": "object",
                      "properties": {
                        "fileName": {
                          "description": "ThingSpace-generated name of the file. You will use this name when listing or scheduling campaigns for the file.",
                          "example": "configfile-Verizon_VZW1_hello-world.txt",
                          "type": "string"
                        },
                        "fileVersion": {
                          "description": "Version of the file.",
                          "example": "1.0",
                          "type": "string"
                        },
                        "releaseNote": {
                          "description": "Software release note.",
                          "example": "Hello world initial file",
                          "type": "string"
                        },
                        "make": {
                          "description": "The software-applicable device make.",
                          "example": "Verizon",
                          "type": "string"
                        },
                        "model": {
                          "description": "The software-applicable device model.",
                          "example": "VZW1",
                          "type": "string"
                        },
                        "localTargetPath": {
                          "description": "Local target path on the device.",
                          "example": "/VZWFOTA/hello-world.txt",
                          "type": "string"
                        },
                        "distributionType": {
                          "description": "Valid values",
                          "example": "HTTP",
                          "type": "string"
                        },
                        "devicePlatformId": {
                          "description": "The platform (Android, iOS, etc.,) that the software can be applied to.",
                          "example": "IoT",
                          "type": "string"
                        }
                      }
                    },
                    "maxItems": 100
                  }
                }
              }
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "FotaV2Result",
                "title": "FotaV2Result",
                "description": "Response for error cases.",
                "example": {
                  "errorCode": "error code string",
                  "errorMessage": "error message string"
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Code of the error.",
                    "example": "error code string",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Details of the error.",
                    "example": "error message string",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Uploads a configuration/supplementary file for an account. ThingSpace generates a fileName after the upload and is returned in the response.
    body:
      multipart/form-data:
        formParameters:
          fileupload:
            description: The file to upload.
            type: file
            required: false
            displayName: fileupload
          fileVersion:
            description: Version of the file.
            type: string
            example: '1.0'
            required: false
            displayName: fileVersion
          make:
            description: The software-applicable device make.
            type: string
            example: Verizon
            required: false
            displayName: make
          model:
            description: The software-applicable device model.
            type: string
            example: VZW1
            required: false
            displayName: model
          localTargetPath:
            description: Local target path on the device.
            type: string
            example: /VZWFOTA/hello-world.txt
            required: false
            displayName: localTargetPath
    responses:
      '200':
        description: Successful responses.
        body:
          application/json:
            schema: |
              {
                "id": "UploadConfigurationFilesResponse",
                "title": "UploadConfigurationFilesResponse",
                "type": "object",
                "properties": {
                  "fileName": {
                    "description": "The name of the file you are upgrading to.",
                    "example": "hello-world.txt",
                    "type": "string"
                  },
                  "fileVersion": {
                    "description": "The version of the file you are upgrading to.",
                    "example": "1.0",
                    "type": "string"
                  },
                  "launchDate": {
                    "description": "Software launch date.",
                    "example": "2020-08-31",
                    "type": "string",
                    "format": "date"
                  },
                  "releaseNote": {
                    "description": "Software release note.",
                    "example": "note",
                    "type": "string"
                  },
                  "model": {
                    "description": "Software applicable device model.",
                    "example": "Model-A",
                    "type": "string"
                  },
                  "make": {
                    "description": "Software applicable device make.",
                    "example": "Verizon",
                    "type": "string"
                  },
                  "distributionType": {
                    "description": "LWM2M, OMD-DM or HTTP.",
                    "example": "HTTP",
                    "type": "string"
                  },
                  "devicePlatformId": {
                    "description": "The platform (Android, iOS, etc.) that the software can be applied to.",
                    "example": "IoT",
                    "type": "string"
                  },
                  "localTargetPath": {
                    "description": "Local target path on the device.",
                    "example": "IoT",
                    "type": "string"
                  }
                }
              }
      '400':
        description: Unexpected error.
        body:
          application/json:
            schema: |
              {
                "id": "FotaV2Result",
                "title": "FotaV2Result",
                "description": "Response for error cases.",
                "example": {
                  "errorCode": "error code string",
                  "errorMessage": "error message string"
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Code of the error.",
                    "example": "error code string",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Details of the error.",
                    "example": "error message string",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"error code string","errorMessage":"error message string"}'
/performance/device/network/metrics:
  post:
    description: Query the most recent data for Key Performance Indicators (KPIs) like network availability, MEC hostnames and more.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "QueryMECPerformanceMetricsRequest",
            "title": "QueryMECPerformanceMetricsRequest",
            "description": "MEC performance metrics request.",
            "example": {
              "IMEI": "440246108109673",
              "MSISDN": "10691876598"
            },
            "type": "object",
            "properties": {
              "IMEI": {
                "description": "The 15-digit International Mobile Equipment Identifier.",
                "example": "440246108109673",
                "type": "string"
              },
              "MSISDN": {
                "description": "The 12-digit Mobile Station International Subscriber Directory Number.",
                "example": "10691876598",
                "type": "string"
              }
            },
            "required": [
              "IMEI",
              "MSISDN"
            ]
          }
        example: '{"IMEI":"440246108109673","MSISDN":"10691876598"}'
    responses:
      '200':
        description: MEC performance metrics.
        body:
          application/json:
            schema: |
              {
                "id": "MECPerformanceMetrics",
                "title": "MECPerformanceMetrics",
                "description": "Response to query the most recent data for Key Performance Indicators (KPIs) like network availability, MEC hostnames and more.",
                "example": {
                  "QueryStatus": "Success",
                  "Start": "1/28/2021 12:00:00",
                  "End": "1/28/2021 12:15:00",
                  "QueryResult": [
                    {
                      "name": "NetworkAvailability",
                      "data": [
                        "100",
                        "percent",
                        "high"
                      ]
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "QueryStatus": {
                    "description": "Success or Failed.",
                    "example": "Success",
                    "type": "string"
                  },
                  "Start": {
                    "description": "Timestamp of the query's start, format:mm/dd/yyyy,hr:min:sec.",
                    "example": "1/28/2021 12:00:00",
                    "type": "string"
                  },
                  "End": {
                    "description": "Timestamp of the query's end , format:mm/dd/yyyy, hr:min:sec.",
                    "example": "1/28/2021 12:15:00",
                    "type": "string"
                  },
                  "QueryResult": {
                    "description": "MEC performance query result.",
                    "example": [
                      {
                        "name": "NetworkAvailability",
                        "data": [
                          "100",
                          "percent",
                          "high"
                        ]
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "MECPerformanceQueryResult",
                      "title": "MECPerformanceQueryResult",
                      "description": "Result of the query for obtaining MEC performance metrics.",
                      "example": {
                        "name": "NetworkAvailability",
                        "data": [
                          "100",
                          "percent",
                          "high"
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the parameter.",
                          "example": "NetworkAvailability",
                          "type": "string"
                        },
                        "data": {
                          "description": "Parameter values.",
                          "example": [
                            "100",
                            "percent",
                            "high"
                          ],
                          "type": "array",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            example: '{"QueryStatus":"Success","Start":"1/28/2021 12:00:00","End":"1/28/2021 12:15:00","QueryResult":[{"name":"NetworkAvailability","data":["100","percent","high"]}]}'
      '400':
        description: Bad Request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgePerformanceResult",
                "title": "EdgePerformanceResult",
                "description": "Types of errors in response.",
                "example": {
                  "status": "HTTP status code",
                  "message": "Error details"
                },
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code.",
                    "example": "HTTP status code",
                    "type": "string"
                  },
                  "message": {
                    "description": "Error details.",
                    "example": "Error details",
                    "type": "string"
                  }
                }
              }
            example: '{"status":"HTTP status code","message":"Error details"}'
      '401':
        description: Unauthorized request.
        body:
          application/json:
            schema: |
              {
                "id": "EdgePerformanceResult",
                "title": "EdgePerformanceResult",
                "description": "Types of errors in response.",
                "example": {
                  "status": "HTTP status code",
                  "message": "Error details"
                },
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code.",
                    "example": "HTTP status code",
                    "type": "string"
                  },
                  "message": {
                    "description": "Error details.",
                    "example": "Error details",
                    "type": "string"
                  }
                }
              }
            example: '{"status":"HTTP status code","message":"Error details"}'
      '403':
        description: Request forbidden.
        body:
          application/json:
            schema: |
              {
                "id": "EdgePerformanceResult",
                "title": "EdgePerformanceResult",
                "description": "Types of errors in response.",
                "example": {
                  "status": "HTTP status code",
                  "message": "Error details"
                },
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code.",
                    "example": "HTTP status code",
                    "type": "string"
                  },
                  "message": {
                    "description": "Error details.",
                    "example": "Error details",
                    "type": "string"
                  }
                }
              }
            example: '{"status":"HTTP status code","message":"Error details"}'
      '404':
        description: Resource Not Found.
        body:
          application/json:
            schema: |
              {
                "id": "EdgePerformanceResult",
                "title": "EdgePerformanceResult",
                "description": "Types of errors in response.",
                "example": {
                  "status": "HTTP status code",
                  "message": "Error details"
                },
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code.",
                    "example": "HTTP status code",
                    "type": "string"
                  },
                  "message": {
                    "description": "Error details.",
                    "example": "Error details",
                    "type": "string"
                  }
                }
              }
            example: '{"status":"HTTP status code","message":"Error details"}'
      '405':
        description: Method Not Allowed.
        body:
          application/json:
            schema: |
              {
                "id": "EdgePerformanceResult",
                "title": "EdgePerformanceResult",
                "description": "Types of errors in response.",
                "example": {
                  "status": "HTTP status code",
                  "message": "Error details"
                },
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code.",
                    "example": "HTTP status code",
                    "type": "string"
                  },
                  "message": {
                    "description": "Error details.",
                    "example": "Error details",
                    "type": "string"
                  }
                }
              }
            example: '{"status":"HTTP status code","message":"Error details"}'
      '503':
        description: Service Unavailable.
        body:
          application/json:
            schema: |
              {
                "id": "EdgePerformanceResult",
                "title": "EdgePerformanceResult",
                "description": "Types of errors in response.",
                "example": {
                  "status": "HTTP status code",
                  "message": "Error details"
                },
                "type": "object",
                "properties": {
                  "status": {
                    "description": "HTTP status code.",
                    "example": "HTTP status code",
                    "type": "string"
                  },
                  "message": {
                    "description": "Error details.",
                    "example": "Error details",
                    "type": "string"
                  }
                }
              }
            example: '{"status":"HTTP status code","message":"Error details"}'
/subscriptions:
  /{account}:
    uriParameters:
      account:
        description: Account identifier in "##########-#####".
        type: string
        example: 0000123456-00001
        required: true
        displayName: account
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint retrieves a FOTA subscription by account.
      responses:
        '200':
          description: FOTA Subscription.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Subscription",
                  "title": "FotaV2Subscription",
                  "description": "FOTA Subscription.",
                  "example": {
                    "accountName": "00000000000-123345",
                    "purchaseType": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
                    "licenseCount": 500,
                    "licenseUsedCount": 400,
                    "updateTime": "2021-06-03 00:03:56.079 +0000 UTC"
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account identifier in \"##########-#####\".",
                      "example": "00000000000-123345",
                      "type": "string"
                    },
                    "purchaseType": {
                      "description": "Subscription models used by the account.",
                      "example": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
                      "type": "string"
                    },
                    "licenseCount": {
                      "description": "Number of monthly licenses in an MRC subscription.",
                      "example": 500,
                      "type": "integer",
                      "format": "int32"
                    },
                    "licenseUsedCount": {
                      "description": "Number of licenses currently assigned to devices.",
                      "example": 400,
                      "type": "integer",
                      "format": "int32"
                    },
                    "updateTime": {
                      "description": "The date and time of when the subscription was last updated.",
                      "example": "2021-06-03 00:03:56.079 +0000 UTC",
                      "type": "string"
                    }
                  }
                }
              example: '{"accountName":"00000000000-123345","purchaseType":"TS-HFOTA-EVNT,TS-HFOTA-MRC","licenseCount":500,"licenseUsedCount":400,"updateTime":"2020-09-17T21:11:32.170Z"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /{acc}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: acc
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint retrieves a FOTA subscription by account.
      responses:
        '200':
          description: FOTA Subscription.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Subscription",
                  "title": "FotaV3Subscription",
                  "description": "Information for licenses applied to devices.",
                  "example": {
                    "accountName": "0000123456-000001",
                    "purchaseType": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
                    "licenseCount": 500,
                    "licenseUsedCount": 400,
                    "updateTime": "2020-09-17T21:11:32.170Z"
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account identifier in \"##########-#####\".",
                      "example": "0000123456-000001",
                      "type": "string"
                    },
                    "purchaseType": {
                      "description": "Subscription models used by the account.",
                      "example": "TS-HFOTA-EVNT,TS-HFOTA-MRC",
                      "type": "string"
                    },
                    "licenseCount": {
                      "description": "Number of monthly licenses in an MRC subscription.",
                      "example": 500,
                      "type": "integer",
                      "format": "int32"
                    },
                    "licenseUsedCount": {
                      "description": "Number of licenses currently assigned to devices.",
                      "example": 400,
                      "type": "integer",
                      "format": "int32"
                    },
                    "updateTime": {
                      "description": "The date and time of when the subscription was last updated.",
                      "example": "2020-09-17T21:11:32.170",
                      "type": "string"
                    }
                  }
                }
              example: '{"accountName":"0000123456-000001","purchaseType":"TS-HFOTA-EVNT,TS-HFOTA-MRC","licenseCount":500,"licenseUsedCount":400,"updateTime":"2020-09-17T21:11:32.170Z"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /actions:
    /query:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Search for subscriptions by property values. Returns an array of all matching subscription resources.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "QuerySubscriptionRequest",
                "title": "QuerySubscriptionRequest",
                "description": "The request body specifies fields and values to match.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "1223334444-00001"
                  },
                  "resourceidentifier": {
                    "id": "dd1682d3-2d80-cefc-f3ee-25154800beff"
                  }
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "$selection": {
                    "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
                    "example": {
                      "addressscheme": "streamawsiot"
                    },
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"resourceidentifier":{"id":"dd1682d3-2d80-cefc-f3ee-25154800beff"}}'
        responses:
          '200':
            description: Returns an array of all matching subscriptions. Each subscription includes the full subscription resource definition.
            body:
              application/json:
                schema: |
                  {
                    "description": "An array of all matching subscriptions.",
                    "example": [
                      {
                        "configurationfailures": 0,
                        "createdon": "2019-02-13T23:13:24.689Z",
                        "delegateid": "00000000-0000-0000-0000-000000000000",
                        "disabled": false,
                        "email": "me@mycompany.com",
                        "id": "98015aed-e984-62be-f049-1d895d2d1812",
                        "kind": "ts.subscription",
                        "laststreamingstatus": "success",
                        "laststreamingtime": "2019-02-20T18:20:45.865Z",
                        "lastupdated": "2019-02-13T23:13:24.689Z",
                        "networkfailures": 0,
                        "streamfailures": 0,
                        "streamkind": "ts.event",
                        "targetid": "4e112cb3-da1d-6ece-f2c6-bb8700b20b09",
                        "targettype": "Amazon Web Services",
                        "version": "1.0",
                        "versionid": "f68b8862-2fe4-11e9-85fd-02420a4c170d"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "Subscription",
                      "title": "Subscription",
                      "description": "Subscription resource definition.",
                      "example": {
                        "configurationfailures": 0,
                        "createdon": "2018-12-21T05:05:02.134Z",
                        "delegateid": "00000000-0000-0000-0000-000000000000",
                        "id": "d8c145dd-6948-67ec-ed9b-6a298806bb4a",
                        "kind": "ts.subscription",
                        "laststreamingstatus": "",
                        "laststreamingtime": "0001-01-01T00:00:00Z",
                        "lastupdated": "2018-12-21T05:22:12.178Z",
                        "networkfailures": 0,
                        "streamfailures": 0,
                        "streamkind": "ts.event",
                        "targetid": "4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8",
                        "version": "1.0",
                        "versionid": "5ed6063f-04e0-11e9-8279-02420a5e1b0b"
                      },
                      "type": "object",
                      "properties": {
                        "configurationfailures": {
                          "description": "The number of streaming failures due to faulty configuration.",
                          "example": 0,
                          "type": "integer",
                          "format": "int32"
                        },
                        "createdon": {
                          "description": "The number of streaming failures due to faulty configuration.",
                          "example": "2018-12-21T05:05:02.134Z",
                          "type": "string"
                        },
                        "delegateid": {
                          "description": "Not currently used.",
                          "example": "00000000-0000-0000-0000-000000000000",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the subscription.",
                          "type": "string"
                        },
                        "disabled": {
                          "description": "Whether the subscription is currently sending data.",
                          "example": false,
                          "type": "boolean"
                        },
                        "email": {
                          "description": "The address to which any error reports should be delivered.",
                          "example": "me@mycompany.com",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter for events.",
                          "type": "string"
                        },
                        "id": {
                          "description": "ThingSpace unique ID for the subscription that was created.",
                          "example": "d8c145dd-6948-67ec-ed9b-6a298806bb4a",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Identifies the resource kind.",
                          "example": "ts.subscription",
                          "type": "string"
                        },
                        "laststreamingstatus": {
                          "description": "Possible values: success or fail.",
                          "example": "success",
                          "type": "string"
                        },
                        "laststreamingtime": {
                          "description": "The date and time that the last stream send was attempted.",
                          "example": "0001-01-01T00:00:00Z",
                          "type": "string"
                        },
                        "lastupdated": {
                          "description": "The date the resource was last updated.",
                          "example": "2018-12-21T05:22:12.178Z",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the subscription.",
                          "example": "Account subscription 1",
                          "type": "string"
                        },
                        "networkfailures": {
                          "description": "The number of failures due to network problems.",
                          "example": 0,
                          "type": "integer",
                          "format": "int32"
                        },
                        "streamfailures": {
                          "example": 0,
                          "type": "integer",
                          "format": "int32"
                        },
                        "streamkind": {
                          "description": "The event type that will be sent in the data stream.",
                          "example": "ts.event",
                          "type": "string"
                        },
                        "targetid": {
                          "description": "Target to be used for dispatching events.",
                          "example": "4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8",
                          "type": "string"
                        },
                        "targettype": {
                          "example": "Amazon Web Services",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the underlying schema resource.",
                          "example": "1.0",
                          "type": "string"
                        },
                        "versionid": {
                          "description": "The version of the resource.",
                          "example": "5ed6063f-04e0-11e9-8279-02420a5e1b0b",
                          "type": "string"
                        }
                      }
                    }
                  }
                example: '[{"configurationfailures":0,"createdon":"2019-02-13T23:13:24.689Z","delegateid":"00000000-0000-0000-0000-000000000000","disabled":false,"email":"me@mycompany.com","id":"98015aed-e984-62be-f049-1d895d2d1812","kind":"ts.subscription","laststreamingstatus":"success","laststreamingtime":"2019-02-20T18:20:45.865Z","lastupdated":"2019-02-13T23:13:24.689Z","networkfailures":0,"streamfailures":0,"streamkind":"ts.event","targetid":"4e112cb3-da1d-6ece-f2c6-bb8700b20b09","targettype":"Amazon Web Services","version":"1.0","versionid":"f68b8862-2fe4-11e9-85fd-02420a4c170d"}]'
    /delete:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Remove a subscription from a ThingSpace account.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "DeleteSubscriptionRequest",
                "title": "DeleteSubscriptionRequest",
                "description": "The request body identifies the subscription to delete.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "1223334444-00001"
                  },
                  "resourceidentifier": {
                    "id": "f8b112df-739c-6236-f059-106c67bafd99"
                  }
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"resourceidentifier":{"id":"f8b112df-739c-6236-f059-106c67bafd99"}}'
        responses:
          '204':
            description: Subscription deleted successfully.
  get:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: This endpoint retrieves a diagnostics subscription by account.
    queryParameters:
      accountName:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: accountName
    responses:
      '200':
        description: Diagnostics subscription response.
        body:
          application/json:
            schema: |
              {
                "id": "DiagnosticsSubscription",
                "title": "DiagnosticsSubscription",
                "description": "Status of the diagnostic services subscription.",
                "example": {
                  "accountName": "TestQAAccount",
                  "skuName": "TS-BUNDLE-KTO-DIAGNOSTIC-MRC",
                  "totalAllowed": 100,
                  "totalUsed": 50,
                  "createdOn": "2019-08-29T00:47:59.240Z",
                  "lastUpdated": "2019-08-29T00:47:59.240Z"
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "Account identifier in \"##########-#####\". An account name is usually numeric, and must include any leading zeros.",
                    "example": "0000123456-00001",
                    "type": "string"
                  },
                  "createdOn": {
                    "description": "The date and time of when the subscription was created.",
                    "example": "2019-08-29T00:47:59.240Z",
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdated": {
                    "description": "The date and time of when the subscription was last updated.",
                    "example": "2019-08-29T00:47:59.240Z",
                    "type": "string",
                    "format": "date-time"
                  },
                  "totalAllowed": {
                    "description": "Number of licenses currently assigned to devices.",
                    "example": 100,
                    "type": "integer",
                    "format": "int32"
                  },
                  "totalUsed": {
                    "description": "Number of licenses currently used by the devices.",
                    "example": 50,
                    "type": "integer",
                    "format": "int32"
                  },
                  "skuName": {
                    "description": "Name of the SKU for the account.",
                    "example": "TS-BUNDLE-KTO-DIAGNOSTIC-MRC",
                    "type": "string"
                  }
                },
                "required": [
                  "accountName",
                  "createdOn",
                  "lastUpdated",
                  "totalAllowed",
                  "totalUsed",
                  "skuName"
                ]
              }
            example: '{"accountName":"TestQAAccount","skuName":"TS-BUNDLE-KTO-DIAGNOSTIC-MRC","totalAllowed":100,"totalUsed":50,"createdOn":"2019-08-29T00:47:59.240Z","lastUpdated":"2019-08-29T00:47:59.240Z"}'
      '0':
        description: Error response.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceDiagnosticsResult",
                "title": "DeviceDiagnosticsResult",
                "description": "All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.",
                "example": {
                  "errorCode": "INTERNAL_SYSTEM_ERROR",
                  "errorMessage": "The system encountered an internal error."
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Simple error code.",
                    "example": "INVALID_PARAMETER",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Detailed error message.",
                    "example": "The request parameter is invalid.",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Create a subscription to define a streaming channel that sends data from devices in the account to an endpoint defined in a target resource.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "CreateSubscriptionRequest",
            "title": "CreateSubscriptionRequest",
            "description": "The request body provides the details of the subscription that you want to create.",
            "example": {
              "accountidentifier": {
                "billingaccountid": "0000000000-00001"
              },
              "billingaccountid": "0000000000-00001",
              "streamkind": "ts.event",
              "targetid": "your target ID UUID such as ae110c40-2685-6c70-f46e-286f7370b8a9",
              "name": "name your subscription"
            },
            "type": "object",
            "properties": {
              "accountidentifier": {
                "id": "AccountIdentifier",
                "title": "AccountIdentifier",
                "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                "example": {
                  "billingaccountid": "0000000000-00001"
                },
                "type": "object",
                "properties": {
                  "billingaccountid": {
                    "example": "1223334444-00001",
                    "type": "string"
                  }
                }
              },
              "description": {
                "description": "Descriptive information about the subscription.",
                "type": "string"
              },
              "disabled": {
                "description": "Enable or disable the subscription. A disabled subscription will not send any data.",
                "example": false,
                "type": "boolean"
              },
              "email": {
                "description": "The address to which any error reports should be delivered.",
                "example": "me@mycompany.com",
                "type": "string"
              },
              "filter": {
                "description": "String containing a $filter object with a property and value to filter out non-matching events.",
                "type": "string"
              },
              "billingaccountid": {
                "example": "1223334444-00001",
                "type": "string"
              },
              "streamkind": {
                "description": "The type of event data to send via this subscription. This will be `ts.event` in most cases. Other event types are `ts.event.diagnostics` for device diagnostic data, `ts.event.configuration` for device configuration events, or `ts.event.security`. Note that the device ThingSpace client must support sending specific event types for anything other than `ts.event`.",
                "example": "ts.event",
                "type": "string"
              },
              "targetid": {
                "description": "The ID of the target resource to be used when dispatching events. The corresponding target should have a “stream” addressscheme.",
                "example": "4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8",
                "type": "string"
              },
              "name": {
                "description": "Name of the subscription.",
                "example": "Account subscription 1",
                "type": "string"
              },
              "allowaggregation": {
                "description": "Setting this value to `false` prevents the data returned from being aggregated and makes the data easier to parse.",
                "example": false,
                "type": "boolean"
              }
            }
          }
        example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"billingaccountid":"1223334444-00001","allowaggregation":false,"name":"Account subscription 1","targetid":"{target ID}","streamkind":"ts.event","email":"me@mycompany.com"}'
    responses:
      '200':
        description: Returns full subscription resource definition.
        body:
          application/json:
            schema: |
              {
                "id": "Subscription",
                "title": "Subscription",
                "description": "Subscription resource definition.",
                "example": {
                  "configurationfailures": 0,
                  "createdon": "2018-12-21T05:05:02.134Z",
                  "delegateid": "00000000-0000-0000-0000-000000000000",
                  "id": "d8c145dd-6948-67ec-ed9b-6a298806bb4a",
                  "kind": "ts.subscription",
                  "laststreamingstatus": "",
                  "laststreamingtime": "0001-01-01T00:00:00Z",
                  "lastupdated": "2018-12-21T05:22:12.178Z",
                  "networkfailures": 0,
                  "streamfailures": 0,
                  "streamkind": "ts.event",
                  "targetid": "4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8",
                  "version": "1.0",
                  "versionid": "5ed6063f-04e0-11e9-8279-02420a5e1b0b"
                },
                "type": "object",
                "properties": {
                  "configurationfailures": {
                    "description": "The number of streaming failures due to faulty configuration.",
                    "example": 0,
                    "type": "integer",
                    "format": "int32"
                  },
                  "createdon": {
                    "description": "The number of streaming failures due to faulty configuration.",
                    "example": "2018-12-21T05:05:02.134Z",
                    "type": "string"
                  },
                  "delegateid": {
                    "description": "Not currently used.",
                    "example": "00000000-0000-0000-0000-000000000000",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the subscription.",
                    "type": "string"
                  },
                  "disabled": {
                    "description": "Whether the subscription is currently sending data.",
                    "example": false,
                    "type": "boolean"
                  },
                  "email": {
                    "description": "The address to which any error reports should be delivered.",
                    "example": "me@mycompany.com",
                    "type": "string"
                  },
                  "filter": {
                    "description": "Filter for events.",
                    "type": "string"
                  },
                  "id": {
                    "description": "ThingSpace unique ID for the subscription that was created.",
                    "example": "d8c145dd-6948-67ec-ed9b-6a298806bb4a",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Identifies the resource kind.",
                    "example": "ts.subscription",
                    "type": "string"
                  },
                  "laststreamingstatus": {
                    "description": "Possible values: success or fail.",
                    "example": "success",
                    "type": "string"
                  },
                  "laststreamingtime": {
                    "description": "The date and time that the last stream send was attempted.",
                    "example": "0001-01-01T00:00:00Z",
                    "type": "string"
                  },
                  "lastupdated": {
                    "description": "The date the resource was last updated.",
                    "example": "2018-12-21T05:22:12.178Z",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the subscription.",
                    "example": "Account subscription 1",
                    "type": "string"
                  },
                  "networkfailures": {
                    "description": "The number of failures due to network problems.",
                    "example": 0,
                    "type": "integer",
                    "format": "int32"
                  },
                  "streamfailures": {
                    "example": 0,
                    "type": "integer",
                    "format": "int32"
                  },
                  "streamkind": {
                    "description": "The event type that will be sent in the data stream.",
                    "example": "ts.event",
                    "type": "string"
                  },
                  "targetid": {
                    "description": "Target to be used for dispatching events.",
                    "example": "4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8",
                    "type": "string"
                  },
                  "targettype": {
                    "example": "Amazon Web Services",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the underlying schema resource.",
                    "example": "1.0",
                    "type": "string"
                  },
                  "versionid": {
                    "description": "The version of the resource.",
                    "example": "5ed6063f-04e0-11e9-8279-02420a5e1b0b",
                    "type": "string"
                  }
                }
              }
            example: '{"configurationfailures":0,"createdon":"2018-12-21T05:05:02.134Z","delegateid":"00000000-0000-0000-0000-000000000000","id":"d8c145dd-6948-67ec-ed9b-6a298806bb4a","kind":"ts.subscription","laststreamingstatus":"","laststreamingtime":"0001-01-01T00:00:00Z","lastupdated":"2018-12-21T05:22:12.178Z","networkfailures":0,"streamfailures":0,"streamkind":"ts.event","targetid":"4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8","version":"1.0","versionid":"5ed6063f-04e0-11e9-8279-02420a5e1b0b"}'
/history/actions/$search:
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: This endpoint allows the user to get the history data.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - '*/*'
    body:
      '*/*':
        schema: |
          {
            "id": "HistorySearchRequest",
            "title": "HistorySearchRequest",
            "description": "History data information.",
            "example": {
              "$filter": {
                "accountName": "0000123456-00001",
                "device": {
                  "id": "15-digit IMEI",
                  "kind": "IMEI"
                }
              }
            },
            "type": "object",
            "properties": {
              "$filter": {
                "id": "HistorySearchFilter",
                "title": "HistorySearchFilter",
                "description": "The selected device and attributes for which a request should retrieve data.",
                "example": {
                  "accountName": "0000123456-00001",
                  "device": {
                    "id": "15-digit IMEI",
                    "kind": "IMEI"
                  },
                  "attributes": {
                    "name": "LINK_QUALITY"
                  }
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "Account name identifier.",
                    "example": "0000123456-00001",
                    "type": "string"
                  },
                  "device": {
                    "id": "Device",
                    "title": "Device",
                    "description": "Identifies a particular IoT device.",
                    "example": {
                      "id": "864508030026238",
                      "kind": "IMEI"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Device identifier.",
                        "example": "864508030026238",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Device kind identifier.",
                        "example": "IMEI",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "kind"
                    ]
                  },
                  "attributes": {
                    "id": "HistorySearchFilterAttributes",
                    "title": "HistorySearchFilterAttributes",
                    "description": "Streaming RF parameters for which you want to retrieve history data.",
                    "example": {
                      "name": "LINK_QUALITY"
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "AttributeIdentifier",
                        "description": "Attribute identifier.",
                        "example": "RADIO_SIGNAL_STRENGTH",
                        "type": "string",
                        "enum": [
                          "NETWORK_BEARER",
                          "RADIO_SIGNAL_STRENGTH",
                          "LINK_QUALITY",
                          "CELL_ID",
                          "MANUFACTURER"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "accountName",
                  "device"
                ]
              },
              "$limitNumber": {
                "description": "The maximum number of historical attributes to include in the response. If the request matches more than this number of attributes, the response will contain an X-Next value in the header that can be used as the page value in the next request to retrieve the next page of events.",
                "example": 3,
                "type": "integer",
                "format": "int32"
              },
              "$limitTime": {
                "id": "HistorySearchLimitTime",
                "title": "HistorySearchLimitTime",
                "description": "The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration.",
                "example": {
                  "startOn": "2019-08-29T00:47:59.240Z",
                  "duration": {
                    "value": 5,
                    "unit": "SECOND"
                  }
                },
                "type": "object",
                "properties": {
                  "startOn": {
                    "description": "The starting date-time for this request.",
                    "example": "2019-08-29T00:47:59.240Z",
                    "type": "string",
                    "format": "date-time"
                  },
                  "duration": {
                    "id": "NumericalData",
                    "title": "NumericalData",
                    "description": "Describes value and unit of time.",
                    "example": {
                      "value": 5,
                      "unit": "SECOND"
                    },
                    "type": "object",
                    "properties": {
                      "value": {
                        "description": "Numerical value.",
                        "example": 5,
                        "type": "integer",
                        "format": "int32"
                      },
                      "unit": {
                        "title": "NumericalDataUnit",
                        "description": "Unit of time.",
                        "example": "MINUTE",
                        "type": "string",
                        "enum": [
                          "SECOND",
                          "MINUTE",
                          "HOUR",
                          "DAY"
                        ]
                      }
                    }
                  }
                }
              },
              "$page": {
                "description": "Page number for pagination purposes.",
                "type": "string"
              }
            },
            "required": [
              "$filter"
            ]
          }
        example: '{"$filter":{"accountName":"0000123456-00001","device":{"id":"15-digit IMEI","kind":"IMEI"},"attributes":{"name":"LINK_QUALITY"}}}'
    responses:
      '200':
        description: History search response.
        headers:
          X-Next:
            required: false
        body:
          application/json:
            schema: |
              {
                "description": "History data for selected devices and attributes over specific time periods.",
                "example": [
                  {
                    "accountName": "0000123456-00001",
                    "attributes": {
                      "createdOn": "2022-02-10T16:02:21.406Z",
                      "name": "LINK_QUALITY",
                      "value": "47"
                    },
                    "device": {
                      "id": "15-digit IMEI",
                      "kind": "IMEI"
                    }
                  },
                  {
                    "accountName": "0000123456-00001",
                    "attributes": {
                      "createdOn": "2022-02-10T16:02:05.316Z",
                      "name": "LINK_QUALITY",
                      "value": "47"
                    },
                    "device": {
                      "id": "15-digit IMEI",
                      "kind": "IMEI"
                    }
                  }
                ],
                "type": "array",
                "items": {
                  "id": "History",
                  "title": "History",
                  "description": "History data for a selected device and its attributes at a specific time.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "attributes": {
                      "createdOn": "2022-02-10T16:02:21.406Z",
                      "name": "LINK_QUALITY",
                      "value": "47"
                    },
                    "device": {
                      "id": "15-digit IMEI",
                      "kind": "IMEI"
                    }
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "The name of the billing account for which you want retrieve history data. An account name is usually numeric, and must include any leading zeros.",
                      "example": "0000123456-00001",
                      "type": "string"
                    },
                    "device": {
                      "id": "Device",
                      "title": "Device",
                      "description": "Identifies a particular IoT device.",
                      "example": {
                        "id": "864508030026238",
                        "kind": "IMEI"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Device identifier.",
                          "example": "864508030026238",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Device kind identifier.",
                          "example": "IMEI",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "kind"
                      ]
                    },
                    "attributes": {
                      "id": "HistoryAttributeValue",
                      "title": "HistoryAttributeValue",
                      "description": "Streaming RF parameter for which you want to retrieve history data.",
                      "example": {
                        "createdOn": "2022-02-10T16:02:21.406Z",
                        "name": "LINK_QUALITY",
                        "value": "47"
                      },
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "AttributeIdentifier",
                          "description": "Attribute identifier.",
                          "example": "RADIO_SIGNAL_STRENGTH",
                          "type": "string",
                          "enum": [
                            "NETWORK_BEARER",
                            "RADIO_SIGNAL_STRENGTH",
                            "LINK_QUALITY",
                            "CELL_ID",
                            "MANUFACTURER"
                          ]
                        },
                        "value": {
                          "description": "Attribute value.",
                          "example": "47",
                          "type": "string"
                        },
                        "createdOn": {
                          "description": "Date and time the request was created.",
                          "example": "2022-02-10T16:02:21.406Z",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "required": [
                    "accountName",
                    "device"
                  ]
                }
              }
            example: '[{"accountName":"0000123456-00001","attributes":{"createdOn":"2022-02-10T16:02:21.406Z","name":"LINK_QUALITY","value":"47"},"device":{"id":"15-digit IMEI","kind":"IMEI"}},{"accountName":"0000123456-00001","attributes":{"createdOn":"2022-02-10T16:02:05.316Z","name":"LINK_QUALITY","value":"47"},"device":{"id":"15-digit IMEI","kind":"IMEI"}}]'
      '0':
        description: Error response.
        body:
          application/json:
            schema: |
              {
                "id": "DeviceDiagnosticsResult",
                "title": "DeviceDiagnosticsResult",
                "description": "All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.",
                "example": {
                  "errorCode": "INTERNAL_SYSTEM_ERROR",
                  "errorMessage": "The system encountered an internal error."
                },
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Simple error code.",
                    "example": "INVALID_PARAMETER",
                    "type": "string"
                  },
                  "errorMessage": {
                    "description": "Detailed error message.",
                    "example": "The request parameter is invalid.",
                    "type": "string"
                  }
                },
                "required": [
                  "errorCode",
                  "errorMessage"
                ]
              }
            example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
/callbacks:
  /{account}:
    uriParameters:
      account:
        description: Account number.
        type: string
        example: 0252012345-00001
        required: true
        displayName: account
    /name/{service}:
      uriParameters:
        service:
          description: Callback service name.
          example: Location
          required: true
          displayName: service
          enum:
          - Location
          - DeviceLocation
      delete:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Deregisters the callback endpoint and stops ThingSpace from sending FOTA callback messages for the specified account.
        responses:
          '200':
            description: Callback successfully deregistered.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV1SuccessResult",
                    "title": "FotaV1SuccessResult",
                    "description": "A response to a successful request contains a single Boolean value.",
                    "example": {
                      "success": true
                    },
                    "type": "object",
                    "properties": {
                      "success": {
                        "description": "True is returned in case of success.",
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  }
                example: '{"success":true}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV1Result",
                    "title": "FotaV1Result",
                    "description": "Response in case of any errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error response code.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Description of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to get the registered callback information.
      responses:
        '200':
          description: Return callback registration.
          body:
            application/json:
              schema: |
                {
                  "id": "CallbackSummary",
                  "title": "CallbackSummary",
                  "description": "Registered callback information.",
                  "example": {
                    "url": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"
                  },
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Callback URL for an subscribed service.",
                      "example": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx",
                      "type": "string"
                    }
                  }
                }
              example: '{"url":"http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to create the HTTPS callback address.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - '*/*'
      body:
        '*/*':
          schema: |
            {
              "id": "FotaV2CallbackRegistrationRequest",
              "title": "FotaV2CallbackRegistrationRequest",
              "description": "Callback URL registration.",
              "example": {
                "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
              },
              "type": "object",
              "properties": {
                "url": {
                  "description": "Callback URL for an subscribed service.",
                  "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
                  "type": "string"
                }
              }
            }
          example: '{"url":"https://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
      responses:
        '200':
          description: Return callback registration.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2CallbackRegistrationResult",
                  "title": "FotaV2CallbackRegistrationResult",
                  "description": "Callback listener URL.",
                  "example": {
                    "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
                  },
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Callback URL.",
                      "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
                      "type": "string"
                    }
                  }
                }
              example: '{"url":"https://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    put:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to update the HTTPS callback address.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - '*/*'
      body:
        '*/*':
          schema: |
            {
              "id": "FotaV2CallbackRegistrationRequest",
              "title": "FotaV2CallbackRegistrationRequest",
              "description": "Callback URL registration.",
              "example": {
                "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
              },
              "type": "object",
              "properties": {
                "url": {
                  "description": "Callback URL for an subscribed service.",
                  "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
                  "type": "string"
                }
              }
            }
          example: '{"url":"https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
      responses:
        '200':
          description: Return callback registration.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2CallbackRegistrationResult",
                  "title": "FotaV2CallbackRegistrationResult",
                  "description": "Callback listener URL.",
                  "example": {
                    "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
                  },
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Callback URL.",
                      "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
                      "type": "string"
                    }
                  }
                }
              example: '{"url":"https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to delete a previously registered callback URL.
      responses:
        '200':
          description: Result of deregistering a callback.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2SuccessResult",
                  "title": "FotaV2SuccessResult",
                  "description": "Response to a successful request.",
                  "example": {
                    "success": true
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              example: '{"success":true}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /{acc}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: acc
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to get the registered callback information.
      responses:
        '200':
          description: Return callback registration.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3CallbackSummary",
                  "title": "FotaV3CallbackSummary",
                  "description": "Callback registration information.",
                  "example": {
                    "url": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"
                  },
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Callback URL for an subscribed service.",
                      "example": "http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx",
                      "type": "string"
                    }
                  }
                }
              example: '{"url":"http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    put:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows the user to update the HTTPS callback address.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "FotaV3CallbackRegistrationRequest",
              "title": "FotaV3CallbackRegistrationRequest",
              "description": "Callback URL registration.",
              "example": {
                "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
              },
              "type": "object",
              "properties": {
                "url": {
                  "description": "Callback URL for an subscribed service.",
                  "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
                  "type": "string"
                }
              }
            }
          example: '{"url":"https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
      responses:
        '200':
          description: Return callback registration.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3CallbackRegistrationResult",
                  "title": "FotaV3CallbackRegistrationResult",
                  "description": "Callback registration information.",
                  "example": {
                    "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
                  },
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Callback URL.",
                      "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
                      "type": "string"
                    }
                  }
                }
              example: '{"url":"https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows the user to create the HTTPS callback address.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "FotaV3CallbackRegistrationRequest",
              "title": "FotaV3CallbackRegistrationRequest",
              "description": "Callback URL registration.",
              "example": {
                "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
              },
              "type": "object",
              "properties": {
                "url": {
                  "description": "Callback URL for an subscribed service.",
                  "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
                  "type": "string"
                }
              }
            }
          example: '{"url":"https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
      responses:
        '200':
          description: Return callback registration.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3CallbackRegistrationResult",
                  "title": "FotaV3CallbackRegistrationResult",
                  "description": "Callback registration information.",
                  "example": {
                    "url": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"
                  },
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "Callback URL.",
                      "example": "https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx",
                      "type": "string"
                    }
                  }
                }
              example: '{"url":"https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to delete a previously registered callback URL.
      responses:
        '200':
          description: Delete request result.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3SuccessResult",
                  "title": "FotaV3SuccessResult",
                  "description": "Cancelation status.",
                  "example": {
                    "success": true
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "True or false.",
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              example: '{"success":true}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  get:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Find registered callback listener for account by account number.
    queryParameters:
      accountNumber:
        description: A unique identifier for an account.
        type: string
        example: 0844021539-00001
        required: true
        displayName: accountNumber
    responses:
      '200':
        description: A successful response will display the billing account number (`aname`), the name of the callback service (`name`) and the address of the callback listening service (`url`).
        body:
          application/json:
            schema: |
              {
                "description": "A list of registered callback listeners.",
                "example": [
                  {
                    "aname": "0844021539-00001",
                    "name": "BullseyeReporting",
                    "url": "https://tsustgtests.mocklab.io/notifications/bullseye"
                  }
                ],
                "type": "array",
                "items": {
                  "id": "CallbackCreated",
                  "title": "CallbackCreated",
                  "example": {
                    "aname": "0844021539-00001",
                    "name": "BullseyeReporting",
                    "url": "https://tsustgtests.mocklab.io/notifications/bullseye"
                  },
                  "type": "object",
                  "properties": {
                    "aname": {
                      "description": "The billing account number for which callback messages will be sent.",
                      "example": "0844021539-00001",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
                      "example": "BullseyeReporting",
                      "type": "string"
                    },
                    "url": {
                      "description": "The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.",
                      "example": "https://tsustgtests.mocklab.io/notifications/bullseye",
                      "type": "string"
                    }
                  },
                  "required": [
                    "aname",
                    "name"
                  ]
                }
              }
            example: '[{"aname":"0844021539-00001","name":"BullseyeReporting","url":"https://tsustgtests.mocklab.io/notifications/bullseye"}]'
      '400':
        description: Bad request.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "400",
                    "Name": "400",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Found, Request will be queued\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Found, Request will be queued"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Not Found, Request will be queued"
              }
      '401':
        description: Unauthorized request. Access token is missing or invalid.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "401",
                    "Name": "401",
                    "Value": "{\n  \"responseCode\": \"INVALID_ACCESS\",\n  \"message\": \"The access policy denied the resource operation for this user\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_ACCESS",
                  "message": "The access policy denied the resource operation for this user"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_ACCESS",
                "message": "The access policy denied the resource operation for this user"
              }
      '403':
        description: Forbidden request.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "403",
                    "Name": "403",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Certified\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Certified"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Not Certified"
              }
      '404':
        description: Bad request. Not found.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "404",
                    "Name": "404",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Inactive\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Inactive"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Inactive"
              }
      '409':
        description: Bad request. Conflict state.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "409",
                    "Name": "409",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Service Not Purchased\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Service Not Purchased"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Service Not Purchased"
              }
      '500':
        description: Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "500",
                    "Name": "500",
                    "Value": "{\n  \"responseCode\": \"INTERNAL_ERROR\",\n  \"message\": \"Device is active in several accounts\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INTERNAL_ERROR",
                  "message": "Device is active in several accounts"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INTERNAL_ERROR",
                "message": "Device is active in several accounts"
              }
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Registers a URL at which an account receives asynchronous responses and other messages from a ThingSpace Platform callback service. The messages are REST messages. You are responsible for creating and running a listening process on your server at that URL to receive and parse the messages.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    queryParameters:
      accountNumber:
        description: A unique identifier for an account.
        type: string
        example: 0844021539-00001
        required: true
        displayName: accountNumber
    body:
      application/json:
        schema: |
          {
            "id": "HyperPreciseLocationCallback",
            "title": "HyperPreciseLocationCallback",
            "description": "Callback registration request.",
            "example": {
              "name": "BullseyeReporting",
              "url": "https://tsustgtests.mocklab.io/notifications/bullseye"
            },
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the callback service that you want to subscribe to.",
                "example": "BullseyeReporting",
                "type": "string"
              },
              "url": {
                "description": "The address on your server where you have enabled a listening service for the specific type of callback messages. Specify a URL that is reachable from the Verizon data centers. If your service is running on HTTPS, you should use a one-way authentication certificate with a white-listed IP address.",
                "example": "https://tsustgtests.mocklab.io/notifications/bullseye",
                "type": "string"
              }
            },
            "required": [
              "name",
              "url"
            ]
          }
        example: '{"name":"BullseyeReporting","url":"https://tsustgtests.mocklab.io/notifications/bullseye"}'
    responses:
      '200':
        description: A successful response will display the billing account number (`accountName`), the name of the callback service (`name`) and the address of the callback listening service (`url`).
        body:
          application/json:
            schema: |
              {
                "id": "CallbackRegistered",
                "title": "CallbackRegistered",
                "description": "Registered callback listener.",
                "example": {
                  "accountName": "0844021539-00001",
                  "name": "BullseyeReporting"
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "The billing account number for which callback messages will be sent.",
                    "example": "0844021539-00001",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
                    "example": "BullseyeReporting",
                    "type": "string"
                  }
                },
                "required": [
                  "accountName",
                  "name"
                ]
              }
            example: '{"accountName":"0844021539-00001","name":"BullseyeReporting"}'
      '400':
        description: Bad request.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "400",
                    "Name": "400",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Found, Request will be queued\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Found, Request will be queued"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Not Found, Request will be queued"
              }
      '401':
        description: Unauthorized request. Access token is missing or invalid.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "401",
                    "Name": "401",
                    "Value": "{\n  \"responseCode\": \"INVALID_ACCESS\",\n  \"message\": \"The access policy denied the resource operation for this user\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_ACCESS",
                  "message": "The access policy denied the resource operation for this user"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_ACCESS",
                "message": "The access policy denied the resource operation for this user"
              }
      '403':
        description: Forbidden request.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "403",
                    "Name": "403",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Certified\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Certified"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Not Certified"
              }
      '404':
        description: Bad request. Not found.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "404",
                    "Name": "404",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Inactive\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Inactive"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Inactive"
              }
      '409':
        description: Bad request. Conflict state.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "409",
                    "Name": "409",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Service Not Purchased\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Service Not Purchased"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Service Not Purchased"
              }
      '500':
        description: Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "500",
                    "Name": "500",
                    "Value": "{\n  \"responseCode\": \"INTERNAL_ERROR\",\n  \"message\": \"Device is active in several accounts\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INTERNAL_ERROR",
                  "message": "Device is active in several accounts"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INTERNAL_ERROR",
                "message": "Device is active in several accounts"
              }
  delete:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Stops ThingSpace from sending callback messages for the specified account and listener name.
    queryParameters:
      accountNumber:
        description: A unique identifier for a account.
        type: string
        example: 0844021539-00001
        required: true
        displayName: accountNumber
      service:
        description: The name of the callback service that will be deleted.
        type: string
        example: BullseyeReporting
        required: true
        displayName: service
    responses:
      '200':
        description: Successful response (no content).
        headers:
          Access-Control-Allow-Origin:
            required: false
      '400':
        description: Bad request.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "400",
                    "Name": "400",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Found, Request will be queued\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Found, Request will be queued"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Not Found, Request will be queued"
              }
      '401':
        description: Unauthorized request. Access token is missing or invalid.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "401",
                    "Name": "401",
                    "Value": "{\n  \"responseCode\": \"INVALID_ACCESS\",\n  \"message\": \"The access policy denied the resource operation for this user\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_ACCESS",
                  "message": "The access policy denied the resource operation for this user"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_ACCESS",
                "message": "The access policy denied the resource operation for this user"
              }
      '403':
        description: Forbidden request.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "403",
                    "Name": "403",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Certified\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Certified"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Not Certified"
              }
      '404':
        description: Bad request. Not found.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "404",
                    "Name": "404",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Inactive\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Inactive"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Device Inactive"
              }
      '409':
        description: Bad request. Conflict state.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "409",
                    "Name": "409",
                    "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Service Not Purchased\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Service Not Purchased"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INVALID_PARAMETER",
                "message": "Service Not Purchased"
              }
      '500':
        description: Internal Server Error.
        body:
          application/json:
            schema: |
              {
                "id": "HyperPreciseLocationResult",
                "title": "HyperPreciseLocationResult",
                "description": "Error response.",
                "examples": [
                  {
                    "Id": "500",
                    "Name": "500",
                    "Value": "{\n  \"responseCode\": \"INTERNAL_ERROR\",\n  \"message\": \"Device is active in several accounts\"\n}",
                    "ExternalValue": null,
                    "Description": null
                  }
                ],
                "example": {
                  "responseCode": "INTERNAL_ERROR",
                  "message": "Device is active in several accounts"
                },
                "type": "object",
                "properties": {
                  "responseCode": {
                    "title": "ErrorResponseCode",
                    "description": "Error Code.",
                    "example": "INVALID_ACCESS",
                    "type": "string",
                    "enum": [
                      "INVALID_ACCESS",
                      "INVALID_PARAMETER",
                      "INTERNAL_ERROR",
                      "SUCCESS"
                    ]
                  },
                  "message": {
                    "description": "Error message.",
                    "type": "string"
                  },
                  "fault": {
                    "id": "HyperPreciseLocationFault",
                    "title": "HyperPreciseLocationFault",
                    "description": "Fault occurred while responding.",
                    "example": {
                      "code": "900906",
                      "message": "No matching resource found in the API for the given request",
                      "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                    },
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Hyper precise location fault code.",
                        "example": "900906",
                        "type": "string"
                      },
                      "message": {
                        "description": "Hyper precise location fault message.",
                        "example": "No matching resource found in the API for the given request",
                        "type": "string"
                      },
                      "description": {
                        "description": "Hyper precise location fault description.",
                        "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                        "type": "string"
                      }
                    }
                  },
                  "example": {}
                }
              }
            example: |
              {
                "responseCode": "INTERNAL_ERROR",
                "message": "Device is active in several accounts"
              }
/targets:
  /actions:
    /query:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Search for targets by property values. Returns an array of all matching target resources.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "QueryTargetRequest",
                "title": "QueryTargetRequest",
                "description": "Search for targets by property values.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "1223334444-00001"
                  },
                  "resourceidentifier": {
                    "id": "dd1682d3-2d80-cefc-f3ee-25154800beff"
                  }
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "$selection": {
                    "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
                    "example": {
                      "addressscheme": "streamawsiot"
                    },
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"resourceidentifier":{"id":"dd1682d3-2d80-cefc-f3ee-25154800beff"}}'
        responses:
          '200':
            description: A success response includes an array of all matching targets. Each target includes the full target resource definition.
            body:
              application/json:
                schema: |
                  {
                    "description": "An array of all matching targets.",
                    "example": [
                      {
                        "address": "https://myhost.com:1825",
                        "addressscheme": "streamrest",
                        "createdon": "2018-12-22T03:59:18.563Z",
                        "id": "cee10900-f54e-6eef-e455-bd7f15c4be32",
                        "kind": "ts.target",
                        "lastupdated": "2018-12-22T03:59:18.563Z",
                        "name": "host:port target",
                        "version": "1.0",
                        "versionid": "f4be7c2b-059d-11e9-bec6-02420a4e1b0a"
                      },
                      {
                        "address": "arn:aws:iam::252156542789:role/ThingSpace",
                        "addressscheme": "streamawsiot",
                        "createdon": "2019-01-24T19:06:43.577Z",
                        "externalid": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
                        "id": "cea170cc-a58f-6531-fc4b-fae1ceb1a6c8",
                        "kind": "ts.target",
                        "lastupdated": "2019-01-24T19:32:31.841Z",
                        "name": "AWS Target",
                        "region": "us-east-1",
                        "version": "1.0",
                        "versionid": "caf85ff7-200e-11e9-a85b-02420a621e0a"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "Target",
                      "title": "Target",
                      "description": "Target resource definition.",
                      "example": {
                        "address": "arn:aws:iam::252156542789:role/ThingSpace",
                        "addressscheme": "streamawsiot",
                        "createdon": "2019-01-24T19:06:43.577Z",
                        "externalid": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
                        "id": "cea170cc-a58f-6531-fc4b-fae1ceb1a6c8",
                        "kind": "ts.target",
                        "lastupdated": "2019-01-24T19:32:31.841Z",
                        "name": "AWS Target",
                        "region": "us-east-1",
                        "version": "1.0",
                        "versionid": "caf85ff7-200e-11e9-a85b-02420a621e0a"
                      },
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "The endpoint for data streams.",
                          "example": "https://myhost.com:1825",
                          "type": "string"
                        },
                        "addressscheme": {
                          "description": "The transport format.",
                          "example": "streamrest",
                          "type": "string"
                        },
                        "billingaccountid": {
                          "description": "The billing account ID.",
                          "type": "string"
                        },
                        "createdon": {
                          "description": "The date the resource was created.",
                          "example": "2019-01-24T19:06:43.577Z",
                          "type": "string"
                        },
                        "externalid": {
                          "description": "Security identification string.",
                          "example": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
                          "type": "string"
                        },
                        "id": {
                          "description": "ThingSpace unique ID for the target that was created.",
                          "example": "cea170cc-a58f-6531-fc4b-fae1ceb1a6c8",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Identifies the resource kind. Targets are ts.target.",
                          "example": "ts.target",
                          "type": "string"
                        },
                        "lastupdated": {
                          "description": "The date the resource was last updated.",
                          "example": "2019-01-24T19:32:31.841Z",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the target.",
                          "example": "AWS Target",
                          "type": "string"
                        },
                        "region": {
                          "description": "AWS region value.",
                          "example": "us-east-1",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the underlying schema resource.",
                          "example": "1.0",
                          "type": "string"
                        },
                        "versionid": {
                          "description": "The version of the resource.",
                          "example": "caf85ff7-200e-11e9-a85b-02420a621e0a",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the target.",
                          "type": "string"
                        }
                      }
                    }
                  }
                example: '[{"address":"https://myhost.com:1825","addressscheme":"streamrest","createdon":"2018-12-22T03:59:18.563Z","id":"cee10900-f54e-6eef-e455-bd7f15c4be32","kind":"ts.target","lastupdated":"2018-12-22T03:59:18.563Z","name":"host:port target","version":"1.0","versionid":"f4be7c2b-059d-11e9-bec6-02420a4e1b0a"},{"address":"arn:aws:iam::252156542789:role/ThingSpace","addressscheme":"streamawsiot","createdon":"2019-01-24T19:06:43.577Z","externalid":"lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==","id":"cea170cc-a58f-6531-fc4b-fae1ceb1a6c8","kind":"ts.target","lastupdated":"2019-01-24T19:32:31.841Z","name":"AWS Target","region":"us-east-1","version":"1.0","versionid":"caf85ff7-200e-11e9-a85b-02420a621e0a"}]'
    /delete:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Remove a target from a ThingSpace account.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "DeleteTargetRequest",
                "title": "DeleteTargetRequest",
                "description": "The request body identifies the target to delete.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "0000000000-00001"
                  },
                  "resourceidentifier": {
                    "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                  }
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            example: '{"accountidentifier":{"billingaccountid":"0000000000-00001"},"resourceidentifier":{"id":"2e61a17d-8fd1-6816-e995-e4c2528bf535"}}'
        responses:
          '204':
            description: Target deleted successfully.
    /newextid:
      post:
        securedBy: []
        description: Create a unique string that ThingSpace will pass to AWS for increased security.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "GenerateExternalIDRequest",
                "title": "GenerateExternalIDRequest",
                "description": "The request body only contains the authenticating account.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "0000000000-00001"
                  }
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            example: '{"accountidentifier":{"billingaccountid":"0000000000-00001"}}'
        responses:
          '200':
            description: Returns a new external ID.
            body:
              application/json:
                schema: |
                  {
                    "id": "GenerateExternalIDResult",
                    "title": "GenerateExternalIDResult",
                    "description": "A new external ID.",
                    "example": {
                      "externalid": "ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH=="
                    },
                    "type": "object",
                    "properties": {
                      "externalid": {
                        "description": "Newly created security string.",
                        "example": "ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
                        "type": "string"
                      }
                    }
                  }
                example: '{"externalid":"ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH=="}'
    /newaic:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Deploy a new Azure IoT Central application based on the Verizon ARM template within the specified Azure Active Directory account.
        headers:
          BillingaccountID:
            description: TThe ThingSpace ID of the authenticating billing account.
            type: string
            required: true
            displayName: BillingaccountID
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "CreateIoTApplicationRequest",
                "title": "CreateIoTApplicationRequest",
                "description": "The request body must include the UUID of the subscription that you want to update plus any properties that you want to change.",
                "example": {
                  "appName": "newarmapp1",
                  "billingAccountID": "0000123456-00001",
                  "clientID": "UUID",
                  "clientSecret": "client secret",
                  "emailIDs": "email@domain.com",
                  "resourcegroup": "Myresourcegroup",
                  "sampleIOTcApp": "{app ID}",
                  "subscriptionID": "{subscription ID}",
                  "tenantID": "{tenant ID}"
                },
                "type": "object",
                "properties": {
                  "appName": {
                    "description": "A user defined name for the application being deployed in Azure IoT Central.",
                    "example": "newarmapp1",
                    "type": "string"
                  },
                  "billingAccountID": {
                    "description": "The ThingSpace ID of the authenticating billing account",
                    "example": "0000123456-00001",
                    "type": "string"
                  },
                  "clientID": {
                    "description": "The Azure ClientID of the associated Azure target account",
                    "example": "UUID",
                    "type": "string"
                  },
                  "clientSecret": {
                    "description": "The Azure Client Secret of the associated Azure target account",
                    "example": "client secret",
                    "type": "string"
                  },
                  "emailIDs": {
                    "description": "The “email IDs” to be added to/sent to with this API.",
                    "example": "email@domain.com",
                    "type": "string"
                  },
                  "resourcegroup": {
                    "description": "The Azure Resource group of the associated Azure target account",
                    "example": "Myresourcegroup",
                    "type": "string"
                  },
                  "sampleIOTcApp": {
                    "description": "This is the reference Azure IoT Central application developed by Verizon.",
                    "example": "app ID",
                    "type": "string"
                  },
                  "subscriptionID": {
                    "description": "The Azure Subscription ID of the associated Azure target account",
                    "example": "subscription ID",
                    "type": "string"
                  },
                  "tenantID": {
                    "description": "The Azure Tenant ID of the associated Azure target account",
                    "example": "tenant ID",
                    "type": "string"
                  }
                }
              }
            example: '{"appName":"newarmapp1","billingAccountID":"0000123456-00001","clientID":"UUID","clientSecret":"client secret","emailIDs":"email@domain.com","resourcegroup":"Myresourcegroup","sampleIOTcApp":"{app ID}","subscriptionID":"{subscription ID}","tenantID":"{tenant ID}"}'
        responses:
          '200':
            description: A success response includes the full subscription resource definition.
            body:
              application/json:
                schema: |
                  {
                    "id": "CreateIoTApplicationResponse",
                    "title": "CreateIoTApplicationResponse",
                    "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
                    "example": {
                      "appName": "newarmapp1",
                      "sharedSecret": "SharedAccessSignaturesr={client secret}",
                      "url": "https://newarmapp1.azureiotcentral.com"
                    },
                    "type": "object",
                    "properties": {
                      "appName": {
                        "description": "An application will be created under the user's Azure subscription with this name and of type IOT central.",
                        "example": "newarmapp1",
                        "type": "string"
                      },
                      "sharedSecret": {
                        "description": "Part of the user credentials (from Azure) the user needs to use for calling further TS Core APIs for setting up Azure cloud connector.",
                        "example": "SharedAccessSignaturesr={client secret}",
                        "type": "string"
                      },
                      "url": {
                        "description": "An IOT central endpoint the user can use to see the data that is being streamed.",
                        "example": "https://newarmapp1.azureiotcentral.com",
                        "type": "string"
                      }
                    }
                  }
                example: '{"appName":"newarmapp1","sharedSecret":"SharedAccessSignaturesr={client secret}","url":"https://newarmapp1.azureiotcentral.com"}'
  post:
    securedBy:
    - thingspace_oauth
    - VZ-M2M-Token
    description: Define a target to receive data streams, alerts, or callbacks. After creating the target resource, use its ID in a subscription to set up a data stream.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "CreateTargetRequest",
            "title": "CreateTargetRequest",
            "description": "The request body provides the details of the target that you want to create.",
            "example": {
              "accountidentifier": {
                "billingaccountid": "0000000000-00001"
              },
              "billingaccountid": "0000000000-00001",
              "kind": "ts.target",
              "address": "https://your_IoT_Central_Application.azureiotcentral.com",
              "addressscheme": "streamazureiot",
              "fields": {
                "httpheaders": {
                  "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
                },
                "devicetypes": [
                  "cHeAssetTracker",
                  "cHeAssetTrackerV2",
                  "tgAssetTracker",
                  "tgAssetTrackerV2"
                ]
              }
            },
            "type": "object",
            "properties": {
              "accountidentifier": {
                "id": "AccountIdentifier",
                "title": "AccountIdentifier",
                "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                "example": {
                  "billingaccountid": "0000000000-00001"
                },
                "type": "object",
                "properties": {
                  "billingaccountid": {
                    "example": "1223334444-00001",
                    "type": "string"
                  }
                }
              },
              "billingaccountid": {
                "description": "The ID of the authenticating billing account.",
                "example": "1223334444-00001",
                "type": "string"
              },
              "kind": {
                "description": "Identifies the resource kind. Targets are ts.target.",
                "example": "ts.target",
                "type": "string"
              },
              "address": {
                "description": "The endpoint for notifications or data streams. The format depends on the selected `addressscheme`.<br />`streamrest` requires a `host:port` value <br />`streamawsiot` requres a valid ARN.",
                "example": "https://myhost.com:1825",
                "type": "string"
              },
              "addressscheme": {
                "description": "The transport format. Valid values are: <br />streamawsiot - streamed data to an AWS account <br />streamrest - streamed REST data to a defined endpoint.",
                "example": "streamrest",
                "type": "string"
              },
              "fields": {
                "id": "CreateTargetRequestFields",
                "title": "CreateTargetRequestFields",
                "example": {
                  "httpheaders": {
                    "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
                  },
                  "devicetypes": [
                    "cHeAssetTracker",
                    "cHeAssetTrackerV2",
                    "tgAssetTracker",
                    "tgAssetTrackerV2"
                  ]
                },
                "type": "object",
                "properties": {
                  "httpheaders": {
                    "id": "FieldsHttpHeaders",
                    "title": "FieldsHttpHeaders",
                    "example": {
                      "Authorization": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"
                    },
                    "type": "object",
                    "properties": {
                      "Authorization": {
                        "example": "SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410",
                        "type": "string"
                      }
                    }
                  },
                  "devicetypes": {
                    "description": "List of device types.",
                    "example": [
                      "cHeAssetTracker",
                      "cHeAssetTrackerV2",
                      "tgAssetTracker",
                      "tgAssetTrackerV2"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "description": {
                "description": "Descriptive information about the target.",
                "type": "string"
              },
              "externalid": {
                "description": "Security identification string created by a POST /targets/actions/newextid request.",
                "example": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
                "type": "string"
              },
              "name": {
                "description": "Name of the target.",
                "example": "AWS Target",
                "type": "string"
              },
              "region": {
                "description": "AWS region value.",
                "example": "us-east-1",
                "type": "string"
              },
              "key1": {
                "description": "OAuth 2.0 bearer token.",
                "example": "Bearer MmY3ZefqefqDk4Ni00MzZmLWJkYzgtYTI4qfqBjNTc2",
                "type": "string"
              },
              "oauth": {
                "id": "TargetAuthentication",
                "title": "TargetAuthentication",
                "description": "OAuth 2 token and refresh token for TS to stream events to Target.",
                "type": "object",
                "properties": {
                  "body": {
                    "id": "TargetAuthenticationBody",
                    "title": "TargetAuthenticationBody",
                    "example": {
                      "grant_type": "refresh_token",
                      "refresh_token": "qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1",
                      "headers": {
                        "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
                        "Content-Type": "application/x-www-form-urlencoded"
                      },
                      "host": {
                        "hostandpath": "https:// myhost.com:1825"
                      }
                    },
                    "type": "object",
                    "properties": {
                      "grant_type": {
                        "description": "Authentication grant type.",
                        "example": "refresh_token",
                        "type": "string"
                      },
                      "refresh_token": {
                        "description": "Refresh token.",
                        "example": "qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1",
                        "type": "string"
                      },
                      "scope": {
                        "description": "Authentication scopes.",
                        "type": "string"
                      },
                      "headers": {
                        "id": "TargetAuthenticationBodyHeaders",
                        "title": "TargetAuthenticationBodyHeaders",
                        "description": "Authentication headers.",
                        "example": {
                          "Authorization": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
                          "Content-Type": "application/x-www-form-urlencoded"
                        },
                        "type": "object",
                        "properties": {
                          "Authorization": {
                            "description": "Authorization header.",
                            "example": "Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk",
                            "type": "string"
                          },
                          "Content-Type": {
                            "description": "Content-Type header.",
                            "example": "application/x-www-form-urlencoded",
                            "type": "string"
                          }
                        }
                      },
                      "host": {
                        "id": "TargetAuthenticationBodyHost",
                        "title": "TargetAuthenticationBodyHost",
                        "description": "Host information.",
                        "example": {
                          "hostandpath": "https:// myhost.com:1825"
                        },
                        "type": "object",
                        "properties": {
                          "hostandpath": {
                            "example": "https:// myhost.com:1825",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "example": "1.0",
                    "type": "string"
                  }
                }
              }
            }
          }
        example: '{"accountidentifier":{"billingaccountid":"0000000000-00001"},"billingaccountid":"0000000000-00001","kind":"ts.target","address":"https://your_IoT_Central_Application.azureiotcentral.com","addressscheme":"streamazureiot","fields":{"httpheaders":{"Authorization":"SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410"},"devicetypes":["cHeAssetTracker","cHeAssetTrackerV2","tgAssetTracker","tgAssetTrackerV2"]}}'
    responses:
      '200':
        description: A success response includes the full target resource definition.
        body:
          application/json:
            schema: |
              {
                "id": "Target",
                "title": "Target",
                "description": "Target resource definition.",
                "example": {
                  "address": "arn:aws:iam::252156542789:role/ThingSpace",
                  "addressscheme": "streamawsiot",
                  "createdon": "2019-01-24T19:06:43.577Z",
                  "externalid": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
                  "id": "cea170cc-a58f-6531-fc4b-fae1ceb1a6c8",
                  "kind": "ts.target",
                  "lastupdated": "2019-01-24T19:32:31.841Z",
                  "name": "AWS Target",
                  "region": "us-east-1",
                  "version": "1.0",
                  "versionid": "caf85ff7-200e-11e9-a85b-02420a621e0a"
                },
                "type": "object",
                "properties": {
                  "address": {
                    "description": "The endpoint for data streams.",
                    "example": "https://myhost.com:1825",
                    "type": "string"
                  },
                  "addressscheme": {
                    "description": "The transport format.",
                    "example": "streamrest",
                    "type": "string"
                  },
                  "billingaccountid": {
                    "description": "The billing account ID.",
                    "type": "string"
                  },
                  "createdon": {
                    "description": "The date the resource was created.",
                    "example": "2019-01-24T19:06:43.577Z",
                    "type": "string"
                  },
                  "externalid": {
                    "description": "Security identification string.",
                    "example": "lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==",
                    "type": "string"
                  },
                  "id": {
                    "description": "ThingSpace unique ID for the target that was created.",
                    "example": "cea170cc-a58f-6531-fc4b-fae1ceb1a6c8",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Identifies the resource kind. Targets are ts.target.",
                    "example": "ts.target",
                    "type": "string"
                  },
                  "lastupdated": {
                    "description": "The date the resource was last updated.",
                    "example": "2019-01-24T19:32:31.841Z",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the target.",
                    "example": "AWS Target",
                    "type": "string"
                  },
                  "region": {
                    "description": "AWS region value.",
                    "example": "us-east-1",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the underlying schema resource.",
                    "example": "1.0",
                    "type": "string"
                  },
                  "versionid": {
                    "description": "The version of the resource.",
                    "example": "caf85ff7-200e-11e9-a85b-02420a621e0a",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description of the target.",
                    "type": "string"
                  }
                }
              }
            example: '{"address":"arn:aws:iam::252156542978:role/ThingSpace","addressscheme":"streamawsiot","billingaccountid":"1223334444-00001","createdon":"2018-12-21T04:37:42.651Z","externalid":"lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==","id":"0e411230-c3eb-64dc-f5f4-1020364aa81f","kind":"ts.target","lastupdated":"2018-12-21T04:37:42.651Z","name":"AWS Target","region":"us-east-1","version":"1.0","versionid":"27aca5a4-04da-11e9-bff3-02420a5e1b0b"}'
/m2m:
  /intelligence/wireless-coverage:
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: 'Use this query for Fixed Wireless Qualification of an address. Network types include: LTE, C-BAND and MMWAVE.'
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "GetWirelessCoverageRequestFWA",
              "title": "GetWirelessCoverageRequestFWA",
              "description": "Request for network coverage details.",
              "example": {
                "accountName": "0000123456-00001",
                "requestType": "FWA",
                "locationType": "ADDRESS",
                "locations": {
                  "addressList": [
                    {
                      "addressLine1": "street address",
                      "city": "city",
                      "state": "LA",
                      "country": "USA",
                      "zip": "00000"
                    }
                  ]
                },
                "networkTypesList": [
                  {
                    "networkType": "LTE"
                  }
                ]
              },
              "type": "object",
              "properties": {
                "accountName": {
                  "description": "Account name.",
                  "example": "0000123456-00001",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 32,
                  "pattern": "^[0-9-]{3,32}$"
                },
                "requestType": {
                  "description": "Type of request.",
                  "example": "FWA",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 12,
                  "pattern": "^[A-Za-z]{3,12}$"
                },
                "locationType": {
                  "description": "Type of location detail.",
                  "example": "ADDRESS",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 12,
                  "pattern": "^[A-Za-z]{3,12}$"
                },
                "locations": {
                  "id": "Locations",
                  "title": "Locations",
                  "description": "Location details.",
                  "type": "object",
                  "properties": {
                    "addressList": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "AddressItem",
                        "title": "AddressItem",
                        "description": "Address details.",
                        "type": "object",
                        "properties": {
                          "addressLine1": {
                            "description": "Street Address.",
                            "example": "street number and name",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[A-Za-z0-9 ,]{3,32}$"
                          },
                          "addressLine2": {
                            "description": "Optional address information.",
                            "example": "optional address information",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[A-Za-z0-9 ,]{3,32}$"
                          },
                          "city": {
                            "description": "Name of the city.",
                            "example": "name of the city",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[A-Za-z0-9 ]{3,32}$"
                          },
                          "state": {
                            "description": "State code.",
                            "example": "NY",
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 3,
                            "pattern": "^[A-Za-z]{2,3}$"
                          },
                          "country": {
                            "description": "Country.",
                            "example": "USA",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3,
                            "pattern": "^[A-Za-z]{3,3}$"
                          },
                          "zip": {
                            "description": "Five digit zipcode.",
                            "example": "10001",
                            "type": "string",
                            "minLength": 5,
                            "maxLength": 5,
                            "pattern": "^[0-9]{5,5}$"
                          },
                          "zip4": {
                            "description": "Four digit zip code.",
                            "example": "0727",
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 4,
                            "pattern": "^[0-9]{4,4}$"
                          }
                        }
                      },
                      "maxItems": 100
                    }
                  }
                },
                "networkTypesList": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "id": "NetworkType",
                    "title": "NetworkType",
                    "description": "Network type.",
                    "type": "object",
                    "properties": {
                      "networkType": {
                        "example": "LTE",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  },
                  "maxItems": 100
                }
              },
              "required": [
                "accountName",
                "requestType",
                "locationType",
                "locations",
                "networkTypesList"
              ]
            }
          example: '{"accountName":"0000123456-00001","requestType":"FWA","locationType":"ADDRESS","locations":{"addressList":[{"addressLine1":"street address","city":"city","state":"LA","country":"USA","zip":"00000"}]},"networkTypesList":[{"networkType":"LTE"}]}'
      responses:
        '200':
          description: Request ID
          body:
            application/json:
              schema: |
                {
                  "id": "WNPRequestResponse",
                  "title": "WNPRequestResponse",
                  "description": "Wireless network performance request response.",
                  "example": {
                    "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                  },
                  "type": "object",
                  "properties": {
                    "requestId": {
                      "description": "Request id.",
                      "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^[A-Za-z0-9-]{3,64}$"
                    }
                  }
                }
              example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
        '0':
          description: Error response
          body:
            application/json:
              schema: |
                {
                  "id": "WNPRestErrorResponse",
                  "title": "WNPRestErrorResponse",
                  "description": "Wireless network performance rest error response.",
                  "example": {
                    "errorCode": "400",
                    "errorMessage": "A brief description of the error code"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Rest error response.",
                      "example": "400",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "description": "Error message details.",
                      "example": "A brief description of the error code",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^[A-Za-z0-9 ]{3,64}$"
                    }
                  }
                }
              example: '{"errorCode":"400","errorMessage":"A brief description of the error code"}'
  /v1:
    /accounts/{aname}:
      uriParameters:
        aname:
          description: Account name.
          type: string
          example: Chintan_CPNStaticBulk
          required: true
          displayName: aname
      /statesandservices:
        uriParameters: {}
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Returns a list and details of all custom services and states defined for a specified account.
          responses:
            '200':
              description: The account's engagements, services, and states.
              body:
                application/json:
                  schema: |
                    {
                      "id": "AccountStatesAndServices",
                      "title": "AccountStatesAndServices",
                      "description": "Returns a list and details of all custom services and states defined for a specified account.",
                      "example": {
                        "engagement": [
                          {
                            "engagementId": "1234",
                            "chargingGroup": "Engagement1234",
                            "services": [
                              {
                                "name": "Svc1",
                                "description": "Usage Segmentation - Main Line.",
                                "states": [
                                  {
                                    "name": "Svc1 Activate",
                                    "workflowSequenceNumber": 1,
                                    "servicePlans": [
                                      "4523aef7250f67205fd5",
                                      "4d4090c0f2d48814c94d"
                                    ]
                                  },
                                  {
                                    "name": "Svc1 No Telematics",
                                    "workflowSequenceNumber": 3,
                                    "servicePlans": [
                                      "4523aef7250f67205fd5",
                                      "4d4090c0f2d48814c94d"
                                    ]
                                  },
                                  {
                                    "name": "Svc1 Deactivate",
                                    "workflowSequenceNumber": 2,
                                    "servicePlans": [
                                      "4523aef7250f67205fd5",
                                      "4d4090c0f2d48814c94d"
                                    ]
                                  }
                                ]
                              },
                              {
                                "name": "WIFI",
                                "description": "Usage Segmentation - WiFi.",
                                "states": [
                                  {
                                    "name": "WIFI Redirect",
                                    "workflowSequenceNumber": 2,
                                    "servicePlans": [
                                      "4d4090c0f2d48814c94d"
                                    ]
                                  },
                                  {
                                    "name": "WIFI Trial",
                                    "workflowSequenceNumber": 4,
                                    "servicePlans": [
                                      "4d4090c0f2d48814c94d"
                                    ]
                                  },
                                  {
                                    "name": "WIFI Goodwill",
                                    "workflowSequenceNumber": 6,
                                    "servicePlans": [
                                      "4d4090c0f2d48814c94d"
                                    ]
                                  },
                                  {
                                    "name": "WIFI Disable",
                                    "workflowSequenceNumber": 3,
                                    "servicePlans": [
                                      "4d4090c0f2d48814c94d"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "engagement": {
                          "description": "The engagements associated with the account.",
                          "example": [
                            {
                              "engagementId": "1234",
                              "chargingGroup": "Engagement1234",
                              "services": [
                                {
                                  "name": "Svc1",
                                  "description": "Usage Segmentation - Main Line.",
                                  "states": [
                                    {
                                      "name": "Svc1 Activate",
                                      "workflowSequenceNumber": 1,
                                      "servicePlans": [
                                        "4523aef7250f67205fd5",
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "Svc1 No Telematics",
                                      "workflowSequenceNumber": 3,
                                      "servicePlans": [
                                        "4523aef7250f67205fd5",
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "Svc1 Deactivate",
                                      "workflowSequenceNumber": 2,
                                      "servicePlans": [
                                        "4523aef7250f67205fd5",
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "name": "WIFI",
                                  "description": "Usage Segmentation - WiFi.",
                                  "states": [
                                    {
                                      "name": "WIFI Redirect",
                                      "workflowSequenceNumber": 2,
                                      "servicePlans": [
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "WIFI Trial",
                                      "workflowSequenceNumber": 4,
                                      "servicePlans": [
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "WIFI Goodwill",
                                      "workflowSequenceNumber": 6,
                                      "servicePlans": [
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "WIFI Disable",
                                      "workflowSequenceNumber": 3,
                                      "servicePlans": [
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "Engagement",
                            "title": "Engagement",
                            "description": "The engagements associated with the account.",
                            "example": {
                              "engagementId": "1234",
                              "chargingGroup": "Engagement1234",
                              "services": [
                                {
                                  "name": "Svc1",
                                  "description": "Usage Segmentation - Main Line.",
                                  "states": [
                                    {
                                      "name": "Svc1 Activate",
                                      "workflowSequenceNumber": 1,
                                      "servicePlans": [
                                        "4523aef7250f67205fd5",
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "Svc1 No Telematics",
                                      "workflowSequenceNumber": 3,
                                      "servicePlans": [
                                        "4523aef7250f67205fd5",
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "Svc1 Deactivate",
                                      "workflowSequenceNumber": 2,
                                      "servicePlans": [
                                        "4523aef7250f67205fd5",
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "name": "WIFI",
                                  "description": "Usage Segmentation - WiFi.",
                                  "states": [
                                    {
                                      "name": "WIFI Redirect",
                                      "workflowSequenceNumber": 2,
                                      "servicePlans": [
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "WIFI Trial",
                                      "workflowSequenceNumber": 4,
                                      "servicePlans": [
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "WIFI Goodwill",
                                      "workflowSequenceNumber": 6,
                                      "servicePlans": [
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    },
                                    {
                                      "name": "WIFI Disable",
                                      "workflowSequenceNumber": 3,
                                      "servicePlans": [
                                        "4d4090c0f2d48814c94d"
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            "type": "object",
                            "properties": {
                              "engagementId": {
                                "description": "The engagement ID.",
                                "example": "1234",
                                "type": "string"
                              },
                              "chargingGroup": {
                                "description": "The charging group name.",
                                "example": "Engagement1234",
                                "type": "string"
                              },
                              "services": {
                                "description": "The services associated with the account.",
                                "example": [
                                  {
                                    "name": "Svc1",
                                    "description": "Usage Segmentation - Main Line.",
                                    "states": [
                                      {
                                        "name": "Svc1 Activate",
                                        "workflowSequenceNumber": 1,
                                        "servicePlans": [
                                          "4523aef7250f67205fd5",
                                          "4d4090c0f2d48814c94d"
                                        ]
                                      },
                                      {
                                        "name": "Svc1 No Telematics",
                                        "workflowSequenceNumber": 3,
                                        "servicePlans": [
                                          "4523aef7250f67205fd5",
                                          "4d4090c0f2d48814c94d"
                                        ]
                                      },
                                      {
                                        "name": "Svc1 Deactivate",
                                        "workflowSequenceNumber": 2,
                                        "servicePlans": [
                                          "4523aef7250f67205fd5",
                                          "4d4090c0f2d48814c94d"
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "type": "array",
                                "items": {
                                  "id": "AccountService",
                                  "title": "AccountService",
                                  "description": "Service associated with the account.",
                                  "example": {
                                    "name": "Svc1",
                                    "description": "Usage Segmentation - Main Line.",
                                    "states": [
                                      {
                                        "name": "Svc1 Activate",
                                        "workflowSequenceNumber": 1,
                                        "servicePlans": [
                                          "4523aef7250f67205fd5",
                                          "4d4090c0f2d48814c94d"
                                        ]
                                      },
                                      {
                                        "name": "Svc1 No Telematics",
                                        "workflowSequenceNumber": 3,
                                        "servicePlans": [
                                          "4523aef7250f67205fd5",
                                          "4d4090c0f2d48814c94d"
                                        ]
                                      },
                                      {
                                        "name": "Svc1 Deactivate",
                                        "workflowSequenceNumber": 2,
                                        "servicePlans": [
                                          "4523aef7250f67205fd5",
                                          "4d4090c0f2d48814c94d"
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "The name of the service plan.",
                                      "example": "Svc1",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the service plan.",
                                      "example": "Usage Segmentation - Main Line",
                                      "type": "string"
                                    },
                                    "states": {
                                      "description": "The state of the service plan.",
                                      "example": [
                                        {
                                          "name": "Svc1 Activate",
                                          "workflowSequenceNumber": 1,
                                          "servicePlans": [
                                            "4523aef7250f67205fd5",
                                            "4d4090c0f2d48814c94d"
                                          ]
                                        }
                                      ],
                                      "type": "array",
                                      "items": {
                                        "id": "State",
                                        "title": "State",
                                        "description": "Each service includes custom states.",
                                        "example": {
                                          "name": "Svc1 Activate",
                                          "workflowSequenceNumber": 1,
                                          "servicePlans": [
                                            "4523aef7250f67205fd5",
                                            "4d4090c0f2d48814c94d"
                                          ]
                                        },
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "The name of the state.",
                                            "example": "Svc1 Activate",
                                            "type": "string"
                                          },
                                          "workflowSequenceNumber": {
                                            "description": "The workflow sequence number of this state.",
                                            "example": 1,
                                            "type": "number"
                                          },
                                          "servicePlans": {
                                            "description": "The service plans that can be used to charge for services for devices in this state.",
                                            "example": [
                                              "4523aef7250f67205fd5",
                                              "4d4090c0f2d48814c94d"
                                            ],
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "engagement"
                      ]
                    }
                  example: '{"engagement":[{"engagementId":"1234","chargingGroup":"Engagement1234","services":[{"name":"Svc1","description":"Usage Segmentation - Main Line.","states":[{"name":"Svc1 Activate","workflowSequenceNumber":1,"servicePlans":["4523aef7250f67205fd5","4d4090c0f2d48814c94d"]},{"name":"Svc1 No Telematics","workflowSequenceNumber":3,"servicePlans":["4523aef7250f67205fd5","4d4090c0f2d48814c94d"]},{"name":"Svc1 Deactivate","workflowSequenceNumber":2,"servicePlans":["4523aef7250f67205fd5","4d4090c0f2d48814c94d"]}]},{"name":"WIFI","description":"Usage Segmentation - WiFi.","states":[{"name":"WIFI Redirect","workflowSequenceNumber":2,"servicePlans":["4d4090c0f2d48814c94d"]},{"name":"WIFI Trial","workflowSequenceNumber":4,"servicePlans":["4d4090c0f2d48814c94d"]},{"name":"WIFI Goodwill","workflowSequenceNumber":6,"servicePlans":["4d4090c0f2d48814c94d"]},{"name":"WIFI Disable","workflowSequenceNumber":3,"servicePlans":["4d4090c0f2d48814c94d"]}]}]}]}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /requests/{requestId}/status:
        uriParameters:
          requestId:
            description: UUID from synchronous response.
            type: string
            example: 86c83330-4bf5-4235-9c4e-a83f93aeae4c
            required: true
            displayName: requestId
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Returns the current status of an asynchronous request that was made for a single device.
          responses:
            '200':
              description: The asynchronous request status.
              body:
                application/json:
                  schema: |
                    {
                      "id": "AsynchronousRequestResult",
                      "title": "AsynchronousRequestResult",
                      "description": "A successful request returns the request ID and the current status.",
                      "example": {
                        "requestId": "86c83330-4bf5-4235-9c4e-a83f93aeae4c",
                        "status": "Success"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "The unique ID of the asynchronous request.",
                          "example": "86c83330-4bf5-4235-9c4e-a83f93aeae4c",
                          "type": "string"
                        },
                        "status": {
                          "title": "RequestStatus",
                          "description": "The current status of the callback response.",
                          "example": "Success",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Success",
                            "Failure"
                          ]
                        }
                      }
                    }
                  example: '{"requestId":"86c83330-4bf5-4235-9c4e-a83f93aeae4c","status":"Success"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Returns information about a specified account.
        responses:
          '200':
            description: The account information.
            body:
              application/json:
                schema: |
                  {
                    "id": "Account",
                    "title": "Account",
                    "description": "Returns information about a specified account.",
                    "example": {
                      "accountName": "Chintan_CPNStaticBulk",
                      "accountNumber": "1234567890-77777",
                      "organizationName": "ChintanCPNBulk",
                      "isProvisioningAllowed": true,
                      "carriers": [
                        "Verizon Wireless"
                      ],
                      "features": [
                        "Static IP",
                        "Dynamic IP",
                        "Customer PN"
                      ],
                      "iPPools": [
                        {
                          "poolName": "ACMESTATIC001",
                          "poolType": "Static IP",
                          "isDefaultPool": true
                        },
                        {
                          "poolName": "ACMEDYNAMIC001",
                          "poolType": "Dynamic IP",
                          "isDefaultPool": false
                        }
                      ],
                      "servicePlans": [
                        {
                          "name": "",
                          "code": "92876",
                          "sizeKb": 1,
                          "carrierServicePlanCode": "",
                          "extendedAttributes": []
                        },
                        {
                          "name": "",
                          "code": "92876",
                          "sizeKb": 1,
                          "carrierServicePlanCode": "",
                          "extendedAttributes": []
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of the account.",
                        "example": "Chintan_CPNStaticBulk",
                        "type": "string"
                      },
                      "accountNumber": {
                        "description": "The billing number of the account.",
                        "example": "1234567890-77777",
                        "type": "string"
                      },
                      "organizationName": {
                        "description": "The name of the organization that the account is part of.",
                        "example": "ChintanCPNBulk",
                        "type": "string"
                      },
                      "isProvisioningAllowed": {
                        "description": "True if devices can be added to the account and activated with a single request. False if devices must be added to the account before they can be activated.",
                        "example": true,
                        "type": "boolean"
                      },
                      "carriers": {
                        "description": "The names of all carriers for the account.",
                        "example": [
                          "Verizon Wireless"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "features": {
                        "description": "The names of features that are enabled for the account.",
                        "example": [
                          "Static IP",
                          "Dynamic IP",
                          "Customer PN"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "iPPools": {
                        "description": "Array of IP pools that are available to the account.",
                        "example": [
                          {
                            "poolName": "ACMESTATIC001",
                            "poolType": "Static IP",
                            "isDefaultPool": true
                          },
                          {
                            "poolName": "ACMEDYNAMIC001",
                            "poolType": "Dynamic IP",
                            "isDefaultPool": false
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "IPPool",
                          "title": "IPPool",
                          "description": "IP pool that is available to the account.",
                          "example": {
                            "poolName": "ACMESTATIC001",
                            "poolType": "Static IP",
                            "isDefaultPool": true
                          },
                          "type": "object",
                          "properties": {
                            "poolName": {
                              "description": "The name of the IP pool.",
                              "example": "ACMESALES001",
                              "type": "string"
                            },
                            "poolType": {
                              "description": "The type of IP pool, such as “Static IP” or “Dynamic IP.”",
                              "example": "Static IP",
                              "type": "string"
                            },
                            "isDefaultPool": {
                              "description": "True if this is the default IP pool for the account.",
                              "example": true,
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "servicePlans": {
                        "description": "Array of service plans that are available to the account.",
                        "example": [
                          {
                            "name": "",
                            "code": "92876",
                            "sizeKb": 1,
                            "carrierServicePlanCode": "",
                            "extendedAttributes": []
                          },
                          {
                            "name": "",
                            "code": "92876",
                            "sizeKb": 1,
                            "carrierServicePlanCode": "",
                            "extendedAttributes": []
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "ServicePlan",
                          "title": "ServicePlan",
                          "description": "Details of the service plan.",
                          "example": {
                            "name": "2MSHR5GB",
                            "code": "M2MSHR5GB",
                            "sizeKb": 0,
                            "carrierServicePlanCode": "84638"
                          },
                          "type": "object",
                          "properties": {
                            "carrierServicePlanCode": {
                              "description": "The code that is used by the carrier for the service plan.",
                              "example": "84638",
                              "type": "string"
                            },
                            "code": {
                              "description": "The code of the service plan, which may not be the same as the name.",
                              "example": "M2MSHR5GB",
                              "type": "string"
                            },
                            "extendedAttributes": {
                              "description": "Any extended attributes for the service plan, as Key and Value pairs.",
                              "type": "array",
                              "items": {
                                "id": "CustomFields",
                                "title": "CustomFields",
                                "description": "Custom data that can be included using key-value pairs.",
                                "example": {
                                  "key": "CustomField2",
                                  "value": "SuperVend"
                                },
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "The key for an extended attribute.",
                                    "example": "CustomField2",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The value of an extended attribute.",
                                    "example": "SuperVend",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "name": {
                              "description": "The name of the service plan.",
                              "example": "2MSHR5GB",
                              "type": "string"
                            },
                            "sizeKb": {
                              "description": "The size of the service plan in kilobytes.",
                              "example": 0,
                              "type": "integer",
                              "format": "int64"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"accountName":"Chintan_CPNStaticBulk","accountNumber":"1234567890-77777","organizationName":"ChintanCPNBulk","isProvisioningAllowed":true,"carriers":["Verizon Wireless"],"features":["Static IP","Dynamic IP","Customer PN"],"iPPools":[{"poolName":"ACMESTATIC001","poolType":"Static IP","isDefaultPool":true},{"poolName":"ACMEDYNAMIC001","poolType":"Dynamic IP","isDefaultPool":false}],"servicePlans":[{"name":"","code":"92876","sizeKb":1,"carrierServicePlanCode":"","extendedAttributes":[]},{"name":"","code":"92876","sizeKb":1,"carrierServicePlanCode":"","extendedAttributes":[]}]}'
          '400':
            description: Error response.
            body:
              application/json:
                schema: |
                  {
                    "id": "ConnectivityManagementResult",
                    "title": "ConnectivityManagementResult",
                    "description": "Response to errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    }
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /leads/{aname}:
      uriParameters:
        aname:
          description: Account name.
          type: string
          example: 0252012345-00001
          required: true
          displayName: aname
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: When HTTP status is 202, a URL will be returned in the Location header of the form /leads/{aname}?next={token}. This URL can be used to request the next set of leads.
        queryParameters:
          next:
            description: Continue the previous query from the pageUrl in Location Header.
            type: integer
            required: false
            displayName: next
        responses:
          '200':
            description: The list of leads associated with the account.
            body:
              application/json:
                schema: |
                  {
                    "id": "AccountLeadsResult",
                    "title": "AccountLeadsResult",
                    "description": "Returns information for all leads associated with an account.",
                    "example": {
                      "leads": [
                        {
                          "leadId": "L-10001",
                          "leadState": "Qualified",
                          "address": {
                            "addressLine1": "1600 Pennsylvania Avenue",
                            "addressLine2": "",
                            "city": "Washington",
                            "state": "DC",
                            "zip": "20500",
                            "country": "USA"
                          }
                        }
                      ],
                      "hasMoreData": false
                    },
                    "type": "object",
                    "properties": {
                      "hasMoreData": {
                        "description": "False if no more leads.True if there is more data to be retrieved.",
                        "example": false,
                        "type": "boolean"
                      },
                      "leads": {
                        "description": "The leads associated with an account.",
                        "example": [
                          {
                            "leadId": "L-10001",
                            "leadState": "Qualified",
                            "address": {
                              "addressLine1": "1600 Pennsylvania Avenue",
                              "addressLine2": "",
                              "city": "Washington",
                              "state": "DC",
                              "zip": "20500",
                              "country": "USA"
                            }
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountLead",
                          "title": "AccountLead",
                          "description": "A successful response returns an array of lead objects.",
                          "example": {
                            "leadId": "L-10001",
                            "leadState": "Qualified",
                            "address": {
                              "addressLine1": "1600 Pennsylvania Avenue",
                              "addressLine2": "",
                              "city": "Washington",
                              "state": "DC",
                              "zip": "20500",
                              "country": "USA"
                            }
                          },
                          "type": "object",
                          "properties": {
                            "address": {
                              "id": "Address",
                              "title": "Address",
                              "description": "The customer address for the line's primary place of use, for line usage taxation.",
                              "example": {
                                "addressLine1": "1600 Pennsylvania Ave NW",
                                "city": "Washington",
                                "state": "DC",
                                "zip": "20500",
                                "country": "USA"
                              },
                              "type": "object",
                              "properties": {
                                "addressLine1": {
                                  "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                                  "example": "1600 Pennsylvania Ave NW",
                                  "type": "string"
                                },
                                "city": {
                                  "description": "The city for the line's primary place of use.",
                                  "example": "Washington",
                                  "type": "string"
                                },
                                "state": {
                                  "description": "The state for the line's primary place of use.",
                                  "example": "DC",
                                  "type": "string"
                                },
                                "zip": {
                                  "description": "The ZIP code for the line's primary place of use.",
                                  "example": "20500",
                                  "type": "string"
                                },
                                "country": {
                                  "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                                  "example": "USA",
                                  "type": "string"
                                },
                                "addressLine2": {
                                  "description": "Optional additional street address information.",
                                  "type": "string"
                                },
                                "zip4": {
                                  "description": "The ZIP+4 for the line's primary place of use.",
                                  "type": "string"
                                },
                                "phone": {
                                  "description": "A phone number where the customer can be reached.",
                                  "type": "string"
                                },
                                "phoneType": {
                                  "description": "A single letter to indicate the customer phone type.",
                                  "type": "string"
                                },
                                "emailAddress": {
                                  "description": "An email address for the customer.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "addressLine1",
                                "city",
                                "state",
                                "zip",
                                "country"
                              ]
                            },
                            "leadId": {
                              "description": "Unique number for each lead. Use this value in the leadId parameter when activating devices to credit the activations to the lead.",
                              "example": "L-10001",
                              "type": "string"
                            },
                            "leadState": {
                              "description": "The current state of the lead, such as “Qualified” or “Closed.”",
                              "example": "Qualified",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"leads":[{"leadId":"L-10001","leadState":"Qualified","address":{"addressLine1":"1600 Pennsylvania Avenue","addressLine2":"","city":"Washington","state":"DC","zip":"20500","country":"USA"}}],"hasMoreData":false}'
          '202':
            description: The list of leads associated with the account, additional leads remain.
            body:
              application/json:
                schema: |
                  {
                    "id": "AccountLeadsResult",
                    "title": "AccountLeadsResult",
                    "description": "Returns information for all leads associated with an account.",
                    "example": {
                      "leads": [
                        {
                          "leadId": "L-10001",
                          "leadState": "Qualified",
                          "address": {
                            "addressLine1": "1600 Pennsylvania Avenue",
                            "addressLine2": "",
                            "city": "Washington",
                            "state": "DC",
                            "zip": "20500",
                            "country": "USA"
                          }
                        }
                      ],
                      "hasMoreData": false
                    },
                    "type": "object",
                    "properties": {
                      "hasMoreData": {
                        "description": "False if no more leads.True if there is more data to be retrieved.",
                        "example": false,
                        "type": "boolean"
                      },
                      "leads": {
                        "description": "The leads associated with an account.",
                        "example": [
                          {
                            "leadId": "L-10001",
                            "leadState": "Qualified",
                            "address": {
                              "addressLine1": "1600 Pennsylvania Avenue",
                              "addressLine2": "",
                              "city": "Washington",
                              "state": "DC",
                              "zip": "20500",
                              "country": "USA"
                            }
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountLead",
                          "title": "AccountLead",
                          "description": "A successful response returns an array of lead objects.",
                          "example": {
                            "leadId": "L-10001",
                            "leadState": "Qualified",
                            "address": {
                              "addressLine1": "1600 Pennsylvania Avenue",
                              "addressLine2": "",
                              "city": "Washington",
                              "state": "DC",
                              "zip": "20500",
                              "country": "USA"
                            }
                          },
                          "type": "object",
                          "properties": {
                            "address": {
                              "id": "Address",
                              "title": "Address",
                              "description": "The customer address for the line's primary place of use, for line usage taxation.",
                              "example": {
                                "addressLine1": "1600 Pennsylvania Ave NW",
                                "city": "Washington",
                                "state": "DC",
                                "zip": "20500",
                                "country": "USA"
                              },
                              "type": "object",
                              "properties": {
                                "addressLine1": {
                                  "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                                  "example": "1600 Pennsylvania Ave NW",
                                  "type": "string"
                                },
                                "city": {
                                  "description": "The city for the line's primary place of use.",
                                  "example": "Washington",
                                  "type": "string"
                                },
                                "state": {
                                  "description": "The state for the line's primary place of use.",
                                  "example": "DC",
                                  "type": "string"
                                },
                                "zip": {
                                  "description": "The ZIP code for the line's primary place of use.",
                                  "example": "20500",
                                  "type": "string"
                                },
                                "country": {
                                  "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                                  "example": "USA",
                                  "type": "string"
                                },
                                "addressLine2": {
                                  "description": "Optional additional street address information.",
                                  "type": "string"
                                },
                                "zip4": {
                                  "description": "The ZIP+4 for the line's primary place of use.",
                                  "type": "string"
                                },
                                "phone": {
                                  "description": "A phone number where the customer can be reached.",
                                  "type": "string"
                                },
                                "phoneType": {
                                  "description": "A single letter to indicate the customer phone type.",
                                  "type": "string"
                                },
                                "emailAddress": {
                                  "description": "An email address for the customer.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "addressLine1",
                                "city",
                                "state",
                                "zip",
                                "country"
                              ]
                            },
                            "leadId": {
                              "description": "Unique number for each lead. Use this value in the leadId parameter when activating devices to credit the activations to the lead.",
                              "example": "L-10001",
                              "type": "string"
                            },
                            "leadState": {
                              "description": "The current state of the lead, such as “Qualified” or “Closed.”",
                              "example": "Qualified",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"leads":[{"leadId":"L-10001","leadState":"Qualified","address":{"addressLine1":"1600 Pennsylvania Avenue","addressLine2":"","city":"Washington","state":"DC","zip":"20500","country":"USA"}}],"hasMoreData":false}'
          '400':
            description: Error response.
            body:
              application/json:
                schema: |
                  {
                    "id": "ConnectivityManagementResult",
                    "title": "ConnectivityManagementResult",
                    "description": "Response to errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    }
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /groups:
      /{aname}:
        uriParameters:
          aname:
            description: Account name.
            type: string
            example: 0252012345-00001
            required: true
            displayName: aname
        /name/{gname}:
          uriParameters:
            gname:
              description: Group name.
              type: string
              required: true
              displayName: gname
          get:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: When HTTP status is 202, a URL will be returned in the Location header of the form /groups/{aname}/name/{gname}/?next={token}. This URL can be used to request the next set of groups.
            queryParameters:
              next:
                description: Continue the previous query from the pageUrl pagetoken.
                type: integer
                required: false
                displayName: next
            responses:
              '200':
                description: Successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceGroupDevicesData",
                        "title": "DeviceGroupDevicesData",
                        "description": "Returns the name, description, and list of devices in a device group.",
                        "example": {
                          "name": "Nebraska Trucks",
                          "description": "All service trucks in Nebraska.",
                          "hasMoreData": false,
                          "devices": [
                            {
                              "deviceIds": [
                                {
                                  "id": "12345",
                                  "kind": "meid"
                                },
                                {
                                  "id": "54321",
                                  "kind": "mdn"
                                }
                              ]
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description of the device group.",
                            "example": "All service trucks in Nebraska",
                            "type": "string"
                          },
                          "devices": {
                            "description": "The devices in the device group.",
                            "example": [
                              {
                                "deviceIds": [
                                  {
                                    "id": "12345",
                                    "kind": "meid"
                                  },
                                  {
                                    "id": "54321",
                                    "kind": "mdn"
                                  }
                                ]
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "AccountDeviceList",
                              "title": "AccountDeviceList",
                              "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                              "example": {
                                "deviceIds": [
                                  {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  {
                                    "kind": "iccid",
                                    "id": "89141390780800784259"
                                  }
                                ]
                              },
                              "type": "object",
                              "properties": {
                                "deviceIds": {
                                  "description": "All identifiers for the device.",
                                  "example": [
                                    {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    {
                                      "kind": "iccid",
                                      "id": "89141390780800784259"
                                    }
                                  ],
                                  "type": "array",
                                  "items": {
                                    "id": "DeviceId",
                                    "title": "DeviceId",
                                    "description": "An identifier for a single device.",
                                    "example": {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "The value of the device identifier.",
                                        "example": "990013907835573",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                        "example": "imei",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "ipAddress": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                                }
                              }
                            }
                          },
                          "hasMoreData": {
                            "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                            "example": false,
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the device group.",
                            "example": "Nebraska Trucks",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"name":"Nebraska Trucks","description":"All service trucks in Nebraska.","hasMoreData":false,"devices":[{"deviceIds":[{"id":"12345","kind":"meid"},{"id":"54321","kind":"mdn"}]}]}'
              '202':
                description: Successful response, additional groups remain.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceGroupDevicesData",
                        "title": "DeviceGroupDevicesData",
                        "description": "Returns the name, description, and list of devices in a device group.",
                        "example": {
                          "name": "Nebraska Trucks",
                          "description": "All service trucks in Nebraska.",
                          "hasMoreData": false,
                          "devices": [
                            {
                              "deviceIds": [
                                {
                                  "id": "12345",
                                  "kind": "meid"
                                },
                                {
                                  "id": "54321",
                                  "kind": "mdn"
                                }
                              ]
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description of the device group.",
                            "example": "All service trucks in Nebraska",
                            "type": "string"
                          },
                          "devices": {
                            "description": "The devices in the device group.",
                            "example": [
                              {
                                "deviceIds": [
                                  {
                                    "id": "12345",
                                    "kind": "meid"
                                  },
                                  {
                                    "id": "54321",
                                    "kind": "mdn"
                                  }
                                ]
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "AccountDeviceList",
                              "title": "AccountDeviceList",
                              "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                              "example": {
                                "deviceIds": [
                                  {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  {
                                    "kind": "iccid",
                                    "id": "89141390780800784259"
                                  }
                                ]
                              },
                              "type": "object",
                              "properties": {
                                "deviceIds": {
                                  "description": "All identifiers for the device.",
                                  "example": [
                                    {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    {
                                      "kind": "iccid",
                                      "id": "89141390780800784259"
                                    }
                                  ],
                                  "type": "array",
                                  "items": {
                                    "id": "DeviceId",
                                    "title": "DeviceId",
                                    "description": "An identifier for a single device.",
                                    "example": {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "The value of the device identifier.",
                                        "example": "990013907835573",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                        "example": "imei",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "ipAddress": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                                }
                              }
                            }
                          },
                          "hasMoreData": {
                            "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                            "example": false,
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the device group.",
                            "example": "Nebraska Trucks",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"name":"Nebraska Trucks","description":"All service trucks in Nebraska.","hasMoreData":false,"devices":[{"deviceIds":[{"id":"12345","kind":"meid"},{"id":"54321","kind":"mdn"}]}]}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Make changes to a device group, including changing the name and description, and adding or removing devices.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceGroupUpdateRequest",
                    "title": "DeviceGroupUpdateRequest",
                    "description": "Request to update device group.",
                    "example": {
                      "newGroupName": "Western region tanks",
                      "newGroupDescription": "All western region tank level monitors.",
                      "devicesToAdd": [
                        {
                          "kind": "imei",
                          "id": "990003420535537"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "devicesToAdd": {
                        "description": "Zero or more devices to add to the device group, specified by device ID. The devices will be removed from their current device groups. You can use POST /devices/actions/list to get a list of all devices in the account.",
                        "example": [
                          {
                            "kind": "imei",
                            "id": "990003420535537"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "DeviceId",
                          "title": "DeviceId",
                          "description": "An identifier for a single device.",
                          "example": {
                            "kind": "imei",
                            "id": "990013907835573"
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The value of the device identifier.",
                              "example": "990013907835573",
                              "type": "string"
                            },
                            "kind": {
                              "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                              "example": "imei",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "devicesToRemove": {
                        "description": "Zero or more devices to remove from the device group, specified by device ID. The devices will be added to the default device group.",
                        "type": "array",
                        "items": {
                          "$ref": "DeviceId"
                        }
                      },
                      "newGroupDescription": {
                        "description": "A new description for the device group. Do not include this parameter to leave the group description unchanged.",
                        "example": "All western region tank level monitors",
                        "type": "string"
                      },
                      "newGroupName": {
                        "description": "A new name for the device group. Do not include this parameter if you want to leave the group name unchanged.",
                        "example": "Western region tanks",
                        "type": "string"
                      }
                    }
                  }
                example: '{"newGroupName":"Western region tanks","newGroupDescription":"All western region tank level monitors.","devicesToAdd":[{"kind":"imei","id":"990003420535537"}]}'
            responses:
              '200':
                description: Successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementSuccessResult",
                        "title": "ConnectivityManagementSuccessResult",
                        "description": "Response to successful request.",
                        "example": {
                          "success": true
                        },
                        "type": "object",
                        "properties": {
                          "success": {
                            "description": "A value of “true” indicates that the device group was created successfully.",
                            "example": true,
                            "type": "boolean"
                          }
                        }
                      }
                    example: '{"success":true}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          delete:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Deletes a device group from the account. Devices in the group are moved to the default device group and are not deleted from the account.
            responses:
              '200':
                description: Successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementSuccessResult",
                        "title": "ConnectivityManagementSuccessResult",
                        "description": "Response to successful request.",
                        "example": {
                          "success": true
                        },
                        "type": "object",
                        "properties": {
                          "success": {
                            "description": "A value of “true” indicates that the device group was created successfully.",
                            "example": true,
                            "type": "boolean"
                          }
                        }
                      }
                    example: '{"success":true}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Returns a list of all device groups in a specified account.
          responses:
            '200':
              description: The list of device groups in the account.
              body:
                application/json:
                  schema: |
                    {
                      "description": "Device group.",
                      "example": [
                        {
                          "name": "Unassigned Devices",
                          "description": "All devices that are not in another device group.",
                          "isDefaultGroup": true,
                          "extendedAttributes": []
                        },
                        {
                          "name": "West Coast Devices",
                          "description": "",
                          "isDefaultGroup": false,
                          "extendedAttributes": []
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "DeviceGroup",
                        "title": "DeviceGroup",
                        "description": "Returns a list of all device groups in a specified account.",
                        "example": {
                          "name": "Unassigned Devices",
                          "description": "All devices that are not in another device group.",
                          "isDefaultGroup": true,
                          "extendedAttributes": []
                        },
                        "type": "object",
                        "properties": {
                          "description": {
                            "description": "The description of the device group.",
                            "example": "All devices that are not in another device group.",
                            "type": "string"
                          },
                          "extendedAttributes": {
                            "description": "Any extended attributes for the device group, as Key and Value pairs.",
                            "example": [],
                            "type": "array",
                            "items": {
                              "id": "CustomFields",
                              "title": "CustomFields",
                              "description": "Custom data that can be included using key-value pairs.",
                              "example": {
                                "key": "CustomField2",
                                "value": "SuperVend"
                              },
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "The key for an extended attribute.",
                                  "example": "CustomField2",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of an extended attribute.",
                                  "example": "SuperVend",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "isDefaultGroup": {
                            "description": "Identifies the default device group.",
                            "example": true,
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the device group.",
                            "example": "Unassigned Devices",
                            "type": "string"
                          }
                        }
                      }
                    }
                  example: '[{"name":"Unassigned Devices","description":"All devices that are not in another device group.","isDefaultGroup":true,"extendedAttributes":[]},{"name":"West Coast Devices","description":"","isDefaultGroup":false,"extendedAttributes":[]}]'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Create a new device group and optionally add devices to the group. Device groups can make it easier to manage similar devices and to get reports on their usage.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "CreateDeviceGroupRequest",
                "title": "CreateDeviceGroupRequest",
                "description": "A request to create a new device group.",
                "example": {
                  "accountName": "10001234-0001",
                  "groupName": "NV tanks",
                  "groupDescription": "Nevada tank level monitors.",
                  "devicesToAdd": [
                    {
                      "kind": "imei",
                      "id": "990003420535537"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "The Verizon billing account that the device group will belong to. An account name is usually numeric, and must include any leading zeros.",
                    "example": "10001234-0001",
                    "type": "string"
                  },
                  "devicesToAdd": {
                    "description": "Zero or more devices to add to the device group. You can use POST /devices/actions/list to get a list of all devices in the account.",
                    "example": [
                      {
                        "kind": "imei",
                        "id": "990003420535537"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "DeviceId",
                      "title": "DeviceId",
                      "description": "An identifier for a single device.",
                      "example": {
                        "kind": "imei",
                        "id": "990013907835573"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The value of the device identifier.",
                          "example": "990013907835573",
                          "type": "string"
                        },
                        "kind": {
                          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                          "example": "imei",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "groupDescription": {
                    "description": "A description for the device group.",
                    "example": "Nevada tank level monitors",
                    "type": "string"
                  },
                  "groupName": {
                    "description": "The name for the new device group. This name must be unique within the specified account.",
                    "example": "NV tanks",
                    "type": "string"
                  }
                }
              }
            example: '{"accountName":"0000123456-00001","groupName":"group name","groupDescription":"descriptive string","devicesToAdd":[{"kind":"imei","id":"15-digit IMEI"}]}'
        responses:
          '200':
            description: Successful response, Creates a new device group.
            body:
              application/json:
                schema: |
                  {
                    "id": "ConnectivityManagementSuccessResult",
                    "title": "ConnectivityManagementSuccessResult",
                    "description": "Response to successful request.",
                    "example": {
                      "success": true
                    },
                    "type": "object",
                    "properties": {
                      "success": {
                        "description": "A value of “true” indicates that the device group was created successfully.",
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  }
                example: '{"success":true}'
          '400':
            description: Error response.
            body:
              application/json:
                schema: |
                  {
                    "id": "ConnectivityManagementResult",
                    "title": "ConnectivityManagementResult",
                    "description": "Response to errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    }
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /sms:
      /{aname}:
        /history:
          uriParameters: {}
          get:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: When HTTP status is 202, a URL will be returned in the Location header of the form /sms/{aname}/history?next={token}. This URL can be used to request the next set of messages.
            queryParameters:
              next:
                description: Continue the previous query from the URL in Location Header.
                type: integer
                required: false
                displayName: next
            responses:
              '200':
                description: Successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "SMSMessagesQueryResult",
                        "title": "SMSMessagesQueryResult",
                        "description": "Response to SMS messages sent by all M2M devices associated with a billing account.",
                        "example": {
                          "messages": [
                            {
                              "deviceIds": [
                                {
                                  "id": "09623489171",
                                  "kind": "esn"
                                }
                              ],
                              "message": "testmessage1",
                              "timestamp": "2016-01-01T12:29:49-08:00"
                            },
                            {
                              "deviceIds": [
                                {
                                  "id": "09623489171",
                                  "kind": "esn"
                                }
                              ],
                              "message": "testmessage2",
                              "timestamp": "2016-01-01T12:31:02-08:00"
                            }
                          ],
                          "hasMoreData": false
                        },
                        "type": "object",
                        "properties": {
                          "hasMoreData": {
                            "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                            "example": false,
                            "type": "boolean"
                          },
                          "messages": {
                            "description": "An array of up to 100 SMS messages that were sent by devices in the account.",
                            "example": [
                              {
                                "deviceIds": [
                                  {
                                    "id": "09623489171",
                                    "kind": "esn"
                                  }
                                ],
                                "message": "testmessage1",
                                "timestamp": "2016-01-01T12:29:49-08:00"
                              },
                              {
                                "deviceIds": [
                                  {
                                    "id": "09623489171",
                                    "kind": "esn"
                                  }
                                ],
                                "message": "testmessage2",
                                "timestamp": "2016-01-01T12:31:02-08:00"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "SMSMessage",
                              "title": "SMSMessage",
                              "description": "SMS messages sent by all M2M devices associated with a billing account.",
                              "example": {
                                "deviceIds": [
                                  {
                                    "id": "09623489171",
                                    "kind": "esn"
                                  }
                                ],
                                "message": "testmessage1",
                                "timestamp": "2016-01-01T12:29:49-08:00"
                              },
                              "type": "object",
                              "properties": {
                                "deviceIds": {
                                  "description": "One or more IDs of the device that sent the message.",
                                  "example": [
                                    {
                                      "id": "09623489171",
                                      "kind": "esn"
                                    }
                                  ],
                                  "type": "array",
                                  "items": {
                                    "id": "DeviceId",
                                    "title": "DeviceId",
                                    "description": "An identifier for a single device.",
                                    "example": {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "The value of the device identifier.",
                                        "example": "990013907835573",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                        "example": "imei",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "message": {
                                  "description": "The contents of the SMS message.",
                                  "example": "testmessage1",
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "The date and time that the message was received by the Verizon ThingSpace Platform.",
                                  "example": "2016-01-01T12:29:49-08:00",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    example: '{"messages":[{"deviceIds":[{"id":"09623489171","kind":"esn"}],"message":"testmessage1","timestamp":"2016-01-01T12:29:49-08:00"},{"deviceIds":[{"id":"09623489171","kind":"esn"}],"message":"testmessage2","timestamp":"2016-01-01T12:31:02-08:00"}],"hasMoreData":false}'
              '202':
                description: Successful response, additional SMS messages remain.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "SMSMessagesQueryResult",
                        "title": "SMSMessagesQueryResult",
                        "description": "Response to SMS messages sent by all M2M devices associated with a billing account.",
                        "example": {
                          "messages": [
                            {
                              "deviceIds": [
                                {
                                  "id": "09623489171",
                                  "kind": "esn"
                                }
                              ],
                              "message": "testmessage1",
                              "timestamp": "2016-01-01T12:29:49-08:00"
                            },
                            {
                              "deviceIds": [
                                {
                                  "id": "09623489171",
                                  "kind": "esn"
                                }
                              ],
                              "message": "testmessage2",
                              "timestamp": "2016-01-01T12:31:02-08:00"
                            }
                          ],
                          "hasMoreData": false
                        },
                        "type": "object",
                        "properties": {
                          "hasMoreData": {
                            "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                            "example": false,
                            "type": "boolean"
                          },
                          "messages": {
                            "description": "An array of up to 100 SMS messages that were sent by devices in the account.",
                            "example": [
                              {
                                "deviceIds": [
                                  {
                                    "id": "09623489171",
                                    "kind": "esn"
                                  }
                                ],
                                "message": "testmessage1",
                                "timestamp": "2016-01-01T12:29:49-08:00"
                              },
                              {
                                "deviceIds": [
                                  {
                                    "id": "09623489171",
                                    "kind": "esn"
                                  }
                                ],
                                "message": "testmessage2",
                                "timestamp": "2016-01-01T12:31:02-08:00"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "SMSMessage",
                              "title": "SMSMessage",
                              "description": "SMS messages sent by all M2M devices associated with a billing account.",
                              "example": {
                                "deviceIds": [
                                  {
                                    "id": "09623489171",
                                    "kind": "esn"
                                  }
                                ],
                                "message": "testmessage1",
                                "timestamp": "2016-01-01T12:29:49-08:00"
                              },
                              "type": "object",
                              "properties": {
                                "deviceIds": {
                                  "description": "One or more IDs of the device that sent the message.",
                                  "example": [
                                    {
                                      "id": "09623489171",
                                      "kind": "esn"
                                    }
                                  ],
                                  "type": "array",
                                  "items": {
                                    "id": "DeviceId",
                                    "title": "DeviceId",
                                    "description": "An identifier for a single device.",
                                    "example": {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "The value of the device identifier.",
                                        "example": "990013907835573",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                        "example": "imei",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "message": {
                                  "description": "The contents of the SMS message.",
                                  "example": "testmessage1",
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "The date and time that the message was received by the Verizon ThingSpace Platform.",
                                  "example": "2016-01-01T12:29:49-08:00",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    example: '{"messages":[{"deviceIds":[{"id":"09623489171","kind":"esn"}],"message":"testmessage1","timestamp":"2016-01-01T12:29:49-08:00"},{"deviceIds":[{"id":"09623489171","kind":"esn"}],"message":"testmessage2","timestamp":"2016-01-01T12:31:02-08:00"}],"hasMoreData":false}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /startCallbacks:
          uriParameters: {}
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Tells the ThingSpace Platform to start sending mobile-originated SMS messages through the EnhancedConnectivityService callback service. SMS messages from devices are queued until they are retrieved by your application, either by callback or synchronously with GET /sms/{accountName}/history.
            responses:
              '200':
                description: Successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementSuccessResult",
                        "title": "ConnectivityManagementSuccessResult",
                        "description": "Response to successful request.",
                        "example": {
                          "success": true
                        },
                        "type": "object",
                        "properties": {
                          "success": {
                            "description": "A value of “true” indicates that the device group was created successfully.",
                            "example": true,
                            "type": "boolean"
                          }
                        }
                      }
                    example: '{"success":true}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /{accountName}:
        /history:
          uriParameters: {}
          get:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Retrieves queued SMS messages sent by all M2M MC devices associated with an account.
            queryParameters:
              next:
                description: Continue the previous query from the pageUrl in Location Header
                type: string
                example: TheURLForTheNextQuery
                required: false
                displayName: next
                pattern: ^[A-Za-z0-9]{3,32}$
                minLength: '3'
                maxLength: '64'
            responses:
              '200':
                description: Successful response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "SmsMessagesResponse",
                        "title": "SmsMessagesResponse",
                        "type": "object",
                        "properties": {
                          "messages": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "GIOSmsMessage",
                              "title": "GIOSmsMessage",
                              "type": "object",
                              "properties": {
                                "deviceIds": {
                                  "description": "",
                                  "type": "array",
                                  "items": {
                                    "id": "GIODeviceId",
                                    "title": "GIODeviceId",
                                    "type": "object",
                                    "properties": {
                                      "kind": {
                                        "example": "eid",
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 6,
                                        "pattern": "^[A-Za-z]{3,6}$"
                                      },
                                      "id": {
                                        "example": "12345678901234567890123456789012",
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 32,
                                        "pattern": "^[0-9]{3,32}$"
                                      }
                                    }
                                  },
                                  "maxItems": 100
                                },
                                "message": {
                                  "example": "a text message",
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 120,
                                  "pattern": "^[A-Za-z0-9 ]{3,120}$"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              }
                            },
                            "maxItems": 5
                          },
                          "hasMoreData": {
                            "example": false,
                            "type": "boolean"
                          }
                        }
                      }
              '0':
                description: Error response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "GIORestErrorResponse",
                        "title": "GIORestErrorResponse",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "400",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3,
                            "pattern": "^[0-9]{3,3}$"
                          },
                          "errorMessage": {
                            "example": "a brief description of the error",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 1000,
                            "pattern": "^[A-Za-z0-9 ]{3,32}$"
                          }
                        }
                      }
        /startCallbacks:
          uriParameters: {}
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Starts delivery of SMS messages for the specified account.
            responses:
              '200':
                description: Request Success Message
                body:
                  application/json:
                    schema: |
                      {
                        "id": "SuccessResponse",
                        "title": "SuccessResponse",
                        "type": "object",
                        "properties": {
                          "success": {
                            "example": true,
                            "type": "boolean"
                          }
                        }
                      }
              '0':
                description: Error response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "GIORestErrorResponse",
                        "title": "GIORestErrorResponse",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "400",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3,
                            "pattern": "^[0-9]{3,3}$"
                          },
                          "errorMessage": {
                            "example": "a brief description of the error",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 1000,
                            "pattern": "^[A-Za-z0-9 ]{3,32}$"
                          }
                        }
                      }
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Sends an SMS message to one device. Messages are queued on the M2M MC Platform and sent as soon as possible, but they may be delayed due to traffic and routing considerations.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "GIOSMSSendRequest",
                "title": "GIOSMSSendRequest",
                "description": "SMS message to an indiividual device.",
                "type": "object",
                "properties": {
                  "deviceIds": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "GIODeviceId",
                      "title": "GIODeviceId",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "example": "eid",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 6,
                          "pattern": "^[A-Za-z]{3,6}$"
                        },
                        "id": {
                          "example": "12345678901234567890123456789012",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[0-9]{3,32}$"
                        }
                      }
                    },
                    "maxItems": 100
                  },
                  "smsMessage": {
                    "example": "A text message",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 64,
                    "pattern": "^[A-Za-z0-9 ]{3,64}$"
                  },
                  "accountName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "customFields": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "KvPair",
                      "title": "KvPair",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        },
                        "value": {
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    },
                    "maxItems": 5
                  },
                  "dataEncoding": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "groupName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "servicePlan": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "timeToLive": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  }
                },
                "required": [
                  "deviceIds",
                  "smsMessage"
                ]
              }
            example: ''
        responses:
          '200':
            description: Request ID
            body:
              application/json:
                schema: |
                  {
                    "id": "GIORequestResponse",
                    "title": "GIORequestResponse",
                    "type": "object",
                    "properties": {
                      "requestId": {
                        "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 64,
                        "pattern": "^[A-Za-z0-9\\-]{3,64}$"
                      }
                    }
                  }
          '0':
            description: Error response
            body:
              application/json:
                schema: |
                  {
                    "id": "GIORestErrorResponse",
                    "title": "GIORestErrorResponse",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "400",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 3,
                        "pattern": "^[0-9]{3,3}$"
                      },
                      "errorMessage": {
                        "example": "a brief description of the error",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9 ]{3,32}$"
                      }
                    }
                  }
    /callbacks/{aname}:
      uriParameters:
        aname:
          description: Account name.
          type: string
          example: 0252012345-00001
          required: true
          displayName: aname
      /name/{sname}:
        uriParameters:
          sname:
            description: Service name.
            type: string
            example: CarrierService
            required: true
            displayName: sname
        delete:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Stops ThingSpace from sending callback messages for the specified account and service.
          responses:
            '200':
              description: Response for a request to deregister a callback.
              body:
                application/json:
                  schema: |
                    {
                      "id": "CallbackActionResult",
                      "title": "CallbackActionResult",
                      "description": "Response to a callback action.",
                      "example": {
                        "accountName": "122333444-00002",
                        "serviceName": "CarrierService"
                      },
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "The name of the billing account.",
                          "example": "122333444-00002",
                          "type": "string"
                        },
                        "serviceName": {
                          "description": "The name of the callback service that was registered/deregistered.",
                          "example": "CarrierService",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"accountName":"1223334444-00001","serviceName":"CarrierService"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Returns the name and endpoint URL of the callback listening services registered for a given account.
        responses:
          '200':
            description: A list of callback listeners.
            body:
              application/json:
                schema: |
                  {
                    "description": "",
                    "example": [
                      {
                        "accountName": "0252012345-00001",
                        "serviceName": "CarrierService",
                        "url": "http://10.120.102.147:50569/CallbackListener/Carrier.asmx"
                      },
                      {
                        "accountName": "0252012345-00001",
                        "password": "drowssap",
                        "serviceName": "DeviceUsage",
                        "url": "http://10.120.102.147:50569/CallbackListener/Usage.asmx",
                        "username": "zaffod"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "ConnectivityManagementCallback",
                      "title": "ConnectivityManagementCallback",
                      "description": "Includes callback listeners that were registered through the Connectivity Management API.",
                      "example": {
                        "accountName": "0252012345-00001",
                        "password": "drowssap",
                        "serviceName": "DeviceUsage",
                        "url": "http://10.120.102.147:50569/CallbackListener/Usage.asmx",
                        "username": "zaffod"
                      },
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "The name of the billing account for which callback messages will be sent.",
                          "example": "0252012345-00001",
                          "type": "string"
                        },
                        "password": {
                          "description": "The password defined when a URL was registered for the callback service, or an empty string if no password was defined.",
                          "example": "drowssap",
                          "type": "string"
                        },
                        "serviceName": {
                          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
                          "example": "DeviceUsage",
                          "type": "string"
                        },
                        "url": {
                          "description": "The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.",
                          "example": "http://10.120.102.147:50569/CallbackListener/Usage.asmx",
                          "type": "string"
                        },
                        "username": {
                          "description": "The username defined when a URL was registered for the callback service, or an empty string if no username was defined.",
                          "example": "zaffod",
                          "type": "string"
                        }
                      }
                    }
                  }
                example: '[{"accountName":"0252012345-00001","serviceName":"CarrierService","url":"http://10.120.102.147:50569/CallbackListener/Carrier.asmx"},{"accountName":"0252012345-00001","password":"drowssap","serviceName":"DeviceUsage","url":"http://10.120.102.147:50569/CallbackListener/Usage.asmx","username":"zaffod"}]'
          '400':
            description: Error response.
            body:
              application/json:
                schema: |
                  {
                    "id": "ConnectivityManagementResult",
                    "title": "ConnectivityManagementResult",
                    "description": "Response to errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    }
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: You are responsible for creating and running a listening process on your server at that URL.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "RegisterCallbackRequest",
                "title": "RegisterCallbackRequest",
                "description": "Request to register a callback.",
                "example": {
                  "name": "CarrierService",
                  "url": "https://mock.thingspace.verizon.com/webhook"
                },
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the callback service that you want to subscribe to.",
                    "example": "CarrierService",
                    "type": "string"
                  },
                  "url": {
                    "description": "The address on your server where you have enabled a listening service for callback messages.",
                    "example": "https://mock.thingspace.verizon.com/webhook",
                    "type": "string"
                  },
                  "username": {
                    "description": "The user name that the M2M Platform should return in the callback messages.",
                    "type": "string"
                  },
                  "password": {
                    "description": "The password that the M2M Platform should return in the callback messages.",
                    "type": "string"
                  }
                }
              }
            example: '{"name":"CarrierService","url":"https://mock.thingspace.verizon.com/webhook"}'
        responses:
          '200':
            description: A success response for registering a callback.
            body:
              application/json:
                schema: |
                  {
                    "id": "CallbackActionResult",
                    "title": "CallbackActionResult",
                    "description": "Response to a callback action.",
                    "example": {
                      "accountName": "122333444-00002",
                      "serviceName": "CarrierService"
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of the billing account.",
                        "example": "122333444-00002",
                        "type": "string"
                      },
                      "serviceName": {
                        "description": "The name of the callback service that was registered/deregistered.",
                        "example": "CarrierService",
                        "type": "string"
                      }
                    }
                  }
                example: '{"accountName":"122333444-00002","serviceName":"CarrierService"}'
          '400':
            description: Error response.
            body:
              application/json:
                schema: |
                  {
                    "id": "ConnectivityManagementResult",
                    "title": "ConnectivityManagementResult",
                    "description": "Response to errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    }
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /plans/{aname}:
      uriParameters:
        aname:
          description: Account name.
          type: string
          example: 0252012345-00001
          required: true
          displayName: aname
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Returns a list of all data service plans that are associated with a specified billing account. When you send a request to /devices/actions/activate to activate a line of service you must specify the code for one of the service plans associated with your account.
        responses:
          '200':
            description: The list of service plans associated with the account.
            body:
              application/json:
                schema: |
                  {
                    "description": "List a service plan response.",
                    "example": [
                      {
                        "name": "2MSHR5GB",
                        "code": "M2MSHR5GB",
                        "sizeKb": 0,
                        "carrierServicePlanCode": "84638"
                      },
                      {
                        "name": "TNTL200TALK",
                        "code": "NTL200TALK",
                        "sizeKb": 0,
                        "carrierServicePlanCode": "74644"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "ServicePlan",
                      "title": "ServicePlan",
                      "description": "Details of the service plan.",
                      "example": {
                        "name": "2MSHR5GB",
                        "code": "M2MSHR5GB",
                        "sizeKb": 0,
                        "carrierServicePlanCode": "84638"
                      },
                      "type": "object",
                      "properties": {
                        "carrierServicePlanCode": {
                          "description": "The code that is used by the carrier for the service plan.",
                          "example": "84638",
                          "type": "string"
                        },
                        "code": {
                          "description": "The code of the service plan, which may not be the same as the name.",
                          "example": "M2MSHR5GB",
                          "type": "string"
                        },
                        "extendedAttributes": {
                          "description": "Any extended attributes for the service plan, as Key and Value pairs.",
                          "type": "array",
                          "items": {
                            "id": "CustomFields",
                            "title": "CustomFields",
                            "description": "Custom data that can be included using key-value pairs.",
                            "example": {
                              "key": "CustomField2",
                              "value": "SuperVend"
                            },
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key for an extended attribute.",
                                "example": "CustomField2",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of an extended attribute.",
                                "example": "SuperVend",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "name": {
                          "description": "The name of the service plan.",
                          "example": "2MSHR5GB",
                          "type": "string"
                        },
                        "sizeKb": {
                          "description": "The size of the service plan in kilobytes.",
                          "example": 0,
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                example: '[{"name":"2MSHR5GB","code":"M2MSHR5GB","sizeKb":0,"carrierServicePlanCode":"84638"},{"name":"TNTL200TALK","code":"NTL200TALK","sizeKb":0,"carrierServicePlanCode":"74644"}]'
          '400':
            description: Error response.
            body:
              application/json:
                schema: |
                  {
                    "id": "ConnectivityManagementResult",
                    "title": "ConnectivityManagementResult",
                    "description": "Response to errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    }
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /triggers:
      /{triggerId}:
        uriParameters:
          triggerId:
            description: trigger ID
            type: string
            example: be1b5958-3e11-41db-9abd-b1b7618c0035
            required: true
            displayName: triggerId
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: This corresponds to the M2M-MC SOAP interface, ```GetTriggers```.
          responses:
            '200':
              description: Trigger information associated to a Trigger Id
              body:
                application/json:
                  schema: |
                    {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "GetTriggerResponseList",
                        "title": "GetTriggerResponseList",
                        "type": "object",
                        "properties": {
                          "triggers": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "GetTriggerResponse",
                              "title": "GetTriggerResponse",
                              "type": "object",
                              "properties": {
                                "accountName": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "comparator": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "createdAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "groupName": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "modifiedAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "notificationGroupName": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "organizationName": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "smsType": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "threshold": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "thresholdUnit": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "triggerCategory": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "triggerCycle": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "triggerId": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "triggerName": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                }
                              }
                            },
                            "maxItems": 3
                          }
                        }
                      },
                      "maxItems": 5
                    }
            '400':
              description: Bad request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
            '401':
              description: Unauthorized
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
            '403':
              description: Forbidden
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
            '404':
              description: Not Found / Does not exist
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
            '406':
              description: Format / Request Unacceptable
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
            '429':
              description: Too many requests
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
        delete:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Deletes a specific trigger ID
          responses:
            '200':
              description: The ID of the deleted trigger is returned
              body:
                application/json:
                  schema: |
                    {
                      "id": "AnomalyDetectionTrigger",
                      "title": "AnomalyDetectionTrigger",
                      "description": "Trigger for anomaly detection.",
                      "example": {
                        "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d"
                      },
                      "type": "object",
                      "properties": {
                        "triggerId": {
                          "description": "Trigger ID to identify the request in a callback.",
                          "example": "be1b5958-3e11-41db-9abd-b1b7618c0035",
                          "type": "string"
                        }
                      }
                    }
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This corresponds to the M2M-MC SOAP interface, ```GetTriggers```.
        responses:
          '200':
            description: List of triggers associated to a Contact
            body:
              application/json:
                schema: |
                  {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "GetTriggerResponseList",
                      "title": "GetTriggerResponseList",
                      "type": "object",
                      "properties": {
                        "triggers": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "GetTriggerResponse",
                            "title": "GetTriggerResponse",
                            "type": "object",
                            "properties": {
                              "accountName": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "comparator": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "groupName": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "notificationGroupName": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "organizationName": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "smsType": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "threshold": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "thresholdUnit": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "triggerCategory": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "triggerCycle": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "triggerId": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              },
                              "triggerName": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[A-Za-z0-9]{3,32}$"
                              }
                            }
                          },
                          "maxItems": 3
                        }
                      }
                    },
                    "maxItems": 10
                  }
          '400':
            description: Bad request
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '401':
            description: Unauthorized
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '403':
            description: Forbidden
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '404':
            description: Not Found / Does not exist
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '406':
            description: Format / Request Unacceptable
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '429':
            description: Too many requests
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '0':
            description: Error response
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
      put:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This corresponds to the M2M-MC SOAP interface, ```UpdateTriggerRequest```.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "UpdateTriggerRequest",
                "title": "UpdateTriggerRequest",
                "description": "Update Trigger Request",
                "type": "object",
                "properties": {
                  "accountName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "anomalyTriggerRequest": {
                    "id": "AnomalyTriggerRequest",
                    "title": "AnomalyTriggerRequest",
                    "description": "The details of the UsageAnomaly trigger.",
                    "example": {
                      "accountNames": "0000123456-00001",
                      "includeAbnormal": true,
                      "includeVeryAbnormal": true,
                      "includeUnderExpectedUsage": true,
                      "includeOverExpectedUsage": true
                    },
                    "type": "object",
                    "properties": {
                      "accountNames": {
                        "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
                        "example": "0000123456-00001",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32
                      },
                      "includeAbnormal": {
                        "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
                        "example": true,
                        "type": "boolean"
                      },
                      "includeVeryAbnormal": {
                        "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
                        "example": true,
                        "type": "boolean"
                      },
                      "includeUnderExpectedUsage": {
                        "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
                        "example": true,
                        "type": "boolean"
                      },
                      "includeOverExpectedUsage": {
                        "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "cycleType": {
                    "title": "CycleType",
                    "type": "string",
                    "enum": [
                      "cycleone",
                      "cycletwo"
                    ]
                  },
                  "dataTriggerRequest": {
                    "id": "DataTriggerRequest",
                    "title": "DataTriggerRequest",
                    "type": "object",
                    "properties": {
                      "comparator": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "threshold": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "thresholdUnit": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  },
                  "groupName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "promoAlertTriggerRequest": {
                    "id": "PromoAlertTriggerRequest",
                    "title": "PromoAlertTriggerRequest",
                    "type": "object",
                    "properties": {
                      "dataPercentage50": {
                        "type": "boolean"
                      },
                      "dataPercentage75": {
                        "type": "boolean"
                      },
                      "dataPercentage90": {
                        "type": "boolean"
                      },
                      "noOfDaysB4PromoExp": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 180.0,
                        "format": "int32"
                      },
                      "smsPercentage50": {
                        "type": "boolean"
                      },
                      "smsPercentage75": {
                        "type": "boolean"
                      },
                      "smsPercentage90": {
                        "type": "boolean"
                      }
                    }
                  },
                  "sessionTriggerRequest": {
                    "id": "SessionTriggerRequest",
                    "title": "SessionTriggerRequest",
                    "type": "object",
                    "properties": {
                      "comparator": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "threshold": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      }
                    }
                  },
                  "smsTriggerRequest": {
                    "id": "SMSTriggerRequest",
                    "title": "SMSTriggerRequest",
                    "type": "object",
                    "properties": {
                      "comparator": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "smsType": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "threshold": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      }
                    }
                  },
                  "triggerCategory": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "triggerId": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "triggerName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  }
                }
              }
            example: ''
        responses:
          '200':
            description: Trigger ID
            body:
              application/json:
                schema: |
                  {
                    "id": "AnomalyDetectionTrigger",
                    "title": "AnomalyDetectionTrigger",
                    "description": "Trigger for anomaly detection.",
                    "example": {
                      "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d"
                    },
                    "type": "object",
                    "properties": {
                      "triggerId": {
                        "description": "Trigger ID to identify the request in a callback.",
                        "example": "be1b5958-3e11-41db-9abd-b1b7618c0035",
                        "type": "string"
                      }
                    }
                  }
          '400':
            description: Bad request
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '401':
            description: Unauthorized
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '403':
            description: Forbidden
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '404':
            description: Not Found / Does not exist
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '406':
            description: Format / Request Unacceptable
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '429':
            description: Too many requests
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '0':
            description: Error response
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This corresponds to the M2M-MC SOAP interface, ```CreateTrigger```.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "CreateTriggerRequest",
                "title": "CreateTriggerRequest",
                "description": "Create Trigger Request",
                "type": "object",
                "properties": {
                  "accountName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "anomalyTriggerRequest": {
                    "id": "AnomalyTriggerRequest",
                    "title": "AnomalyTriggerRequest",
                    "description": "The details of the UsageAnomaly trigger.",
                    "example": {
                      "accountNames": "0000123456-00001",
                      "includeAbnormal": true,
                      "includeVeryAbnormal": true,
                      "includeUnderExpectedUsage": true,
                      "includeOverExpectedUsage": true
                    },
                    "type": "object",
                    "properties": {
                      "accountNames": {
                        "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
                        "example": "0000123456-00001",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32
                      },
                      "includeAbnormal": {
                        "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
                        "example": true,
                        "type": "boolean"
                      },
                      "includeVeryAbnormal": {
                        "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
                        "example": true,
                        "type": "boolean"
                      },
                      "includeUnderExpectedUsage": {
                        "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
                        "example": true,
                        "type": "boolean"
                      },
                      "includeOverExpectedUsage": {
                        "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
                        "example": true,
                        "type": "boolean"
                      }
                    }
                  },
                  "dataTriggerRequest": {
                    "id": "DataTriggerRequest",
                    "title": "DataTriggerRequest",
                    "type": "object",
                    "properties": {
                      "comparator": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "threshold": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "thresholdUnit": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  },
                  "groupName": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "sessionTriggerRequest": {
                    "id": "SessionTriggerRequest",
                    "title": "SessionTriggerRequest",
                    "type": "object",
                    "properties": {
                      "comparator": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "threshold": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      }
                    }
                  },
                  "smsTriggerRequest": {
                    "id": "SMSTriggerRequest",
                    "title": "SMSTriggerRequest",
                    "type": "object",
                    "properties": {
                      "comparator": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "smsType": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "threshold": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      }
                    }
                  },
                  "triggerCategory": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  },
                  "triggerCycle": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 32,
                    "pattern": "^[A-Za-z0-9]{3,32}$"
                  }
                }
              }
            example: ''
        responses:
          '200':
            description: Trigger ID
            body:
              application/json:
                schema: |
                  {
                    "id": "AnomalyDetectionTrigger",
                    "title": "AnomalyDetectionTrigger",
                    "description": "Trigger for anomaly detection.",
                    "example": {
                      "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d"
                    },
                    "type": "object",
                    "properties": {
                      "triggerId": {
                        "description": "Trigger ID to identify the request in a callback.",
                        "example": "be1b5958-3e11-41db-9abd-b1b7618c0035",
                        "type": "string"
                      }
                    }
                  }
          '400':
            description: Bad request
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '401':
            description: Unauthorized
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '403':
            description: Forbidden
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '404':
            description: Not Found / Does not exist
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '406':
            description: Format / Request Unacceptable
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '429':
            description: Too many requests
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
          '0':
            description: Error response
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
    /devices:
      /availability/actions/list:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Checks whether specified devices are registered by the manufacturer with the Verizon network and are available to be activated.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceActivationRequest",
                  "title": "DeviceActivationRequest",
                  "description": "Request to check if devices can be activated or not.",
                  "example": {
                    "accountName": "0212345678-00001",
                    "devices": [
                      {
                        "deviceIds": [
                          {
                            "kind": "meid",
                            "id": "A100008385E561"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "The name of a billing account.",
                      "example": "0212345678-00001",
                      "type": "string"
                    },
                    "devices": {
                      "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
                      "example": [
                        {
                          "deviceIds": [
                            {
                              "kind": "meid",
                              "id": "A100008385E561"
                            }
                          ]
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "AccountDeviceList",
                        "title": "AccountDeviceList",
                        "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                        "example": {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907835573"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800784259"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "deviceIds": {
                            "description": "All identifiers for the device.",
                            "example": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "DeviceId",
                              "title": "DeviceId",
                              "description": "An identifier for a single device.",
                              "example": {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The value of the device identifier.",
                                  "example": "990013907835573",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                  "example": "imei",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "ipAddress": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"accountName":"0212345678-00001","devices":[{"deviceIds":[{"kind":"meid","id":"A100008385E561"}]}]}'
          responses:
            '200':
              description: Request ID received on a successful response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceManagementResult",
                      "title": "DeviceManagementResult",
                      "description": "Response to activate service for one or more devices so that they can send and receive data.",
                      "example": {
                        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "A unique string that associates the request with the results that are sent via a callback service.",
                          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /connections/actions/listHistory:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Each response includes a maximum of 500 records. To obtain more records, you can call the API multiple times, adjusting the earliest value each time to start where the previous request finished.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceConnectionListRequest",
                  "title": "DeviceConnectionListRequest",
                  "description": "Query to retrieve device connection history.",
                  "example": {
                    "deviceId": {
                      "id": "89141390780800784259",
                      "kind": "iccid"
                    },
                    "earliest": "2015-09-16T00:00:01Z",
                    "latest": "2010-09-18T00:00:01Z"
                  },
                  "type": "object",
                  "properties": {
                    "deviceId": {
                      "id": "DeviceId",
                      "title": "DeviceId",
                      "description": "An identifier for a single device.",
                      "example": {
                        "kind": "imei",
                        "id": "990013907835573"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The value of the device identifier.",
                          "example": "990013907835573",
                          "type": "string"
                        },
                        "kind": {
                          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                          "example": "imei",
                          "type": "string"
                        }
                      }
                    },
                    "earliest": {
                      "description": "The earliest date and time for which you want connection events.",
                      "example": "2015-09-16T00:00:01Z",
                      "type": "string"
                    },
                    "latest": {
                      "description": "The last date and time for which you want connection events.",
                      "example": "2010-09-18T00:00:01Z",
                      "type": "string"
                    }
                  }
                }
              example: '{"deviceId":{"id":"89141390780800784259","kind":"iccid"},"earliest":"2015-09-16T00:00:01Z","latest":"2010-09-18T00:00:01Z"}'
          responses:
            '200':
              description: List of device connection events, sorted by the occurredAt timestamp, oldest first.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectionHistoryResult",
                      "title": "ConnectionHistoryResult",
                      "description": "Response containing the connection history. It is a list of Network Connection Events for a device.",
                      "example": {
                        "connectionHistory": [
                          {
                            "connectionEventAttributes": [
                              {
                                "key": "BytesUsed",
                                "value": "0"
                              },
                              {
                                "key": "Event",
                                "value": "Start"
                              }
                            ],
                            "extendedAttributes": [],
                            "occurredAt": "2015-12-17T14:12:36-05:00"
                          },
                          {
                            "connectionEventAttributes": [
                              {
                                "key": "BytesUsed",
                                "value": "419863234"
                              },
                              {
                                "key": "Event",
                                "value": "Stop"
                              },
                              {
                                "key": "Msisdn",
                                "value": "15086303371"
                              }
                            ],
                            "extendedAttributes": [],
                            "occurredAt": "2015-12-19T01:20:00-05:00"
                          }
                        ],
                        "hasMoreData": false
                      },
                      "type": "object",
                      "properties": {
                        "connectionHistory": {
                          "description": "Device connection events, sorted by the occurredAt timestamp, oldest first.",
                          "example": [
                            {
                              "connectionEventAttributes": [
                                {
                                  "key": "BytesUsed",
                                  "value": "0"
                                },
                                {
                                  "key": "Event",
                                  "value": "Start"
                                }
                              ],
                              "extendedAttributes": [],
                              "occurredAt": "2015-12-17T14:12:36-05:00"
                            },
                            {
                              "connectionEventAttributes": [
                                {
                                  "key": "BytesUsed",
                                  "value": "419863234"
                                },
                                {
                                  "key": "Event",
                                  "value": "Stop"
                                },
                                {
                                  "key": "Msisdn",
                                  "value": "15086303371"
                                }
                              ],
                              "extendedAttributes": [],
                              "occurredAt": "2015-12-19T01:20:00-05:00"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "ConnectionEvent",
                            "title": "ConnectionEvent",
                            "description": "Network connection events for a device during a specified time period.",
                            "example": {
                              "connectionEventAttributes": [
                                {
                                  "key": "BytesUsed",
                                  "value": "0"
                                },
                                {
                                  "key": "Event",
                                  "value": "Start"
                                }
                              ],
                              "extendedAttributes": [],
                              "occurredAt": "2015-12-17T14:12:36-05:00"
                            },
                            "type": "object",
                            "properties": {
                              "connectionEventAttributes": {
                                "description": "The attributes that describe the connection event.",
                                "example": [
                                  {
                                    "key": "BytesUsed",
                                    "value": "0"
                                  },
                                  {
                                    "key": "Event",
                                    "value": "Start"
                                  }
                                ],
                                "type": "array",
                                "items": {
                                  "id": "CustomFields",
                                  "title": "CustomFields",
                                  "description": "Custom data that can be included using key-value pairs.",
                                  "example": {
                                    "key": "CustomField2",
                                    "value": "SuperVend"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "The key for an extended attribute.",
                                      "example": "CustomField2",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The value of an extended attribute.",
                                      "example": "SuperVend",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "extendedAttributes": {
                                "description": "Currently not used.",
                                "type": "array",
                                "items": {
                                  "$ref": "CustomFields"
                                }
                              },
                              "occurredAt": {
                                "description": "The date and time when the connection event occured.",
                                "example": "2015-12-17T14:12:36-05:00",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "hasMoreData": {
                          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved. Send another request, adjusting the earliest value in the request based on the occuredAt value for the last device in the current response.",
                          "example": false,
                          "type": "boolean"
                        }
                      }
                    }
                  example: '{"connectionHistory":[{"connectionEventAttributes":[{"key":"BytesUsed","value":"0"},{"key":"Event","value":"Start"}],"extendedAttributes":[],"occurredAt":"2015-12-17T14:12:36-05:00"},{"connectionEventAttributes":[{"key":"BytesUsed","value":"419863234"},{"key":"Event","value":"Stop"},{"key":"Msisdn","value":"15086303371"}],"extendedAttributes":[],"occurredAt":"2015-12-19T01:20:00-05:00"}],"hasMoreData":false}'
            '202':
              description: List of device connection events, sorted by the occurredAt timestamp, oldest first. Additional events remain.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectionHistoryResult",
                      "title": "ConnectionHistoryResult",
                      "description": "Response containing the connection history. It is a list of Network Connection Events for a device.",
                      "example": {
                        "connectionHistory": [
                          {
                            "connectionEventAttributes": [
                              {
                                "key": "BytesUsed",
                                "value": "0"
                              },
                              {
                                "key": "Event",
                                "value": "Start"
                              }
                            ],
                            "extendedAttributes": [],
                            "occurredAt": "2015-12-17T14:12:36-05:00"
                          },
                          {
                            "connectionEventAttributes": [
                              {
                                "key": "BytesUsed",
                                "value": "419863234"
                              },
                              {
                                "key": "Event",
                                "value": "Stop"
                              },
                              {
                                "key": "Msisdn",
                                "value": "15086303371"
                              }
                            ],
                            "extendedAttributes": [],
                            "occurredAt": "2015-12-19T01:20:00-05:00"
                          }
                        ],
                        "hasMoreData": false
                      },
                      "type": "object",
                      "properties": {
                        "connectionHistory": {
                          "description": "Device connection events, sorted by the occurredAt timestamp, oldest first.",
                          "example": [
                            {
                              "connectionEventAttributes": [
                                {
                                  "key": "BytesUsed",
                                  "value": "0"
                                },
                                {
                                  "key": "Event",
                                  "value": "Start"
                                }
                              ],
                              "extendedAttributes": [],
                              "occurredAt": "2015-12-17T14:12:36-05:00"
                            },
                            {
                              "connectionEventAttributes": [
                                {
                                  "key": "BytesUsed",
                                  "value": "419863234"
                                },
                                {
                                  "key": "Event",
                                  "value": "Stop"
                                },
                                {
                                  "key": "Msisdn",
                                  "value": "15086303371"
                                }
                              ],
                              "extendedAttributes": [],
                              "occurredAt": "2015-12-19T01:20:00-05:00"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "ConnectionEvent",
                            "title": "ConnectionEvent",
                            "description": "Network connection events for a device during a specified time period.",
                            "example": {
                              "connectionEventAttributes": [
                                {
                                  "key": "BytesUsed",
                                  "value": "0"
                                },
                                {
                                  "key": "Event",
                                  "value": "Start"
                                }
                              ],
                              "extendedAttributes": [],
                              "occurredAt": "2015-12-17T14:12:36-05:00"
                            },
                            "type": "object",
                            "properties": {
                              "connectionEventAttributes": {
                                "description": "The attributes that describe the connection event.",
                                "example": [
                                  {
                                    "key": "BytesUsed",
                                    "value": "0"
                                  },
                                  {
                                    "key": "Event",
                                    "value": "Start"
                                  }
                                ],
                                "type": "array",
                                "items": {
                                  "id": "CustomFields",
                                  "title": "CustomFields",
                                  "description": "Custom data that can be included using key-value pairs.",
                                  "example": {
                                    "key": "CustomField2",
                                    "value": "SuperVend"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "The key for an extended attribute.",
                                      "example": "CustomField2",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The value of an extended attribute.",
                                      "example": "SuperVend",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "extendedAttributes": {
                                "description": "Currently not used.",
                                "type": "array",
                                "items": {
                                  "$ref": "CustomFields"
                                }
                              },
                              "occurredAt": {
                                "description": "The date and time when the connection event occured.",
                                "example": "2015-12-17T14:12:36-05:00",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "hasMoreData": {
                          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved. Send another request, adjusting the earliest value in the request based on the occuredAt value for the last device in the current response.",
                          "example": false,
                          "type": "boolean"
                        }
                      }
                    }
                  example: '{"connectionHistory":[{"connectionEventAttributes":[{"key":"BytesUsed","value":"0"},{"key":"Event","value":"Start"}],"extendedAttributes":[],"occurredAt":"2015-12-17T14:12:36-05:00"},{"connectionEventAttributes":[{"key":"BytesUsed","value":"419863234"},{"key":"Event","value":"Stop"},{"key":"Msisdn","value":"15086303371"}],"extendedAttributes":[],"occurredAt":"2015-12-19T01:20:00-05:00"}],"hasMoreData":false}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /costCenter:
        put:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Changes or removes the CostCenterCode value or customer name and address (Primary Place of Use) for one or more devices.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceCostCenterRequest",
                  "title": "DeviceCostCenterRequest",
                  "description": "Request to update cost center code value for one or more devices.",
                  "example": {
                    "costCenter": "cc12345",
                    "devices": [
                      {
                        "deviceIds": [
                          {
                            "id": "89148000000800139708",
                            "kind": "iccid"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "The name of a billing account.",
                      "type": "string"
                    },
                    "costCenter": {
                      "description": "The new cost center code. Valid values are any string of up to 36 alphanumeric characters, space, dash, exclamation point, and pound sign.",
                      "example": "cc12345",
                      "type": "string"
                    },
                    "customFields": {
                      "description": "Custom field names and values, if you want to only include devices that have matching values.",
                      "type": "array",
                      "items": {
                        "id": "CustomFields",
                        "title": "CustomFields",
                        "description": "Custom data that can be included using key-value pairs.",
                        "example": {
                          "key": "CustomField2",
                          "value": "SuperVend"
                        },
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The key for an extended attribute.",
                            "example": "CustomField2",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of an extended attribute.",
                            "example": "SuperVend",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "devices": {
                      "description": "A list of the devices that you want to change, specified by device identifier. Do not include accountName, groupName, customFields, or servicePlan if you use this parameter.",
                      "example": [
                        {
                          "deviceIds": [
                            {
                              "id": "89148000000800139708",
                              "kind": "iccid"
                            }
                          ]
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "AccountDeviceList",
                        "title": "AccountDeviceList",
                        "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                        "example": {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907835573"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800784259"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "deviceIds": {
                            "description": "All identifiers for the device.",
                            "example": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "DeviceId",
                              "title": "DeviceId",
                              "description": "An identifier for a single device.",
                              "example": {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The value of the device identifier.",
                                  "example": "990013907835573",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                  "example": "imei",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "ipAddress": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                          }
                        }
                      }
                    },
                    "groupName": {
                      "description": "The name of a device group, if you want to only include devices in that group.",
                      "type": "string"
                    },
                    "primaryPlaceOfUse": {
                      "description": "The customer name and the address of the device's primary place of use. These values are applied to all devices in the request.The Primary Place of Use location may affect taxation or have other legal implications. You may want to speak with legal and/or financial advisers before entering values for these fields.",
                      "type": "object"
                    },
                    "removeCostCenter": {
                      "description": "Set to true to remove the cost center code value. This flag takes precedence over a new costCenter value. If this flag is true and costCenter has a value, the cost center code is removed. Do not include this parameter, or set it to false to change the costCenter value.",
                      "type": "boolean"
                    },
                    "servicePlan": {
                      "description": "The name of a service plan, if you want to only include devices that have that service plan.",
                      "type": "string"
                    }
                  }
                }
              example: '{"costCenter":"cc12345","devices":[{"deviceIds":[{"id":"89148000000800139708","kind":"iccid"}]}]}'
          responses:
            '200':
              description: Request ID received on a successful response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceManagementResult",
                      "title": "DeviceManagementResult",
                      "description": "Response to activate service for one or more devices so that they can send and receive data.",
                      "example": {
                        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "A unique string that associates the request with the results that are sent via a callback service.",
                          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /extendeddiagnostics/actions/list:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Returns extended diagnostic information about a specified device, including connectivity, provisioning, billing and location status.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceExtendedDiagnosticsRequest",
                  "title": "DeviceExtendedDiagnosticsRequest",
                  "description": "Request to query extended diagnostics information for a device.",
                  "example": {
                    "accountName": "1223334444-00001",
                    "deviceList": [
                      {
                        "id": "10-digit MDN",
                        "kind": "mdn"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "The Verizon billing account that the device belongs to. An account name is usually numeric, and must include any leading zeros.",
                      "example": "1223334444-00001",
                      "type": "string"
                    },
                    "deviceList": {
                      "description": "The device for which you want diagnostic information, specified by the device's MDN.",
                      "example": [
                        {
                          "id": "10-digit MDN",
                          "kind": "mdn"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "DeviceId",
                        "title": "DeviceId",
                        "description": "An identifier for a single device.",
                        "example": {
                          "kind": "imei",
                          "id": "990013907835573"
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The value of the device identifier.",
                            "example": "990013907835573",
                            "type": "string"
                          },
                          "kind": {
                            "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                            "example": "imei",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "accountName",
                    "deviceList"
                  ]
                }
              example: '{"accountName":"1223334444-00001","deviceList":[{"id":"10-digit MDN","kind":"mdn"}]}'
          responses:
            '200':
              description: Device diagnostic information.
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceExtendedDiagnosticsResult",
                      "title": "DeviceExtendedDiagnosticsResult",
                      "description": "Result for a request to obtain device extended diagnostics.",
                      "example": {
                        "categories": [
                          {
                            "categoryName": "Connectivity",
                            "extendedAttributes": [
                              {
                                "key": "Connected",
                                "value": "false"
                              }
                            ]
                          }
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "categories": {
                          "description": "The response includes various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.",
                          "example": [
                            {
                              "categoryName": "Connectivity",
                              "extendedAttributes": [
                                {
                                  "key": "Connected",
                                  "value": "false"
                                }
                              ]
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "DiagnosticsCategory",
                            "title": "DiagnosticsCategory",
                            "description": "Various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.",
                            "example": {
                              "categoryName": "Connectivity",
                              "extendedAttributes": [
                                {
                                  "key": "Connected",
                                  "value": "false"
                                }
                              ]
                            },
                            "type": "object",
                            "properties": {
                              "categoryName": {
                                "description": "The name of the category.",
                                "example": "Connectivity",
                                "type": "string"
                              },
                              "extendedAttributes": {
                                "description": "A list of Extended Attribute objects as key-value pairs.",
                                "example": [
                                  {
                                    "key": "Connected",
                                    "value": "false"
                                  }
                                ],
                                "type": "array",
                                "items": {
                                  "id": "CustomFields",
                                  "title": "CustomFields",
                                  "description": "Custom data that can be included using key-value pairs.",
                                  "example": {
                                    "key": "CustomField2",
                                    "value": "SuperVend"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "The key for an extended attribute.",
                                      "example": "CustomField2",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The value of an extended attribute.",
                                      "example": "SuperVend",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  example: '{"categories":[{"categoryName":"Connectivity","extendedAttributes":[{"key":"Connected","value":"false"}]}]}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /history/actions/list:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Returns the provisioning history of a specified device during a specified time period.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceProvisioningHistoryListRequest",
                  "title": "DeviceProvisioningHistoryListRequest",
                  "description": "Query to obtain device provisioning history.",
                  "example": {
                    "deviceId": {
                      "id": "89141390780800784259",
                      "kind": "iccid"
                    },
                    "earliest": "2015-09-16T00:00:01Z",
                    "latest": "2015-09-18T00:00:01Z"
                  },
                  "type": "object",
                  "properties": {
                    "deviceId": {
                      "id": "DeviceId",
                      "title": "DeviceId",
                      "description": "An identifier for a single device.",
                      "example": {
                        "kind": "imei",
                        "id": "990013907835573"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The value of the device identifier.",
                          "example": "990013907835573",
                          "type": "string"
                        },
                        "kind": {
                          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                          "example": "imei",
                          "type": "string"
                        }
                      }
                    },
                    "earliest": {
                      "description": "The earliest date and time for which you want provisioning data.",
                      "example": "2015-09-16T00:00:01Z",
                      "type": "string"
                    },
                    "latest": {
                      "description": "The last date and time for which you want provisioning data.",
                      "example": "2015-09-18T00:00:01Z",
                      "type": "string"
                    }
                  }
                }
              example: '{"deviceId":{"id":"89141390780800784259","kind":"iccid"},"earliest":"2015-09-16T00:00:01Z","latest":"2015-09-18T00:00:01Z"}'
          responses:
            '200':
              description: List of Device Provision History events, sorted by the timestamp, oldest first.
              body:
                application/json:
                  schema: |
                    {
                      "description": "List the Provisioning History responses for a device.",
                      "example": [
                        {
                          "provisioningHistory": [
                            {
                              "occurredAt": "2015-12-17T13:56:13-05:00",
                              "status": "Success",
                              "eventBy": "Harry Potter",
                              "eventType": "Activation Confirmed",
                              "servicePlan": "Tablet5GB",
                              "mdn": "",
                              "msisdn": "15086303371",
                              "extendedAttributes": []
                            }
                          ],
                          "hasMoreData": false
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "DeviceProvisioningHistoryListResult",
                        "title": "DeviceProvisioningHistoryListResult",
                        "description": "Response to return the provisioning history of a specified device during a specified time period.",
                        "example": {
                          "provisioningHistory": [
                            {
                              "occurredAt": "2015-12-17T13:56:13-05:00",
                              "status": "Success",
                              "eventBy": "Harry Potter",
                              "eventType": "Activation Confirmed",
                              "servicePlan": "Tablet5GB",
                              "mdn": "",
                              "msisdn": "15086303371",
                              "extendedAttributes": []
                            }
                          ],
                          "hasMoreData": false
                        },
                        "type": "object",
                        "properties": {
                          "hasMoreData": {
                            "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                            "example": false,
                            "type": "boolean"
                          },
                          "provisioningHistory": {
                            "description": "The provisioning history of a specified device during a specified time period.",
                            "example": [
                              {
                                "occurredAt": "2015-12-17T13:56:13-05:00",
                                "status": "Success",
                                "eventBy": "Harry Potter",
                                "eventType": "Activation Confirmed",
                                "servicePlan": "Tablet5GB",
                                "mdn": "",
                                "msisdn": "15086303371",
                                "extendedAttributes": []
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "ProvisioningHistory",
                              "title": "ProvisioningHistory",
                              "description": "The provisioning history of a specified device during a specified time period.",
                              "example": {
                                "occurredAt": "2015-12-17T13:56:13-05:00",
                                "status": "Success",
                                "eventBy": "Harry Potter",
                                "eventType": "Activation Confirmed",
                                "servicePlan": "Tablet5GB",
                                "mdn": "",
                                "msisdn": "15086303371",
                                "extendedAttributes": []
                              },
                              "type": "object",
                              "properties": {
                                "occurredAt": {
                                  "description": "The date and time when the provisioning event occured.",
                                  "example": "2015-12-17T13:56:13-05:00",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The success or failure of the provisioning event.",
                                  "example": "Success",
                                  "type": "string"
                                },
                                "eventBy": {
                                  "description": "The user who performed the provisioning event.",
                                  "example": "Harry Potter",
                                  "type": "string"
                                },
                                "eventType": {
                                  "description": "The provisioning action:Activate,Suspend,Restore,Deactivate,Device Move.",
                                  "example": "Activation Confirmed",
                                  "type": "string"
                                },
                                "mdn": {
                                  "description": "The MDN assigned to the device after the provisioning event.",
                                  "type": "string"
                                },
                                "msisdn": {
                                  "description": "The MSISDN assigned to the device after the provisioning event.",
                                  "example": "15086303371",
                                  "type": "string"
                                },
                                "servicePlan": {
                                  "description": "The service plan of the device after the provisioning event occurred.",
                                  "example": "Tablet5GB",
                                  "type": "string"
                                },
                                "extendedAttributes": {
                                  "description": "Any extended attributes for the event, as Key and Value pairs.",
                                  "example": [],
                                  "type": "array",
                                  "items": {
                                    "id": "CustomFields",
                                    "title": "CustomFields",
                                    "description": "Custom data that can be included using key-value pairs.",
                                    "example": {
                                      "key": "CustomField2",
                                      "value": "SuperVend"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "description": "The key for an extended attribute.",
                                        "example": "CustomField2",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of an extended attribute.",
                                        "example": "SuperVend",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  example: '[{"provisioningHistory":[{"occurredAt":"2015-12-17T13:56:13-05:00","status":"Success","eventBy":"Harry Potter","eventType":"Activation Confirmed","servicePlan":"Tablet5GB","mdn":"","msisdn":"15086303371","extendedAttributes":[]}],"hasMoreData":false}]'
            '202':
              description: List of Device Provision History events, sorted by the timestamp, oldest first. Additional events remain.
              body:
                application/json:
                  schema: |
                    {
                      "description": "List the Provisioning History responses for a device.",
                      "example": [
                        {
                          "provisioningHistory": [
                            {
                              "occurredAt": "2015-12-17T13:56:13-05:00",
                              "status": "Success",
                              "eventBy": "Harry Potter",
                              "eventType": "Activation Confirmed",
                              "servicePlan": "Tablet5GB",
                              "mdn": "",
                              "msisdn": "15086303371",
                              "extendedAttributes": []
                            }
                          ],
                          "hasMoreData": false
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "DeviceProvisioningHistoryListResult",
                        "title": "DeviceProvisioningHistoryListResult",
                        "description": "Response to return the provisioning history of a specified device during a specified time period.",
                        "example": {
                          "provisioningHistory": [
                            {
                              "occurredAt": "2015-12-17T13:56:13-05:00",
                              "status": "Success",
                              "eventBy": "Harry Potter",
                              "eventType": "Activation Confirmed",
                              "servicePlan": "Tablet5GB",
                              "mdn": "",
                              "msisdn": "15086303371",
                              "extendedAttributes": []
                            }
                          ],
                          "hasMoreData": false
                        },
                        "type": "object",
                        "properties": {
                          "hasMoreData": {
                            "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                            "example": false,
                            "type": "boolean"
                          },
                          "provisioningHistory": {
                            "description": "The provisioning history of a specified device during a specified time period.",
                            "example": [
                              {
                                "occurredAt": "2015-12-17T13:56:13-05:00",
                                "status": "Success",
                                "eventBy": "Harry Potter",
                                "eventType": "Activation Confirmed",
                                "servicePlan": "Tablet5GB",
                                "mdn": "",
                                "msisdn": "15086303371",
                                "extendedAttributes": []
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "ProvisioningHistory",
                              "title": "ProvisioningHistory",
                              "description": "The provisioning history of a specified device during a specified time period.",
                              "example": {
                                "occurredAt": "2015-12-17T13:56:13-05:00",
                                "status": "Success",
                                "eventBy": "Harry Potter",
                                "eventType": "Activation Confirmed",
                                "servicePlan": "Tablet5GB",
                                "mdn": "",
                                "msisdn": "15086303371",
                                "extendedAttributes": []
                              },
                              "type": "object",
                              "properties": {
                                "occurredAt": {
                                  "description": "The date and time when the provisioning event occured.",
                                  "example": "2015-12-17T13:56:13-05:00",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The success or failure of the provisioning event.",
                                  "example": "Success",
                                  "type": "string"
                                },
                                "eventBy": {
                                  "description": "The user who performed the provisioning event.",
                                  "example": "Harry Potter",
                                  "type": "string"
                                },
                                "eventType": {
                                  "description": "The provisioning action:Activate,Suspend,Restore,Deactivate,Device Move.",
                                  "example": "Activation Confirmed",
                                  "type": "string"
                                },
                                "mdn": {
                                  "description": "The MDN assigned to the device after the provisioning event.",
                                  "type": "string"
                                },
                                "msisdn": {
                                  "description": "The MSISDN assigned to the device after the provisioning event.",
                                  "example": "15086303371",
                                  "type": "string"
                                },
                                "servicePlan": {
                                  "description": "The service plan of the device after the provisioning event occurred.",
                                  "example": "Tablet5GB",
                                  "type": "string"
                                },
                                "extendedAttributes": {
                                  "description": "Any extended attributes for the event, as Key and Value pairs.",
                                  "example": [],
                                  "type": "array",
                                  "items": {
                                    "id": "CustomFields",
                                    "title": "CustomFields",
                                    "description": "Custom data that can be included using key-value pairs.",
                                    "example": {
                                      "key": "CustomField2",
                                      "value": "SuperVend"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "description": "The key for an extended attribute.",
                                        "example": "CustomField2",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of an extended attribute.",
                                        "example": "SuperVend",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  example: '[{"provisioningHistory":[{"occurredAt":"2015-12-17T13:56:13-05:00","status":"Success","eventBy":"Harry Potter","eventType":"Activation Confirmed","servicePlan":"Tablet5GB","mdn":"","msisdn":"15086303371","extendedAttributes":[]}],"hasMoreData":false}]'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /prl/actions/list:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: 4G and GSM devices do not have a PRL.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "DevicePrlListRequest",
                  "title": "DevicePrlListRequest",
                  "description": "Request to query device PRL.",
                  "example": {
                    "groupName": "West Region",
                    "accountName": "101234-0001",
                    "servicePlan": "3G 2MB"
                  },
                  "type": "object",
                  "properties": {
                    "deviceIds": {
                      "description": "The devices for which you want the PRL version, specified by device identifier. You only need to provide one identifier per device. Do not use any of the other parameters if you specify device IDs.",
                      "type": "array",
                      "items": {
                        "id": "DeviceId",
                        "title": "DeviceId",
                        "description": "An identifier for a single device.",
                        "example": {
                          "kind": "imei",
                          "id": "990013907835573"
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The value of the device identifier.",
                            "example": "990013907835573",
                            "type": "string"
                          },
                          "kind": {
                            "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                            "example": "imei",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "accountName": {
                      "description": "The name of a billing account. This parameter is only required if you are passing groupName and the UWS account used for the current API session has access to multiple billing accounts, because the same device group name can exist in multiple accounts.An account name is usually numeric, and must include any leading zeros.",
                      "type": "string"
                    },
                    "customFields": {
                      "description": "The names and values of custom fields, if you want to only include devices that have matching custom fields.",
                      "type": "array",
                      "items": {
                        "id": "CustomFields",
                        "title": "CustomFields",
                        "description": "Custom data that can be included using key-value pairs.",
                        "example": {
                          "key": "CustomField2",
                          "value": "SuperVend"
                        },
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The key for an extended attribute.",
                            "example": "CustomField2",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of an extended attribute.",
                            "example": "SuperVend",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "groupName": {
                      "description": "The name of a device group, if you want to only include devices in that group.",
                      "example": "West Region",
                      "type": "string"
                    },
                    "servicePlan": {
                      "description": "The name of a service plan, if you want to only include devices that have that service plan.",
                      "example": "3G 2MB",
                      "type": "string"
                    }
                  }
                }
              example: '{"groupName":"West Region","accountName":"101234-0001","servicePlan":"3G 2MB"}'
          responses:
            '200':
              description: Request ID received on a successful response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceManagementResult",
                      "title": "DeviceManagementResult",
                      "description": "Response to activate service for one or more devices so that they can send and receive data.",
                      "example": {
                        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "A unique string that associates the request with the results that are sent via a callback service.",
                          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /suspension/status:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Returns DeviceSuspensionStatus callback messages containing the current device state and information on how many days a device has been suspended and can continue to be suspended.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceSuspensionStatusRequest",
                  "title": "DeviceSuspensionStatusRequest",
                  "description": "Request to obtain service suspenstion status for a device.",
                  "example": {
                    "filter": {
                      "groupName": "suspended devices"
                    },
                    "accountName": "1223334444-00001"
                  },
                  "type": "object",
                  "properties": {
                    "deviceIds": {
                      "description": "The devices that you want to include in the request, specified by device identifier. You only need to provide one identifier per device.",
                      "type": "array",
                      "items": {
                        "id": "DeviceId",
                        "title": "DeviceId",
                        "description": "An identifier for a single device.",
                        "example": {
                          "kind": "imei",
                          "id": "990013907835573"
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The value of the device identifier.",
                            "example": "990013907835573",
                            "type": "string"
                          },
                          "kind": {
                            "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                            "example": "imei",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "filter": {
                      "id": "DeviceFilterWithoutAccount",
                      "title": "DeviceFilterWithoutAccount",
                      "description": "Filter for devices without account.",
                      "example": {
                        "groupName": "suspended devices"
                      },
                      "type": "object",
                      "properties": {
                        "groupName": {
                          "description": "Only include devices that are in this device group.",
                          "example": "suspended devices",
                          "type": "string"
                        },
                        "servicePlan": {
                          "description": "Only include devices that have this service plan.",
                          "type": "string"
                        },
                        "customFields": {
                          "description": "Custom field names and values, if you want to only include devices that have matching values.",
                          "type": "array",
                          "items": {
                            "id": "CustomFields",
                            "title": "CustomFields",
                            "description": "Custom data that can be included using key-value pairs.",
                            "example": {
                              "key": "CustomField2",
                              "value": "SuperVend"
                            },
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The key for an extended attribute.",
                                "example": "CustomField2",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of an extended attribute.",
                                "example": "SuperVend",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "accountName": {
                      "description": "The name of a billing account.",
                      "example": "1223334444-00001",
                      "type": "string"
                    }
                  }
                }
              example: '{"filter":{"groupName":"suspended devices"},"accountName":"1223334444-00001"}'
          responses:
            '200':
              description: Request ID received on a successful response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceManagementResult",
                      "title": "DeviceManagementResult",
                      "description": "Response to activate service for one or more devices so that they can send and receive data.",
                      "example": {
                        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "A unique string that associates the request with the results that are sent via a callback service.",
                          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"requestId":"904dcdc6-a590-45e4-ac76-403306f6d883"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /{serviceType}/actions/deviceId:
        uriParameters:
          serviceType:
            description: Identifier type.
            type: string
            required: true
            displayName: serviceType
        put:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Changes the identifier of a 3G or 4G device to match hardware changes made for a line of service. Use this request to transfer the line of service and the MDN to new hardware, or to change the MDN.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "ChangeDeviceIdRequest",
                  "title": "ChangeDeviceIdRequest",
                  "description": "Request to update device id.",
                  "example": {
                    "deviceIds": [
                      {
                        "id": "42590078891480000008",
                        "kind": "iccid"
                      }
                    ],
                    "change4gOption": "ChangeMSISDN",
                    "assignNonGeoMdn": false,
                    "npaNxx": "509393",
                    "servicePlan": "M2M2GB"
                  },
                  "examples": [
                    {
                      "Id": "new-sim",
                      "Name": null,
                      "Value": "{\"deviceIds\":[{\"id\":\"42590078891480000008\",\"kind\":\"iccid\"}],\"deviceIdsTo\":[{\"id\":\"89148000000842590078\",\"kind\":\"iccid\"}],\"change4gOption\":\"ChangeICCID\",\"zipCode\":\"98802\",\"servicePlan\":\"4G 2GB\"}",
                      "ExternalValue": null,
                      "Description": null
                    },
                    {
                      "Id": "new-number",
                      "Name": null,
                      "Value": "{\"deviceIds\":[{\"id\":\"42590078891480000008\",\"kind\":\"iccid\"}],\"change4gOption\":\"ChangeMSISDN\",\"assignNonGeoMdn\":false,\"npaNxx\":\"509393\",\"servicePlan\":\"M2M2GB\"}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "type": "object",
                  "properties": {
                    "assignNonGeoMdn": {
                      "description": "Set to true to assign a non-Geo MDN and MSISDN, or false to assign an MDN and MSISDN from a specific NPA-NXX.",
                      "example": false,
                      "type": "boolean"
                    },
                    "change4gOption": {
                      "description": "The type of change that you want to make for a 4G device.",
                      "example": "ChangeICCID",
                      "type": "string"
                    },
                    "deviceIds": {
                      "description": "The device that you want to change, specified by a device identifier.",
                      "example": [
                        {
                          "id": "42590078891480000008",
                          "kind": "iccid"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "DeviceId",
                        "title": "DeviceId",
                        "description": "An identifier for a single device.",
                        "example": {
                          "kind": "imei",
                          "id": "990013907835573"
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The value of the device identifier.",
                            "example": "990013907835573",
                            "type": "string"
                          },
                          "kind": {
                            "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                            "example": "imei",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deviceIdsTo": {
                      "description": "The new identifier for the device. Required for all change4GOptions except ChangeMSISDN.",
                      "example": [
                        {
                          "id": "89148000000842590078",
                          "kind": "iccid"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "$ref": "DeviceId"
                      }
                    },
                    "npaNxx": {
                      "description": "The NPA NXX (area code and prefix) from which the MDN and MSISDN will be derived when assignNonGeoMDN is false. Specify the 6-digit NPA NXX of the location where the line of service will primarily be used. This API checks to see if a number starting with the NPA NXX is available. If not, this API uses the zipCode parameter, if specified, to assign a number in the area of the line of service. This parameter is required when you change an MDN/MSISDN for a B2B carrier, such as Verizon Wireless.",
                      "example": "509393",
                      "type": "string"
                    },
                    "servicePlan": {
                      "description": "The code for a different service plan, if you want to change the service plan while changing the device identifier. Set this parameter to one of the Code values returned by GET /plans.",
                      "example": "M2M2GB",
                      "type": "string"
                    },
                    "zipCode": {
                      "description": "The ZIP code from which the MDN and MSISDN will be derived when assignNonGeoMDN is true. Specify the zip code of the location where the line of service will primarily be used.",
                      "example": "98802",
                      "type": "string"
                    },
                    "smsrOid": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    }
                  }
                }
              example: '{"deviceIds":[{"id":"42590078891480000008","kind":"iccid"}],"deviceIdsTo":[{"id":"89148000000842590078","kind":"iccid"}],"change4gOption":"ChangeICCID","zipCode":"98802","servicePlan":"4G 2GB"}'
          responses:
            '200':
              description: A unique string that associates the request with the results that are sent via a callback service.
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceManagementResult",
                      "title": "DeviceManagementResult",
                      "description": "Response to activate service for one or more devices so that they can send and receive data.",
                      "example": {
                        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "A unique string that associates the request with the results that are sent via a callback service.",
                          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"requestId":"a28892ea-6503-4aa7-bfa2-4cd45d42f61b"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /requests/status:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Checks the status of an activation order and lists where the order is in the provisioning process.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "CheckOrderStatusRequest",
                  "title": "CheckOrderStatusRequest",
                  "description": "The request body identifies the device and reporting period that you want included in the report.",
                  "example": {
                    "accountName": "4Gpublicaccount ",
                    "orderRequestId": " f55fea16-3664-4a32-ae9d-c0cbe3eedf1d ",
                    "devices": [
                      {
                        "deviceIds": [
                          {
                            "id": "20112019672551234613",
                            "kind": "iccid"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
                      "example": "1223334444-00001",
                      "type": "string"
                    },
                    "devices": {
                      "description": "The devices to upload, specified by device IDs in a format matching uploadType.",
                      "type": "array",
                      "items": {
                        "id": "DeviceList",
                        "title": "DeviceList",
                        "type": "object",
                        "properties": {
                          "deviceIds": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "DeviceId",
                              "title": "DeviceId",
                              "description": "An identifier for a single device.",
                              "example": {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The value of the device identifier.",
                                  "example": "990013907835573",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                  "example": "imei",
                                  "type": "string"
                                }
                              }
                            },
                            "maxItems": 100
                          }
                        }
                      }
                    },
                    "orderRequestId": {
                      "description": "The request id from the activation order.",
                      "example": "f55fea16-3664-4a32-ae9d-c0cbe3eedf1d",
                      "type": "string"
                    }
                  },
                  "required": [
                    "accountName",
                    "devices"
                  ]
                }
              example: '{"accountName":"4Gpublicaccount ","orderRequestId":" f55fea16-3664-4a32-ae9d-c0cbe3eedf1d ","devices":[{"deviceIds":[{"id":"20112019672551234613","kind":"iccid"}]}]}'
          responses:
            '200':
              description: Request ID received on a successful response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceManagementResult",
                      "title": "DeviceManagementResult",
                      "description": "Response to activate service for one or more devices so that they can send and receive data.",
                      "example": {
                        "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "A unique string that associates the request with the results that are sent via a callback service.",
                          "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"requestId":"c7b45cf2-cab1-4e42-82f8-20350f4c4ea3"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /sms/history/actions/list:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Returns a list of sms history for a given device during a specified time frame.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "SMSEventHistoryRequest",
                  "title": "SMSEventHistoryRequest",
                  "description": "Device Query",
                  "type": "object",
                  "properties": {
                    "deviceId": {
                      "id": "GIODeviceId",
                      "title": "GIODeviceId",
                      "type": "object",
                      "properties": {
                        "kind": {
                          "example": "eid",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 6,
                          "pattern": "^[A-Za-z]{3,6}$"
                        },
                        "id": {
                          "example": "12345678901234567890123456789012",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[0-9]{3,32}$"
                        }
                      }
                    },
                    "earliest": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "latest": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "deviceId"
                  ]
                }
              example: ''
          responses:
            '200':
              description: Request ID
              body:
                application/json:
                  schema: |
                    {
                      "id": "GIORequestResponse",
                      "title": "GIORequestResponse",
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[A-Za-z0-9\\-]{3,64}$"
                        }
                      }
                    }
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "GIORestErrorResponse",
                      "title": "GIORestErrorResponse",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "400",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 3,
                          "pattern": "^[0-9]{3,3}$"
                        },
                        "errorMessage": {
                          "example": "a brief description of the error",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9 ]{3,32}$"
                        }
                      }
                    }
      /actions:
        /activate:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: If the devices do not already exist in the account, this API resource adds them before activation.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "CarrierActivateRequest",
                    "title": "CarrierActivateRequest",
                    "description": "Request for activating a service on devices.",
                    "example": {
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907835573"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800784259"
                            }
                          ]
                        },
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907884259"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800735573"
                            }
                          ]
                        }
                      ],
                      "accountName": "0868924207-00001",
                      "servicePlan": "m2m_4G",
                      "mdnZipCode": "98801",
                      "customFields": [
                        {
                          "key": "CustomField2",
                          "value": "SuperVend"
                        }
                      ],
                      "groupName": "4G West",
                      "primaryPlaceOfUse": {
                        "customerName": {
                          "title": "President",
                          "firstName": "Zaffod",
                          "lastName": "Beeblebrox"
                        },
                        "address": {
                          "addressLine1": "1600 Pennsylvania Ave NW",
                          "city": "Washington",
                          "state": "DC",
                          "zip": "20500",
                          "country": "USA"
                        }
                      }
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of a billing account.",
                        "example": "0868924207-00001",
                        "type": "string"
                      },
                      "carrierIpPoolName": {
                        "description": "The private IP pool (Carrier Group Name) from which your device IP addresses will be derived.",
                        "type": "string"
                      },
                      "carrierName": {
                        "description": "The carrier that will perform the activation.",
                        "type": "string"
                      },
                      "costCenterCode": {
                        "description": "A string to identify the cost center that the device is associated with.",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "A user-defined descriptive field, limited to 50 characters.",
                        "example": [
                          {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "CustomFields",
                          "title": "CustomFields",
                          "description": "Custom data that can be included using key-value pairs.",
                          "example": {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          },
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key for an extended attribute.",
                              "example": "CustomField2",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of an extended attribute.",
                              "example": "SuperVend",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "devices": {
                        "description": "Up to 10,000 devices for which you want to activate service, specified by device identifier.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907884259"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800735573"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "groupName": {
                        "description": "If you specify devices by ID in the devices parameters, this is the name of a device group that the devices should be added to.If you don't specify individual devices with the devices parameter, you can provide the name of a device group to activate all devices in that group.",
                        "example": "4G West",
                        "type": "string"
                      },
                      "leadId": {
                        "description": "The ID of a “Qualified” or “Closed - Won” VPP customer lead, which is used with other values to determine MDN assignment, taxation, and compensation.",
                        "type": "string"
                      },
                      "mdnZipCode": {
                        "description": "The Zip code of the location where the line of service will primarily be used, or a Zip code that you have been told to use with these devices. For accounts that are configured for geographic numbering, this is the ZIP code from which the MDN will be derived.",
                        "example": "98801",
                        "type": "string"
                      },
                      "primaryPlaceOfUse": {
                        "id": "PlaceOfUse",
                        "title": "PlaceOfUse",
                        "description": "The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.",
                        "example": {
                          "customerName": {
                            "title": "President",
                            "firstName": "Zaffod",
                            "lastName": "Beeblebrox"
                          },
                          "address": {
                            "addressLine1": "1600 Pennsylvania Ave NW",
                            "city": "Washington",
                            "state": "DC",
                            "zip": "20500",
                            "country": "USA"
                          }
                        },
                        "type": "object",
                        "properties": {
                          "address": {
                            "id": "Address",
                            "title": "Address",
                            "description": "The customer address for the line's primary place of use, for line usage taxation.",
                            "example": {
                              "addressLine1": "1600 Pennsylvania Ave NW",
                              "city": "Washington",
                              "state": "DC",
                              "zip": "20500",
                              "country": "USA"
                            },
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                                "example": "1600 Pennsylvania Ave NW",
                                "type": "string"
                              },
                              "city": {
                                "description": "The city for the line's primary place of use.",
                                "example": "Washington",
                                "type": "string"
                              },
                              "state": {
                                "description": "The state for the line's primary place of use.",
                                "example": "DC",
                                "type": "string"
                              },
                              "zip": {
                                "description": "The ZIP code for the line's primary place of use.",
                                "example": "20500",
                                "type": "string"
                              },
                              "country": {
                                "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                                "example": "USA",
                                "type": "string"
                              },
                              "addressLine2": {
                                "description": "Optional additional street address information.",
                                "type": "string"
                              },
                              "zip4": {
                                "description": "The ZIP+4 for the line's primary place of use.",
                                "type": "string"
                              },
                              "phone": {
                                "description": "A phone number where the customer can be reached.",
                                "type": "string"
                              },
                              "phoneType": {
                                "description": "A single letter to indicate the customer phone type.",
                                "type": "string"
                              },
                              "emailAddress": {
                                "description": "An email address for the customer.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "addressLine1",
                              "city",
                              "state",
                              "zip",
                              "country"
                            ]
                          },
                          "customerName": {
                            "id": "CustomerName",
                            "title": "CustomerName",
                            "description": "The customer name to be used for line usage taxation.",
                            "example": {
                              "title": "President",
                              "firstName": "Zaffod",
                              "lastName": "Beeblebrox"
                            },
                            "type": "object",
                            "properties": {
                              "firstName": {
                                "description": "The customer's first name.",
                                "example": "Zaffod",
                                "type": "string"
                              },
                              "lastName": {
                                "description": "The customer's last name.",
                                "example": "Beeblebrox",
                                "type": "string"
                              },
                              "title": {
                                "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
                                "example": "President",
                                "type": "string"
                              },
                              "middleName": {
                                "description": "The customer's middle name.",
                                "type": "string"
                              },
                              "suffix": {
                                "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
                                "type": "string"
                              }
                            },
                            "required": [
                              "firstName",
                              "lastName"
                            ]
                          }
                        }
                      },
                      "publicIpRestriction": {
                        "description": "For devices with static IP addresses on the public network, this specifies whether the devices have general access to the Internet.",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The service plan code that you want to assign to all specified devices.",
                        "example": "m2m_4G",
                        "type": "string"
                      },
                      "skuNumber": {
                        "description": "The Stock Keeping Unit (SKU) of a 4G device type can be used with ICCID device identifiers in lieu of an IMEI when activating 4G devices. The SkuNumber will be used with all devices in the request, so all devices must be of the same type.",
                        "example": "7640111922001",
                        "type": "string"
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"kind":"imei","id":"990013907835573"},{"kind":"iccid","id":"89141390780800784259"}]},{"deviceIds":[{"kind":"imei","id":"990013907884259"},{"kind":"iccid","id":"89141390780800735573"}]}],"accountName":"0868924207-00001","servicePlan":"m2m_4G","mdnZipCode":"98801","customFields":[{"key":"CustomField2","value":"SuperVend"}],"groupName":"4G West","primaryPlaceOfUse":{"customerName":{"title":"President","firstName":"Zaffod","lastName":"Beeblebrox"},"address":{"addressLine1":"1600 Pennsylvania Ave NW","city":"Washington","state":"DC","zip":"20500","country":"USA"}}}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /add:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Use this API if you want to manage some device settings before you are ready to activate service for the devices.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "AddDevicesRequest",
                    "title": "AddDevicesRequest",
                    "description": "Devices to add.",
                    "example": {
                      "accountName": "0868924207-00001",
                      "customFields": [
                        {
                          "key": "CustomField2",
                          "value": "SuperVend"
                        }
                      ],
                      "devicesToAdd": [
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907835573"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800784259"
                            }
                          ]
                        },
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907884259"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800735573"
                            }
                          ]
                        }
                      ],
                      "groupName": "West Region",
                      "state": "preactive"
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The billing account to which the devices are added.",
                        "example": "0868924207-00001",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "The names and values for any custom fields that you want set for the devices as they are added to the account.",
                        "example": [
                          {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "CustomFields",
                          "title": "CustomFields",
                          "description": "Custom data that can be included using key-value pairs.",
                          "example": {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          },
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key for an extended attribute.",
                              "example": "CustomField2",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of an extended attribute.",
                              "example": "SuperVend",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "devicesToAdd": {
                        "description": "The devices that you want to add.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907884259"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800735573"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "groupName": {
                        "description": "The name of a device group to add the devices to. They are added to the default device group if you don't include this parameter.",
                        "example": "West Region",
                        "type": "string"
                      },
                      "skuNumber": {
                        "description": "The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM.",
                        "type": "string"
                      },
                      "state": {
                        "description": "The initial service state for the devices. The only valid state is “Preactive.”",
                        "example": "preactive",
                        "type": "string"
                      },
                      "smsrOid": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
                example: '{"accountName":"0868924207-00001","customFields":[{"key":"CustomField2","value":"SuperVend"}],"devicesToAdd":[{"deviceIds":[{"kind":"imei","id":"990013907835573"},{"kind":"iccid","id":"89141390780800784259"}]},{"deviceIds":[{"kind":"imei","id":"990013907884259"},{"kind":"iccid","id":"89141390780800735573"}]}],"groupName":"West Region","state":"preactive"}'
            responses:
              '200':
                description: For each device in the request, contains device identifiers and a success or failure response.
                body:
                  application/json:
                    schema: |
                      {
                        "description": "Status of request to add each device.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "id": "89148000000800784259",
                                "kind": "iccid"
                              }
                            ],
                            "response": "Success"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AddDevicesResult",
                          "title": "AddDevicesResult",
                          "description": "Contains the device identifiers and a success or failure response for each device in the request.",
                          "example": {
                            "deviceIds": [
                              {
                                "id": "89148000000800784259",
                                "kind": "iccid"
                              }
                            ],
                            "response": "Success"
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "Identifiers for the device.",
                              "example": [
                                {
                                  "id": "89148000000800784259",
                                  "kind": "iccid"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "response": {
                              "description": "The success message or error message for the current device.",
                              "example": "Success",
                              "type": "string"
                            }
                          }
                        }
                      }
                    example: '[{"deviceIds":[{"id":"89148000000800784259","kind":"iccid"}],"response":"Success"}]'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /contactinfo:
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Sends a CarrierService callback message for each device in the request when the contact information has been changed, or if there was a problem and the change could not be completed.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "ContactInfoUpdateRequest",
                    "title": "ContactInfoUpdateRequest",
                    "description": "Request to update contact information for devices.",
                    "example": {
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "kind": "ESN",
                              "id": "19110173057"
                            },
                            {
                              "kind": "ESN",
                              "id": "19110173057"
                            }
                          ]
                        }
                      ],
                      "accountName": "0212345678-00001",
                      "primaryPlaceOfUse": {
                        "address": {
                          "addressLine1": "9868 Scranton Rd",
                          "addressLine2": "Suite A",
                          "city": "San Diego",
                          "state": "CA",
                          "country": "USA",
                          "zip": "92121",
                          "zip4": "0001",
                          "phone": "1234567890",
                          "phoneType": "H",
                          "emailAddress": "zaffod@theinternet.com"
                        },
                        "customerName": {
                          "firstName": "Zaffod",
                          "lastName": "Beeblebrox",
                          "middleName": "P",
                          "title": "President",
                          "suffix": "I"
                        }
                      }
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of the billing account that the devices belong to. An account name is usually numeric, and must include any leading zeros.",
                        "example": "0212345678-00001",
                        "type": "string"
                      },
                      "devices": {
                        "description": "A list of the devices that you want to change, specified by device identifier. You only need to provide one identifier per device. Do not include accountName, groupName, customFields, or servicePlan if you use this parameter.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "kind": "ESN",
                                "id": "19110173057"
                              },
                              {
                                "kind": "ESN",
                                "id": "19110173057"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "primaryPlaceOfUse": {
                        "description": "The customer name and the address of the device's primary place of use. These values are applied to all devices in the request.The Primary Place of Use location may affect taxation or have other legal implications. You may want to speak with legal and/or financial advisers before entering values for these fields.",
                        "example": {
                          "address": {
                            "addressLine1": "9868 Scranton Rd",
                            "addressLine2": "Suite A",
                            "city": "San Diego",
                            "state": "CA",
                            "country": "USA",
                            "zip": "92121",
                            "zip4": "0001",
                            "phone": "1234567890",
                            "phoneType": "H",
                            "emailAddress": "zaffod@theinternet.com"
                          },
                          "customerName": {
                            "firstName": "Zaffod",
                            "lastName": "Beeblebrox",
                            "middleName": "P",
                            "title": "President",
                            "suffix": "I"
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"kind":"ESN","id":"19110173057"},{"kind":"ESN","id":"19110173057"}]}],"accountName":"0212345678-00001","primaryPlaceOfUse":{"address":{"addressLine1":"9868 Scranton Rd","addressLine2":"Suite A","city":"San Diego","state":"CA","country":"USA","zip":"92121","zip4":"0001","phone":"1234567890","phoneType":"H","emailAddress":"zaffod@theinternet.com"},"customerName":{"firstName":"Zaffod","lastName":"Beeblebrox","middleName":"P","title":"President","suffix":"I"}}}'
            responses:
              '200':
                description: Request ID returned in a success response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"24da9f9a-d110-4a54-86b4-93fb76aab83c"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /customFields:
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Sends a CarrierService callback message for each device in the request when the custom fields have been changed, or if there was a problem and the change could not be completed.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "CustomFieldsUpdateRequest",
                    "title": "CustomFieldsUpdateRequest",
                    "description": "Request to update custom field of devices.",
                    "example": {
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "id": "89148000000800139708",
                              "kind": "iccid"
                            }
                          ]
                        }
                      ],
                      "customFieldsToUpdate": [
                        {
                          "key": "CustomField1",
                          "value": "West Region"
                        },
                        {
                          "key": "CustomField2",
                          "value": "Distribution"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of a billing account.This parameter is only required if the UWS account used for the current API session has access to multiple billing accounts.An account name is usually numeric, and must include any leading zeros.",
                        "example": "010045678-0001",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "Custom field names and values, if you want to only include devices that have matching values.",
                        "example": [
                          {
                            "key": "CustomField2",
                            "value": "West Region"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "CustomFields",
                          "title": "CustomFields",
                          "description": "Custom data that can be included using key-value pairs.",
                          "example": {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          },
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key for an extended attribute.",
                              "example": "CustomField2",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of an extended attribute.",
                              "example": "SuperVend",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "customFieldsToUpdate": {
                        "description": "The names and new values of any custom fields that you want to change.",
                        "example": [
                          {
                            "key": "CustomField1",
                            "value": "West Region"
                          },
                          {
                            "key": "CustomField2",
                            "value": "Distribution"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "$ref": "CustomFields"
                        }
                      },
                      "devices": {
                        "description": "The devices that you want to change.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "id": "89148000000800139708",
                                "kind": "iccid"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "groupName": {
                        "description": "The name of a device group, if you want to only include devices in that group.",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The name of a service plan, if you want to only include devices that have that service plan.",
                        "type": "string"
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"id":"89148000000800139708","kind":"iccid"}]}],"customFieldsToUpdate":[{"key":"CustomField1","value":"West Region"},{"key":"CustomField2","value":"Distribution"}]}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /deactivate:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Deactivating service for a device may result in an early termination fee (ETF) being charged to the account, depending on the terms of the contract with Verizon. If your contract allows ETF waivers and if you want to use one for a particular deactivation, set the etfWaiver value to True.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "CarrierDeactivateRequest",
                    "title": "CarrierDeactivateRequest",
                    "description": "Request to deactivate service for one or more devices.",
                    "example": {
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "id": "20-digit ICCID",
                              "kind": "iccid"
                            }
                          ]
                        }
                      ],
                      "reasonCode": "FF",
                      "etfWaiver": true
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of a billing account.",
                        "example": "0000123456-00001",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "Custom field names and values, if you want to only include devices that have matching values.",
                        "type": "array",
                        "items": {
                          "id": "CustomFields",
                          "title": "CustomFields",
                          "description": "Custom data that can be included using key-value pairs.",
                          "example": {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          },
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key for an extended attribute.",
                              "example": "CustomField2",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of an extended attribute.",
                              "example": "SuperVend",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "devices": {
                        "description": "The devices for which you want to deactivate service, specified by device identifier.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "id": "20-digit ICCID",
                                "kind": "iccid"
                              }
                            ]
                          },
                          {
                            "deviceIds": [
                              {
                                "id": "20-digit ICCID",
                                "kind": "iccid"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "etfWaiver": {
                        "description": "Fees may be assessed for deactivating Verizon Wireless devices, depending on the account contract. The etfWaiver parameter waives the Early Termination Fee (ETF), if applicable.",
                        "example": true,
                        "type": "boolean"
                      },
                      "groupName": {
                        "description": "The name of a device group, if you want to deactivate all devices in that group.",
                        "type": "string"
                      },
                      "reasonCode": {
                        "description": "Code identifying the reason for the deactivation. Currently the only valid reason code is “FF”, which corresponds to General Admin/Maintenance.",
                        "example": "FF",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The name of a service plan, if you want to only include devices that have that service plan.",
                        "type": "string"
                      },
                      "deleteAfterDeactivation": {
                        "type": "boolean"
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"id":"20-digit ICCID","kind":"iccid"}]}],"reasonCode":"FF","etfWaiver":true}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /delete:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Use this API to remove unneeded devices from an account.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "DeleteDevicesRequest",
                    "title": "DeleteDevicesRequest",
                    "description": "Devices to delete.",
                    "example": {
                      "devicesToDelete": [
                        {
                          "deviceIds": [
                            {
                              "id": "09005470263",
                              "kind": "esn"
                            }
                          ]
                        },
                        {
                          "deviceIds": [
                            {
                              "id": "85000022411113460014",
                              "kind": "iccid"
                            }
                          ]
                        },
                        {
                          "deviceIds": [
                            {
                              "id": "85000022412313460016",
                              "kind": "iccid"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The Verizon billing account that the device group belongs to. An account name is usually numeric, and must include any leading zeros.",
                        "type": "string"
                      },
                      "devicesToDelete": {
                        "description": "A list of up to 100 devices that you want to delete, specified by device identifier. You only need to provide one identifier per device.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "id": "09005470263",
                                "kind": "esn"
                              }
                            ]
                          },
                          {
                            "deviceIds": [
                              {
                                "id": "85000022411113460014",
                                "kind": "iccid"
                              }
                            ]
                          },
                          {
                            "deviceIds": [
                              {
                                "id": "85000022412313460016",
                                "kind": "iccid"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"devicesToDelete":[{"deviceIds":[{"id":"09005470263","kind":"esn"}]},{"deviceIds":[{"id":"85000022411113460014","kind":"iccid"}]},{"deviceIds":[{"id":"85000022412313460016","kind":"iccid"}]}]}'
            responses:
              '200':
                description: For each device in the request, contains device identifiers and a success or failure response.
                body:
                  application/json:
                    schema: |
                      {
                        "description": "Status of devices removal.",
                        "example": [
                          {
                            "deviceIds": {
                              "id": "09005470263",
                              "kind": "esn"
                            },
                            "status": "Success"
                          },
                          {
                            "deviceIds": {
                              "id": "85000022411113460014",
                              "kind": "iccid"
                            },
                            "status": "Success"
                          },
                          {
                            "deviceIds": [
                              {
                                "id": "85000022412313460016",
                                "kind": "iccid"
                              },
                              {
                                "id": "09005470263",
                                "kind": "esn"
                              }
                            ],
                            "status": "Failed",
                            "message": "The device is not in deactive state."
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "DeleteDevicesResult",
                          "title": "DeleteDevicesResult",
                          "description": "Response for a request made to delete a device.",
                          "example": {
                            "deviceIds": [
                              {
                                "id": "09005470263",
                                "kind": "esn"
                              }
                            ],
                            "status": "Success"
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "One object per device to be deleted. Each object must contain a kind and id element identifying the device."
                            },
                            "status": {
                              "description": "“Success” if the device was deleted, or “Failed” if there was a problem.",
                              "example": "Success",
                              "type": "string"
                            },
                            "message": {
                              "description": "Not present if status=Success. One of these messages if status=Failed:The device is not in deactivate state.The user does not have access to delete the device.",
                              "example": "The device is not in deactive state.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    example: '[{"deviceIds":{"id":"09005470263","kind":"esn"},"status":"Success"},{"deviceIds":{"id":"85000022411113460014","kind":"iccid"},"status":"Success"},{"deviceIds":[{"id":"85000022412313460016","kind":"iccid"},{"id":"09005470263","kind":"esn"}],"status":"Failed","message":"The device is not in deactive state."}]'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /list:
          /imeiiccidmismatch:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Returns a list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceMismatchListRequest",
                      "title": "DeviceMismatchListRequest",
                      "description": "Request to list devices with mismatched IMEIs and ICCIDs.",
                      "example": {
                        "accountName": "0342077109-00001",
                        "devices": [
                          {
                            "deviceIds": [
                              {
                                "kind": "ICCID",
                                "id": "8914800000080078"
                              },
                              {
                                "kind": "MDN",
                                "id": "5096300587"
                              }
                            ]
                          }
                        ],
                        "filter": {
                          "earliest": "2020-05-01T15:00:00-08:00Z",
                          "latest": "2020-07-30T15:00:00-08:00Z"
                        }
                      },
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "A list of specific devices that you want to check, specified by ICCID or MDN.",
                          "example": [
                            {
                              "deviceIds": [
                                {
                                  "kind": "ICCID",
                                  "id": "8914800000080078"
                                },
                                {
                                  "kind": "MDN",
                                  "id": "5096300587"
                                }
                              ]
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "AccountDeviceList",
                            "title": "AccountDeviceList",
                            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                            "example": {
                              "deviceIds": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ]
                            },
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "All identifiers for the device.",
                                "example": [
                                  {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  {
                                    "kind": "iccid",
                                    "id": "89141390780800784259"
                                  }
                                ],
                                "type": "array",
                                "items": {
                                  "id": "DeviceId",
                                  "title": "DeviceId",
                                  "description": "An identifier for a single device.",
                                  "example": {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The value of the device identifier.",
                                      "example": "990013907835573",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                      "example": "imei",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "ipAddress": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                              }
                            }
                          }
                        },
                        "filter": {
                          "id": "DateFilter",
                          "title": "DateFilter",
                          "description": "Filter out the dates.",
                          "example": {
                            "earliest": "2020-05-01T15:00:00-08:00Z",
                            "latest": "2020-07-30T15:00:00-08:00Z"
                          },
                          "type": "object",
                          "properties": {
                            "earliest": {
                              "description": "Only include devices that were added after this date and time.",
                              "example": "2020-05-01T15:00:00-08:00Z",
                              "type": "string"
                            },
                            "latest": {
                              "description": "Only include devices that were added before this date and time.",
                              "example": "2020-07-30T15:00:00-08:00Z",
                              "type": "string"
                            }
                          }
                        },
                        "accountName": {
                          "description": "The account that you want to search for mismatched devices. If you don't specify an accountName, the search includes all devices to which you have access.",
                          "example": "0342077109-00001",
                          "type": "string"
                        },
                        "groupName": {
                          "description": "The name of a device group, to only include devices in that group.",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"accountName":"0342077109-00001","devices":[{"deviceIds":[{"kind":"ICCID","id":"8914800000080078"},{"kind":"MDN","id":"5096300587"}]}],"filter":{"earliest":"2020-05-01T15:00:00-08:00Z","latest":"2020-07-30T15:00:00-08:00Z"}}'
              responses:
                '200':
                  description: List of devices that have mismatched IMEIs and ICCIDs.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "DeviceMismatchListResult",
                          "title": "DeviceMismatchListResult",
                          "description": "Response to list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
                          "example": {
                            "devices": [
                              {
                                "accountName": "0212398765-00001",
                                "mdn": "5096300587",
                                "activationDate": "2011-01-21T10:55:27-08:00",
                                "iccid": "89148000000800784259",
                                "preImei": "990003420535573",
                                "postImei": "987603420573553",
                                "simOtaDate": "2017-12-01T16:00:00-08:00"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "devices": {
                              "description": "A list of specific devices that you want to check, specified by ICCID or MDN.",
                              "example": [
                                {
                                  "accountName": "0212398765-00001",
                                  "mdn": "5096300587",
                                  "activationDate": "2011-01-21T10:55:27-08:00",
                                  "iccid": "89148000000800784259",
                                  "preImei": "990003420535573",
                                  "postImei": "987603420573553",
                                  "simOtaDate": "2017-12-01T16:00:00-08:00"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "MismatchedDevice",
                                "title": "MismatchedDevice",
                                "description": "4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
                                "example": {
                                  "accountName": "0212398765-00001",
                                  "mdn": "5096300587",
                                  "activationDate": "2011-01-21T10:55:27-08:00",
                                  "iccid": "89148000000800784259",
                                  "preImei": "990003420535573",
                                  "postImei": "987603420573553",
                                  "simOtaDate": "2017-12-01T16:00:00-08:00"
                                },
                                "type": "object",
                                "properties": {
                                  "accountName": {
                                    "description": "The account that the device is associated with.",
                                    "example": "0212398765-00001",
                                    "type": "string"
                                  },
                                  "mdn": {
                                    "description": "The assigned phone number of the device.",
                                    "example": "5096300587",
                                    "type": "string"
                                  },
                                  "activationDate": {
                                    "description": "The date and time when the SIM was last activated.",
                                    "example": "2011-01-21T10:55:27-08:00",
                                    "type": "string"
                                  },
                                  "iccid": {
                                    "description": "The ID of the SIM.",
                                    "example": "89148000000800784259",
                                    "type": "string"
                                  },
                                  "preImei": {
                                    "description": "The IMEI of the device prior to the SIM OTA activation on simOtaDate.",
                                    "example": "990003420535573",
                                    "type": "string"
                                  },
                                  "postImei": {
                                    "description": "The IMEI of the device after the SIM OTA activation on simOtaDate.",
                                    "example": "987603420573553",
                                    "type": "string"
                                  },
                                  "simOtaDate": {
                                    "description": "The date and time of the SIM OTA activation.",
                                    "example": "2017-12-01T16:00:00-08:00",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      example: '{"devices":[{"accountName":"0212398765-00001","mdn":"5096300587","activationDate":"2011-01-21T10:55:27-08:00","iccid":"89148000000800784259","preImei":"990003420535573","postImei":"987603420573553","simOtaDate":"2017-12-01T16:00:00-08:00"}]}'
                '400':
                  description: Error response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ConnectivityManagementResult",
                          "title": "ConnectivityManagementResult",
                          "description": "Response to errors.",
                          "example": {
                            "errorCode": "error code string",
                            "errorMessage": "error message string"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "description": "Code of the error.",
                              "example": "error code string",
                              "type": "string"
                            },
                            "errorMessage": {
                              "description": "Details of the error.",
                              "example": "error message string",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Returns information about a single device or information about all devices that match the given parameters. Returned information includes device provisioning state, service plan, MDN, MIN, and IP address.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "AccountDeviceListRequest",
                    "title": "AccountDeviceListRequest",
                    "description": "Device information query.",
                    "example": {
                      "accountName": "0786890242-00001",
                      "filter": {
                        "deviceIdentifierFilters": [
                          {
                            "kind": "iccid",
                            "contains": "4259"
                          }
                        ]
                      }
                    },
                    "examples": [
                      {
                        "Id": "single-device",
                        "Name": null,
                        "Value": "{\"deviceId\":{\"id\":\"20-digit ICCID\",\"kind\":\"iccid\"}}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "devices-containing-specified-string",
                        "Name": null,
                        "Value": "{\"accountName\":\"0786890242-00001\",\"filter\":{\"deviceIdentifierFilters\":[{\"kind\":\"iccid\",\"contains\":\"4259\"}]}}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "specific-service-plan-and-sort-devices",
                        "Name": null,
                        "Value": "{\"accountName\":\"0786890242-00001\",\"filter\":{\"deviceIdentifierFilters\":[{\"kind\":\"iccid\",\"contains\":\"4259\"}]}}",
                        "ExternalValue": null,
                        "Description": null
                      }
                    ],
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The billing account for which a list of devices is returned. If you don't specify an accountName, the list includes all devices to which you have access.",
                        "example": "0786890242-00001",
                        "type": "string"
                      },
                      "deviceId": {
                        "id": "DeviceId",
                        "title": "DeviceId",
                        "description": "An identifier for a single device.",
                        "example": {
                          "kind": "imei",
                          "id": "990013907835573"
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The value of the device identifier.",
                            "example": "990013907835573",
                            "type": "string"
                          },
                          "kind": {
                            "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                            "example": "imei",
                            "type": "string"
                          }
                        }
                      },
                      "filter": {
                        "id": "AccountDeviceListFilter",
                        "title": "AccountDeviceListFilter",
                        "description": "Filter for a list of devices.",
                        "example": {
                          "deviceIdentifierFilters": [
                            {
                              "kind": "iccid",
                              "contains": "4259"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "deviceIdentifierFilters": {
                            "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
                            "example": [
                              {
                                "kind": "iccid",
                                "contains": "4259"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "DeviceIdSearch",
                              "title": "DeviceIdSearch",
                              "description": "Search by device id.",
                              "example": {
                                "kind": "iccid",
                                "contains": "4259"
                              },
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                  "example": "imei",
                                  "type": "string"
                                },
                                "contains": {
                                  "description": "The string appears anywhere in the identifer.",
                                  "example": "4259",
                                  "type": "string"
                                },
                                "startswith": {
                                  "description": "The identifer must start with the specified string.",
                                  "type": "string"
                                },
                                "endswith": {
                                  "description": "The identifier must end with the specified string.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind"
                              ]
                            }
                          }
                        }
                      },
                      "currentState": {
                        "description": "The name of a device state, to only include devices in that state.",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "Custom field names and values, if you want to only include devices that have matching values.",
                        "type": "array",
                        "items": {
                          "id": "CustomFields",
                          "title": "CustomFields",
                          "description": "Custom data that can be included using key-value pairs.",
                          "example": {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          },
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key for an extended attribute.",
                              "example": "CustomField2",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of an extended attribute.",
                              "example": "SuperVend",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "earliest": {
                        "description": "Only include devices that were added after this date and time.",
                        "type": "string"
                      },
                      "groupName": {
                        "description": "Only include devices that are in this device group.",
                        "type": "string"
                      },
                      "latest": {
                        "description": "Only include devices that were added before this date and time.",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "Only include devices that have this service plan.",
                        "type": "string"
                      },
                      "maxNumberOfDevices": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int32"
                      },
                      "largestDeviceIdSeen": {
                        "type": "integer",
                        "minimum": 0.0,
                        "maximum": 100.0,
                        "format": "int64"
                      }
                    }
                  }
                example: '{"deviceId":{"id":"20-digit ICCID","kind":"iccid"}}'
            responses:
              '200':
                description: List of devices that match the request parameters, ordered by device creation date, oldest first.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "AccountDeviceListResult",
                        "title": "AccountDeviceListResult",
                        "description": "Response for a request to list down account devices.",
                        "example": {
                          "hasMoreData": false,
                          "devices": [
                            {
                              "accountName": "0000123456-00001",
                              "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
                              "carrierInformations": [
                                {
                                  "carrierName": "Verizon Wireless",
                                  "servicePlan": "m2m4G",
                                  "state": "active"
                                }
                              ],
                              "connected": false,
                              "createdAt": "2019-08-07T10:42:15-04:00",
                              "deviceIds": [
                                {
                                  "id": "10-digit MDN",
                                  "kind": "mdn"
                                },
                                {
                                  "id": "15-digit IMEI",
                                  "kind": "imei"
                                }
                              ],
                              "groupNames": [
                                "southwest"
                              ],
                              "ipAddress": "0.0.0.0",
                              "lastActivationBy": "Joe Q Public",
                              "lastActivationDate": "2019-08-07T10:42:34-04:00",
                              "lastConnectionDate": "2020-03-12T04:23:37-04:00"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "devices": {
                            "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
                            "example": [
                              {
                                "accountName": "0000123456-00001",
                                "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
                                "carrierInformations": [
                                  {
                                    "carrierName": "Verizon Wireless",
                                    "servicePlan": "m2m4G",
                                    "state": "active"
                                  }
                                ],
                                "connected": false,
                                "createdAt": "2019-08-07T10:42:15-04:00",
                                "deviceIds": [
                                  {
                                    "id": "10-digit MDN",
                                    "kind": "mdn"
                                  },
                                  {
                                    "id": "15-digit IMEI",
                                    "kind": "imei"
                                  }
                                ],
                                "groupNames": [
                                  "southwest"
                                ],
                                "ipAddress": "0.0.0.0",
                                "lastActivationBy": "Joe Q Public",
                                "lastActivationDate": "2019-08-07T10:42:34-04:00",
                                "lastConnectionDate": "2020-03-12T04:23:37-04:00"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "ThingspaceDevice",
                              "title": "ThingspaceDevice",
                              "description": "Device that exist in Verizon Mobile Device Management (MDM).",
                              "example": {
                                "accountName": "0000123456-00001",
                                "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
                                "carrierInformations": [
                                  {
                                    "carrierName": "Verizon Wireless",
                                    "servicePlan": "m2m4G",
                                    "state": "active"
                                  }
                                ],
                                "connected": false,
                                "createdAt": "2019-08-07T10:42:15-04:00",
                                "deviceIds": [
                                  {
                                    "id": "10-digit MDN",
                                    "kind": "mdn"
                                  },
                                  {
                                    "id": "15-digit IMEI",
                                    "kind": "imei"
                                  }
                                ],
                                "groupNames": [
                                  "southwest"
                                ],
                                "ipAddress": "0.0.0.0",
                                "lastActivationBy": "Joe Q Public",
                                "lastActivationDate": "2019-08-07T10:42:34-04:00",
                                "lastConnectionDate": "2020-03-12T04:23:37-04:00"
                              },
                              "type": "object",
                              "properties": {
                                "accountName": {
                                  "description": "The billing account that the device is associated with.",
                                  "example": "0000123456-00001",
                                  "type": "string"
                                },
                                "billingCycleEndDate": {
                                  "description": "The date that the device's current billing cycle ends.",
                                  "example": "2020-05-09T20:00:00-04:00",
                                  "type": "string"
                                },
                                "carrierInformations": {
                                  "description": "The carrier information associated with the device.",
                                  "example": [
                                    {
                                      "carrierName": "Verizon Wireless",
                                      "servicePlan": "m2m4G",
                                      "state": "active"
                                    }
                                  ],
                                  "type": "array",
                                  "items": {
                                    "id": "CarrierInformation",
                                    "title": "CarrierInformation",
                                    "description": "Information about the carrier.",
                                    "example": {
                                      "carrierName": "Verizon Wireless",
                                      "servicePlan": "m2m4G",
                                      "state": "active"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "carrierName": {
                                        "description": "The carrier that will perform the activation. This parameter is only required if you have more than one carrier.",
                                        "example": "Verizon Wireless",
                                        "type": "string"
                                      },
                                      "servicePlan": {
                                        "description": "The service plan code that is assigned to the device.",
                                        "example": "m2m4G",
                                        "type": "string"
                                      },
                                      "state": {
                                        "description": "The device state. Valid values include: Activate, Suspend, Deactive, Pre-active.",
                                        "example": "active",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "connected": {
                                  "description": "True if the device is connected; false if it is not.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "createdAt": {
                                  "description": "The date and time that the device was added to the system.",
                                  "example": "2019-08-07T10:42:15-04:00",
                                  "type": "string"
                                },
                                "customFields": {
                                  "description": "The custom fields and values that have been set for the device.",
                                  "type": "array",
                                  "items": {
                                    "id": "CustomFields",
                                    "title": "CustomFields",
                                    "description": "Custom data that can be included using key-value pairs.",
                                    "example": {
                                      "key": "CustomField2",
                                      "value": "SuperVend"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "description": "The key for an extended attribute.",
                                        "example": "CustomField2",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of an extended attribute.",
                                        "example": "SuperVend",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "deviceIds": {
                                  "description": "All identifiers for the device.",
                                  "example": [
                                    {
                                      "id": "10-digit MDN",
                                      "kind": "mdn"
                                    },
                                    {
                                      "id": "15-digit IMEI",
                                      "kind": "imei"
                                    }
                                  ],
                                  "type": "array",
                                  "items": {
                                    "id": "DeviceId",
                                    "title": "DeviceId",
                                    "description": "An identifier for a single device.",
                                    "example": {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "The value of the device identifier.",
                                        "example": "990013907835573",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                        "example": "imei",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "extendedAttributes": {
                                  "description": "Any extended attributes for the device, as Key and Value pairs. The pairs listed below are returned as part of the response for a single device, but are not included if the request was for information about multiple devices.",
                                  "type": "array",
                                  "items": {
                                    "$ref": "CustomFields"
                                  }
                                },
                                "groupNames": {
                                  "description": "The device groups that the device belongs to.",
                                  "example": [
                                    "southwest"
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "ipAddress": {
                                  "description": "The IP address of the device.",
                                  "example": "0.0.0.0",
                                  "type": "string"
                                },
                                "lastActivationBy": {
                                  "description": "The user who last activated the device.",
                                  "example": "Joe Q Public",
                                  "type": "string"
                                },
                                "lastActivationDate": {
                                  "description": "The date and time that the device was last activated.",
                                  "example": "2019-08-07T10:42:34-04:00",
                                  "type": "string"
                                },
                                "lastConnectionDate": {
                                  "description": "The most recent connection date and time.",
                                  "example": "2020-03-12T04:23:37-04:00",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "hasMoreData": {
                            "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                            "example": false,
                            "type": "boolean"
                          }
                        }
                      }
                    example: '{"hasMoreData":false,"devices":[{"accountName":"0000123456-00001","billingCycleEndDate":"2020-05-09T20:00:00-04:00","carrierInformations":[{"carrierName":"Verizon Wireless","servicePlan":"m2m4G","state":"active"}],"connected":false,"createdAt":"2019-08-07T10:42:15-04:00","deviceIds":[{"id":"10-digit MDN","kind":"mdn"},{"id":"15-digit IMEI","kind":"imei"}],"groupNames":["southwest"],"ipAddress":"0.0.0.0","lastActivationBy":"Joe Q Public","lastActivationDate":"2019-08-07T10:42:34-04:00","lastConnectionDate":"2020-03-12T04:23:37-04:00"}]}'
              '202':
                description: List of devices that match the request parameters, ordered by device creation date, oldest first. Additional devices remain.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "AccountDeviceListResult",
                        "title": "AccountDeviceListResult",
                        "description": "Response for a request to list down account devices.",
                        "example": {
                          "hasMoreData": false,
                          "devices": [
                            {
                              "accountName": "0000123456-00001",
                              "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
                              "carrierInformations": [
                                {
                                  "carrierName": "Verizon Wireless",
                                  "servicePlan": "m2m4G",
                                  "state": "active"
                                }
                              ],
                              "connected": false,
                              "createdAt": "2019-08-07T10:42:15-04:00",
                              "deviceIds": [
                                {
                                  "id": "10-digit MDN",
                                  "kind": "mdn"
                                },
                                {
                                  "id": "15-digit IMEI",
                                  "kind": "imei"
                                }
                              ],
                              "groupNames": [
                                "southwest"
                              ],
                              "ipAddress": "0.0.0.0",
                              "lastActivationBy": "Joe Q Public",
                              "lastActivationDate": "2019-08-07T10:42:34-04:00",
                              "lastConnectionDate": "2020-03-12T04:23:37-04:00"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "devices": {
                            "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
                            "example": [
                              {
                                "accountName": "0000123456-00001",
                                "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
                                "carrierInformations": [
                                  {
                                    "carrierName": "Verizon Wireless",
                                    "servicePlan": "m2m4G",
                                    "state": "active"
                                  }
                                ],
                                "connected": false,
                                "createdAt": "2019-08-07T10:42:15-04:00",
                                "deviceIds": [
                                  {
                                    "id": "10-digit MDN",
                                    "kind": "mdn"
                                  },
                                  {
                                    "id": "15-digit IMEI",
                                    "kind": "imei"
                                  }
                                ],
                                "groupNames": [
                                  "southwest"
                                ],
                                "ipAddress": "0.0.0.0",
                                "lastActivationBy": "Joe Q Public",
                                "lastActivationDate": "2019-08-07T10:42:34-04:00",
                                "lastConnectionDate": "2020-03-12T04:23:37-04:00"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "ThingspaceDevice",
                              "title": "ThingspaceDevice",
                              "description": "Device that exist in Verizon Mobile Device Management (MDM).",
                              "example": {
                                "accountName": "0000123456-00001",
                                "billingCycleEndDate": "2020-05-09T20:00:00-04:00",
                                "carrierInformations": [
                                  {
                                    "carrierName": "Verizon Wireless",
                                    "servicePlan": "m2m4G",
                                    "state": "active"
                                  }
                                ],
                                "connected": false,
                                "createdAt": "2019-08-07T10:42:15-04:00",
                                "deviceIds": [
                                  {
                                    "id": "10-digit MDN",
                                    "kind": "mdn"
                                  },
                                  {
                                    "id": "15-digit IMEI",
                                    "kind": "imei"
                                  }
                                ],
                                "groupNames": [
                                  "southwest"
                                ],
                                "ipAddress": "0.0.0.0",
                                "lastActivationBy": "Joe Q Public",
                                "lastActivationDate": "2019-08-07T10:42:34-04:00",
                                "lastConnectionDate": "2020-03-12T04:23:37-04:00"
                              },
                              "type": "object",
                              "properties": {
                                "accountName": {
                                  "description": "The billing account that the device is associated with.",
                                  "example": "0000123456-00001",
                                  "type": "string"
                                },
                                "billingCycleEndDate": {
                                  "description": "The date that the device's current billing cycle ends.",
                                  "example": "2020-05-09T20:00:00-04:00",
                                  "type": "string"
                                },
                                "carrierInformations": {
                                  "description": "The carrier information associated with the device.",
                                  "example": [
                                    {
                                      "carrierName": "Verizon Wireless",
                                      "servicePlan": "m2m4G",
                                      "state": "active"
                                    }
                                  ],
                                  "type": "array",
                                  "items": {
                                    "id": "CarrierInformation",
                                    "title": "CarrierInformation",
                                    "description": "Information about the carrier.",
                                    "example": {
                                      "carrierName": "Verizon Wireless",
                                      "servicePlan": "m2m4G",
                                      "state": "active"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "carrierName": {
                                        "description": "The carrier that will perform the activation. This parameter is only required if you have more than one carrier.",
                                        "example": "Verizon Wireless",
                                        "type": "string"
                                      },
                                      "servicePlan": {
                                        "description": "The service plan code that is assigned to the device.",
                                        "example": "m2m4G",
                                        "type": "string"
                                      },
                                      "state": {
                                        "description": "The device state. Valid values include: Activate, Suspend, Deactive, Pre-active.",
                                        "example": "active",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "connected": {
                                  "description": "True if the device is connected; false if it is not.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "createdAt": {
                                  "description": "The date and time that the device was added to the system.",
                                  "example": "2019-08-07T10:42:15-04:00",
                                  "type": "string"
                                },
                                "customFields": {
                                  "description": "The custom fields and values that have been set for the device.",
                                  "type": "array",
                                  "items": {
                                    "id": "CustomFields",
                                    "title": "CustomFields",
                                    "description": "Custom data that can be included using key-value pairs.",
                                    "example": {
                                      "key": "CustomField2",
                                      "value": "SuperVend"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "description": "The key for an extended attribute.",
                                        "example": "CustomField2",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of an extended attribute.",
                                        "example": "SuperVend",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "deviceIds": {
                                  "description": "All identifiers for the device.",
                                  "example": [
                                    {
                                      "id": "10-digit MDN",
                                      "kind": "mdn"
                                    },
                                    {
                                      "id": "15-digit IMEI",
                                      "kind": "imei"
                                    }
                                  ],
                                  "type": "array",
                                  "items": {
                                    "id": "DeviceId",
                                    "title": "DeviceId",
                                    "description": "An identifier for a single device.",
                                    "example": {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "The value of the device identifier.",
                                        "example": "990013907835573",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                        "example": "imei",
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "extendedAttributes": {
                                  "description": "Any extended attributes for the device, as Key and Value pairs. The pairs listed below are returned as part of the response for a single device, but are not included if the request was for information about multiple devices.",
                                  "type": "array",
                                  "items": {
                                    "$ref": "CustomFields"
                                  }
                                },
                                "groupNames": {
                                  "description": "The device groups that the device belongs to.",
                                  "example": [
                                    "southwest"
                                  ],
                                  "type": "array",
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "ipAddress": {
                                  "description": "The IP address of the device.",
                                  "example": "0.0.0.0",
                                  "type": "string"
                                },
                                "lastActivationBy": {
                                  "description": "The user who last activated the device.",
                                  "example": "Joe Q Public",
                                  "type": "string"
                                },
                                "lastActivationDate": {
                                  "description": "The date and time that the device was last activated.",
                                  "example": "2019-08-07T10:42:34-04:00",
                                  "type": "string"
                                },
                                "lastConnectionDate": {
                                  "description": "The most recent connection date and time.",
                                  "example": "2020-03-12T04:23:37-04:00",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "hasMoreData": {
                            "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                            "example": false,
                            "type": "boolean"
                          }
                        }
                      }
                    example: '{"hasMoreData":false,"devices":[{"accountName":"0000123456-00001","billingCycleEndDate":"2020-05-09T20:00:00-04:00","carrierInformations":[{"carrierName":"Verizon Wireless","servicePlan":"m2m4G","state":"active"}],"connected":false,"createdAt":"2019-08-07T10:42:15-04:00","deviceIds":[{"id":"10-digit MDN","kind":"mdn"},{"id":"15-digit IMEI","kind":"imei"}],"groupNames":["southwest"],"ipAddress":"0.0.0.0","lastActivationBy":"Joe Q Public","lastActivationDate":"2019-08-07T10:42:34-04:00","lastConnectionDate":"2020-03-12T04:23:37-04:00"}]}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /move:
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Move active devices from one billing account to another within a customer profile.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "MoveDeviceRequest",
                    "title": "MoveDeviceRequest",
                    "description": "Request to move devices between accounts.",
                    "example": {
                      "filter": {
                        "groupName": "Short-Haul Trucks",
                        "customFields": [
                          {
                            "key": "CustomField1",
                            "value": "East Region Trucks"
                          }
                        ]
                      },
                      "accountName": "0212345678-00001",
                      "servicePlan": "M2M5GB"
                    },
                    "examples": [
                      {
                        "Id": "single-device",
                        "Name": null,
                        "Value": "{\"devices\":[{\"deviceIds\":[{\"kind\":\"ESN\",\"id\":\"19110173057\"}]}],\"accountName\":\"0212345678-00001\",\"servicePlan\":\"M2M5GB\"}",
                        "ExternalValue": null,
                        "Description": null
                      },
                      {
                        "Id": "devices-with-custom-field",
                        "Name": null,
                        "Value": "{\"filter\":{\"groupName\":\"Short-Haul Trucks\",\"customFields\":[{\"key\":\"CustomField1\",\"value\":\"East Region Trucks\"}]},\"accountName\":\"0212345678-00001\",\"servicePlan\":\"M2M5GB\"}",
                        "ExternalValue": null,
                        "Description": null
                      }
                    ],
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of the billing account that you want to move the devices to.",
                        "example": "0212345678-00001",
                        "type": "string"
                      },
                      "filter": {
                        "id": "DeviceFilter",
                        "title": "DeviceFilter",
                        "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
                        "example": {
                          "groupName": "Short-Haul Trucks",
                          "customFields": [
                            {
                              "key": "CustomField1",
                              "value": "East Region Trucks"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "account": {
                            "description": "The the billing account that the devices belong to.",
                            "type": "string"
                          },
                          "groupName": {
                            "description": "Only include devices that are in this device group.",
                            "example": "Short-Haul Trucks",
                            "type": "string"
                          },
                          "servicePlan": {
                            "description": "Only include devices that have this service plan.",
                            "type": "string"
                          },
                          "customFields": {
                            "description": "Custom field names and values, if you want to only include devices that have matching values.",
                            "example": [
                              {
                                "key": "CustomField1",
                                "value": "East Region Trucks"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "CustomFields",
                              "title": "CustomFields",
                              "description": "Custom data that can be included using key-value pairs.",
                              "example": {
                                "key": "CustomField2",
                                "value": "SuperVend"
                              },
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "The key for an extended attribute.",
                                  "example": "CustomField2",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of an extended attribute.",
                                  "example": "SuperVend",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "customFields": {
                        "description": "Custom field names and values, if you want to only include devices that have matching values.",
                        "example": [
                          {
                            "key": "CustomField1",
                            "value": "East Region Trucks"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "$ref": "CustomFields"
                        }
                      },
                      "devices": {
                        "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "kind": "ESN",
                                "id": "19110173057"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "groupName": {
                        "description": "The name of a device group, to only include devices in that group.",
                        "example": "Short-Haul Trucks",
                        "type": "string"
                      },
                      "carrierIpPoolName": {
                        "description": "The pool from which device IP addresses will be derived in the new account. If you do not include this element, the default pool will be used.",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The service plan code that you want to assign to the devices in the new account. If you do not include this element, ThingSpace will attempt to use the current service plan, which will result in a error if the new account does not have that service plan.",
                        "example": "M2M5GB",
                        "type": "string"
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"kind":"ESN","id":"19110173057"}]}],"accountName":"0212345678-00001","servicePlan":"M2M5GB"}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"ec682a8b-e288-4806-934d-24e7a59ed889"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /gotostate:
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Changes the provisioning state of one or more devices to a specified customer-defined service and state.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "GoToStateRequest",
                    "title": "GoToStateRequest",
                    "description": "Request to change device state to one defined by the user.",
                    "example": {
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907835573"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800784259"
                            }
                          ]
                        },
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907884259"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800735573"
                            }
                          ]
                        }
                      ],
                      "serviceName": "My Service",
                      "stateName": "My State",
                      "servicePlan": "87641",
                      "mdnZipCode": "94203",
                      "groupName": "4G West",
                      "publicIpRestriction": "unrestricted",
                      "primaryPlaceOfUse": {
                        "customerName": {
                          "title": "President",
                          "firstName": "Zaffod",
                          "lastName": "Beeblebrox"
                        },
                        "address": {
                          "addressLine1": "1600 Pennsylvania Ave NW",
                          "city": "Washington",
                          "state": "DC",
                          "zip": "20500",
                          "country": "USA"
                        }
                      }
                    },
                    "type": "object",
                    "properties": {
                      "devices": {
                        "description": "Up to 10,000 devices that you want to push to a different state, specified by device identifier.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907884259"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800735573"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "filter": {
                        "id": "DeviceFilter",
                        "title": "DeviceFilter",
                        "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
                        "example": {
                          "groupName": "Short-Haul Trucks",
                          "customFields": [
                            {
                              "key": "CustomField1",
                              "value": "East Region Trucks"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "account": {
                            "description": "The the billing account that the devices belong to.",
                            "type": "string"
                          },
                          "groupName": {
                            "description": "Only include devices that are in this device group.",
                            "example": "Short-Haul Trucks",
                            "type": "string"
                          },
                          "servicePlan": {
                            "description": "Only include devices that have this service plan.",
                            "type": "string"
                          },
                          "customFields": {
                            "description": "Custom field names and values, if you want to only include devices that have matching values.",
                            "example": [
                              {
                                "key": "CustomField1",
                                "value": "East Region Trucks"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "CustomFields",
                              "title": "CustomFields",
                              "description": "Custom data that can be included using key-value pairs.",
                              "example": {
                                "key": "CustomField2",
                                "value": "SuperVend"
                              },
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "The key for an extended attribute.",
                                  "example": "CustomField2",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of an extended attribute.",
                                  "example": "SuperVend",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "serviceName": {
                        "description": "The name of a customer-defined service to push the devices to.",
                        "example": "My Service",
                        "type": "string"
                      },
                      "stateName": {
                        "description": "The name of a customer-defined stage state to push the devices to.",
                        "example": "My State",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The service plan code that you want to assign to all specified devices in the new state.",
                        "example": "87641",
                        "type": "string"
                      },
                      "mdnZipCode": {
                        "description": "The Zip code of the location where the line of service will primarily be used, or a Zip code that you have been told to use with these devices. For accounts that are configured for geographic numbering, this is the ZIP code from which the MDN will be derived.",
                        "example": "94203",
                        "type": "string"
                      },
                      "carrierIpPoolName": {
                        "description": "The pool from which your device IP addresses will be derived if the service or state change requires new IP addresses.If you do not include this element, the default pool will be used.",
                        "type": "string"
                      },
                      "publicIpRestriction": {
                        "description": "For devices with static IP addresses on the public network, this specifies whether the devices have general access to the Internet. Valid values are “restricted” or “unrestricted”.",
                        "example": "unrestricted",
                        "type": "string"
                      },
                      "skuNumber": {
                        "description": "The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM. Can be used with ICCID or EID device identifiers in lieu of an IMEI when activating 4G devices. The SkuNumber will be used with all devices in the request, so all devices must be of the same type.",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "The names and values of any custom fields that you want to set for the devices.",
                        "type": "array",
                        "items": {
                          "$ref": "CustomFields"
                        }
                      },
                      "groupName": {
                        "description": "The name of a device group that the devices should be added to.",
                        "example": "4G West",
                        "type": "string"
                      },
                      "primaryPlaceOfUse": {
                        "id": "PlaceOfUse",
                        "title": "PlaceOfUse",
                        "description": "The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.",
                        "example": {
                          "customerName": {
                            "title": "President",
                            "firstName": "Zaffod",
                            "lastName": "Beeblebrox"
                          },
                          "address": {
                            "addressLine1": "1600 Pennsylvania Ave NW",
                            "city": "Washington",
                            "state": "DC",
                            "zip": "20500",
                            "country": "USA"
                          }
                        },
                        "type": "object",
                        "properties": {
                          "address": {
                            "id": "Address",
                            "title": "Address",
                            "description": "The customer address for the line's primary place of use, for line usage taxation.",
                            "example": {
                              "addressLine1": "1600 Pennsylvania Ave NW",
                              "city": "Washington",
                              "state": "DC",
                              "zip": "20500",
                              "country": "USA"
                            },
                            "type": "object",
                            "properties": {
                              "addressLine1": {
                                "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
                                "example": "1600 Pennsylvania Ave NW",
                                "type": "string"
                              },
                              "city": {
                                "description": "The city for the line's primary place of use.",
                                "example": "Washington",
                                "type": "string"
                              },
                              "state": {
                                "description": "The state for the line's primary place of use.",
                                "example": "DC",
                                "type": "string"
                              },
                              "zip": {
                                "description": "The ZIP code for the line's primary place of use.",
                                "example": "20500",
                                "type": "string"
                              },
                              "country": {
                                "description": "Either “US” or “USA” for the country of the line's primary place of use.",
                                "example": "USA",
                                "type": "string"
                              },
                              "addressLine2": {
                                "description": "Optional additional street address information.",
                                "type": "string"
                              },
                              "zip4": {
                                "description": "The ZIP+4 for the line's primary place of use.",
                                "type": "string"
                              },
                              "phone": {
                                "description": "A phone number where the customer can be reached.",
                                "type": "string"
                              },
                              "phoneType": {
                                "description": "A single letter to indicate the customer phone type.",
                                "type": "string"
                              },
                              "emailAddress": {
                                "description": "An email address for the customer.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "addressLine1",
                              "city",
                              "state",
                              "zip",
                              "country"
                            ]
                          },
                          "customerName": {
                            "id": "CustomerName",
                            "title": "CustomerName",
                            "description": "The customer name to be used for line usage taxation.",
                            "example": {
                              "title": "President",
                              "firstName": "Zaffod",
                              "lastName": "Beeblebrox"
                            },
                            "type": "object",
                            "properties": {
                              "firstName": {
                                "description": "The customer's first name.",
                                "example": "Zaffod",
                                "type": "string"
                              },
                              "lastName": {
                                "description": "The customer's last name.",
                                "example": "Beeblebrox",
                                "type": "string"
                              },
                              "title": {
                                "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
                                "example": "President",
                                "type": "string"
                              },
                              "middleName": {
                                "description": "The customer's middle name.",
                                "type": "string"
                              },
                              "suffix": {
                                "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
                                "type": "string"
                              }
                            },
                            "required": [
                              "firstName",
                              "lastName"
                            ]
                          }
                        }
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"kind":"imei","id":"990013907835573"},{"kind":"iccid","id":"89141390780800784259"}]},{"deviceIds":[{"kind":"imei","id":"990013907884259"},{"kind":"iccid","id":"89141390780800735573"}]}],"serviceName":"My Service","stateName":"My State","servicePlan":"87641","mdnZipCode":"94203","groupName":"4G West","publicIpRestriction":"unrestricted","primaryPlaceOfUse":{"customerName":{"title":"President","firstName":"Zaffod","lastName":"Beeblebrox"},"address":{"addressLine1":"1600 Pennsylvania Ave NW","city":"Washington","state":"DC","zip":"20500","country":"USA"}}}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /plan:
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Changes the service plan for one or more devices.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "ServicePlanUpdateRequest",
                    "title": "ServicePlanUpdateRequest",
                    "description": "Request to change device service plan.",
                    "example": {
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "id": "A100003685E561",
                              "kind": "meid"
                            }
                          ]
                        }
                      ],
                      "servicePlan": "new_service_plan_code"
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of a billing account.",
                        "type": "string"
                      },
                      "currentServicePlan": {
                        "description": "The name of a service plan, if you want to only include devices that have that service plan.",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "Custom field names and values, if you want to only include devices that have matching values.",
                        "type": "array",
                        "items": {
                          "id": "CustomFields",
                          "title": "CustomFields",
                          "description": "Custom data that can be included using key-value pairs.",
                          "example": {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          },
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key for an extended attribute.",
                              "example": "CustomField2",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of an extended attribute.",
                              "example": "SuperVend",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "devices": {
                        "description": "A list of the devices that you want to change, specified by device identifier.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "id": "A100003685E561",
                                "kind": "meid"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "groupName": {
                        "description": "The name of a device group, if you want to restore service for all devices in that group.",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The service plan code that you want to assign to all specified devices.",
                        "example": "new_service_plan_code",
                        "type": "string"
                      },
                      "carrierIpPoolName": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      },
                      "takeEffect": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"id":"A100003685E561","kind":"meid"}]}],"servicePlan":"new_service_plan_code"}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"c8de7c1d-59b9-4cf3-b969-db76cb2ce509"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /suspend:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Suspends service for one or more devices.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "CarrierActionsRequest",
                    "title": "CarrierActionsRequest",
                    "description": "Request to suspend service for one or more devices.",
                    "example": {
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "id": "89148000000800139708",
                              "kind": "iccid"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of a billing account.",
                        "example": "0868924207-00001",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "Custom field names and values, if you want to only include devices that have matching values.",
                        "example": [
                          {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "CustomFields",
                          "title": "CustomFields",
                          "description": "Custom data that can be included using key-value pairs.",
                          "example": {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          },
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key for an extended attribute.",
                              "example": "CustomField2",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of an extended attribute.",
                              "example": "SuperVend",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "devices": {
                        "description": "The devices for which you want to restore service, specified by device identifier.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "id": "89148000000800139708",
                                "kind": "iccid"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "groupName": {
                        "description": "The name of a device group, if you want to restore service for all devices in that group.",
                        "example": "4G West",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The name of a service plan, if you want to only include devices that have that service plan.",
                        "example": "m2m_4G",
                        "type": "string"
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"id":"89148000000800139708","kind":"iccid"}]}]}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /restore:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Restores service to one or more suspended devices.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "CarrierActionsRequest",
                    "title": "CarrierActionsRequest",
                    "description": "Request to restore services of one or more suspended devices.",
                    "example": {
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "id": "89148000000800139708",
                              "kind": "iccid"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of a billing account.",
                        "example": "0868924207-00001",
                        "type": "string"
                      },
                      "customFields": {
                        "description": "Custom field names and values, if you want to only include devices that have matching values.",
                        "example": [
                          {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "CustomFields",
                          "title": "CustomFields",
                          "description": "Custom data that can be included using key-value pairs.",
                          "example": {
                            "key": "CustomField2",
                            "value": "SuperVend"
                          },
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key for an extended attribute.",
                              "example": "CustomField2",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of an extended attribute.",
                              "example": "SuperVend",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "devices": {
                        "description": "The devices for which you want to restore service, specified by device identifier.",
                        "example": [
                          {
                            "deviceIds": [
                              {
                                "id": "89148000000800139708",
                                "kind": "iccid"
                              }
                            ]
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountDeviceList",
                          "title": "AccountDeviceList",
                          "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                          "example": {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "All identifiers for the device.",
                              "example": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "ipAddress": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                            }
                          }
                        }
                      },
                      "groupName": {
                        "description": "The name of a device group, if you want to restore service for all devices in that group.",
                        "example": "4G West",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The name of a service plan, if you want to only include devices that have that service plan.",
                        "example": "m2m_4G",
                        "type": "string"
                      }
                    }
                  }
                example: '{"devices":[{"deviceIds":[{"id":"89148000000800139708","kind":"iccid"}]}]}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /upload:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: This corresponds to the M2M-MC SOAP interface, ```DeviceUploadService```.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceUploadRequest",
                    "title": "DeviceUploadRequest",
                    "description": "Device Upload Query",
                    "example": {
                      "accountName": "1223334444-00001",
                      "emailAddress": "bob@mycompany.com",
                      "deviceSku": "VZW123456",
                      "uploadType": "IMEI",
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "15-digit IMEI"
                            }
                          ]
                        },
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "15-digit IMEI"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "example": "1223334444-00001",
                        "type": "string"
                      },
                      "devices": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "DeviceList",
                          "title": "DeviceList",
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              },
                              "maxItems": 100
                            }
                          }
                        }
                      },
                      "emailAddress": {
                        "example": "bob@mycompany.com",
                        "type": "string"
                      },
                      "deviceSku": {
                        "example": "VZW123456",
                        "type": "string"
                      },
                      "uploadType": {
                        "example": "IMEI",
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "devices",
                      "emailAddress",
                      "deviceSku",
                      "uploadType"
                    ]
                  }
                example: '{"accountName":"1223334444-00001","emailAddress":"bob@mycompany.com","deviceSku":"VZW123456","uploadType":"IMEI","devices":[{"deviceIds":[{"kind":"imei","id":"15-digit IMEI"}]},{"deviceIds":[{"kind":"imei","id":"15-digit IMEI"}]}]}'
            responses:
              '200':
                description: Request ID
                body:
                  application/json:
                    schema: |
                      {
                        "id": "RequestResponse",
                        "title": "RequestResponse",
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "example": "d1f08526-5443-4054-9a29",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32
                          }
                        }
                      }
              '400':
                description: Error Response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "RestErrorResponse",
                        "title": "RestErrorResponse",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "400",
                            "type": "string",
                            "maxLength": 3,
                            "pattern": "^[0-9]{3}$"
                          },
                          "errorMessage": {
                            "example": "a description of the error",
                            "type": "string"
                          }
                        }
                      }
        /usagesegmentationlabels:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Allows you to associate your own usage segmentation label with a device.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "AssociateLabelRequest",
                    "title": "AssociateLabelRequest",
                    "description": "Request to associate a label to a device.",
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
                        "example": "1223334444-00001",
                        "type": "string"
                      },
                      "labels": {
                        "id": "AccountLabels",
                        "title": "AccountLabels",
                        "description": "Maximum of 2,000 objects are allowed in the array.",
                        "type": "object",
                        "properties": {
                          "devices": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "DeviceList",
                              "title": "DeviceList",
                              "type": "object",
                              "properties": {
                                "deviceIds": {
                                  "description": "",
                                  "type": "array",
                                  "items": {
                                    "id": "DeviceId",
                                    "title": "DeviceId",
                                    "description": "An identifier for a single device.",
                                    "example": {
                                      "kind": "imei",
                                      "id": "990013907835573"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "description": "The value of the device identifier.",
                                        "example": "990013907835573",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                        "example": "imei",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "maxItems": 100
                                }
                              }
                            }
                          },
                          "label": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "DeviceLabels",
                              "title": "DeviceLabels",
                              "description": "A label for a single device.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The label you want to associate with the device.",
                                  "example": "VIN",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of label",
                                  "example": "XXUZL54B5YN105457",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                example: ''
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"ec682a8b-e288-4806-934d-24e7a59ed889"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          delete:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Allow customers to remove the associated label from a device.
            queryParameters:
              accountName:
                description: The numeric name of the account.
                type: string
                example: 0000123456-00001
                required: true
                displayName: accountName
              LabelList:
                description: A list of the Label IDs to remove from the exclusion list.
                type: string
                required: true
                displayName: LabelList
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"ec682a8b-e288-4806-934d-24e7a59ed889"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /uploadactivate:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Uploads and activates device identifiers and SKUs for new devices from OEMs to Verizon.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "UploadsActivatesDeviceRequest",
                    "title": "UploadsActivatesDeviceRequest",
                    "description": "Request to Uploads and activates device.",
                    "example": {
                      "accountName": "1223334444-00001",
                      "emailAddress": "bob@mycompany.com",
                      "deviceSku": "VZW123456",
                      "uploadType": "IMEI ICCID Pair",
                      "servicePlan": "15MBShr",
                      "carrierIpPoolName": "",
                      "mdnZipCode": "92222",
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "kind": "imei",
                              "id": "990013907835573"
                            },
                            {
                              "kind": "iccid",
                              "id": "89141390780800784259"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
                        "example": "1223334444-00001",
                        "type": "string"
                      },
                      "emailAddress": {
                        "description": "The email address that the report should be sent to when the upload is complete.",
                        "example": "bob@mycompany.com",
                        "type": "string"
                      },
                      "deviceSku": {
                        "description": "The stock keeping unit that identifies the type of devices in the upload and activation.",
                        "example": "VZW123456",
                        "type": "string"
                      },
                      "uploadType": {
                        "description": "The format of the device identifiers in the upload and activation.",
                        "example": "IMEI ICCID Pair",
                        "type": "string"
                      },
                      "servicePlan": {
                        "description": "The service plan code that you want to assign to all specified devices.",
                        "example": "15MBShr",
                        "type": "string"
                      },
                      "mdnZipCode": {
                        "description": "The Zip code of the location where the line of service is primarily used, or a Zip code that you have been told to use with these devices.",
                        "example": "92222",
                        "type": "string"
                      },
                      "devices": {
                        "description": "The devices to upload, specified by device IDs in a format matching uploadType.",
                        "type": "array",
                        "items": {
                          "id": "DeviceList",
                          "title": "DeviceList",
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              },
                              "maxItems": 100
                            }
                          }
                        }
                      },
                      "carrierIpPoolName": {
                        "description": "The pool from which your device IP addresses is derived.",
                        "example": "The carrier pool name",
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "emailAddress",
                      "deviceSku",
                      "uploadType",
                      "servicePlan",
                      "mdnZipCode",
                      "devices"
                    ]
                  }
                example: '{"accountName":"1223334444-00001","emailAddress":"bob@mycompany.com","deviceSku":"VZW123456","uploadType":"IMEI ICCID Pair","servicePlan":"15MBShr","carrierIpPoolName":"","mdnZipCode":"92222","devices":[{"deviceIds":[{"kind":"imei","id":"990013907835573"},{"kind":"iccid","id":"89141390780800784259"}]}]}'
            responses:
              '200':
                description: Request ID received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceManagementResult",
                        "title": "DeviceManagementResult",
                        "description": "Response to activate service for one or more devices so that they can send and receive data.",
                        "example": {
                          "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "A unique string that associates the request with the results that are sent via a callback service.",
                            "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"requestId":"ec682a8b-e288-4806-934d-24e7a59ed889"}'
              '400':
                description: Error response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ConnectivityManagementResult",
                        "title": "ConnectivityManagementResult",
                        "description": "Response to errors.",
                        "example": {
                          "errorCode": "error code string",
                          "errorMessage": "error message string"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Code of the error.",
                            "example": "error code string",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "Details of the error.",
                            "example": "error message string",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"errorCode":"error code string","errorMessage":"error message string"}'
        /enhanceQoS:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Creates a QoS elevation subscription ID and activates the subscription.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "subscribeRequest",
                    "title": "subscribeRequest",
                    "description": "The request details to create a ThingSpace Quality of Service API subscription.",
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "example": "0000123456-00001",
                        "type": "string"
                      },
                      "deviceInfo": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "QOSdeviceInfo",
                          "title": "QOSdeviceInfo",
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "id": "QOSdeviceId",
                              "title": "QOSdeviceId",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "example": "10-digit phone number",
                                  "type": "string"
                                },
                                "kind": {
                                  "example": "mdn",
                                  "type": "string"
                                }
                              }
                            },
                            "flowInfo": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "id": "FlowInfo",
                                "title": "FlowInfo",
                                "type": "object",
                                "properties": {
                                  "flowServer": {
                                    "example": "[IPv6 address]:port",
                                    "type": "string"
                                  },
                                  "flowDevice": {
                                    "example": "[IPv6 address]:port",
                                    "type": "string"
                                  },
                                  "flowDirection": {
                                    "example": "UPLINK",
                                    "type": "string"
                                  },
                                  "flowProtocol": {
                                    "example": "UDP",
                                    "type": "string"
                                  },
                                  "qciOption": {
                                    "example": "Premium",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "deviceIPv6Addr": {
                              "example": "IPv6 address",
                              "type": "string"
                            }
                          },
                          "required": [
                            "deviceId",
                            "flowInfo"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountName",
                      "deviceInfo"
                    ]
                  }
                example: ''
            responses:
              '201':
                description: Success Response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "201success",
                        "title": "201success",
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "example": "be36accb-0a9a-4367-93ab-0af6c4ed256a",
                            "type": "string"
                          }
                        }
                      }
              '0':
                description: Error Response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DefaultResponse",
                        "title": "DefaultResponse",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "3 or 4 digit error code",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "A short description of the error",
                            "type": "string"
                          }
                        }
                      }
          delete:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Stops an active ThingSpace Quality of Service API subscription using the account name and the subscription ID.
            queryParameters:
              accountName:
                type: string
                example: 0000123456-00001
                required: true
                displayName: accountName
              qosSubscriptionId:
                type: string
                example: QoS subscription ID
                required: true
                displayName: qosSubscriptionId
            responses:
              '201':
                description: Success Response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "201success",
                        "title": "201success",
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "example": "be36accb-0a9a-4367-93ab-0af6c4ed256a",
                            "type": "string"
                          }
                        }
                      }
              '0':
                description: Error Response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DefaultResponse",
                        "title": "DefaultResponse",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "3 or 4 digit error code",
                            "type": "string"
                          },
                          "errorMessage": {
                            "example": "A short description of the error",
                            "type": "string"
                          }
                        }
                      }
      /usage:
        /actions:
          /list:
            /aggregate:
              post:
                securedBy:
                - thingspace_oauth
                - VZ-M2M-Token
                description: The information is returned in a callback response, so you must register a URL for DeviceUsage callback messages using the POST /callbacks API.
                headers:
                  Content-Type:
                    required: true
                    displayName: Content-Type
                    enum:
                    - application/json
                body:
                  application/json:
                    schema: |
                      {
                        "id": "DeviceAggregateUsageListRequest",
                        "title": "DeviceAggregateUsageListRequest",
                        "description": "A request to retrieve aggregated device usage history information.",
                        "example": {
                          "deviceIds": [
                            {
                              "id": "84258000000891490087",
                              "kind": "ICCID"
                            }
                          ],
                          "accountName": "9992330389-00001",
                          "endTime": "2021-08-30T00:00:00-06:00",
                          "startTime": "2021-08-01T00:00:00-06:00"
                        },
                        "examples": [
                          {
                            "Id": "one-device",
                            "Name": null,
                            "Value": "{\"deviceIds\":[{\"id\":\"84258000000891490087\",\"kind\":\"ICCID\"}],\"accountName\":\"9992330389-00001\",\"endTime\":\"2021-08-30T00:00:00-06:00\",\"startTime\":\"2021-08-01T00:00:00-06:00\"}",
                            "ExternalValue": null,
                            "Description": null
                          },
                          {
                            "Id": "all-devices",
                            "Name": null,
                            "Value": "{\"accountName\":\"9992330389-00001\",\"endTime\":\"2021-08-31T23:59:59+00:00\",\"startTime\":\"2021-08-01T00:00:01+00:00\"}",
                            "ExternalValue": null,
                            "Description": null
                          },
                          {
                            "Id": "using-group-name",
                            "Name": null,
                            "Value": "{\"groupName\":\"SMS\",\"accountName\":\"9992330389-00001\",\"endTime\":\"2021-08-30T00:00:00-06:00\",\"startTime\":\"2021-08-01T00:00:00-06:00\"}",
                            "ExternalValue": null,
                            "Description": null
                          }
                        ],
                        "type": "object",
                        "properties": {
                          "deviceIds": {
                            "description": "One or more devices for which you want aggregate data, specified by device ID.",
                            "example": [
                              {
                                "id": "84258000000891490087",
                                "kind": "ICCID"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "DeviceId",
                              "title": "DeviceId",
                              "description": "An identifier for a single device.",
                              "example": {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The value of the device identifier.",
                                  "example": "990013907835573",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                  "example": "imei",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "accountName": {
                            "description": "The name of a billing account.",
                            "example": "9992330389-00001",
                            "type": "string"
                          },
                          "groupName": {
                            "description": "The name of a device group, if you want to only include devices in that group.",
                            "example": "SMS",
                            "type": "string"
                          },
                          "startTime": {
                            "description": "The beginning of the reporting period. The startTime cannot be more than 6 months before the current date.",
                            "example": "2021-08-01T00:00:00-06:00",
                            "type": "string"
                          },
                          "endTime": {
                            "description": "The end of the reporting period. The endTime date must be within on month of the startTime date.",
                            "example": "2021-08-30T00:00:00-06:00",
                            "type": "string"
                          },
                          "label": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "Label",
                              "title": "Label",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                },
                                "value": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 32,
                                  "pattern": "^[A-Za-z0-9]{3,32}$"
                                }
                              }
                            },
                            "maxItems": 50
                          }
                        }
                      }
                    example: '{"deviceIds":[{"id":"84258000000891490087","kind":"ICCID"}],"accountName":"9992330389-00001","endTime":"2021-08-30T00:00:00-06:00","startTime":"2021-08-01T00:00:00-06:00"}'
                responses:
                  '200':
                    description: A unique string that associates the request with the results that are sent via a callback service.
                    body:
                      application/json:
                        schema: |
                          {
                            "id": "DeviceManagementResult",
                            "title": "DeviceManagementResult",
                            "description": "Response to activate service for one or more devices so that they can send and receive data.",
                            "example": {
                              "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                            },
                            "type": "object",
                            "properties": {
                              "requestId": {
                                "description": "A unique string that associates the request with the results that are sent via a callback service.",
                                "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                                "type": "string"
                              }
                            }
                          }
                        example: '{"requestId":"1631e200-7398-4609-b1f8-398341229176"}'
                  '400':
                    description: Error response.
                    body:
                      application/json:
                        schema: |
                          {
                            "id": "ConnectivityManagementResult",
                            "title": "ConnectivityManagementResult",
                            "description": "Response to errors.",
                            "example": {
                              "errorCode": "error code string",
                              "errorMessage": "error message string"
                            },
                            "type": "object",
                            "properties": {
                              "errorCode": {
                                "description": "Code of the error.",
                                "example": "error code string",
                                "type": "string"
                              },
                              "errorMessage": {
                                "description": "Details of the error.",
                                "example": "error message string",
                                "type": "string"
                              }
                            }
                          }
                        example: '{"errorCode":"error code string","errorMessage":"error message string"}'
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Returns the network data usage history of a device during a specified time period.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceUsageListRequest",
                      "title": "DeviceUsageListRequest",
                      "description": "Request to obtain usage history for a specific device.",
                      "example": {
                        "earliest": "2018-03-20T00:00:01Z",
                        "latest": "2020-12-31T00:00:01Z"
                      },
                      "type": "object",
                      "properties": {
                        "deviceId": {
                          "id": "DeviceId",
                          "title": "DeviceId",
                          "description": "An identifier for a single device.",
                          "example": {
                            "kind": "imei",
                            "id": "990013907835573"
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The value of the device identifier.",
                              "example": "990013907835573",
                              "type": "string"
                            },
                            "kind": {
                              "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                              "example": "imei",
                              "type": "string"
                            }
                          }
                        },
                        "earliest": {
                          "description": "The earliest date for which you want usage data.",
                          "example": "2018-03-20T00:00:01Z",
                          "type": "string"
                        },
                        "latest": {
                          "description": "The last date for which you want usage data.",
                          "example": "2020-12-31T00:00:01Z",
                          "type": "string"
                        },
                        "label": {
                          "id": "Label",
                          "title": "Label",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[A-Za-z0-9]{3,32}$"
                            },
                            "value": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[A-Za-z0-9]{3,32}$"
                            }
                          }
                        }
                      }
                    }
                  example: '{"earliest":"2018-03-20T00:00:01Z","latest":"2020-12-31T00:00:01Z"}'
              responses:
                '200':
                  description: List of device usage events, sorted by the timestamp, oldest first.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "DeviceUsageListResult",
                          "title": "DeviceUsageListResult",
                          "description": "Response to return the daily network data usage of a single device during a specified time period.",
                          "example": {
                            "hasMoreData": false,
                            "usageHistory": [
                              {
                                "bytesUsed": 4096,
                                "extendedAttributes": [
                                  {
                                    "key": "MoSms",
                                    "value": "0"
                                  }
                                ],
                                "smsUsed": 0,
                                "source": "Raw Usage",
                                "timestamp": "2020-12-01T00:00:00Z"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "hasMoreData": {
                              "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                              "example": false,
                              "type": "boolean"
                            },
                            "usageHistory": {
                              "description": "Placeholder.",
                              "example": [
                                {
                                  "bytesUsed": 4096,
                                  "extendedAttributes": [
                                    {
                                      "key": "MoSms",
                                      "value": "0"
                                    }
                                  ],
                                  "smsUsed": 0,
                                  "source": "Raw Usage",
                                  "timestamp": "2020-12-01T00:00:00Z"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "Usage",
                                "title": "Usage",
                                "description": "The daily network data usage of a single device during a specified time period.",
                                "example": {
                                  "bytesUsed": 4096,
                                  "extendedAttributes": [
                                    {
                                      "key": "MoSms",
                                      "value": "0"
                                    }
                                  ],
                                  "smsUsed": 0,
                                  "source": "Raw Usage",
                                  "timestamp": "2020-12-01T00:00:00Z"
                                },
                                "type": "object",
                                "properties": {
                                  "bytesUsed": {
                                    "description": "The number of bytes that the device sent or received on the report date.",
                                    "example": 4096,
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "extendedAttributes": {
                                    "description": "The number of mobile-originated and mobile-terminated SMS messages on the report date.",
                                    "example": [
                                      {
                                        "key": "MoSms",
                                        "value": "0"
                                      }
                                    ],
                                    "type": "array",
                                    "items": {
                                      "id": "CustomFields",
                                      "title": "CustomFields",
                                      "description": "Custom data that can be included using key-value pairs.",
                                      "example": {
                                        "key": "CustomField2",
                                        "value": "SuperVend"
                                      },
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "description": "The key for an extended attribute.",
                                          "example": "CustomField2",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The value of an extended attribute.",
                                          "example": "SuperVend",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "servicePlan": {
                                    "description": "The list of service plans associated with the device/account.",
                                    "type": "string"
                                  },
                                  "smsUsed": {
                                    "description": "The number of SMS messages that were sent or received on the report date.",
                                    "example": 0,
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "source": {
                                    "description": "The source of the information for the reported usage.",
                                    "example": "Raw Usage",
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "description": "The date of the recorded usage.",
                                    "example": "2020-12-01T00:00:00Z",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      example: '{"hasMoreData":false,"usageHistory":[{"bytesUsed":4096,"extendedAttributes":[{"key":"MoSms","value":"0"}],"smsUsed":0,"source":"Raw Usage","timestamp":"2020-12-01T00:00:00Z"}]}'
                '202':
                  description: List of device usage events, sorted by the timestamp, oldest first. Additional events remain.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "DeviceUsageListResult",
                          "title": "DeviceUsageListResult",
                          "description": "Response to return the daily network data usage of a single device during a specified time period.",
                          "example": {
                            "hasMoreData": false,
                            "usageHistory": [
                              {
                                "bytesUsed": 4096,
                                "extendedAttributes": [
                                  {
                                    "key": "MoSms",
                                    "value": "0"
                                  }
                                ],
                                "smsUsed": 0,
                                "source": "Raw Usage",
                                "timestamp": "2020-12-01T00:00:00Z"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "hasMoreData": {
                              "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
                              "example": false,
                              "type": "boolean"
                            },
                            "usageHistory": {
                              "description": "Placeholder.",
                              "example": [
                                {
                                  "bytesUsed": 4096,
                                  "extendedAttributes": [
                                    {
                                      "key": "MoSms",
                                      "value": "0"
                                    }
                                  ],
                                  "smsUsed": 0,
                                  "source": "Raw Usage",
                                  "timestamp": "2020-12-01T00:00:00Z"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "Usage",
                                "title": "Usage",
                                "description": "The daily network data usage of a single device during a specified time period.",
                                "example": {
                                  "bytesUsed": 4096,
                                  "extendedAttributes": [
                                    {
                                      "key": "MoSms",
                                      "value": "0"
                                    }
                                  ],
                                  "smsUsed": 0,
                                  "source": "Raw Usage",
                                  "timestamp": "2020-12-01T00:00:00Z"
                                },
                                "type": "object",
                                "properties": {
                                  "bytesUsed": {
                                    "description": "The number of bytes that the device sent or received on the report date.",
                                    "example": 4096,
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "extendedAttributes": {
                                    "description": "The number of mobile-originated and mobile-terminated SMS messages on the report date.",
                                    "example": [
                                      {
                                        "key": "MoSms",
                                        "value": "0"
                                      }
                                    ],
                                    "type": "array",
                                    "items": {
                                      "id": "CustomFields",
                                      "title": "CustomFields",
                                      "description": "Custom data that can be included using key-value pairs.",
                                      "example": {
                                        "key": "CustomField2",
                                        "value": "SuperVend"
                                      },
                                      "type": "object",
                                      "properties": {
                                        "key": {
                                          "description": "The key for an extended attribute.",
                                          "example": "CustomField2",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The value of an extended attribute.",
                                          "example": "SuperVend",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "servicePlan": {
                                    "description": "The list of service plans associated with the device/account.",
                                    "type": "string"
                                  },
                                  "smsUsed": {
                                    "description": "The number of SMS messages that were sent or received on the report date.",
                                    "example": 0,
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "source": {
                                    "description": "The source of the information for the reported usage.",
                                    "example": "Raw Usage",
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "description": "The date of the recorded usage.",
                                    "example": "2020-12-01T00:00:00Z",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      example: '{"hasMoreData":false,"usageHistory":[{"bytesUsed":4096,"extendedAttributes":[{"key":"MoSms","value":"0"}],"smsUsed":0,"source":"Raw Usage","timestamp":"2020-12-01T00:00:00Z"}]}'
                '400':
                  description: Error response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ConnectivityManagementResult",
                          "title": "ConnectivityManagementResult",
                          "description": "Response to errors.",
                          "example": {
                            "errorCode": "error code string",
                            "errorMessage": "error message string"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "description": "Code of the error.",
                              "example": "error code string",
                              "type": "string"
                            },
                            "errorMessage": {
                              "description": "Details of the error.",
                              "example": "error message string",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          /billedusage/list:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Gets billed usage for for either multiple devices or an entire billing account.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "billedusageListRequest",
                      "title": "billedusageListRequest",
                      "description": "Request to list devices with mismatched IMEIs and ICCIDs.",
                      "example": {
                        "accountName": "0342077109-00001",
                        "devices": [
                          {
                            "deviceIds": [
                              {
                                "kind": "iccid",
                                "id": "8914800000080078"
                              },
                              {
                                "kind": "eid",
                                "id": "5096300587"
                              }
                            ]
                          }
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "example": "9231221278-99990",
                          "type": "string"
                        },
                        "labels": {
                          "id": "LabelsList",
                          "title": "LabelsList",
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "id": "DeviceLabels",
                                "title": "DeviceLabels",
                                "description": "A label for a single device.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The label you want to associate with the device.",
                                    "example": "VIN",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The value of label",
                                    "example": "XXUZL54B5YN105457",
                                    "type": "string"
                                  }
                                }
                              },
                              "maxItems": 100
                            }
                          }
                        },
                        "deviceIds": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "DeviceList",
                            "title": "DeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "DeviceId",
                                  "title": "DeviceId",
                                  "description": "An identifier for a single device.",
                                  "example": {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The value of the device identifier.",
                                      "example": "990013907835573",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                      "example": "imei",
                                      "type": "string"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          }
                        },
                        "billingCycle": {
                          "id": "BillingCycle",
                          "title": "BillingCycle",
                          "type": "object",
                          "properties": {
                            "year": {
                              "example": "2020",
                              "type": "string"
                            },
                            "month": {
                              "example": "3",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  example: '{"accountName":"0342077109-00001","devices":[{"deviceIds":[{"kind":"iccid","id":"8914800000080078"},{"kind":"eid","id":"5096300587"}]}]}'
              responses:
                '200':
                  description: Request ID received on a successful response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "DeviceManagementResult",
                          "title": "DeviceManagementResult",
                          "description": "Response to activate service for one or more devices so that they can send and receive data.",
                          "example": {
                            "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "description": "A unique string that associates the request with the results that are sent via a callback service.",
                              "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
                '400':
                  description: Error response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ConnectivityManagementResult",
                          "title": "ConnectivityManagementResult",
                          "description": "Response to errors.",
                          "example": {
                            "errorCode": "error code string",
                            "errorMessage": "error message string"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "description": "Code of the error.",
                              "example": "error code string",
                              "type": "string"
                            },
                            "errorMessage": {
                              "description": "Details of the error.",
                              "example": "error message string",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          /promodeviceusage:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Retrieves the usage history of a device during the promotion period.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "RequestBodyforUsage1",
                      "title": "RequestBodyforUsage1",
                      "description": "Retrieve Aggregate Usage",
                      "type": "object",
                      "properties": {
                        "deviceId": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "ReadySimDeviceId",
                            "title": "ReadySimDeviceId",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "example": "iccid",
                                "type": "string"
                              },
                              "id": {
                                "example": "20-digit iccid",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "startTime": {
                          "example": "2021-08-15T05:00:00Z",
                          "type": "string",
                          "format": "date-time"
                        },
                        "endTime": {
                          "example": "2021-08-16T05:00:00Z",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Usage History
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ResponsetoUsageQuery",
                          "title": "ResponsetoUsageQuery",
                          "example": {
                            "hasmoredata": false,
                            "deviceId": {
                              "kind": "iccid",
                              "id": "20-digit iccid"
                            },
                            "usageHistory": [
                              {
                                "bytesUsed": 3072,
                                "serviceplan": "The serviceplan name",
                                "smsUsed": 0,
                                "moSMS": 0,
                                "mtSMS": 0,
                                "source": "Raw Usage",
                                "eventDateTime": "2021-08-15T05:00:00Z"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "hasmoredata": {
                              "example": false,
                              "type": "boolean"
                            },
                            "deviceId": {
                              "id": "ReadySimDeviceId",
                              "title": "ReadySimDeviceId",
                              "type": "object",
                              "properties": {
                                "kind": {
                                  "example": "iccid",
                                  "type": "string"
                                },
                                "id": {
                                  "example": "20-digit iccid",
                                  "type": "string"
                                }
                              }
                            },
                            "usageHistory": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "id": "usagehistory",
                                "title": "usagehistory",
                                "type": "object",
                                "properties": {
                                  "bytesUsed": {
                                    "example": 3072,
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "serviceplan": {
                                    "example": "The serviceplan name",
                                    "type": "string"
                                  },
                                  "smsUsed": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "moSMS": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "mtSMS": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "source": {
                                    "example": "Raw Usage",
                                    "type": "string"
                                  },
                                  "eventDateTime": {
                                    "example": "2021-08-15T05:00:00Z",
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              }
                            }
                          }
                        }
                      example: '{"hasmoredata":false,"deviceId":{"kind":"iccid","id":"20-digit iccid"},"usageHistory":[{"bytesUsed":3072,"serviceplan":"The serviceplan name","smsUsed":0,"moSMS":0,"mtSMS":0,"source":"Raw Usage","eventDateTime":"2021-08-15T05:00:00Z"}]}'
                '0':
                  description: All error responses will be in this format
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ReadySimRestErrorResponse",
                          "title": "ReadySimRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "More details about the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "More details about the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"More details about the error"}'
          /promoaggregateusage:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Retrieves the aggregate usage for an account using pseudo-MDN during the promotional period using a callback.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "RequestBodyforUsage",
                      "title": "RequestBodyforUsage",
                      "description": "Retrieve Aggregate Usage",
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "example": "0000123456-000001",
                          "type": "string"
                        },
                        "deviceId": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "ReadySimDeviceId",
                            "title": "ReadySimDeviceId",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "example": "iccid",
                                "type": "string"
                              },
                              "id": {
                                "example": "20-digit iccid",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "startTime": {
                          "example": "2021-08-15T05:00:00Z",
                          "type": "string",
                          "format": "date-time"
                        },
                        "endTime": {
                          "example": "2021-08-16T05:00:00Z",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Request response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "usageRequestResponse",
                          "title": "usageRequestResponse",
                          "example": {
                            "requestId": "be1b5958-3e11-41db-9abd-b1b7618c0035"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "be1b5958-3e11-41db-9abd-b1b7618c0035",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"be1b5958-3e11-41db-9abd-b1b7618c0035"}'
                '0':
                  description: Error response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ReadySimRestErrorResponse",
                          "title": "ReadySimRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "More details about the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "More details about the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"More details about the error"}'
      /profile:
        /actions:
          /activate_enable:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Uses the profile to bring the device under management.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "ActivateDeviceProfileRequest",
                      "title": "ActivateDeviceProfileRequest",
                      "description": "Device Profile Query",
                      "example": {
                        "devices": [
                          {
                            "deviceIds": [
                              {
                                "id": "32-digit EID",
                                "kind": "eid"
                              },
                              {
                                "id": "15-digit IMEI",
                                "kind": "imei"
                              }
                            ]
                          }
                        ],
                        "accountName": "0000123456-00001",
                        "servicePlan": "The service plan name",
                        "mdnZipCode": "five digit zip code"
                      },
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "DeviceList",
                            "title": "DeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "DeviceId",
                                  "title": "DeviceId",
                                  "description": "An identifier for a single device.",
                                  "example": {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The value of the device identifier.",
                                      "example": "990013907835573",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                      "example": "imei",
                                      "type": "string"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          },
                          "maxItems": 100
                        },
                        "accountName": {
                          "example": "0000123456-00001",
                          "type": "string"
                        },
                        "servicePlan": {
                          "example": "The service plan name",
                          "type": "string"
                        },
                        "mdnZipCode": {
                          "example": "five digit zip code",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"devices":[{"deviceIds":[{"id":"32-digit EID","kind":"eid"},{"id":"15-digit IMEI","kind":"imei"}]}],"accountName":"0000123456-00001","servicePlan":"The service plan name","mdnZipCode":"five digit zip code"}'
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "RequestResponse",
                          "title": "RequestResponse",
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32
                            }
                          }
                        }
                '400':
                  description: Bad request
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "RestErrorResponse",
                          "title": "RestErrorResponse",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "400",
                              "type": "string",
                              "maxLength": 3,
                              "pattern": "^[0-9]{3}$"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
          /activate:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Uses the profile to activate the SIM.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMProfileRequest",
                      "title": "eSIMProfileRequest",
                      "description": "Device Profile Query",
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "eSIMDeviceList",
                            "title": "eSIMDeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "eSIMDeviceId",
                                  "title": "eSIMDeviceId",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "example": "32-digit EID",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "example": "eid",
                                      "type": "string"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          },
                          "maxItems": 100
                        },
                        "carrierName": {
                          "example": "name of the mobile service provider",
                          "type": "string"
                        },
                        "accountName": {
                          "example": "0000123456-00001",
                          "type": "string"
                        },
                        "servicePlan": {
                          "example": "The service plan name (The value used for Consumer eSIM for Enterprise will be HybridESim)",
                          "type": "string"
                        },
                        "mdnZipCode": {
                          "example": "five digit zip code",
                          "type": "string"
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRequestResponse",
                          "title": "eSIMRequestResponse",
                          "example": {
                            "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
                '400':
                  description: Bad request
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '401':
                  description: Unauthorized
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '403':
                  description: Forbidden
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '404':
                  description: Not Found / Does not exist
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '406':
                  description: Format / Request Unacceptable
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '429':
                  description: Too many requests
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '0':
                  description: Error response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
          /deactivate:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Uses the profile to deactivate the SIM.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "ProfileRequest2",
                      "title": "ProfileRequest2",
                      "description": "Device Profile Query",
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "DeviceList2",
                            "title": "DeviceList2",
                            "type": "object",
                            "properties": {
                              "ids": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "eSIMDeviceId",
                                  "title": "eSIMDeviceId",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "example": "32-digit EID",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "example": "eid",
                                      "type": "string"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          },
                          "maxItems": 100
                        },
                        "accountName": {
                          "example": "0000123456-00001",
                          "type": "string"
                        },
                        "carrierName": {
                          "example": "Verizon Wireless",
                          "type": "string"
                        },
                        "reasonCode": {
                          "example": "FF",
                          "type": "string"
                        },
                        "etfWaiver": {
                          "type": "boolean",
                          "default": true
                        },
                        "checkFallbackProfile": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRequestResponse",
                          "title": "eSIMRequestResponse",
                          "example": {
                            "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
                '400':
                  description: Bad request
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '401':
                  description: Unauthorized
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '403':
                  description: Forbidden
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '404':
                  description: Not Found / Does not exist
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '406':
                  description: Format / Request Unacceptable
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '429':
                  description: Too many requests
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
                '0':
                  description: Error response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "eSIMRestErrorResponse",
                          "title": "eSIMRestErrorResponse",
                          "example": {
                            "errorCode": "The 3-digit HTML error code",
                            "errorMessage": "a description of the error"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "The 3-digit HTML error code",
                              "type": "string"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
          /setfallbackattribute:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Allows the profile to set the fallback attribute to the device.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "SetFallbackAttributeRequest",
                      "title": "SetFallbackAttributeRequest",
                      "description": "Device Profile Query",
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "DeviceList",
                            "title": "DeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "DeviceId",
                                  "title": "DeviceId",
                                  "description": "An identifier for a single device.",
                                  "example": {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The value of the device identifier.",
                                      "example": "990013907835573",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                      "example": "imei",
                                      "type": "string"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          },
                          "maxItems": 100
                        },
                        "accountName": {
                          "example": "0000123456-00001",
                          "type": "string"
                        },
                        "carrierName": {
                          "example": "the name of the mobile service provider",
                          "type": "string"
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "RequestResponse",
                          "title": "RequestResponse",
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32
                            }
                          }
                        }
                '400':
                  description: Bad request
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "RestErrorResponse",
                          "title": "RestErrorResponse",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "400",
                              "type": "string",
                              "maxLength": 3,
                              "pattern": "^[0-9]{3}$"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
          /download_enable:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Enable the Global IoT Orchestration device profile for download.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceProfileRequest",
                      "title": "DeviceProfileRequest",
                      "description": "Device Profile Query",
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "GIODeviceList",
                            "title": "GIODeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "GIODeviceId",
                                  "title": "GIODeviceId",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "example": "eid",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 6,
                                      "pattern": "^[A-Za-z]{3,6}$"
                                    },
                                    "id": {
                                      "example": "12345678901234567890123456789012",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 32,
                                      "pattern": "^[0-9]{3,32}$"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          },
                          "maxItems": 100
                        },
                        "accountName": {
                          "example": "0000123456-00001",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[0-9\\-]{3,32}$"
                        },
                        "servicePlan": {
                          "example": "service plan name",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9 ]{3,32}$"
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "GIORequestResponse",
                          "title": "GIORequestResponse",
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 64,
                              "pattern": "^[A-Za-z0-9\\-]{3,64}$"
                            }
                          }
                        }
                '0':
                  description: Error response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "GIORestErrorResponse",
                          "title": "GIORestErrorResponse",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "400",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "pattern": "^[0-9]{3,3}$"
                            },
                            "errorMessage": {
                              "example": "a brief description of the error",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 1000,
                              "pattern": "^[A-Za-z0-9 ]{3,32}$"
                            }
                          }
                        }
          /download_disable:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Downloads an eUICC local profile to devices and leaves the profile disabled.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "ProfileChangeStateRequest",
                      "title": "ProfileChangeStateRequest",
                      "description": "Device Profile Query",
                      "example": {
                        "devices": [
                          {
                            "deviceIds": [
                              {
                                "kind": "eid",
                                "id": "678912789123453456784008666456"
                              },
                              {
                                "kind": "iccid",
                                "id": "78425989148000000840"
                              }
                            ]
                          }
                        ],
                        "accountName": "1223334444-00001",
                        "smsrOid": "1.3.6.1.4.1.31746.1.500.200.101.5"
                      },
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "DeviceList",
                            "title": "DeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "DeviceId",
                                  "title": "DeviceId",
                                  "description": "An identifier for a single device.",
                                  "example": {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The value of the device identifier.",
                                      "example": "990013907835573",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                      "example": "imei",
                                      "type": "string"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          }
                        },
                        "accountName": {
                          "example": "1223334444-00001",
                          "type": "string"
                        },
                        "smsrOid": {
                          "example": "1.3.6.1.4.1.31746.1.500.200.101.5",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"devices":[{"deviceIds":[{"kind":"eid","id":"678912789123453456784008666456"},{"kind":"iccid","id":"78425989148000000840"}]}],"accountName":"1223334444-00001","smsrOid":"1.3.6.1.4.1.31746.1.500.200.101.5"}'
              responses:
                '200':
                  description: Request ID received on a successful response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "DeviceManagementResult",
                          "title": "DeviceManagementResult",
                          "description": "Response to activate service for one or more devices so that they can send and receive data.",
                          "example": {
                            "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "description": "A unique string that associates the request with the results that are sent via a callback service.",
                              "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
                '400':
                  description: Error response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ConnectivityManagementResult",
                          "title": "ConnectivityManagementResult",
                          "description": "Response to errors.",
                          "example": {
                            "errorCode": "error code string",
                            "errorMessage": "error message string"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "description": "Code of the error.",
                              "example": "error code string",
                              "type": "string"
                            },
                            "errorMessage": {
                              "description": "Details of the error.",
                              "example": "error message string",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          /enable:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Enable a device lead or local profile.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceProfileRequest",
                      "title": "DeviceProfileRequest",
                      "description": "Device Profile Query",
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "GIODeviceList",
                            "title": "GIODeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "GIODeviceId",
                                  "title": "GIODeviceId",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "example": "eid",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 6,
                                      "pattern": "^[A-Za-z]{3,6}$"
                                    },
                                    "id": {
                                      "example": "12345678901234567890123456789012",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 32,
                                      "pattern": "^[0-9]{3,32}$"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          },
                          "maxItems": 100
                        },
                        "accountName": {
                          "example": "0000123456-00001",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[0-9\\-]{3,32}$"
                        },
                        "servicePlan": {
                          "example": "service plan name",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9 ]{3,32}$"
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "GIORequestResponse",
                          "title": "GIORequestResponse",
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 64,
                              "pattern": "^[A-Za-z0-9\\-]{3,64}$"
                            }
                          }
                        }
                '0':
                  description: Error response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "GIORestErrorResponse",
                          "title": "GIORestErrorResponse",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "400",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "pattern": "^[0-9]{3,3}$"
                            },
                            "errorMessage": {
                              "example": "a brief description of the error",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 1000,
                              "pattern": "^[A-Za-z0-9 ]{3,32}$"
                            }
                          }
                        }
          /disable:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Disable a local profile on eUICC devices. The default or boot profile will become the enabled profile.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "ProfileChangeStateRequest",
                      "title": "ProfileChangeStateRequest",
                      "description": "Update state",
                      "example": {
                        "devices": [
                          {
                            "deviceIds": [
                              {
                                "kind": "eid",
                                "id": "678912789123453456784008666456"
                              },
                              {
                                "kind": "iccid",
                                "id": "78425989148000000840"
                              }
                            ]
                          }
                        ],
                        "accountName": "1223334444-00001",
                        "smsrOid": "1.3.6.1.4.1.31746.1.500.200.101.5"
                      },
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "DeviceList",
                            "title": "DeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "DeviceId",
                                  "title": "DeviceId",
                                  "description": "An identifier for a single device.",
                                  "example": {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The value of the device identifier.",
                                      "example": "990013907835573",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                      "example": "imei",
                                      "type": "string"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          }
                        },
                        "accountName": {
                          "example": "1223334444-00001",
                          "type": "string"
                        },
                        "smsrOid": {
                          "example": "1.3.6.1.4.1.31746.1.500.200.101.5",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"devices":[{"deviceIds":[{"kind":"eid","id":"678912789123453456784008666456"},{"kind":"iccid","id":"78425989148000000840"}]}],"accountName":"1223334444-00001","smsrOid":"1.3.6.1.4.1.31746.1.500.200.101.5"}'
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "RequestResponse",
                          "title": "RequestResponse",
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32
                            }
                          }
                        }
                '400':
                  description: Error Response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "RestErrorResponse",
                          "title": "RestErrorResponse",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "400",
                              "type": "string",
                              "maxLength": 3,
                              "pattern": "^[0-9]{3}$"
                            },
                            "errorMessage": {
                              "example": "a description of the error",
                              "type": "string"
                            }
                          }
                        }
          /delete:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Delete a device profile for Global IoT Orchestration. **Note:** the profile must be deactivated first!
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceProfileRequest",
                      "title": "DeviceProfileRequest",
                      "description": "Device Profile Query",
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "GIODeviceList",
                            "title": "GIODeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "GIODeviceId",
                                  "title": "GIODeviceId",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "example": "eid",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 6,
                                      "pattern": "^[A-Za-z]{3,6}$"
                                    },
                                    "id": {
                                      "example": "12345678901234567890123456789012",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 32,
                                      "pattern": "^[0-9]{3,32}$"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          },
                          "maxItems": 100
                        },
                        "accountName": {
                          "example": "0000123456-00001",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[0-9\\-]{3,32}$"
                        },
                        "servicePlan": {
                          "example": "service plan name",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9 ]{3,32}$"
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "GIORequestResponse",
                          "title": "GIORequestResponse",
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 64,
                              "pattern": "^[A-Za-z0-9\\-]{3,64}$"
                            }
                          }
                        }
                '0':
                  description: Error response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "GIORestErrorResponse",
                          "title": "GIORestErrorResponse",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "400",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "pattern": "^[0-9]{3,3}$"
                            },
                            "errorMessage": {
                              "example": "a brief description of the error",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 1000,
                              "pattern": "^[A-Za-z0-9 ]{3,32}$"
                            }
                          }
                        }
          /download:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Download a Global IoT Orchestration device profile.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "DeviceProfileRequest",
                      "title": "DeviceProfileRequest",
                      "description": "Device Profile Query",
                      "type": "object",
                      "properties": {
                        "devices": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "GIODeviceList",
                            "title": "GIODeviceList",
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "GIODeviceId",
                                  "title": "GIODeviceId",
                                  "type": "object",
                                  "properties": {
                                    "kind": {
                                      "example": "eid",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 6,
                                      "pattern": "^[A-Za-z]{3,6}$"
                                    },
                                    "id": {
                                      "example": "12345678901234567890123456789012",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 32,
                                      "pattern": "^[0-9]{3,32}$"
                                    }
                                  }
                                },
                                "maxItems": 100
                              }
                            }
                          },
                          "maxItems": 100
                        },
                        "accountName": {
                          "example": "0000123456-00001",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[0-9\\-]{3,32}$"
                        },
                        "servicePlan": {
                          "example": "service plan name",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9 ]{3,32}$"
                        }
                      }
                    }
                  example: ''
              responses:
                '200':
                  description: Request ID
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "GIORequestResponse",
                          "title": "GIORequestResponse",
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 64,
                              "pattern": "^[A-Za-z0-9\\-]{3,64}$"
                            }
                          }
                        }
                '0':
                  description: Error response
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "GIORestErrorResponse",
                          "title": "GIORestErrorResponse",
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "example": "400",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "pattern": "^[0-9]{3,3}$"
                            },
                            "errorMessage": {
                              "example": "a brief description of the error",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 1000,
                              "pattern": "^[A-Za-z0-9 ]{3,32}$"
                            }
                          }
                        }
      /mec:
        /kpi/list/{aname}:
          uriParameters:
            aname:
              description: Account name.
              type: string
              example: 0342351414-00001
              required: true
              displayName: aname
          get:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            responses:
              '200':
                description: Kpi list received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "KPIInfoList",
                        "title": "KPIInfoList",
                        "example": {
                          "KpiInfoList": [
                            {
                              "name": "DOWNLINK_THROUGHPUT",
                              "value": "23.2",
                              "nodeName": "132924_ENB_VZ_EULESS_OLTE_RD-01",
                              "nodeType": "BASEBAND",
                              "description": "Downlink throughput (4G)",
                              "unit": "Mbps",
                              "category": "Network Performance Radio",
                              "timeOfLastUpdate": "2022-12-07T08:39:59.228Z"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "KpiInfoList": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "KPIInfo",
                              "title": "KPIInfo",
                              "description": "KPI Info Object",
                              "example": {
                                "name": "DOWNLINK_THROUGHPUT",
                                "value": "23.2",
                                "nodeName": "132924_ENB_VZ_EULESS_OLTE_RD-01",
                                "nodeType": "BASEBAND",
                                "description": "Downlink throughput (4G)",
                                "unit": "Mbps",
                                "category": "Network Performance Radio",
                                "timeOfLastUpdate": "2022-12-07T08:39:59.228Z"
                              },
                              "type": "object",
                              "properties": {
                                "name": {
                                  "example": "DOWNLINK_THROUGHPUT",
                                  "type": "string"
                                },
                                "value": {
                                  "example": "23.2",
                                  "type": "string"
                                },
                                "nodeName": {
                                  "example": "132924_ENB_VZ_EULESS_OLTE_RD-01",
                                  "type": "string"
                                },
                                "nodeType": {
                                  "example": "BASEBAND",
                                  "type": "string"
                                },
                                "description": {
                                  "example": "Downlink throughput (4G)",
                                  "type": "string"
                                },
                                "unit": {
                                  "example": "Mbps",
                                  "type": "string"
                                },
                                "category": {
                                  "example": "Network Performance Radio",
                                  "type": "string"
                                },
                                "timeOfLastUpdate": {
                                  "example": "2022-12-07T08:39:59.228Z",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    example: '{"KpiInfoList":[{"name":"DOWNLINK_THROUGHPUT","value":"23.2","nodeName":"132924_ENB_VZ_EULESS_OLTE_RD-01","nodeType":"BASEBAND","description":"Downlink throughput (4G)","unit":"Mbps","category":"Network Performance Radio","timeOfLastUpdate":"2022-12-07T08:39:59.228Z"}]}'
        /profiles/list/{aname}:
          uriParameters:
            aname:
              description: Account name.
              type: string
              example: 0342351414-00001
              required: true
              displayName: aname
          get:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            responses:
              '200':
                description: MEC profiles list received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "MECProfileList",
                        "title": "MECProfileList",
                        "example": {
                          "profiles": [
                            {
                              "profileId": "HSS-EsmProfile_Enterprise",
                              "profileName": "HSS EsmProfile Enterprise"
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "profiles": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "MECProfile",
                              "title": "MECProfile",
                              "example": {
                                "profileId": "HSS-EsmProfile_Enterprise",
                                "profileName": "HSS EsmProfile Enterprise"
                              },
                              "type": "object",
                              "properties": {
                                "profileId": {
                                  "type": "string"
                                },
                                "profileName": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    example: '{"profiles":[{"profileId":"HSS-EsmProfile_Enterprise","profileName":"HSS EsmProfile Enterprise"}]}'
        /performance/consent/{aname}:
          uriParameters:
            aname:
              description: Account name.
              type: string
              example: 1533445500-00088
              required: true
              displayName: aname
          get:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            responses:
              '200':
                description: consent received on a successful response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "GetMECPerformanceConsentResponse",
                        "title": "GetMECPerformanceConsentResponse",
                        "description": "MEC Performance Consent Response",
                        "example": {
                          "consent": "false"
                        },
                        "type": "object",
                        "properties": {
                          "consent": {
                            "description": "MEC Performance Consent Response.",
                            "example": "false",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"consent":"false"}'
        /actions:
          /profile:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "ChangePmecDeviceProfileRequest",
                      "title": "ChangePmecDeviceProfileRequest",
                      "example": {
                        "accountName": "0342351414-00001",
                        "deviceList": [
                          {
                            "deviceIds": [
                              {
                                "id": "99948099913024600000",
                                "kind": "iccid"
                              }
                            ]
                          }
                        ],
                        "newProfile": "HSS EsmProfile Enterprise 5G internet"
                      },
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "type": "string"
                        },
                        "deviceList": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "MECDeviceList",
                            "title": "MECDeviceList",
                            "example": {
                              "deviceIds": [
                                {
                                  "id": "99948099913024600001",
                                  "kind": "iccid"
                                }
                              ]
                            },
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "MECDeviceId",
                                  "title": "MECDeviceId",
                                  "example": {
                                    "id": "99948099913024600001",
                                    "kind": "iccid"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "kind"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "deviceIds"
                            ]
                          }
                        },
                        "newProfile": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "accountName",
                        "deviceList",
                        "newProfile"
                      ]
                    }
                  example: '{"accountName":"0342351414-00001","deviceList":[{"deviceIds":[{"id":"99948099913024600000","kind":"iccid"}]}],"newProfile":"HSS EsmProfile Enterprise 5G internet"}'
              responses:
                '200':
                  description: Request ID received on a successful response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ChangeMecDeviceProfileResponse",
                          "title": "ChangeMecDeviceProfileResponse",
                          "description": "Response to change mec device profile",
                          "example": {
                            "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "description": "A unique string that associates the request with the results that are sent via a callback service.",
                              "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"c7b45cf2-cab1-4e42-82f8-20350f4c4ea3"}'
          /ipaddress:
            put:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "ChangePmecDeviceState-BulkDeactivateRequest",
                      "title": "ChangePmecDeviceState-BulkDeactivateRequest",
                      "example": {
                        "accountName": "0342351414-00001",
                        "deviceList": [
                          {
                            "deviceIds": [
                              {
                                "id": "99948099913031600000",
                                "kind": "iccid"
                              }
                            ]
                          },
                          {
                            "deviceIds": [
                              {
                                "id": "99948099913031700000",
                                "kind": "iccid"
                              }
                            ]
                          }
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "type": "string"
                        },
                        "deviceList": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "MECDeviceList",
                            "title": "MECDeviceList",
                            "example": {
                              "deviceIds": [
                                {
                                  "id": "99948099913024600001",
                                  "kind": "iccid"
                                }
                              ]
                            },
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "MECDeviceId",
                                  "title": "MECDeviceId",
                                  "example": {
                                    "id": "99948099913024600001",
                                    "kind": "iccid"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "kind"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "deviceIds"
                            ]
                          }
                        }
                      },
                      "required": [
                        "accountName",
                        "deviceList"
                      ]
                    }
                  example: '{"accountName":"0342351414-00001","deviceList":[{"deviceIds":[{"id":"99948099913031600000","kind":"iccid"}]},{"deviceIds":[{"id":"99948099913031700000","kind":"iccid"}]}]}'
              responses:
                '200':
                  description: Request ID received on a successful response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ChangeMecDeviceIPAddressResponse",
                          "title": "ChangeMecDeviceIPAddressResponse",
                          "description": "Response to change mec device ip address.",
                          "example": {
                            "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "description": "A unique string that associates the request with the results that are sent via a callback service.",
                              "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"c7b45cf2-cab1-4e42-82f8-20350f4c4ea3"}'
          /state:
            /activate:
              post:
                securedBy:
                - thingspace_oauth
                - VZ-M2M-Token
                headers:
                  Content-Type:
                    required: true
                    displayName: Content-Type
                    enum:
                    - application/json
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ChangePmecDeviceState-ActivateRequest",
                        "title": "ChangePmecDeviceState-ActivateRequest",
                        "example": {
                          "accountName": "0342351414-00001",
                          "deviceList": [
                            {
                              "deviceIds": [
                                {
                                  "id": "99948099913024600001",
                                  "kind": "iccid"
                                }
                              ]
                            }
                          ],
                          "activate": {
                            "profile": "HSS EsmProfile Enterprise 5G"
                          }
                        },
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string"
                          },
                          "deviceList": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "MECDeviceList",
                              "title": "MECDeviceList",
                              "example": {
                                "deviceIds": [
                                  {
                                    "id": "99948099913024600001",
                                    "kind": "iccid"
                                  }
                                ]
                              },
                              "type": "object",
                              "properties": {
                                "deviceIds": {
                                  "description": "",
                                  "type": "array",
                                  "items": {
                                    "id": "MECDeviceId",
                                    "title": "MECDeviceId",
                                    "example": {
                                      "id": "99948099913024600001",
                                      "kind": "iccid"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "kind": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "kind"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "deviceIds"
                              ]
                            }
                          },
                          "activate": {
                            "id": "Activate",
                            "title": "Activate",
                            "example": {
                              "profile": "HSS EsmProfile Enterprise 5G"
                            },
                            "type": "object",
                            "properties": {
                              "profile": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "profile"
                            ]
                          }
                        },
                        "required": [
                          "accountName",
                          "deviceList",
                          "activate"
                        ]
                      }
                    example: '{"accountName":"0342351414-00001","deviceList":[{"deviceIds":[{"id":"99948099913024600001","kind":"iccid"}]}],"activate":{"profile":"HSS EsmProfile Enterprise 5G"}}'
                responses:
                  '200':
                    description: Request ID received on a successful response.
                    body:
                      application/json:
                        schema: |
                          {
                            "id": "ChangeMecDeviceStateResponse",
                            "title": "ChangeMecDeviceStateResponse",
                            "description": "Response to change mec device state",
                            "example": {
                              "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                            },
                            "type": "object",
                            "properties": {
                              "requestId": {
                                "description": "A unique string that associates the request with the results that are sent via a callback service.",
                                "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                                "type": "string"
                              }
                            }
                          }
                        example: '{"requestId":"c7b45cf2-cab1-4e42-82f8-20350f4c4ea3"}'
            /deactivate:
              post:
                securedBy:
                - thingspace_oauth
                - VZ-M2M-Token
                headers:
                  Content-Type:
                    required: true
                    displayName: Content-Type
                    enum:
                    - application/json
                body:
                  application/json:
                    schema: |
                      {
                        "id": "ChangePmecDeviceState-BulkDeactivateRequest",
                        "title": "ChangePmecDeviceState-BulkDeactivateRequest",
                        "example": {
                          "accountName": "0342351414-00001",
                          "deviceList": [
                            {
                              "deviceIds": [
                                {
                                  "id": "99948099913031600000",
                                  "kind": "iccid"
                                }
                              ]
                            },
                            {
                              "deviceIds": [
                                {
                                  "id": "99948099913031700000",
                                  "kind": "iccid"
                                }
                              ]
                            }
                          ]
                        },
                        "type": "object",
                        "properties": {
                          "accountName": {
                            "type": "string"
                          },
                          "deviceList": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "MECDeviceList",
                              "title": "MECDeviceList",
                              "example": {
                                "deviceIds": [
                                  {
                                    "id": "99948099913024600001",
                                    "kind": "iccid"
                                  }
                                ]
                              },
                              "type": "object",
                              "properties": {
                                "deviceIds": {
                                  "description": "",
                                  "type": "array",
                                  "items": {
                                    "id": "MECDeviceId",
                                    "title": "MECDeviceId",
                                    "example": {
                                      "id": "99948099913024600001",
                                      "kind": "iccid"
                                    },
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "kind": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "kind"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "deviceIds"
                              ]
                            }
                          }
                        },
                        "required": [
                          "accountName",
                          "deviceList"
                        ]
                      }
                    example: '{"accountName":"0342351414-00001","deviceList":[{"deviceIds":[{"id":"99948099913031600000","kind":"iccid"}]},{"deviceIds":[{"id":"99948099913031700000","kind":"iccid"}]}]}'
                responses:
                  '200':
                    description: Request ID received on a successful response.
                    body:
                      application/json:
                        schema: |
                          {
                            "id": "ChangeMecDeviceStateResponse",
                            "title": "ChangeMecDeviceStateResponse",
                            "description": "Response to change mec device state",
                            "example": {
                              "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                            },
                            "type": "object",
                            "properties": {
                              "requestId": {
                                "description": "A unique string that associates the request with the results that are sent via a callback service.",
                                "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                                "type": "string"
                              }
                            }
                          }
                        example: '{"requestId":"c7b45cf2-cab1-4e42-82f8-20350f4c4ea3"}'
    /session:
      /login:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Initiates a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "LogInRequest",
                  "title": "LogInRequest",
                  "description": "Request to initiate a session.",
                  "example": {
                    "username": "zbeeblebrox",
                    "password": "IMgr8"
                  },
                  "type": "object",
                  "properties": {
                    "username": {
                      "description": "The username for authentication.",
                      "example": "zbeeblebrox",
                      "type": "string"
                    },
                    "password": {
                      "description": "The password for authentication.",
                      "example": "IMgr8",
                      "type": "string"
                    }
                  }
                }
              example: '{"username":"zbeeblebrox","password":"IMgr8"}'
          responses:
            '200':
              description: VZ-M2M session token.
              body:
                application/json:
                  schema: |
                    {
                      "id": "LogInResult",
                      "title": "LogInResult",
                      "description": "Response to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.",
                      "example": {
                        "sessionToken": "bcce3ea6-fe4f-4952-bacf-eadd80718e83"
                      },
                      "type": "object",
                      "properties": {
                        "sessionToken": {
                          "description": "The identifier for the session that was created by the request. Store the sessionToken for use in the header of all other API requests.",
                          "example": "bcce3ea6-fe4f-4952-bacf-eadd80718e83",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"sessionToken":"bcce3ea6-fe4f-4952-bacf-eadd80718e83"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /logout:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Ends a Connectivity Management session.
          responses:
            '200':
              description: VZ-M2M session token.
              body:
                application/json:
                  schema: |
                    {
                      "id": "LogOutRequest",
                      "title": "LogOutRequest",
                      "description": "Request to end a Connectivity Management session.",
                      "example": {
                        "sessionToken": "bcce3ea6-fe4f-4952-bacf-eadd80718e83"
                      },
                      "type": "object",
                      "properties": {
                        "sessionToken": {
                          "description": "The session token is returned to confirm that it was invalidated.",
                          "example": "bcce3ea6-fe4f-4952-bacf-eadd80718e83",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"sessionToken":"bcce3ea6-fe4f-4952-bacf-eadd80718e83"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      /password/actions/reset:
        put:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: The new password is effective immediately. Passwords do not expire, but Verizon recommends changing your password every 90 days.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "SessionResetPasswordRequest",
                  "title": "SessionResetPasswordRequest",
                  "description": "Request with current password that needs to be reset.",
                  "example": {
                    "oldPassword": "grflbk"
                  },
                  "type": "object",
                  "properties": {
                    "oldPassword": {
                      "description": "The current password for the username.",
                      "example": "grflbk",
                      "type": "string"
                    }
                  }
                }
              example: '{"oldPassword":"grflbk"}'
          responses:
            '200':
              description: Returns a new, randomly generated password for the current username.
              body:
                application/json:
                  schema: |
                    {
                      "id": "SessionResetPasswordResult",
                      "title": "SessionResetPasswordResult",
                      "description": "Response to a new, randomly generated password for the current username.",
                      "example": {
                        "newPassword": "Wh0a1545a84d"
                      },
                      "type": "object",
                      "properties": {
                        "newPassword": {
                          "description": "The new password for the username.",
                          "example": "Wh0a1545a84d",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"newPassword":"Wh0a1545a84d"}'
            '400':
              description: Error response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectivityManagementResult",
                      "title": "ConnectivityManagementResult",
                      "description": "Response to errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /diagnostics:
      /basic:
        /devicereachability:
          /status:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: If the devices do not already exist in the account, this API resource adds them before activation.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "NotificationReportStatusRequest",
                      "title": "NotificationReportStatusRequest",
                      "description": "Retrieve Reachability Report Status for a device.",
                      "example": {
                        "device": {
                          "kind": "imei",
                          "id": "990013907835573"
                        },
                        "accountName": "0868924207-00001",
                        "servicePlan": "m2m_4G",
                        "mdnZipCode": "98801"
                      },
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "The name of a billing account.",
                          "example": "0868924207-00001",
                          "type": "string"
                        },
                        "device": {
                          "id": "DeviceId",
                          "title": "DeviceId",
                          "description": "An identifier for a single device.",
                          "example": {
                            "kind": "imei",
                            "id": "990013907835573"
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The value of the device identifier.",
                              "example": "990013907835573",
                              "type": "string"
                            },
                            "kind": {
                              "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                              "example": "imei",
                              "type": "string"
                            }
                          }
                        },
                        "requestExpirationTime": {
                          "description": "The time at which the request expires.",
                          "type": "string"
                        },
                        "requestType": {
                          "description": "The type of request.",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"device":{"kind":"imei","id":"990013907835573"},"accountName":"0868924207-00001","servicePlan":"m2m_4G","mdnZipCode":"98801"}'
              responses:
                '200':
                  description: Request ID received on a successful response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "DeviceManagementResult",
                          "title": "DeviceManagementResult",
                          "description": "Response to activate service for one or more devices so that they can send and receive data.",
                          "example": {
                            "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "description": "A unique string that associates the request with the results that are sent via a callback service.",
                              "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
                '400':
                  description: Error response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ConnectivityManagementResult",
                          "title": "ConnectivityManagementResult",
                          "description": "Response to errors.",
                          "example": {
                            "errorCode": "error code string",
                            "errorMessage": "error message string"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "description": "Code of the error.",
                              "example": "error code string",
                              "type": "string"
                            },
                            "errorMessage": {
                              "description": "Details of the error.",
                              "example": "error message string",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          /monitors:
            post:
              securedBy:
              - thingspace_oauth
              - VZ-M2M-Token
              description: Retrieve all the active monitors.
              headers:
                Content-Type:
                  required: true
                  displayName: Content-Type
                  enum:
                  - application/json
              body:
                application/json:
                  schema: |
                    {
                      "id": "RetrieveMonitorsRequest",
                      "title": "RetrieveMonitorsRequest",
                      "description": "Retrieve Monitor Request.",
                      "example": {
                        "devices": [
                          {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907835573"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800784259"
                              }
                            ]
                          },
                          {
                            "deviceIds": [
                              {
                                "kind": "imei",
                                "id": "990013907884259"
                              },
                              {
                                "kind": "iccid",
                                "id": "89141390780800735573"
                              }
                            ]
                          }
                        ],
                        "accountName": "0868924207-00001",
                        "monitorType": "monitorType"
                      },
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "The name of a billing account.",
                          "example": "0868924207-00001",
                          "type": "string"
                        },
                        "devices": {
                          "description": "The devices for which you want to restore service, specified by device identifier.",
                          "example": [
                            {
                              "deviceIds": [
                                {
                                  "id": "89148000000800139708",
                                  "kind": "iccid"
                                }
                              ]
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "AccountDeviceList",
                            "title": "AccountDeviceList",
                            "description": "A list of deviceId objects to use when requesting information from multiple devices.",
                            "example": {
                              "deviceIds": [
                                {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                {
                                  "kind": "iccid",
                                  "id": "89141390780800784259"
                                }
                              ]
                            },
                            "type": "object",
                            "properties": {
                              "deviceIds": {
                                "description": "All identifiers for the device.",
                                "example": [
                                  {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  {
                                    "kind": "iccid",
                                    "id": "89141390780800784259"
                                  }
                                ],
                                "type": "array",
                                "items": {
                                  "id": "DeviceId",
                                  "title": "DeviceId",
                                  "description": "An identifier for a single device.",
                                  "example": {
                                    "kind": "imei",
                                    "id": "990013907835573"
                                  },
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "The value of the device identifier.",
                                      "example": "990013907835573",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                      "example": "imei",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "ipAddress": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 32,
                                "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                              }
                            }
                          }
                        },
                        "monitorType": {
                          "description": "The name of a billing account.",
                          "example": "monitorType",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"devices":[{"deviceIds":[{"kind":"imei","id":"990013907835573"},{"kind":"iccid","id":"89141390780800784259"}]},{"deviceIds":[{"kind":"imei","id":"990013907884259"},{"kind":"iccid","id":"89141390780800735573"}]}],"accountName":"0868924207-00001","monitorType":"monitorType"}'
              responses:
                '200':
                  description: Request ID received on a successful response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "DeviceManagementResult",
                          "title": "DeviceManagementResult",
                          "description": "Response to activate service for one or more devices so that they can send and receive data.",
                          "example": {
                            "requestId": "24da9f9a-d110-4a54-86b4-93fb76aab83c"
                          },
                          "type": "object",
                          "properties": {
                            "requestId": {
                              "description": "A unique string that associates the request with the results that are sent via a callback service.",
                              "example": "24da9f9a-d110-4a54-86b4-93fb76aab83cs",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"requestId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
                '400':
                  description: Error response.
                  body:
                    application/json:
                      schema: |
                        {
                          "id": "ConnectivityManagementResult",
                          "title": "ConnectivityManagementResult",
                          "description": "Response to errors.",
                          "example": {
                            "errorCode": "error code string",
                            "errorMessage": "error message string"
                          },
                          "type": "object",
                          "properties": {
                            "errorCode": {
                              "description": "Code of the error.",
                              "example": "error code string",
                              "type": "string"
                            },
                            "errorMessage": {
                              "description": "Details of the error.",
                              "example": "error message string",
                              "type": "string"
                            }
                          }
                        }
                      example: '{"errorCode":"error code string","errorMessage":"error message string"}'
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "NotificationReportRequest",
                    "title": "NotificationReportRequest",
                    "description": "Create Reachability Report Request",
                    "example": {
                      "accountName": "0242072320-00001",
                      "requestType": "REACHABLE_FOR_DATA",
                      "devices": [
                        {
                          "deviceIds": [
                            {
                              "id": "89148000004292933820",
                              "kind": "iccid"
                            },
                            {
                              "id": "89148000003164287919",
                              "kind": "iccid"
                            }
                          ]
                        }
                      ],
                      "monitorExpirationTime": "2019-12-02T15:00:00-08:00Z"
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "example": "0242072320-00001",
                        "type": "string"
                      },
                      "requestType": {
                        "example": "REACHABLE_FOR_DATA",
                        "type": "string"
                      },
                      "devices": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "DeviceList",
                          "title": "DeviceList",
                          "type": "object",
                          "properties": {
                            "deviceIds": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "id": "DeviceId",
                                "title": "DeviceId",
                                "description": "An identifier for a single device.",
                                "example": {
                                  "kind": "imei",
                                  "id": "990013907835573"
                                },
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "The value of the device identifier.",
                                    "example": "990013907835573",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
                                    "example": "imei",
                                    "type": "string"
                                  }
                                }
                              },
                              "maxItems": 100
                            }
                          }
                        }
                      },
                      "monitorExpirationTime": {
                        "example": "2019-12-02T15:00:00-08:00Z",
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "requestType",
                      "devices",
                      "monitorExpirationTime"
                    ]
                  }
                example: '{"accountName":"0242072320-00001","requestType":"REACHABLE_FOR_DATA","devices":[{"deviceIds":[{"id":"89148000004292933820","kind":"iccid"},{"id":"89148000003164287919","kind":"iccid"}]}],"monitorExpirationTime":"2019-12-02T15:00:00-08:00Z"}'
            responses:
              '200':
                description: Request ID
                body:
                  application/json:
                    schema: |
                      {
                        "id": "RequestResponse",
                        "title": "RequestResponse",
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "example": "d1f08526-5443-4054-9a29",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32
                          }
                        }
                      }
              '400':
                description: Error Response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "RestErrorResponse",
                        "title": "RestErrorResponse",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "400",
                            "type": "string",
                            "maxLength": 3,
                            "pattern": "^[0-9]{3}$"
                          },
                          "errorMessage": {
                            "example": "a description of the error",
                            "type": "string"
                          }
                        }
                      }
          delete:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            queryParameters:
              accountName:
                description: The numeric name of the account.
                type: string
                example: 0242123520-00001
                required: true
                displayName: accountName
              monitorIds:
                description: The array contains the monitorIDs (UUID) for which the monitor is to be deleted.
                type: string
                example: '["35596ca6-bab4-4333-a914-42b4fc2da54c","35596ca6-bab4-4333-a914-42b4fc2da54b"]'
                required: true
                displayName: monitorIds
            responses:
              '200':
                description: Request ID
                body:
                  application/json:
                    schema: |
                      {
                        "id": "RequestResponse",
                        "title": "RequestResponse",
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "example": "d1f08526-5443-4054-9a29",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32
                          }
                        }
                      }
              '400':
                description: Error Response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "RestErrorResponse",
                        "title": "RestErrorResponse",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "example": "400",
                            "type": "string",
                            "maxLength": 3,
                            "pattern": "^[0-9]{3}$"
                          },
                          "errorMessage": {
                            "example": "a description of the error",
                            "type": "string"
                          }
                        }
                      }
    /intelligence:
      /anomaly/settings:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Uses the subscribed account ID to activate anomaly detection and set threshold values.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "AnomalyDetectionRequest",
                  "title": "AnomalyDetectionRequest",
                  "description": "Request to activate anomaly detection.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "requestType": "anomaly",
                    "sensitivityParameter": {
                      "abnormalMaxValue": 1.1,
                      "enableAbnormal": true,
                      "enableVeryAbnormal": true,
                      "veryAbnormalMaxValue": 0.55
                    }
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
                      "example": "0000123456-00001",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32
                    },
                    "requestType": {
                      "description": "The type of request being made. anomaly is the request to activate anomaly detection.",
                      "example": "anomaly",
                      "type": "string"
                    },
                    "sensitivityParameter": {
                      "id": "SensitivityParameters",
                      "title": "SensitivityParameters",
                      "description": "Details for sensitivity parameters.",
                      "example": {
                        "abnormalMaxValue": 1.1,
                        "enableAbnormal": true,
                        "enableVeryAbnormal": true,
                        "veryAbnormalMaxValue": 0.55
                      },
                      "type": "object",
                      "properties": {
                        "abnormalMaxValue": {
                          "description": "The maximum value of the threshold in the units being measured.",
                          "example": 1.1,
                          "type": "number"
                        },
                        "enableAbnormal": {
                          "description": "If abnormal values are being monitored.<br />true - Monitor for abnormal values<br />false - Do not monitor for abnormal values.",
                          "example": true,
                          "type": "boolean"
                        },
                        "enableVeryAbnormal": {
                          "description": "If very abnormal values are being monitored.<br />true - Monitor for very abnormal values<br />false - Do not monitor for very abnormal values.",
                          "example": true,
                          "type": "boolean"
                        },
                        "veryAbnormalMaxValue": {
                          "description": "The maximum value of the threshold in the units being measured.",
                          "example": 0.55,
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              example: '{"accountName":"0000123456-00001","requestType":"anomaly","sensitivityParameter":{"abnormalMaxValue":1.1,"enableAbnormal":true,"enableVeryAbnormal":true,"veryAbnormalMaxValue":0.55}}'
          responses:
            '200':
              description: Success response.
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceSuccessResult",
                      "title": "IntelligenceSuccessResult",
                      "description": "Success response.",
                      "example": {
                        "status": "Success"
                      },
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Anomaly detection status.",
                          "example": "Success",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"status":"Success"}'
            '0':
              description: An error occurred.
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
      /{accountName}/anomaly/settings:
        uriParameters:
          accountName:
            description: The name of the subscribed account.
            type: string
            example: 0000123456-00001
            required: true
            displayName: accountName
        /reset:
          uriParameters: {}
          put:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Resets the thresholds to zero.
            responses:
              '200':
                description: Success response.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "IntelligenceSuccessResult",
                        "title": "IntelligenceSuccessResult",
                        "description": "Success response.",
                        "example": {
                          "status": "Success"
                        },
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Anomaly detection status.",
                            "example": "Success",
                            "type": "string"
                          }
                        }
                      }
                    example: '{"status":"Success"}'
              '0':
                description: An error occurred.
                body:
                  application/json:
                    schema: |
                      {
                        "id": "IntelligenceResult",
                        "title": "IntelligenceResult",
                        "description": "An error occurred.",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "The 3-digit HTML error code.",
                            "type": "string",
                            "maxLength": 3,
                            "pattern": "^[0-9]{3}$"
                          },
                          "errorMessage": {
                            "description": "Error Message.",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 1000,
                            "pattern": "^[A-Za-z0-9]{3,32}$"
                          }
                        }
                      }
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Retrieves the current anomaly detection settings for an account.
          responses:
            '200':
              description: Retrieve the settings for anomaly detection.
              body:
                application/json:
                  schema: |
                    {
                      "id": "AnomalyDetectionSettings",
                      "title": "AnomalyDetectionSettings",
                      "description": "Settings for anomaly detection.",
                      "example": {
                        "accountName": "Success",
                        "sensitivityParameter": {
                          "abnormalMaxValue": 1.1,
                          "enableAbnormal": true,
                          "enableVeryAbnormal": true,
                          "veryAbnormalMaxValue": 0.55
                        },
                        "status": "Active"
                      },
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Indicates if the account name used has anomaly detection.<br />Success - The account has anomaly detection.<br />Failure - The account does not have anomaly detection.",
                          "example": "Success",
                          "type": "string"
                        },
                        "sensitivityParameter": {
                          "id": "SensitivityParameters",
                          "title": "SensitivityParameters",
                          "description": "Details for sensitivity parameters.",
                          "example": {
                            "abnormalMaxValue": 1.1,
                            "enableAbnormal": true,
                            "enableVeryAbnormal": true,
                            "veryAbnormalMaxValue": 0.55
                          },
                          "type": "object",
                          "properties": {
                            "abnormalMaxValue": {
                              "description": "The maximum value of the threshold in the units being measured.",
                              "example": 1.1,
                              "type": "number"
                            },
                            "enableAbnormal": {
                              "description": "If abnormal values are being monitored.<br />true - Monitor for abnormal values<br />false - Do not monitor for abnormal values.",
                              "example": true,
                              "type": "boolean"
                            },
                            "enableVeryAbnormal": {
                              "description": "If very abnormal values are being monitored.<br />true - Monitor for very abnormal values<br />false - Do not monitor for very abnormal values.",
                              "example": true,
                              "type": "boolean"
                            },
                            "veryAbnormalMaxValue": {
                              "description": "The maximum value of the threshold in the units being measured.",
                              "example": 0.55,
                              "type": "number"
                            }
                          }
                        },
                        "status": {
                          "description": "Indicates if anomaly detection is active on the account<br />Active - Anomaly detection is active<br />Disabled- Anomaly detection is not active.",
                          "example": "Active",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"accountName":"Success","sensitivityParameter":{"abnormalMaxValue":1.1,"enableAbnormal":true,"enableVeryAbnormal":true,"veryAbnormalMaxValue":0.55},"status":"Active"}'
            '0':
              description: An error occurred.
              body:
                application/json:
                  schema: |
                    {
                      "id": "IntelligenceResult",
                      "title": "IntelligenceResult",
                      "description": "An error occurred.",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "The 3-digit HTML error code.",
                          "type": "string",
                          "maxLength": 3,
                          "pattern": "^[0-9]{3}$"
                        },
                        "errorMessage": {
                          "description": "Error Message.",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        }
                      }
                    }
      /network-conditions:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: WNP Query for current network condition.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "GetNetworkConditionsRequest",
                  "title": "GetNetworkConditionsRequest",
                  "description": "Request for current network health.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "locationType": "LONGLAT",
                    "coordinates": {
                      "latitude": "-33.84819",
                      "longitude": "151.22049"
                    }
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account name.",
                      "example": "0000123456-00001",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[0-9-]{3,32}$"
                    },
                    "locationType": {
                      "description": "Type of location detail.",
                      "example": "LONGLAT",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 10,
                      "pattern": "^[A-Za-z]{3,10}$"
                    },
                    "coordinates": {
                      "id": "Coordinates",
                      "title": "Coordinates",
                      "description": "Coordinates information.",
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "description": "Latitude value of location.",
                          "example": "-33.84819",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 12,
                          "pattern": "^[-+]?([0-9.]{3,12})$"
                        },
                        "longitude": {
                          "description": "Longitude value of location.",
                          "example": "151.22049",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 12,
                          "pattern": "^[-+]?([0-9.]{3,12})$"
                        }
                      }
                    }
                  },
                  "required": [
                    "accountName",
                    "locationType",
                    "coordinates"
                  ]
                }
              example: '{"accountName":"0000123456-00001","locationType":"LONGLAT","coordinates":{"latitude":"-33.84819","longitude":"151.22049"}}'
          responses:
            '200':
              description: Request ID
              body:
                application/json:
                  schema: |
                    {
                      "id": "WNPRequestResponse",
                      "title": "WNPRequestResponse",
                      "description": "Wireless network performance request response.",
                      "example": {
                        "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "Request id.",
                          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[A-Za-z0-9-]{3,64}$"
                        }
                      }
                    }
                  example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "WNPRestErrorResponse",
                      "title": "WNPRestErrorResponse",
                      "description": "Wireless network performance rest error response.",
                      "example": {
                        "errorCode": "400",
                        "errorMessage": "A brief description of the error code"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Rest error response.",
                          "example": "400",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 3,
                          "pattern": "^[0-9]{3,3}$"
                        },
                        "errorMessage": {
                          "description": "Error message details.",
                          "example": "A brief description of the error code",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[A-Za-z0-9 ]{3,64}$"
                        }
                      }
                    }
                  example: '{"errorCode":"400","errorMessage":"A brief description of the error code"}'
      /wireless-coverage:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: 'Run a report to determine network types available and available coverage. Network types covered include: CAT-M, NB-IOT, LTE, LTE-AWS and 5GNW.'
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "GetWirelessCoverageRequest",
                  "title": "GetWirelessCoverageRequest",
                  "description": "Request for network coverage details.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "requestType": "NW",
                    "locationType": "LONGLAT",
                    "locations": {
                      "coordinatesList": [
                        {
                          "latitude": "-33.84819",
                          "longitude": "151.22049"
                        }
                      ]
                    },
                    "networkTypesList": [
                      {
                        "networkType": "LTE"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account name.",
                      "example": "0000123456-00001",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[0-9-]{3,32}$"
                    },
                    "requestType": {
                      "description": "Type of request.",
                      "example": "NW",
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 12,
                      "pattern": "^[A-Za-z]{2,12}$"
                    },
                    "locationType": {
                      "description": "Type of location detail.",
                      "example": "LONGLAT",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 12,
                      "pattern": "^[A-Za-z]{3,12}$"
                    },
                    "locations": {
                      "id": "Locationscoord",
                      "title": "Locationscoord",
                      "description": "Location coordinates.",
                      "type": "object",
                      "properties": {
                        "coordinatesList": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "Coordinates",
                            "title": "Coordinates",
                            "description": "Coordinates information.",
                            "type": "object",
                            "properties": {
                              "latitude": {
                                "description": "Latitude value of location.",
                                "example": "-33.84819",
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 12,
                                "pattern": "^[-+]?([0-9.]{3,12})$"
                              },
                              "longitude": {
                                "description": "Longitude value of location.",
                                "example": "151.22049",
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 12,
                                "pattern": "^[-+]?([0-9.]{3,12})$"
                              }
                            }
                          },
                          "maxItems": 100
                        }
                      },
                      "required": [
                        "coordinatesList"
                      ]
                    },
                    "networkTypesList": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "NetworkType",
                        "title": "NetworkType",
                        "description": "Network type.",
                        "type": "object",
                        "properties": {
                          "networkType": {
                            "example": "LTE",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[A-Za-z0-9]{3,32}$"
                          }
                        }
                      },
                      "maxItems": 100
                    }
                  },
                  "required": [
                    "accountName",
                    "requestType",
                    "locationType",
                    "locations",
                    "networkTypesList"
                  ]
                }
              example: '{"accountName":"0000123456-00001","requestType":"NW","locationType":"LONGLAT","locations":{"coordinatesList":[{"latitude":"-33.84819","longitude":"151.22049"}]},"networkTypesList":[{"networkType":"LTE"}]}'
          responses:
            '200':
              description: Request ID
              body:
                application/json:
                  schema: |
                    {
                      "id": "WNPRequestResponse",
                      "title": "WNPRequestResponse",
                      "description": "Wireless network performance request response.",
                      "example": {
                        "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "Request id.",
                          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[A-Za-z0-9-]{3,64}$"
                        }
                      }
                    }
                  example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "WNPRestErrorResponse",
                      "title": "WNPRestErrorResponse",
                      "description": "Wireless network performance rest error response.",
                      "example": {
                        "errorCode": "400",
                        "errorMessage": "A brief description of the error code"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Rest error response.",
                          "example": "400",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 3,
                          "pattern": "^[0-9]{3,3}$"
                        },
                        "errorMessage": {
                          "description": "Error message details.",
                          "example": "A brief description of the error code",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[A-Za-z0-9 ]{3,64}$"
                        }
                      }
                    }
                  example: '{"errorCode":"400","errorMessage":"A brief description of the error code"}'
      /site-proximity/action/list:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Identify the direction and general distance of nearby cell sites and the technology supported by the equipment.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "GetNetworkConditionsRequest",
                  "title": "GetNetworkConditionsRequest",
                  "description": "Request for cell site proximity.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "locationType": "LONGLAT",
                    "coordinates": {
                      "latitude": "-33.84819",
                      "longitude": "151.22049"
                    }
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account name.",
                      "example": "0000123456-00001",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[0-9-]{3,32}$"
                    },
                    "locationType": {
                      "description": "Type of location detail.",
                      "example": "LONGLAT",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 10,
                      "pattern": "^[A-Za-z]{3,10}$"
                    },
                    "coordinates": {
                      "id": "Coordinates",
                      "title": "Coordinates",
                      "description": "Coordinates information.",
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "description": "Latitude value of location.",
                          "example": "-33.84819",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 12,
                          "pattern": "^[-+]?([0-9.]{3,12})$"
                        },
                        "longitude": {
                          "description": "Longitude value of location.",
                          "example": "151.22049",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 12,
                          "pattern": "^[-+]?([0-9.]{3,12})$"
                        }
                      }
                    }
                  },
                  "required": [
                    "accountName",
                    "locationType",
                    "coordinates"
                  ]
                }
              example: '{"accountName":"0000123456-00001","locationType":"LONGLAT","coordinates":{"latitude":"-33.84819","longitude":"151.22049"}}'
          responses:
            '200':
              description: Request ID
              body:
                application/json:
                  schema: |
                    {
                      "id": "WNPRequestResponse",
                      "title": "WNPRequestResponse",
                      "description": "Wireless network performance request response.",
                      "example": {
                        "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "description": "Request id.",
                          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[A-Za-z0-9-]{3,64}$"
                        }
                      }
                    }
                  example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "WNPRestErrorResponse",
                      "title": "WNPRestErrorResponse",
                      "description": "Wireless network performance rest error response.",
                      "example": {
                        "errorCode": "400",
                        "errorMessage": "A brief description of the error code"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Rest error response.",
                          "example": "400",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 3,
                          "pattern": "^[0-9]{3,3}$"
                        },
                        "errorMessage": {
                          "description": "Error message details.",
                          "example": "A brief description of the error code",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[A-Za-z0-9 ]{3,64}$"
                        }
                      }
                    }
                  example: '{"errorCode":"400","errorMessage":"A brief description of the error code"}'
      /device-experience:
        /history/30-days:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: A report of a specific device's service scores over a 30 day period.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "GetDeviceExperienceScoreHistoryRequest",
                    "title": "GetDeviceExperienceScoreHistoryRequest",
                    "description": "Request for a device's 30 day experience.",
                    "example": {
                      "accountName": "0000123456-00001",
                      "deviceId": {
                        "kind": "iccid",
                        "id": "01234567899876543210",
                        "mdn": "0123456789"
                      }
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account name.",
                        "example": "0000123456-00001",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[0-9-]{3,32}$"
                      },
                      "deviceId": {
                        "id": "DeviceIdentifier",
                        "title": "DeviceIdentifier",
                        "description": "Device Id details.",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "description": "Kind of device.",
                            "example": "iccid",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 6,
                            "pattern": "^[A-Za-z]{3,6}$"
                          },
                          "id": {
                            "description": "Device Identity number.",
                            "example": "01234567899876543210",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[0-9]{3,32}$"
                          },
                          "mdn": {
                            "description": "Device MDN number.",
                            "example": "0123456789",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 10,
                            "pattern": "^[A-Za-z0-9]{3,10}$"
                          }
                        },
                        "required": [
                          "kind",
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "accountName",
                      "deviceId"
                    ]
                  }
                example: '{"accountName":"0000123456-00001","deviceId":{"kind":"iccid","id":"01234567899876543210","mdn":"0123456789"}}'
            responses:
              '200':
                description: Request ID
                body:
                  application/json:
                    schema: |
                      {
                        "id": "WNPRequestResponse",
                        "title": "WNPRequestResponse",
                        "description": "Wireless network performance request response.",
                        "example": {
                          "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "Request id.",
                            "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 64,
                            "pattern": "^[A-Za-z0-9-]{3,64}$"
                          }
                        }
                      }
                    example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
              '0':
                description: Error response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "WNPRestErrorResponse",
                        "title": "WNPRestErrorResponse",
                        "description": "Wireless network performance rest error response.",
                        "example": {
                          "errorCode": "400",
                          "errorMessage": "A brief description of the error code"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Rest error response.",
                            "example": "400",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3,
                            "pattern": "^[0-9]{3,3}$"
                          },
                          "errorMessage": {
                            "description": "Error message details.",
                            "example": "A brief description of the error code",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 64,
                            "pattern": "^[A-Za-z0-9 ]{3,64}$"
                          }
                        }
                      }
                    example: '{"errorCode":"400","errorMessage":"A brief description of the error code"}'
        /bulk/latest:
          post:
            securedBy:
            - thingspace_oauth
            - VZ-M2M-Token
            description: Run a report to view the latest device experience score for specific devices.
            headers:
              Content-Type:
                required: true
                displayName: Content-Type
                enum:
                - application/json
            body:
              application/json:
                schema: |
                  {
                    "id": "GetDeviceExperienceScoreBulkRequest",
                    "title": "GetDeviceExperienceScoreBulkRequest",
                    "description": "Request for bulk latest history details.",
                    "example": {
                      "accountName": "0000123456-00001",
                      "deviceList": [
                        {
                          "kind": "iccid",
                          "id": "01234567899876543210",
                          "mdn": "0123456789"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account name.",
                        "example": "0000123456-00001",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[0-9-]{3,32}$"
                      },
                      "deviceList": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "DeviceIdentifier",
                          "title": "DeviceIdentifier",
                          "description": "Device Id details.",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "description": "Kind of device.",
                              "example": "iccid",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 6,
                              "pattern": "^[A-Za-z]{3,6}$"
                            },
                            "id": {
                              "description": "Device Identity number.",
                              "example": "01234567899876543210",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9]{3,32}$"
                            },
                            "mdn": {
                              "description": "Device MDN number.",
                              "example": "0123456789",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 10,
                              "pattern": "^[A-Za-z0-9]{3,10}$"
                            }
                          },
                          "required": [
                            "kind",
                            "id"
                          ]
                        },
                        "maxItems": 100
                      }
                    },
                    "required": [
                      "accountName",
                      "deviceList"
                    ]
                  }
                example: '{"accountName":"0000123456-00001","deviceList":[{"kind":"iccid","id":"01234567899876543210","mdn":"0123456789"}]}'
            responses:
              '200':
                description: Request ID
                body:
                  application/json:
                    schema: |
                      {
                        "id": "WNPRequestResponse",
                        "title": "WNPRequestResponse",
                        "description": "Wireless network performance request response.",
                        "example": {
                          "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                        },
                        "type": "object",
                        "properties": {
                          "requestId": {
                            "description": "Request id.",
                            "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 64,
                            "pattern": "^[A-Za-z0-9-]{3,64}$"
                          }
                        }
                      }
                    example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
              '0':
                description: Error response
                body:
                  application/json:
                    schema: |
                      {
                        "id": "WNPRestErrorResponse",
                        "title": "WNPRestErrorResponse",
                        "description": "Wireless network performance rest error response.",
                        "example": {
                          "errorCode": "400",
                          "errorMessage": "A brief description of the error code"
                        },
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Rest error response.",
                            "example": "400",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 3,
                            "pattern": "^[0-9]{3,3}$"
                          },
                          "errorMessage": {
                            "description": "Error message details.",
                            "example": "A brief description of the error code",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 64,
                            "pattern": "^[A-Za-z0-9 ]{3,64}$"
                          }
                        }
                      }
                    example: '{"errorCode":"400","errorMessage":"A brief description of the error code"}'
  /v2:
    /triggers:
      /{triggerId}:
        uriParameters:
          triggerId:
            description: The trigger ID of a specific trigger.
            type: string
            example: be1b5958-3e11-41db-9abd-b1b7618c0035
            required: true
            displayName: triggerId
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Retrives a specific trigger by its ID.
          responses:
            '200':
              description: Request response
              body:
                application/json:
                  schema: |
                    {
                      "id": "TriggerValueResponse2",
                      "title": "TriggerValueResponse2",
                      "type": "object",
                      "properties": {
                        "triggers": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "Triggervalues2",
                            "title": "Triggervalues2",
                            "type": "object",
                            "properties": {
                              "triggerId": {
                                "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
                                "type": "string"
                              },
                              "triggerName": {
                                "example": "PromoAlerts_0000000000-00001_23456789",
                                "type": "string"
                              },
                              "accountName": {
                                "example": "0000123456-000001",
                                "type": "string"
                              },
                              "organizationName": {
                                "example": "Optional group name",
                                "type": "string"
                              },
                              "triggerCategory": {
                                "example": "PromoAlerts",
                                "type": "string"
                              },
                              "promoAlerts": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "PromoAlert",
                                  "title": "PromoAlert",
                                  "type": "object",
                                  "properties": {
                                    "filterCriteria": {
                                      "description": "",
                                      "type": "array",
                                      "items": {
                                        "id": "ReadySimServicePlan",
                                        "title": "ReadySimServicePlan",
                                        "type": "object",
                                        "properties": {
                                          "servicePlan": {
                                            "example": "123456",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "condition": {
                                      "description": "",
                                      "type": "array",
                                      "items": {
                                        "id": "keyschunk2",
                                        "title": "keyschunk2",
                                        "type": "object",
                                        "properties": {
                                          "dataPercentage50": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "dataPercentage75": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "dataPercentage90": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "dataPercentage100": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "smsPercentage50": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "smsPercentage75": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "smsPercentage90": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "smsPercentage100": {
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "NoOfDaysB4PromoExp": {
                                            "example": 5,
                                            "type": "integer",
                                            "format": "int32"
                                          }
                                        }
                                      }
                                    },
                                    "enablePromoExp": {
                                      "example": true,
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "active": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "ReadySimRestErrorResponse",
                      "title": "ReadySimRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "More details about the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "More details about the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"More details about the error"}'
      /accounts/{accountName}:
        uriParameters:
          accountName:
            description: The account name
            type: string
            example: 0000123456-000001
            required: true
            displayName: accountName
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Retrieve the triggers associated with an account name.
          responses:
            '200':
              description: Status of Request
              body:
                application/json:
                  schema: |
                    {
                      "id": "TriggerValueResponse",
                      "title": "TriggerValueResponse",
                      "type": "object",
                      "properties": {
                        "triggers": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "Triggervalues",
                            "title": "Triggervalues",
                            "type": "object",
                            "properties": {
                              "triggerId": {
                                "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
                                "type": "string"
                              },
                              "triggerName": {
                                "example": "PromoAlerts_0000000000-00001_23456789",
                                "type": "string"
                              },
                              "accountName": {
                                "example": "0000123456-000001",
                                "type": "string"
                              },
                              "organizationName": {
                                "example": "Optional group name",
                                "type": "string"
                              },
                              "triggerCategory": {
                                "example": "PromoAlerts",
                                "type": "string"
                              },
                              "triggerAttributes": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "keyDataPercentage50",
                                  "title": "keyDataPercentage50",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "example": "DataPercentage50",
                                      "type": "string"
                                    },
                                    "value": {
                                      "example": false,
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "ReadySimRestErrorResponse",
                      "title": "ReadySimRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "More details about the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "More details about the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"More details about the error"}'
      /categories/PromoAlerts:
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Retrieves all of the triggers for the specified account associated with the PromoAlert category
          responses:
            '200':
              description: Request response
              body:
                application/json:
                  schema: |
                    {
                      "id": "TriggerValueResponse2",
                      "title": "TriggerValueResponse2",
                      "type": "object",
                      "properties": {
                        "triggers": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "Triggervalues2",
                            "title": "Triggervalues2",
                            "type": "object",
                            "properties": {
                              "triggerId": {
                                "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
                                "type": "string"
                              },
                              "triggerName": {
                                "example": "PromoAlerts_0000000000-00001_23456789",
                                "type": "string"
                              },
                              "accountName": {
                                "example": "0000123456-000001",
                                "type": "string"
                              },
                              "organizationName": {
                                "example": "Optional group name",
                                "type": "string"
                              },
                              "triggerCategory": {
                                "example": "PromoAlerts",
                                "type": "string"
                              },
                              "promoAlerts": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "PromoAlert",
                                  "title": "PromoAlert",
                                  "type": "object",
                                  "properties": {
                                    "filterCriteria": {
                                      "description": "",
                                      "type": "array",
                                      "items": {
                                        "id": "ReadySimServicePlan",
                                        "title": "ReadySimServicePlan",
                                        "type": "object",
                                        "properties": {
                                          "servicePlan": {
                                            "example": "123456",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "condition": {
                                      "description": "",
                                      "type": "array",
                                      "items": {
                                        "id": "keyschunk2",
                                        "title": "keyschunk2",
                                        "type": "object",
                                        "properties": {
                                          "dataPercentage50": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "dataPercentage75": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "dataPercentage90": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "dataPercentage100": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "smsPercentage50": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "smsPercentage75": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "smsPercentage90": {
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "smsPercentage100": {
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "NoOfDaysB4PromoExp": {
                                            "example": 5,
                                            "type": "integer",
                                            "format": "int32"
                                          }
                                        }
                                      }
                                    },
                                    "enablePromoExp": {
                                      "example": true,
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "active": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "modifiedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "ReadySimRestErrorResponse",
                      "title": "ReadySimRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "More details about the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "More details about the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"More details about the error"}'
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Creates the trigger to identify an anomaly.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "description": "Request to create an anomaly trigger.",
                "example": [
                  {
                    "name": "Anomaly Daily Usage REST Test-Patch 1",
                    "triggerCategory": "UsageAnomaly",
                    "accountName": "0000123456-00001",
                    "anomalyTriggerRequest": {
                      "accountNames": "0000123456-00001",
                      "includeAbnormal": true,
                      "includeVeryAbnormal": true,
                      "includeUnderExpectedUsage": true,
                      "includeOverExpectedUsage": true
                    },
                    "notification": {
                      "notificationType": "DailySummary",
                      "callback": true,
                      "emailNotification": false,
                      "notificationGroupName": "Anomaly Test API",
                      "notificationFrequencyFactor": 3,
                      "notificationFrequencyInterval": "Hourly",
                      "externalEmailRecipients": "placeholder@verizon.com",
                      "smsNotification": true,
                      "smsNumbers": [
                        {
                          "carrier": "US Cellular",
                          "number": "9299280711"
                        }
                      ],
                      "reminder": true,
                      "severity": "Critical"
                    }
                  }
                ],
                "type": "array",
                "items": {
                  "id": "CreateTriggerRequestOptions",
                  "title": "CreateTriggerRequestOptions",
                  "example": {
                    "name": "Anomaly Daily Usage REST Test-Patch 1",
                    "triggerCategory": "UsageAnomaly",
                    "accountName": "0000123456-00001",
                    "anomalyTriggerRequest": {
                      "accountNames": "0000123456-00001",
                      "includeAbnormal": true,
                      "includeVeryAbnormal": true,
                      "includeUnderExpectedUsage": true,
                      "includeOverExpectedUsage": true
                    },
                    "notification": {
                      "notificationType": "DailySummary",
                      "callback": true,
                      "emailNotification": false,
                      "notificationGroupName": "Anomaly Test API",
                      "notificationFrequencyFactor": 3,
                      "notificationFrequencyInterval": "Hourly",
                      "externalEmailRecipients": "placeholder@verizon.com",
                      "smsNotification": true,
                      "smsNumbers": [
                        {
                          "carrier": "US Cellular",
                          "number": "9299280711"
                        }
                      ],
                      "reminder": true,
                      "severity": "Critical"
                    }
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Trigger name.",
                      "example": "User defined name of the trigger",
                      "type": "string"
                    },
                    "triggerCategory": {
                      "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
                      "example": "UsageAnomaly",
                      "type": "string"
                    },
                    "accountName": {
                      "description": "Account name.",
                      "example": "0000123456-00001",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32
                    },
                    "anomalyTriggerRequest": {
                      "id": "AnomalyTriggerRequest",
                      "title": "AnomalyTriggerRequest",
                      "description": "The details of the UsageAnomaly trigger.",
                      "example": {
                        "accountNames": "0000123456-00001",
                        "includeAbnormal": true,
                        "includeVeryAbnormal": true,
                        "includeUnderExpectedUsage": true,
                        "includeOverExpectedUsage": true
                      },
                      "type": "object",
                      "properties": {
                        "accountNames": {
                          "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
                          "example": "0000123456-00001",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32
                        },
                        "includeAbnormal": {
                          "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
                          "example": true,
                          "type": "boolean"
                        },
                        "includeVeryAbnormal": {
                          "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
                          "example": true,
                          "type": "boolean"
                        },
                        "includeUnderExpectedUsage": {
                          "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
                          "example": true,
                          "type": "boolean"
                        },
                        "includeOverExpectedUsage": {
                          "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
                          "example": true,
                          "type": "boolean"
                        }
                      }
                    },
                    "notification": {
                      "id": "Notification",
                      "title": "Notification",
                      "description": "The notification details of the trigger.",
                      "example": {
                        "notificationType": "DailySummary",
                        "callback": true,
                        "emailNotification": false,
                        "notificationGroupName": "Anomaly Test API",
                        "notificationFrequencyFactor": 3,
                        "notificationFrequencyInterval": "Hourly",
                        "externalEmailRecipients": "placeholder@verizon.com",
                        "smsNotification": true,
                        "smsNumbers": [
                          {
                            "carrier": "US Cellular",
                            "number": "9299280711"
                          }
                        ],
                        "reminder": true,
                        "severity": "Critical"
                      },
                      "type": "object",
                      "properties": {
                        "notificationType": {
                          "description": "The type of notification, i.e. 'DailySummary'.",
                          "example": "DailySummary",
                          "type": "string"
                        },
                        "callback": {
                          "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
                          "example": true,
                          "type": "boolean"
                        },
                        "emailNotification": {
                          "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
                          "example": false,
                          "type": "boolean"
                        },
                        "notificationGroupName": {
                          "description": "Name for the notification group.",
                          "example": "Anomaly Test API",
                          "type": "string"
                        },
                        "notificationFrequencyFactor": {
                          "description": "Frequency factor for notification.",
                          "example": 3,
                          "type": "integer",
                          "format": "int32"
                        },
                        "notificationFrequencyInterval": {
                          "description": "Frequency interval for notification.",
                          "example": "Hourly",
                          "type": "string"
                        },
                        "externalEmailRecipients": {
                          "description": "E-mail address(es) where the notification should be delivered.",
                          "example": "placeholder@gmail.com",
                          "type": "string"
                        },
                        "smsNotification": {
                          "description": "SMS notification.",
                          "example": true,
                          "type": "boolean"
                        },
                        "smsNumbers": {
                          "description": "List of SMS numbers.",
                          "example": [
                            {
                              "carrier": "US Cellular",
                              "number": "9299280711"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "SMSNumber",
                            "title": "SMSNumber",
                            "description": "Notification SMS details.",
                            "example": {
                              "carrier": "US Cellular",
                              "number": "9299280711"
                            },
                            "type": "object",
                            "properties": {
                              "carrier": {
                                "example": "Verizon",
                                "type": "string"
                              },
                              "number": {
                                "example": "1234567890",
                                "type": "string"
                              }
                            }
                          },
                          "maxItems": 10
                        },
                        "reminder": {
                          "example": true,
                          "type": "boolean"
                        },
                        "severity": {
                          "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
                          "example": "Critical",
                          "type": "string"
                        }
                      }
                    },
                    "active": {
                      "description": "Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.",
                      "example": true,
                      "type": "boolean"
                    }
                  }
                }
              }
            example: '[{"name":"Anomaly Daily Usage REST Test-Patch 1","triggerCategory":"UsageAnomaly","accountName":"0000123456-00001","anomalyTriggerRequest":{"accountNames":"0000123456-00001","includeAbnormal":true,"includeVeryAbnormal":true,"includeUnderExpectedUsage":true,"includeOverExpectedUsage":true},"notification":{"notificationType":"DailySummary","callback":true,"emailNotification":false,"notificationGroupName":"Anomaly Test API","notificationFrequencyFactor":3,"notificationFrequencyInterval":"Hourly","externalEmailRecipients":"placeholder@verizon.com","smsNotification":true,"smsNumbers":[{"carrier":"US Cellular","number":"9299280711"}],"reminder":true,"severity":"Critical"}}]'
        responses:
          '200':
            description: Result of request to create a trigger for anomaly detection.
            body:
              application/json:
                schema: |
                  {
                    "id": "AnomalyDetectionTrigger",
                    "title": "AnomalyDetectionTrigger",
                    "description": "Trigger for anomaly detection.",
                    "example": {
                      "triggerId": "595f5c44-c31c-4552-8670-020a1545a84d"
                    },
                    "type": "object",
                    "properties": {
                      "triggerId": {
                        "description": "Trigger ID to identify the request in a callback.",
                        "example": "be1b5958-3e11-41db-9abd-b1b7618c0035",
                        "type": "string"
                      }
                    }
                  }
                example: '{"triggerId":"595f5c44-c31c-4552-8670-020a1545a84d"}'
          '0':
            description: An error occurred.
            body:
              application/json:
                schema: |
                  {
                    "id": "IntelligenceResult",
                    "title": "IntelligenceResult",
                    "description": "An error occurred.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "The 3-digit HTML error code.",
                        "type": "string",
                        "maxLength": 3,
                        "pattern": "^[0-9]{3}$"
                      },
                      "errorMessage": {
                        "description": "Error Message.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 1000,
                        "pattern": "^[A-Za-z0-9]{3,32}$"
                      }
                    }
                  }
      put:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Updates the promotional triggers for pseudo-MDN.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "requestTrigger",
                "title": "requestTrigger",
                "description": "Update the triggers",
                "type": "object",
                "properties": {
                  "triggerId": {
                    "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
                    "type": "string"
                  },
                  "triggerName": {
                    "example": "PromoAlerts_0000000000-00001_23456789",
                    "type": "string"
                  },
                  "accountName": {
                    "example": "0000123456-000001",
                    "type": "string"
                  },
                  "organizationName": {
                    "example": "Optional group name",
                    "type": "string"
                  },
                  "triggerCategory": {
                    "example": "PromoAlerts",
                    "type": "string"
                  },
                  "promoAlerts": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "PromoAlert1",
                      "title": "PromoAlert1",
                      "type": "object",
                      "properties": {
                        "filterCriteria": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "condition": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "keyschunk2",
                            "title": "keyschunk2",
                            "type": "object",
                            "properties": {
                              "dataPercentage50": {
                                "example": false,
                                "type": "boolean"
                              },
                              "dataPercentage75": {
                                "example": false,
                                "type": "boolean"
                              },
                              "dataPercentage90": {
                                "example": false,
                                "type": "boolean"
                              },
                              "dataPercentage100": {
                                "example": false,
                                "type": "boolean"
                              },
                              "smsPercentage50": {
                                "example": false,
                                "type": "boolean"
                              },
                              "smsPercentage75": {
                                "example": false,
                                "type": "boolean"
                              },
                              "smsPercentage90": {
                                "example": false,
                                "type": "boolean"
                              },
                              "smsPercentage100": {
                                "example": true,
                                "type": "boolean"
                              },
                              "NoOfDaysB4PromoExp": {
                                "example": 5,
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          }
                        },
                        "enablePromoExp": {
                          "example": true,
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            example: ''
        responses:
          '200':
            description: Status of Request
            body:
              application/json:
                schema: |
                  {
                    "id": "success",
                    "title": "success",
                    "example": {
                      "status": "Success"
                    },
                    "type": "object",
                    "properties": {
                      "status": {
                        "example": "Success",
                        "type": "string"
                      }
                    }
                  }
                example: '{"status":"Success"}'
          '0':
            description: Error response
            body:
              application/json:
                schema: |
                  {
                    "id": "ReadySimRestErrorResponse",
                    "title": "ReadySimRestErrorResponse",
                    "example": {
                      "errorCode": "The 3-digit HTML error code",
                      "errorMessage": "More details about the error"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "The 3-digit HTML error code",
                        "type": "string"
                      },
                      "errorMessage": {
                        "example": "More details about the error",
                        "type": "string"
                      }
                    }
                  }
                example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"More details about the error"}'
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Retrieves all of the available triggers for pseudo-MDN.
        responses:
          '200':
            description: Status of Request
            body:
              application/json:
                schema: |
                  {
                    "id": "TriggerValueResponse",
                    "title": "TriggerValueResponse",
                    "type": "object",
                    "properties": {
                      "triggers": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "Triggervalues",
                          "title": "Triggervalues",
                          "type": "object",
                          "properties": {
                            "triggerId": {
                              "example": "2874DEC7-26CF-4797-9C6A-B5A2AC72D526",
                              "type": "string"
                            },
                            "triggerName": {
                              "example": "PromoAlerts_0000000000-00001_23456789",
                              "type": "string"
                            },
                            "accountName": {
                              "example": "0000123456-000001",
                              "type": "string"
                            },
                            "organizationName": {
                              "example": "Optional group name",
                              "type": "string"
                            },
                            "triggerCategory": {
                              "example": "PromoAlerts",
                              "type": "string"
                            },
                            "triggerAttributes": {
                              "description": "",
                              "type": "array",
                              "items": {
                                "id": "keyDataPercentage50",
                                "title": "keyDataPercentage50",
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "example": "DataPercentage50",
                                    "type": "string"
                                  },
                                  "value": {
                                    "example": false,
                                    "type": "boolean"
                                  }
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "modifiedAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
          '0':
            description: Error response
            body:
              application/json:
                schema: |
                  {
                    "id": "ReadySimRestErrorResponse",
                    "title": "ReadySimRestErrorResponse",
                    "example": {
                      "errorCode": "The 3-digit HTML error code",
                      "errorMessage": "More details about the error"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "The 3-digit HTML error code",
                        "type": "string"
                      },
                      "errorMessage": {
                        "example": "More details about the error",
                        "type": "string"
                      }
                    }
                  }
                example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"More details about the error"}'
    /devices:
      /actions/list:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Allows the profile to fetch the complete device list. This works with Verizon US and Global profiles.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "GetDeviceListWithProfilesRequest",
                  "title": "GetDeviceListWithProfilesRequest",
                  "description": "Device Profile Query",
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "example": "0000123456-00001",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9\\-]{3,32}$"
                    },
                    "provisioningStatusFilter": {
                      "example": "ACTIVE",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "profileStatusFilter": {
                      "example": "UNKNOWN",
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "carrierNameFilter": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "deviceFilter": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "GIODeviceId",
                        "title": "GIODeviceId",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "example": "eid",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 6,
                            "pattern": "^[A-Za-z]{3,6}$"
                          },
                          "id": {
                            "example": "12345678901234567890123456789012",
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 32,
                            "pattern": "^[0-9]{3,32}$"
                          }
                        }
                      },
                      "maxItems": 50
                    }
                  },
                  "required": [
                    "accountName"
                  ]
                }
              example: ''
          responses:
            '200':
              description: Request ID
              body:
                application/json:
                  schema: |
                    {
                      "id": "GIORequestResponse",
                      "title": "GIORequestResponse",
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[A-Za-z0-9\\-]{3,64}$"
                        }
                      }
                    }
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "GIORestErrorResponse",
                      "title": "GIORestErrorResponse",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "400",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 3,
                          "pattern": "^[0-9]{3,3}$"
                        },
                        "errorMessage": {
                          "example": "a brief description of the error",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9 ]{3,32}$"
                        }
                      }
                    }
      /history/actions/list:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Retreive the provisioning history of a specific device or devices.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "eSIMProvhistoryRequest",
                  "title": "eSIMProvhistoryRequest",
                  "description": "Device Provisioning History",
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "example": "0000123456-00001",
                      "type": "string"
                    },
                    "deviceFilter": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "DeviceId2",
                        "title": "DeviceId2",
                        "type": "object",
                        "properties": {
                          "id": {
                            "example": "15-digit IMEI",
                            "type": "string"
                          },
                          "kind": {
                            "example": "imei",
                            "type": "string"
                          }
                        }
                      },
                      "maxItems": 100
                    },
                    "earliest": {
                      "example": "2021-10-15T04:49:35-00:00",
                      "type": "string",
                      "format": "date-time"
                    },
                    "latest": {
                      "example": "2021-10-15T04:49:49-00:00",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              example: ''
          responses:
            '200':
              description: Request ID
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRequestResponse",
                      "title": "eSIMRequestResponse",
                      "example": {
                        "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8"
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8"}'
            '400':
              description: Bad request
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '401':
              description: Unauthorized
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '403':
              description: Forbidden
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '404':
              description: Not Found / Does not exist
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '406':
              description: Format / Request Unacceptable
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '429':
              description: Too many requests
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
    /accounts:
      /{accountName}/requests/{requestID}/status:
        uriParameters:
          accountName:
            type: string
            example: 0000123456-00001
            required: true
            displayName: accountName
            pattern: ^[A-Za-z0-9\-]{3,32}$
            minLength: '3'
            maxLength: '32'
          requestID:
            type: string
            example: d1f08526-5443-4054-9a29-4456490ea9f8
            required: true
            displayName: requestID
            pattern: ^[A-Za-z0-9\-]{3,64}$
            minLength: '3'
            maxLength: '64'
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Get the status of an asynchronous request made with the Device Actions.
          responses:
            '200':
              description: Request ID
              body:
                application/json:
                  schema: |
                    {
                      "id": "StatusResponse",
                      "title": "StatusResponse",
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 64,
                          "pattern": "^[a-z-0-9]{3,64}$"
                        },
                        "status": {
                          "example": "Success",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 32,
                          "pattern": "^[A-Za-z0-9]{3,32}$"
                        },
                        "subrequests": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "Subrequest",
                            "title": "Subrequest",
                            "type": "object",
                            "properties": {
                              "ids": {
                                "id": "GIODeviceId",
                                "title": "GIODeviceId",
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "example": "eid",
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 6,
                                    "pattern": "^[A-Za-z]{3,6}$"
                                  },
                                  "id": {
                                    "example": "12345678901234567890123456789012",
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "pattern": "^[0-9]{3,32}$"
                                  }
                                }
                              },
                              "status": {
                                "example": "Success",
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 8,
                                "pattern": "^[A-Za-z]{3,8}$"
                              }
                            }
                          },
                          "maxItems": 100
                        }
                      }
                    }
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "GIORestErrorResponse",
                      "title": "GIORestErrorResponse",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "400",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 3,
                          "pattern": "^[0-9]{3,3}$"
                        },
                        "errorMessage": {
                          "example": "a brief description of the error",
                          "type": "string",
                          "minLength": 3,
                          "maxLength": 1000,
                          "pattern": "^[A-Za-z0-9 ]{3,32}$"
                        }
                      }
                    }
      /{accountname}/requests/{requestID}/status:
        uriParameters:
          accountname:
            type: string
            example: 0000123456-00001
            required: true
            displayName: accountname
          requestID:
            type: string
            example: 86c83330-4bf5-4235-9c4e-a83f93aeae4c
            required: true
            displayName: requestID
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Get the status of a request made with the Device Actions.
          responses:
            '200':
              description: Request ID
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMStatusResponse",
                      "title": "eSIMStatusResponse",
                      "example": {
                        "requestId": "d1f08526-5443-4054-9a29-4456490ea9f8",
                        "status": "Success",
                        "subrequests": [
                          {
                            "id": "32-digit EID",
                            "kind": "eid"
                          },
                          {
                            "status": "success"
                          }
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "requestId": {
                          "example": "d1f08526-5443-4054-9a29-4456490ea9f8",
                          "type": "string"
                        },
                        "status": {
                          "example": "Success",
                          "type": "string"
                        },
                        "subrequests": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "eSIMsubrequest",
                            "title": "eSIMsubrequest",
                            "type": "object",
                            "properties": {
                              "id": {
                                "example": "32-digit EID",
                                "type": "string"
                              },
                              "kind": {
                                "example": "eid",
                                "type": "string"
                              },
                              "status": {
                                "title": "Status1",
                                "type": "string",
                                "enum": [
                                  "success",
                                  "failed"
                                ]
                              }
                            }
                          },
                          "maxItems": 100
                        }
                      }
                    }
                  example: '{"requestId":"d1f08526-5443-4054-9a29-4456490ea9f8","status":"Success","subrequests":[{"id":"32-digit EID","kind":"eid"},{"status":"success"}]}'
            '400':
              description: Bad request
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '401':
              description: Unauthorized
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '403':
              description: Forbidden
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '404':
              description: Not Found / Does not exist
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '406':
              description: Format / Request Unacceptable
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '429':
              description: Too many requests
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
            '0':
              description: Error response
              body:
                application/json:
                  schema: |
                    {
                      "id": "eSIMRestErrorResponse",
                      "title": "eSIMRestErrorResponse",
                      "example": {
                        "errorCode": "The 3-digit HTML error code",
                        "errorMessage": "a description of the error"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "example": "The 3-digit HTML error code",
                          "type": "string"
                        },
                        "errorMessage": {
                          "example": "a description of the error",
                          "type": "string"
                        }
                      }
                    }
                  example: '{"errorCode":"The 3-digit HTML error code","errorMessage":"a description of the error"}'
/managedaccounts:
  /{accountName}/service/{serviceName}:
    uriParameters:
      accountName:
        description: Primary account identifier
        type: string
        example: 1223334444-00001
        required: true
        displayName: accountName
      serviceName:
        description: Service name
        type: string
        required: true
        displayName: serviceName
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to retrieve the list of all accounts managed by a primary account.
      responses:
        '200':
          description: List of managed accounts
          body:
            application/json:
              schema: |
                {
                  "id": "ManagedAccountsGetAllResponse",
                  "title": "ManagedAccountsGetAllResponse",
                  "example": {
                    "accountName": "2024009649-00001",
                    "ManagedAccAddedList": [
                      {
                        "id": "1223334444-00001",
                        "txid": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33"
                      },
                      {
                        "id": "2334445555-00001",
                        "txid": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account Name",
                      "example": "0212312345-00001",
                      "type": "string"
                    },
                    "ManagedAccAddedList": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "ManagedAccAddedList",
                        "title": "ManagedAccAddedList",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Account name",
                            "example": "1223334444-00001",
                            "type": "string"
                          },
                          "txid": {
                            "description": "Transaction identifier",
                            "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "managedAccProvisionedList": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "ManagedAccProvisionedList",
                        "title": "ManagedAccProvisionedList",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Account name",
                            "example": "2334445555-00001",
                            "type": "string"
                          },
                          "txid": {
                            "description": "Transaction identifier",
                            "example": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"accountName":"2024009649-00001","ManagedAccAddedList":[{"id":"1223334444-00001","txid":"2c90bd28-ece4-42ef-9f02-7e3bd4fbff33"},{"id":"2334445555-00001","txid":"d4fbff33-ece4-9f02-42ef-2c90bd287e3b"}]}'
        '400':
          description: Unexpected error
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceLocationResult",
                  "title": "DeviceLocationResult",
                  "description": "Will be empty if there was no error.",
                  "example": {
                    "errorCode": "The type of error, such as INVALID_REQUEST.",
                    "errorMessage": "Additional error information."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "example": "The type of error, such as INVALID_REQUEST.",
                      "type": "string"
                    },
                    "errorMessage": {
                      "example": "Additional error information.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
  /actions:
    /add:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: >
          This endpoint allows user to add managed accounts to a primary account.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "ManagedAccountsAddRequest",
                "title": "ManagedAccountsAddRequest",
                "description": "Service name and list of accounts to add",
                "example": {
                  "accountName": "1234567890-00001",
                  "serviceName": "Location",
                  "type": "TS-LOC-COARSE-CellID-Aggr",
                  "managedAccList": [
                    "1223334444-00001",
                    "2334445555-00001",
                    "3445556666-00001"
                  ]
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "Account identifier",
                    "example": "1234567890-00001",
                    "type": "string"
                  },
                  "serviceName": {
                    "title": "serviceName",
                    "description": "Service name",
                    "type": "string",
                    "enum": [
                      "Location",
                      "fota"
                    ]
                  },
                  "type": {
                    "description": "SKU name",
                    "example": "TS-LOC-COARSE-CellID-Aggr",
                    "type": "string"
                  },
                  "managedAccList": {
                    "description": "managed account list",
                    "example": [
                      "1223334444-00001",
                      "2334445555-00001",
                      "3445556666-00001"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "accountName",
                  "serviceName",
                  "type",
                  "managedAccList"
                ]
              }
            example: '{"accountName":"1234567890-00001","serviceName":"Location","type":"TS-LOC-COARSE-CellID-Aggr","managedAccList":["1223334444-00001","2334445555-00001","3445556666-00001"]}'
        responses:
          '200':
            description: Add managed accounts response
            body:
              application/json:
                schema: |
                  {
                    "id": "ManagedAccountsAddResponse",
                    "title": "ManagedAccountsAddResponse",
                    "example": {
                      "txid": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
                      "statusList": [
                        {
                          "id": "1223334444-00001",
                          "status": "Success",
                          "reason": "Success"
                        },
                        {
                          "id": "2334445555-00001",
                          "status": "Success",
                          "reason": "Success"
                        },
                        {
                          "id": "3445556666-00001",
                          "status": "Success",
                          "reason": "Success"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "TxId": {
                        "description": "Transaction identifier",
                        "example": "2c90bd28-ece4-42ef-9f02-7e3bd4fbff33",
                        "type": "string"
                      },
                      "statusList": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "StatusList",
                          "title": "StatusList",
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Account name",
                              "example": "1223334444-00001",
                              "type": "string"
                            },
                            "status": {
                              "description": "Success or Fail",
                              "example": "Success",
                              "type": "string"
                            },
                            "reason": {
                              "description": "detailed reason",
                              "example": "Success",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"txid":"2c90bd28-ece4-42ef-9f02-7e3bd4fbff33","statusList":[{"id":"1223334444-00001","status":"Success","reason":"Success"},{"id":"2334445555-00001","status":"Success","reason":"Success"},{"id":"3445556666-00001","status":"Success","reason":"Success"}]}'
          '400':
            description: Unexpected error
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceLocationResult",
                    "title": "DeviceLocationResult",
                    "description": "Will be empty if there was no error.",
                    "example": {
                      "errorCode": "The type of error, such as INVALID_REQUEST.",
                      "errorMessage": "Additional error information."
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "The type of error, such as INVALID_REQUEST.",
                        "type": "string"
                      },
                      "errorMessage": {
                        "example": "Additional error information.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /provision:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Activates a managed billing service relationship between a managed account and the primary account.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "ManagedAccountsProvisionRequest",
                "title": "ManagedAccountsProvisionRequest",
                "description": "Service name and list of accounts to add",
                "example": {
                  "accountName": "1223334444-00001",
                  "paccountName": "1234567890-00001",
                  "serviceName": "Location",
                  "type": "TS-LOC-COARSE-CellID-5K",
                  "txid": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b"
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "Managed account identifier",
                    "example": "1223334444-00001",
                    "type": "string"
                  },
                  "paccountName": {
                    "description": "Primary Account identifier",
                    "example": "1223334444-00001",
                    "type": "string"
                  },
                  "serviceName": {
                    "title": "serviceName",
                    "description": "Service name",
                    "type": "string",
                    "enum": [
                      "Location",
                      "fota"
                    ]
                  },
                  "type": {
                    "description": "SKU name",
                    "example": "TS-LOC-COARSE-CellID-5K",
                    "type": "string"
                  },
                  "txid": {
                    "description": "Transaction identifier returned by add request",
                    "example": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b",
                    "type": "string"
                  }
                },
                "required": [
                  "accountName",
                  "paccountName",
                  "serviceName",
                  "type",
                  "txid"
                ]
              }
            example: '{"accountName":"1223334444-00001","paccountName":"1234567890-00001","serviceName":"Location","type":"TS-LOC-COARSE-CellID-5K","txid":"d4fbff33-ece4-9f02-42ef-2c90bd287e3b"}'
        responses:
          '200':
            description: Managed account provision response
            body:
              application/json:
                schema: |
                  {
                    "id": "ManagedAccountsProvisionResponse",
                    "title": "ManagedAccountsProvisionResponse",
                    "example": {
                      "txid": "4fbff332-ece4-42ef-9f02-7e3bdc90bd28",
                      "accountName": "1223334444-00001",
                      "paccountName": "1234567890-00001",
                      "serviceName": "Location",
                      "status": "Success",
                      "reason": "Success"
                    },
                    "type": "object",
                    "properties": {
                      "txid": {
                        "description": "Transaction identifier",
                        "example": "4fbff332-ece4-42ef-9f02-7e3bdc90bd28",
                        "type": "string"
                      },
                      "accountName": {
                        "description": "Account identifier",
                        "example": "1223334444-00001",
                        "type": "string"
                      },
                      "paccountName": {
                        "description": "Primary Account identifier",
                        "example": "1223334444-00001",
                        "type": "string"
                      },
                      "serviceName": {
                        "title": "serviceName",
                        "description": "Service name",
                        "type": "string",
                        "enum": [
                          "Location",
                          "fota"
                        ]
                      },
                      "status": {
                        "description": "Provision status. Success or Fail",
                        "example": "Success",
                        "type": "string"
                      },
                      "reason": {
                        "description": "Detailed reason",
                        "example": "Success",
                        "type": "string"
                      }
                    }
                  }
                example: '{"txid":"4fbff332-ece4-42ef-9f02-7e3bdc90bd28","accountName":"1223334444-00001","paccountName":"1234567890-00001","serviceName":"Location","status":"Success","reason":"Success"}'
          '400':
            description: Unexpected error
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceLocationResult",
                    "title": "DeviceLocationResult",
                    "description": "Will be empty if there was no error.",
                    "example": {
                      "errorCode": "The type of error, such as INVALID_REQUEST.",
                      "errorMessage": "Additional error information."
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "The type of error, such as INVALID_REQUEST.",
                        "type": "string"
                      },
                      "errorMessage": {
                        "example": "Additional error information.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
    /cancel:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: 'Deactivates a managed billing service relationship between a managed account and the primary account. '
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "ManagedAccountCancelRequest",
                "title": "ManagedAccountCancelRequest",
                "description": "Service name and list of accounts to add",
                "example": {
                  "accountName": "1223334444-00001",
                  "paccountName": "1234567890-00001",
                  "serviceName": "Location",
                  "type": "TS-LOC-COARSE-CellID-5K",
                  "txid": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b"
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "Managed account identifier",
                    "example": "1223334444-00001",
                    "type": "string"
                  },
                  "paccountName": {
                    "description": "Primary Account identifier",
                    "example": "1223334444-00001",
                    "type": "string"
                  },
                  "serviceName": {
                    "title": "serviceName",
                    "description": "Service name",
                    "type": "string",
                    "enum": [
                      "Location",
                      "fota"
                    ]
                  },
                  "type": {
                    "description": "SKU name",
                    "example": "TS-LOC-COARSE-CellID-5K",
                    "type": "string"
                  },
                  "txid": {
                    "description": "Transaction identifier returned by provision request",
                    "example": "d4fbff33-ece4-9f02-42ef-2c90bd287e3b",
                    "type": "string"
                  }
                },
                "required": [
                  "accountName",
                  "paccountName",
                  "serviceName",
                  "type",
                  "txid"
                ]
              }
            example: '{"accountName":"1223334444-00001","paccountName":"1234567890-00001","serviceName":"Location","type":"TS-LOC-COARSE-CellID-5K","txid":"d4fbff33-ece4-9f02-42ef-2c90bd287e3b"}'
        responses:
          '200':
            description: Managed account cancel response
            body:
              application/json:
                schema: |
                  {
                    "id": "ManagedAccountCancelResponse",
                    "title": "ManagedAccountCancelResponse",
                    "example": {
                      "txid": "4fbff332-ece4-42ef-9f02-7e3bdc90bd28",
                      "accountName": "1223334444-00001",
                      "paccountName": "1234567890-00001",
                      "serviceName": "Location",
                      "status": "Success",
                      "reason": "Success"
                    },
                    "type": "object",
                    "properties": {
                      "txid": {
                        "description": "Transaction identifier",
                        "example": "4fbff332-ece4-42ef-9f02-7e3bdc90bd28",
                        "type": "string"
                      },
                      "accountName": {
                        "description": "Managed account identifier",
                        "example": "1223334444-00001",
                        "type": "string"
                      },
                      "paccountName": {
                        "description": "Primary account identifier",
                        "example": "1223334444-00001",
                        "type": "string"
                      },
                      "serviceName": {
                        "title": "serviceName",
                        "description": "Service name",
                        "type": "string",
                        "enum": [
                          "Location",
                          "fota"
                        ]
                      },
                      "status": {
                        "description": "Deactivate/cancel status, Success or Fail",
                        "example": "Success",
                        "type": "string"
                      },
                      "reason": {
                        "description": "Detailed reason",
                        "example": "Success",
                        "type": "string"
                      }
                    },
                    "required": [
                      "txid",
                      "accountName",
                      "paccountName",
                      "serviceName",
                      "status",
                      "reason"
                    ]
                  }
                example: '{"txid":"4fbff332-ece4-42ef-9f02-7e3bdc90bd28","accountName":"1223334444-00001","paccountName":"1234567890-00001","serviceName":"Location","status":"Success","reason":"Success"}'
          '400':
            description: Unexpected error
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceLocationResult",
                    "title": "DeviceLocationResult",
                    "description": "Will be empty if there was no error.",
                    "example": {
                      "errorCode": "The type of error, such as INVALID_REQUEST.",
                      "errorMessage": "Additional error information."
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "example": "The type of error, such as INVALID_REQUEST.",
                        "type": "string"
                      },
                      "errorMessage": {
                        "example": "Additional error information.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
/licenses:
  /{account}:
    uriParameters:
      account:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: account
    /index/{startIndex}:
      uriParameters:
        startIndex:
          description: The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices in the response, set startIndex=1000 for the second request, 2000 for the third request, etc.
          type: string
          example: '0'
          required: true
          displayName: startIndex
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Returns information about an account's Software Management Services licenses and a list of licensed devices.
        responses:
          '200':
            description: Account license information.
            body:
              application/json:
                schema: |
                  {
                    "id": "AccountLicenseInfo",
                    "title": "AccountLicenseInfo",
                    "description": "Account license information.",
                    "example": {
                      "accountName": "0402196254-00001",
                      "totalLicenses": 5000,
                      "assignedLicenses": 4319,
                      "hasMoreData": true,
                      "lastSeenDeviceId": 1000,
                      "deviceList": [
                        {
                          "deviceId": "990003425730535",
                          "assignmentTime": "2017-11-29T16:03:42.000Z"
                        },
                        {
                          "deviceId": "990000473475989",
                          "assignmentTime": "2017-11-29T16:03:42.000Z"
                        },
                        {
                          "deviceId": "990000347475989",
                          "assignmentTime": "2017-11-29T16:03:42.000Z"
                        },
                        {
                          "deviceId": "990007303425535",
                          "assignmentTime": "2016-11-29T16:03:42.000Z"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account identifier in \"##########-#####\".",
                        "example": "0402196254-00001",
                        "type": "string"
                      },
                      "totalLicenses": {
                        "description": "Number of monthly licenses in an MRC subscription.",
                        "example": 5000,
                        "type": "integer",
                        "format": "int32"
                      },
                      "assignedLicenses": {
                        "description": "Number of licenses currently assigned to devices.",
                        "example": 4319,
                        "type": "integer",
                        "format": "int32"
                      },
                      "hasMoreData": {
                        "description": "True if there are more devices to retrieve.",
                        "example": true,
                        "type": "boolean"
                      },
                      "lastSeenDeviceId": {
                        "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
                        "example": 1000,
                        "type": "integer",
                        "format": "int32"
                      },
                      "deviceList": {
                        "description": "The list of devices that have licenses assigned, including the date and time of when each license was assigned.",
                        "example": [
                          {
                            "deviceId": "990003425730535",
                            "assignmentTime": "2017-11-29T16:03:42.000Z"
                          },
                          {
                            "deviceId": "990000473475989",
                            "assignmentTime": "2017-11-29T16:03:42.000Z"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AccountLicenseDeviceListItem",
                          "title": "AccountLicenseDeviceListItem",
                          "description": "The list of devices that have licenses assigned, including the date and time of when each license was assigned.",
                          "example": {
                            "deviceId": "990003425730535",
                            "assignmentTime": "2017-11-29T16:03:42.000Z"
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "990003425730535",
                              "type": "string"
                            },
                            "assignmentTime": {
                              "description": "Timestamp of when a license was assigned to the device.",
                              "example": "2017-11-29T16:03:42.000Z",
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"accountName":"0402196254-00001","totalLicenses":5000,"assignedLicenses":4319,"hasMoreData":true,"lastSeenDeviceId":1000,"deviceList":[{"deviceId":"990003425730535","assignmentTime":"2017-11-29T16:03:42.000Z"},{"deviceId":"990000473475989","assignmentTime":"2017-11-29T16:03:42.000Z"},{"deviceId":"990000347475989","assignmentTime":"2017-11-29T16:03:42.000Z"},{"deviceId":"990007303425535","assignmentTime":"2016-11-29T15:03:36.000Z"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV1Result",
                    "title": "FotaV1Result",
                    "description": "Response in case of any errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error response code.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Description of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /assign:
      uriParameters: {}
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to assign licenses to a list of devices.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - '*/*'
        body:
          '*/*':
            schema: |
              {
                "id": "V2LicenseIMEI",
                "title": "V2LicenseIMEI",
                "description": "License assignment.",
                "example": {
                  "deviceList": [
                    "990003425730524",
                    "990000473475967"
                  ]
                },
                "type": "object",
                "properties": {
                  "deviceList": {
                    "description": "Device IMEI list.",
                    "example": [
                      "990003425730524",
                      "990000473475967"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "accountName": {
                    "description": "Account name.",
                    "example": "0242078689-00001",
                    "type": "string"
                  }
                },
                "required": [
                  "deviceList"
                ]
              }
            example: '{"deviceList":["990003425730524","990000473475967"]}'
        responses:
          '200':
            description: License assignment result.
            body:
              application/json:
                schema: |
                  {
                    "id": "V2LicensesAssignedRemovedResult",
                    "title": "V2LicensesAssignedRemovedResult",
                    "description": "License assignment or removal confirmation.",
                    "example": {
                      "accountName": "0242078689-00001",
                      "licTotalCount": 1000,
                      "licUsedCount": 502,
                      "deviceList": [
                        {
                          "deviceId": "990003425730524",
                          "status": "Success",
                          "resultReason": "Success"
                        },
                        {
                          "deviceId": "990000473475967",
                          "status": "Failure",
                          "resultReason": "Device does not exist."
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account name.",
                        "example": "0242078689-00001",
                        "type": "string"
                      },
                      "licTotalCount": {
                        "description": "Total license count.",
                        "example": 1000,
                        "type": "integer",
                        "format": "int32"
                      },
                      "licUsedCount": {
                        "description": "Assigned license count.",
                        "example": 502,
                        "type": "integer",
                        "format": "int32"
                      },
                      "deviceList": {
                        "description": "List of devices with id in IMEI.",
                        "example": [
                          {
                            "deviceId": "990003425730524",
                            "status": "Success",
                            "resultReason": "Success"
                          },
                          {
                            "deviceId": "990000473475967",
                            "status": "Failure",
                            "resultReason": "Device does not exist."
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "V2DeviceStatus",
                          "title": "V2DeviceStatus",
                          "description": "Device with id in IMEI.",
                          "example": {
                            "deviceId": "990000473475967",
                            "status": "Failure",
                            "resultReason": "Device does not exist."
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "990000473475967",
                              "type": "string"
                            },
                            "status": {
                              "description": "Success or failure.",
                              "example": "Failure",
                              "type": "string"
                            },
                            "resultReason": {
                              "description": "Result reason.",
                              "example": "Device does not exist.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "deviceId",
                            "status"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountName",
                      "licTotalCount",
                      "licUsedCount",
                      "deviceList"
                    ]
                  }
                example: '{"accountName":"0242078689-00001","licTotalCount":1000,"licUsedCount":502,"deviceList":[{"deviceId":"990003425730524","status":"Success","resultReason":"Success"},{"deviceId":"990000473475967","status":"Failure","resultReason":"Device does not exist."}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /remove:
      uriParameters: {}
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to remove licenses from a list of devices.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - '*/*'
        body:
          '*/*':
            schema: |
              {
                "id": "V2LicenseIMEI",
                "title": "V2LicenseIMEI",
                "description": "License removal.",
                "example": {
                  "deviceList": [
                    "990003425730524",
                    "990000473475967"
                  ]
                },
                "type": "object",
                "properties": {
                  "deviceList": {
                    "description": "Device IMEI list.",
                    "example": [
                      "990003425730524",
                      "990000473475967"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "accountName": {
                    "description": "Account name.",
                    "example": "0242078689-00001",
                    "type": "string"
                  }
                },
                "required": [
                  "deviceList"
                ]
              }
            example: '{"deviceList":["990003425730535","990000473475989","900000000000999"]}'
        responses:
          '200':
            description: License removal result.
            body:
              application/json:
                schema: |
                  {
                    "id": "V2LicensesAssignedRemovedResult",
                    "title": "V2LicensesAssignedRemovedResult",
                    "description": "License assignment or removal confirmation.",
                    "example": {
                      "accountName": "0242078689-00001",
                      "licTotalCount": 1000,
                      "licUsedCount": 502,
                      "deviceList": [
                        {
                          "deviceId": "990003425730524",
                          "status": "Success",
                          "resultReason": "Success"
                        },
                        {
                          "deviceId": "990000473475967",
                          "status": "Failure",
                          "resultReason": "Device does not exist."
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account name.",
                        "example": "0242078689-00001",
                        "type": "string"
                      },
                      "licTotalCount": {
                        "description": "Total license count.",
                        "example": 1000,
                        "type": "integer",
                        "format": "int32"
                      },
                      "licUsedCount": {
                        "description": "Assigned license count.",
                        "example": 502,
                        "type": "integer",
                        "format": "int32"
                      },
                      "deviceList": {
                        "description": "List of devices with id in IMEI.",
                        "example": [
                          {
                            "deviceId": "990003425730524",
                            "status": "Success",
                            "resultReason": "Success"
                          },
                          {
                            "deviceId": "990000473475967",
                            "status": "Failure",
                            "resultReason": "Device does not exist."
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "V2DeviceStatus",
                          "title": "V2DeviceStatus",
                          "description": "Device with id in IMEI.",
                          "example": {
                            "deviceId": "990000473475967",
                            "status": "Failure",
                            "resultReason": "Device does not exist."
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "990000473475967",
                              "type": "string"
                            },
                            "status": {
                              "description": "Success or failure.",
                              "example": "Failure",
                              "type": "string"
                            },
                            "resultReason": {
                              "description": "Result reason.",
                              "example": "Device does not exist.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "deviceId",
                            "status"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountName",
                      "licTotalCount",
                      "licUsedCount",
                      "deviceList"
                    ]
                  }
                example: '{"accountName":"0242078689-00001","licTotalCount":1000,"licUsedCount":998,"deviceList":[{"deviceId":"990003425730535","status":"Success","resultReason":"Success"},{"deviceId":"990000473475989","status":"Success","resultReason":"Success"},{"deviceId":"900000000000999","status":"Failure","resultReason":"No license attached to device"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /cancel:
      uriParameters: {}
      /index/{startIndex}:
        uriParameters:
          startIndex:
            description: The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices in the response, set startIndex=1000 for the second request, 2000 for the third request, etc.
            type: string
            required: true
            displayName: startIndex
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: Returns a list of devices from which licenses will be removed if the number of MRC licenses becomes less than the number of assigned licenses.
          responses:
            '200':
              description: List of cancellation candidate devices.
              body:
                application/json:
                  schema: |
                    {
                      "id": "V1ListOfLicensesToRemove",
                      "title": "V1ListOfLicensesToRemove",
                      "description": "List of cancellation candidate devices.",
                      "example": {
                        "count": 6,
                        "hasMoreData": false,
                        "updateTime": "2018-03-22T12:06:06.000Z",
                        "deviceList": [
                          "990003425730535",
                          "990000473475989",
                          "990005733420535",
                          "990000347475989",
                          "990007303425535",
                          "990007590473489"
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "The total number of devices on the list.",
                          "example": 6,
                          "type": "integer",
                          "format": "int32"
                        },
                        "hasMoreData": {
                          "description": "True if there are more devices to retrieve.",
                          "example": false,
                          "type": "boolean"
                        },
                        "updateTime": {
                          "description": "The date and time that the list was last updated.",
                          "example": "2018-03-22T12:06:06.000Z",
                          "type": "string",
                          "format": "date-time"
                        },
                        "deviceList": {
                          "description": "The IMEIs of the devices.",
                          "example": [
                            "990003425730535",
                            "990000473475989",
                            "990005733420535",
                            "990000347475989",
                            "990007303425535",
                            "990007590473489"
                          ],
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  example: '{"count":6,"hasMoreData":false,"updateTime":"2018-03-22T12:06:06.000Z","deviceList":["990003425730535","990000473475989","990005733420535","990000347475989","990007303425535","990007590473489"]}'
            '400':
              description: Unexpected error.
              body:
                application/json:
                  schema: |
                    {
                      "id": "FotaV1Result",
                      "title": "FotaV1Result",
                      "description": "Response in case of any errors.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Error response code.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Description of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "errorCode",
                        "errorMessage"
                      ]
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: The license cancel endpoint allows user to create a list of license cancellation candidate devices.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - '*/*'
        body:
          '*/*':
            schema: |
              {
                "id": "V2ListOfLicensesToRemoveRequest",
                "title": "V2ListOfLicensesToRemoveRequest",
                "description": "List of licensess to remove.",
                "example": {
                  "type": "append",
                  "count": 2,
                  "deviceList": [
                    "990003425730535",
                    "990000473475989"
                  ]
                },
                "type": "object",
                "properties": {
                  "deviceList": {
                    "description": "Device IMEI list.",
                    "example": [
                      "990003425730535",
                      "990000473475989"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "description": "List creation option.",
                    "example": "append",
                    "type": "string"
                  },
                  "count": {
                    "description": "The number of devices.",
                    "example": 2,
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "deviceList"
                ]
              }
            example: '{"type":"append","count":2,"deviceList":["990003425730535","990000473475989"]}'
        responses:
          '200':
            description: Return a created license cancellation device list.
            body:
              application/json:
                schema: |
                  {
                    "id": "V2ListOfLicensesToRemoveResult",
                    "title": "V2ListOfLicensesToRemoveResult",
                    "description": "List of created license cancellation devices.",
                    "example": {
                      "count": 2,
                      "deviceList": [
                        "990003425730535",
                        "990000473475989"
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The number of devices.",
                        "example": 2,
                        "type": "integer",
                        "format": "int32"
                      },
                      "deviceList": {
                        "description": "Device IMEI list.",
                        "example": [
                          "990003425730535",
                          "990000473475989"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "count",
                      "deviceList"
                    ]
                  }
                example: '{"count":2,"deviceList":["990003425730535","990000473475989"]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      delete:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to delete a created cancel candidate device list.
        responses:
          '200':
            description: Result of deletion of candidate list of devices to remove.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2SuccessResult",
                    "title": "FotaV2SuccessResult",
                    "description": "Response to a successful request.",
                    "example": {
                      "success": true
                    },
                    "type": "object",
                    "properties": {
                      "success": {
                        "example": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "success"
                    ]
                  }
                example: '{"success":true}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: The license cancel endpoint allows user to list registered license cancellation candidate devices.
        queryParameters:
          startIndex:
            description: Start index to retrieve.
            type: string
            required: false
            displayName: startIndex
        responses:
          '200':
            description: A list of license cancellation candidate devices.
            body:
              application/json:
                schema: |
                  {
                    "id": "V2ListOfLicensesToRemove",
                    "title": "V2ListOfLicensesToRemove",
                    "description": "A list of license cancellation candidate devices.",
                    "example": {
                      "count": 6,
                      "hasMoreData": false,
                      "updateTime": "2018-03-22 00:06:00.069 +0000 UTC",
                      "deviceList": [
                        "990003425730535",
                        "990000473475989",
                        "990005733420535",
                        "990000347475989",
                        "990007303425535",
                        "990007590473489"
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "Cancellation candidate devices count.",
                        "example": 6,
                        "type": "integer",
                        "format": "int32"
                      },
                      "hasMoreData": {
                        "description": "Flag to indicat more devices.",
                        "example": false,
                        "type": "boolean"
                      },
                      "updateTime": {
                        "description": "Last update time.",
                        "example": "2018-03-22 00:06:00.069 +0000 UTC",
                        "type": "string"
                      },
                      "deviceList": {
                        "description": "Device IMEI list.",
                        "example": [
                          "990003425730535",
                          "990000473475989",
                          "990005733420535",
                          "990000347475989",
                          "990007303425535",
                          "990007590473489"
                        ],
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "count",
                      "hasMoreData",
                      "updateTime",
                      "deviceList"
                    ]
                  }
                example: '{"count":6,"hasMoreData":false,"updateTime":"2018-03-22 00:06:00.069 +0000 UTC","deviceList":["990003425730535","990000473475989","990005733420535","990000347475989","990007303425535","990007590473489"]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: The endpoint allows user to list license usage.
      queryParameters:
        lastSeenDeviceId:
          description: Last seen device identifier.
          type: string
          example: 15-digit IMEI
          required: false
          displayName: lastSeenDeviceId
      responses:
        '200':
          description: Summary of license assignment.
          body:
            application/json:
              schema: |
                {
                  "id": "V2LicenseSummary",
                  "title": "V2LicenseSummary",
                  "description": "Summary of license assignment.",
                  "example": {
                    "accountName": "0402196254-00001",
                    "totalLicense": 5000,
                    "assignedLicenses": 4319,
                    "hasMoreData": true,
                    "lastSeenDeviceId": "1000",
                    "maxPageSize": 10,
                    "deviceList": [
                      {
                        "deviceId": "990003425730535",
                        "assignmentTime": "2017-11-29T16:03:42.000Z"
                      },
                      {
                        "deviceId": "990000473475989",
                        "assignmentTime": "2017-11-29T16:03:42.000Z"
                      },
                      {
                        "deviceId": "990000347475989",
                        "assignmentTime": "2017-11-29T16:03:42.000Z"
                      },
                      {
                        "deviceId": "990007303425535",
                        "assignmentTime": "2017-11-29T16:03:42.000Z"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account identifier.",
                      "example": "0402196254-00001",
                      "type": "string"
                    },
                    "assignedLicenses": {
                      "description": "Assigned FOTA license count.",
                      "example": 4319,
                      "type": "integer",
                      "format": "int32"
                    },
                    "hasMoreData": {
                      "description": "True if there are more devices to retrieve.",
                      "example": true,
                      "type": "boolean"
                    },
                    "maxPageSize": {
                      "description": "Maximum page size.",
                      "example": 10,
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalLicense": {
                      "description": "Total FOTA license count.",
                      "example": 5000,
                      "type": "integer",
                      "format": "int32"
                    },
                    "lastSeenDeviceId": {
                      "description": "Last seen device identifier.",
                      "example": "1000",
                      "type": "string"
                    },
                    "deviceList": {
                      "description": "Device IMEI list.",
                      "example": [
                        {
                          "deviceId": "990003425730535",
                          "assignmentTime": "2017-11-29T16:03:42.000Z"
                        },
                        {
                          "deviceId": "990000473475989",
                          "assignmentTime": "2017-11-29T16:03:42.000Z"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V2LicenseDevice",
                        "title": "V2LicenseDevice",
                        "description": "Device IMEI list.",
                        "example": {
                          "deviceId": "990003425730535",
                          "assignmentTime": "2017-11-29T16:03:42.000Z"
                        },
                        "type": "object",
                        "properties": {
                          "deviceId": {
                            "description": "Device IMEI.",
                            "example": "990003425730535",
                            "type": "string"
                          },
                          "assignmentTime": {
                            "description": "License assignment time.",
                            "example": "2017-11-29T16:03:42.000Z",
                            "type": "string"
                          }
                        },
                        "required": [
                          "deviceId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "accountName",
                    "assignedLicenses",
                    "hasMoreData",
                    "maxPageSize"
                  ]
                }
              example: '{"accountName":"0402196254-00001","totalLicense":5000,"assignedLicenses":4319,"hasMoreData":true,"lastSeenDeviceId":"1000","maxPageSize":10,"deviceList":[{"deviceId":"990003425730535","assignmentTime":"2017-11-29T16:03:42.000Z"},{"deviceId":"990000473475989","assignmentTime":"2017-11-29T16:03:42.000Z"},{"deviceId":"990000347475989","assignmentTime":"2017-11-29T16:03:42.000Z"},{"deviceId":"990007303425535","assignmentTime":"2017-11-29T16:03:42.000Z"}]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /{acc}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: acc
    /assign:
      uriParameters: {}
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to assign licenses to a list of devices.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "V3LicenseIMEI",
                "title": "V3LicenseIMEI",
                "description": "License assignment.",
                "example": {
                  "deviceList": [
                    "15-digit IMEI",
                    "15-digit IMEI"
                  ]
                },
                "type": "object",
                "properties": {
                  "deviceList": {
                    "description": "Device IMEI list.",
                    "example": [
                      "15-digit IMEI",
                      "15-digit IMEI"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "deviceList"
                ]
              }
            example: '{"deviceList":["15-digit IMEI","15-digit IMEI"]}'
        responses:
          '200':
            description: License assignment result.
            body:
              application/json:
                schema: |
                  {
                    "id": "V3LicenseAssignedRemovedResult",
                    "title": "V3LicenseAssignedRemovedResult",
                    "description": "License assignment/removal response.",
                    "example": {
                      "accountName": "0000123456-00001",
                      "licUsedCount": 2,
                      "licCount": 1000,
                      "deviceList": [
                        {
                          "deviceId": "15-digit IMEI",
                          "status": "UpgradePending",
                          "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                          "updatedTime": "2022-08-05T21:05:27.129Z",
                          "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                          "nextAttemptTime": "2022-10-06T18:35:00Z"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account name.",
                        "example": "0000123456-00001",
                        "type": "string"
                      },
                      "licCount": {
                        "description": "Total license count.",
                        "example": 1000,
                        "type": "integer",
                        "format": "int32"
                      },
                      "licUsedCount": {
                        "description": "Assigned license count.",
                        "example": 2,
                        "type": "integer",
                        "format": "int32"
                      },
                      "deviceList": {
                        "description": "List of devices with id in IMEI.",
                        "example": [
                          {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradePending",
                            "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                            "updatedTime": "2022-08-05T21:05:27.129Z",
                            "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                            "nextAttemptTime": "2022-10-06T18:35:00Z"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "V3DeviceStatus",
                          "title": "V3DeviceStatus",
                          "description": "Device status.",
                          "example": {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradePending",
                            "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                            "updatedTime": "2022-08-05T21:05:27.129Z",
                            "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                            "nextAttemptTime": "2022-10-06T18:35:00Z"
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "15-digit IMEI",
                              "type": "string"
                            },
                            "status": {
                              "description": "Success or failure.",
                              "example": "UpgradePending",
                              "type": "string"
                            },
                            "resultReason": {
                              "description": "Result reason.",
                              "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                              "type": "string"
                            },
                            "updatedTime": {
                              "description": "Updated Time.",
                              "example": "2022-08-06T18:35:00Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "recentAttemptTime": {
                              "description": "The most recent attempt time.",
                              "example": "2022-10-05T21:05:01.19Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "nextAttemptTime": {
                              "description": "Next attempt time.",
                              "example": "2022-10-06T18:35:00Z",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "deviceId",
                            "status"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountName",
                      "licCount",
                      "licUsedCount",
                      "deviceList"
                    ]
                  }
                example: '{"accountName":"0000123456-00001","licUsedCount":2,"licCount":1000,"deviceList":[{"deviceId":"15-digit IMEI","status":"UpgradePending","resultReason":"Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC","updatedTime":"2022-08-05T21:05:27.129Z","recentAttemptTime":"2022-10-05T21:05:01.19Z","nextAttemptTime":"2022-10-06T18:35:00Z"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV3Result",
                    "title": "FotaV3Result",
                    "description": "Error response.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error code string.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Error message string.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /remove:
      uriParameters: {}
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to remove licenses from a list of devices.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "V3LicenseIMEI",
                "title": "V3LicenseIMEI",
                "description": "License removal.",
                "example": {
                  "deviceList": [
                    "15-digit IMEI",
                    "15-digit IMEI"
                  ]
                },
                "type": "object",
                "properties": {
                  "deviceList": {
                    "description": "Device IMEI list.",
                    "example": [
                      "15-digit IMEI",
                      "15-digit IMEI"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "deviceList"
                ]
              }
            example: '{"deviceList":["15-digit IMEI","15-digit IMEI","15-digit IMEI"]}'
        responses:
          '200':
            description: License removal result.
            body:
              application/json:
                schema: |
                  {
                    "id": "V3LicenseAssignedRemovedResult",
                    "title": "V3LicenseAssignedRemovedResult",
                    "description": "License assignment/removal response.",
                    "example": {
                      "accountName": "0000123456-00001",
                      "licUsedCount": 2,
                      "licCount": 1000,
                      "deviceList": [
                        {
                          "deviceId": "15-digit IMEI",
                          "status": "UpgradePending",
                          "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                          "updatedTime": "2022-08-05T21:05:27.129Z",
                          "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                          "nextAttemptTime": "2022-10-06T18:35:00Z"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account name.",
                        "example": "0000123456-00001",
                        "type": "string"
                      },
                      "licCount": {
                        "description": "Total license count.",
                        "example": 1000,
                        "type": "integer",
                        "format": "int32"
                      },
                      "licUsedCount": {
                        "description": "Assigned license count.",
                        "example": 2,
                        "type": "integer",
                        "format": "int32"
                      },
                      "deviceList": {
                        "description": "List of devices with id in IMEI.",
                        "example": [
                          {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradePending",
                            "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                            "updatedTime": "2022-08-05T21:05:27.129Z",
                            "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                            "nextAttemptTime": "2022-10-06T18:35:00Z"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "V3DeviceStatus",
                          "title": "V3DeviceStatus",
                          "description": "Device status.",
                          "example": {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradePending",
                            "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                            "updatedTime": "2022-08-05T21:05:27.129Z",
                            "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                            "nextAttemptTime": "2022-10-06T18:35:00Z"
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "15-digit IMEI",
                              "type": "string"
                            },
                            "status": {
                              "description": "Success or failure.",
                              "example": "UpgradePending",
                              "type": "string"
                            },
                            "resultReason": {
                              "description": "Result reason.",
                              "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                              "type": "string"
                            },
                            "updatedTime": {
                              "description": "Updated Time.",
                              "example": "2022-08-06T18:35:00Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "recentAttemptTime": {
                              "description": "The most recent attempt time.",
                              "example": "2022-10-05T21:05:01.19Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "nextAttemptTime": {
                              "description": "Next attempt time.",
                              "example": "2022-10-06T18:35:00Z",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "deviceId",
                            "status"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountName",
                      "licCount",
                      "licUsedCount",
                      "deviceList"
                    ]
                  }
                example: '{"accountName":"0000123456-00001","licUsedCount":998,"licCount":1000,"deviceList":[{"deviceId":"15-digit IMEI","status":"UpgradePending","resultReason":"Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC","updatedTime":"2022-08-05T21:05:27.129Z","recentAttemptTime":"2022-10-05T21:05:01.19Z","nextAttemptTime":"2022-10-06T18:35:00Z"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV3Result",
                    "title": "FotaV3Result",
                    "description": "Error response.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error code string.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Error message string.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: The endpoint allows user to list license usage.
      queryParameters:
        lastSeenDeviceId:
          description: Last seen device identifier.
          type: string
          example: '0'
          required: false
          displayName: lastSeenDeviceId
      responses:
        '200':
          description: Summary of license assignment.
          body:
            application/json:
              schema: |
                {
                  "id": "V3LicenseSummary",
                  "title": "V3LicenseSummary",
                  "description": "Information for FOTA licenses assigned to devices.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "totalLicenses": 5000,
                    "assignedLicenses": 4319,
                    "hasMoreData": true,
                    "lastSeenDeviceId": "1000",
                    "maxPageSize": 1000,
                    "deviceList": [
                      {
                        "deviceId": "15-digit IMEI",
                        "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
                      },
                      {
                        "deviceId": "15-digit IMEI",
                        "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account identifier.",
                      "example": "0000123456-00001",
                      "type": "string"
                    },
                    "assignedLicenses": {
                      "description": "Assigned FOTA license count.",
                      "example": 5000,
                      "type": "integer",
                      "format": "int32"
                    },
                    "hasMoreData": {
                      "description": "True if there are more devices to retrieve.",
                      "example": true,
                      "type": "boolean"
                    },
                    "maxPageSize": {
                      "description": "Maximum page size.",
                      "example": 1000,
                      "type": "integer",
                      "format": "int32"
                    },
                    "totalLicenses": {
                      "description": "Total FOTA license count.",
                      "example": 5000,
                      "type": "integer",
                      "format": "int32"
                    },
                    "lastSeenDeviceId": {
                      "description": "Last seen device identifier.",
                      "example": "1000",
                      "type": "string"
                    },
                    "deviceList": {
                      "description": "Device IMEI list.",
                      "example": [
                        {
                          "deviceId": "15-digit IMEI",
                          "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
                        },
                        {
                          "deviceId": "15-digit IMEI",
                          "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V3LicenseDevice",
                        "title": "V3LicenseDevice",
                        "description": "Device IMEI.",
                        "example": {
                          "deviceId": "15-digit IMEI",
                          "assignmentTime": "2017-11-29 20:15:42.738 +0000 UTC"
                        },
                        "type": "object",
                        "properties": {
                          "deviceId": {
                            "description": "Device IMEI.",
                            "example": "15-digit IMEI",
                            "type": "string"
                          },
                          "assignmentTime": {
                            "description": "License assignment time.",
                            "example": "2017-11-29 20:15:42.738 +0000 UTC",
                            "type": "string"
                          }
                        },
                        "required": [
                          "deviceId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "accountName",
                    "assignedLicenses",
                    "hasMoreData",
                    "maxPageSize"
                  ]
                }
              example: '{"accountName":"0000123456-00001","assignedLicenses":4319,"hasMoreData":true,"lastSeenDeviceId":"1000","maxPageSize":1000,"deviceList":[{"deviceId":"15-digit IMEI","assignmentTime":"2017-11-29 20:15:42.738 +0000 UTC"},{"deviceId":"15-digit IMEI","assignmentTime":"2017-11-29 20:15:42.738 +0000 UTC"}]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
/firmware:
  /{account}:
    uriParameters:
      account:
        description: Account identifier in "##########-#####".
        type: string
        example: 0242078689-00001
        required: true
        displayName: account
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Lists all device firmware images available for an account, based on the devices registered to that account.
      responses:
        '200':
          description: List of available firmware.
          body:
            application/json:
              schema: |
                {
                  "description": "Array of firmware objects.",
                  "example": [
                    {
                      "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
                      "participantName": "0402196254-00001",
                      "launchDate": "2018-04-01T16:03:00.000Z",
                      "releaseNote": "",
                      "model": "Model-A",
                      "make": "Verizon",
                      "fromVersion": "VerizonFirmwareVersion-01",
                      "toVersion": "VerizonFirmwareVersion-02"
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "Firmware",
                    "title": "Firmware",
                    "description": "Firmware information.",
                    "example": {
                      "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
                      "participantName": "0402196254-00001",
                      "launchDate": "2018-04-01T16:03:00.000Z",
                      "releaseNote": "",
                      "model": "Model-A",
                      "make": "Verizon",
                      "fromVersion": "VerizonFirmwareVersion-01",
                      "toVersion": "VerizonFirmwareVersion-02"
                    },
                    "type": "object",
                    "properties": {
                      "firmwareName": {
                        "description": "The name of the firmware image, provided by the device manufacturer.",
                        "example": "FOTA_Verizon_Model-A_01To02_HF",
                        "type": "string"
                      },
                      "participantName": {
                        "description": "Internal reference; can be ignored.",
                        "example": "0402196254-00001",
                        "type": "string"
                      },
                      "launchDate": {
                        "description": "The release date of the firmware image.",
                        "example": "2018-04-01T16:03:00.000Z",
                        "type": "string",
                        "format": "date-time"
                      },
                      "releaseNote": {
                        "description": "Additional information about the release.",
                        "type": "string"
                      },
                      "model": {
                        "description": "The device model that the firmware applies to.",
                        "example": "Model-A",
                        "type": "string"
                      },
                      "make": {
                        "description": "The device make that the firmware applies to.",
                        "example": "Verizon",
                        "type": "string"
                      },
                      "fromVersion": {
                        "description": "The firmware version that must currently be on the device to upgrade.",
                        "example": "VerizonFirmwareVersion-01",
                        "type": "string"
                      },
                      "toVersion": {
                        "description": "The firmware version that will be on the device after an upgrade.",
                        "example": "VerizonFirmwareVersion-02",
                        "type": "string"
                      }
                    }
                  }
                }
              example: '[{"firmwareName":"FOTA_Verizon_Model-A_01To02_HF","participantName":"0402196254-00001","launchDate":"2018-04-01T16:03:00.000Z","releaseNote":"","model":"Model-A","make":"Verizon","fromVersion":"VerizonFirmwareVersion-01","toVersion":"VerizonFirmwareVersion-02"}]'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV1Result",
                  "title": "FotaV1Result",
                  "description": "Response in case of any errors.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error response code.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Description of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /{acc}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: acc
    /devices:
      uriParameters: {}
      put:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Synchronize ThingSpace with the FOTA server for up to 100 devices.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "FirmwareIMEI",
                "title": "FirmwareIMEI",
                "description": "DeviceIds to get firmware info synchronously.",
                "example": {
                  "deviceList": [
                    "15-digit IMEI"
                  ]
                },
                "type": "object",
                "properties": {
                  "deviceList": {
                    "description": "Device IMEI list.",
                    "example": [
                      "15-digit IMEI"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 1000
                  }
                },
                "required": [
                  "deviceList"
                ]
              }
            example: '{"deviceList":["15-digit IMEI"]}'
        responses:
          '200':
            description: Returns device firmware information.
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceFirmwareList",
                    "title": "DeviceFirmwareList",
                    "description": "Device Firmware Information.",
                    "example": {
                      "accountName": "0000123456-00001",
                      "deviceFirmwarVersionList": [
                        {
                          "deviceId": "15-digit IMEI",
                          "status": "FirmwareVersionUpdateSuccess",
                          "firmwareVersion": "SR1.2.0.0-10657"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account name.",
                        "example": "0000123456-00001",
                        "type": "string"
                      },
                      "deviceFirmwarVersionList": {
                        "description": "List of device & firmware.",
                        "example": [
                          {
                            "deviceId": "15-digit IMEI",
                            "status": "FirmwareVersionUpdateSuccess",
                            "firmwareVersion": "SR1.2.0.0-10657"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "DeviceFirmwareVersion",
                          "title": "DeviceFirmwareVersion",
                          "description": "Device and firmware information.",
                          "example": {
                            "deviceId": "15-digit IMEI",
                            "status": "FirmwareVersionUpdateSuccess",
                            "firmwareVersion": "SR1.2.0.0-10657"
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "15-digit IMEI",
                              "type": "string"
                            },
                            "firmwareVersion": {
                              "description": "Device Firmware Version.",
                              "example": "SR1.2.0.0-10657",
                              "type": "string"
                            },
                            "status": {
                              "example": "FirmwareVersionUpdateSuccess",
                              "type": "string"
                            },
                            "reason": {
                              "example": "Upgrade completed successfully",
                              "type": "string"
                            },
                            "firmwareVersionUpdateTime": {
                              "example": "2012-04-23T18:25:43.511Z",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "deviceId",
                            "firmwareVersion"
                          ]
                        }
                      }
                    },
                    "required": [
                      "accountName"
                    ]
                  }
                example: '{"accountName":"0000123456-00001","deviceFirmwarVersionList":[{"deviceId":"15-digit IMEI","status":"FirmwareVersionUpdateSuccess","firmwareVersion":"SR1.2.0.0-10657"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV3Result",
                    "title": "FotaV3Result",
                    "description": "Error response.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error code string.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Error message string.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /async/{deviceId}:
      uriParameters:
        deviceId:
          description: Device identifier.
          type: string
          example: 15-digit IMEI
          required: true
          displayName: deviceId
      put:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Ask a device to report its firmware version asynchronously.
        responses:
          '200':
            description: Device firmware version update request.
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceFirmwareVersionUpdateResult",
                    "title": "DeviceFirmwareVersionUpdateResult",
                    "description": "Device firmware version update response.",
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account identifier.",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "Request identifier.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "requestId"
                    ]
                  }
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV3Result",
                    "title": "FotaV3Result",
                    "description": "Error response.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error code string.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Error message string.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to list the firmware of an account.
      queryParameters:
        protocol:
          description: Filter to retrieve a specific protocol type used.
          example: LWM2M
          default: LWM2M
          required: true
          displayName: protocol
          enum:
          - LWM2M
          - OMD-DM
          - all
      responses:
        '200':
          description: Returns an array of firmware objects.
          body:
            application/json:
              schema: |
                {
                  "description": "A list of available firmware.",
                  "example": [
                    {
                      "firmwareName": "VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B",
                      "firmwareFrom": "BG96MAR04A04M1G",
                      "firmwareTo": "BG96MAR04A04M1G_BETA0130B",
                      "launchDate": "2012-04-23T18:25:43.511Z",
                      "releaseNote": "",
                      "model": "LCO-277C4N",
                      "make": "Verizon Smart Communities",
                      "protocol": "LWM2M"
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "FirmwarePackage",
                    "title": "FirmwarePackage",
                    "description": "Available firmware.",
                    "example": {
                      "firmwareName": "VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B",
                      "firmwareFrom": "BG96MAR04A04M1G",
                      "firmwareTo": "BG96MAR04A04M1G_BETA0130B",
                      "launchDate": "2012-04-23T18:25:43.511Z",
                      "releaseNote": "",
                      "model": "LCO-277C4N",
                      "make": "Verizon Smart Communities",
                      "protocol": "LWM2M"
                    },
                    "type": "object",
                    "properties": {
                      "firmwareName": {
                        "description": "Firmware name.",
                        "example": "VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B",
                        "type": "string"
                      },
                      "firmwareFrom": {
                        "description": "Firmware from version.",
                        "example": "BG96MAR04A04M1G",
                        "type": "string"
                      },
                      "firmwareTo": {
                        "description": "Firmware to version.",
                        "example": "BG96MAR04A04M1G_BETA0130B",
                        "type": "string"
                      },
                      "launchDate": {
                        "description": "Firmware launch date.",
                        "example": "2012-04-23T18:25:43.511Z",
                        "type": "string",
                        "format": "date-time"
                      },
                      "releaseNote": {
                        "description": "Firmware release note.",
                        "type": "string"
                      },
                      "model": {
                        "description": "Firmware applicable device model.",
                        "example": "LCO-277C4N",
                        "type": "string"
                      },
                      "make": {
                        "description": "Firmware applicable device make.",
                        "example": "Verizon Smart Communities",
                        "type": "string"
                      },
                      "protocol": {
                        "title": "CampaignMetaInfoProtocol",
                        "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM.",
                        "example": "LWM2M",
                        "type": "string",
                        "enum": [
                          "LWM2M",
                          "OMD-DM"
                        ]
                      }
                    },
                    "required": [
                      "firmwareName",
                      "firmwareFrom",
                      "firmwareTo",
                      "launchDate",
                      "releaseNote",
                      "model",
                      "make",
                      "protocol"
                    ]
                  }
                }
              example: '[{"firmwareName":"VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B","firmwareFrom":"BG96MAR04A04M1G","firmwareTo":"BG96MAR04A04M1G_BETA0130B","launchDate":"2012-04-23T18:25:43.511Z","releaseNote":"","model":"LCO-277C4N","make":"Verizon Smart Communities","protocol":"LWM2M"}]'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
/devices:
  /{account}:
    uriParameters:
      account:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: account
    /index/{startIndex}:
      uriParameters:
        startIndex:
          description: Only return devices with IMEIs larger than this value. Use 0 for the first request. If `hasMoreData`=true in the response, use the `lastSeenDeviceId` value from the response as the startIndex in the next request.
          type: string
          required: true
          displayName: startIndex
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Returns an array of all devices in the specified account. Each device object includes information needed for managing firmware, including the device make and model, MDN and IMEI, and current firmware version.
        responses:
          '200':
            description: List of all devices in the specified account.
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceListQueryResult",
                    "title": "DeviceListQueryResult",
                    "description": "List of devices.",
                    "example": {
                      "accountName": "0242078698-00001",
                      "hasMoreData": true,
                      "lastSeenDeviceId": 900000000001000,
                      "deviceList": [
                        {
                          "deviceId": "900000000000001",
                          "mdn": "0000040881",
                          "model": "Model-A",
                          "make": "Verizon",
                          "firmware": "VerizonFirmwareVersion-01",
                          "fotaEligible": true,
                          "licenseAssigned": true,
                          "upgradeTime": "2018-03-03T16:03:33.000Z"
                        },
                        {
                          "deviceId": "900000000000999",
                          "mdn": "0000041879",
                          "model": "Model-A",
                          "make": "Verizon",
                          "firmware": "VerizonFirmwareVersion-01",
                          "fotaEligible": true,
                          "licenseAssigned": true,
                          "upgradeTime": "2018-03-03T16:03:33.000Z"
                        },
                        {
                          "deviceId": "900000000001000",
                          "mdn": "0000041880",
                          "model": "Model-A",
                          "make": "Verizon",
                          "firmware": "VerizonFirmwareVersion-01",
                          "fotaEligible": true,
                          "licenseAssigned": true,
                          "upgradeTime": "2018-03-03T16:03:33.000Z"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account identifier in \"##########-#####\".",
                        "example": "0242078698-00001",
                        "type": "string"
                      },
                      "hasMoreData": {
                        "description": "True if there are more devices to retrieve.",
                        "example": true,
                        "type": "boolean"
                      },
                      "lastSeenDeviceId": {
                        "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
                        "example": 900000000001000,
                        "type": "integer",
                        "format": "int64"
                      },
                      "deviceList": {
                        "description": "The list of devices in the account.",
                        "example": [
                          {
                            "deviceId": "900000000000001",
                            "mdn": "0000040881",
                            "model": "Model-A",
                            "make": "Verizon",
                            "firmware": "VerizonFirmwareVersion-01",
                            "fotaEligible": true,
                            "licenseAssigned": true,
                            "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
                          },
                          {
                            "deviceId": "900000000000999",
                            "mdn": "0000041879",
                            "model": "Model-A",
                            "make": "Verizon",
                            "firmware": "VerizonFirmwareVersion-01",
                            "fotaEligible": true,
                            "licenseAssigned": true,
                            "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
                          },
                          {
                            "deviceId": "900000000001000",
                            "mdn": "0000041880",
                            "model": "Model-A",
                            "make": "Verizon",
                            "firmware": "VerizonFirmwareVersion-01",
                            "fotaEligible": true,
                            "licenseAssigned": true,
                            "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "DeviceListQueryItem",
                          "title": "DeviceListQueryItem",
                          "description": "The list of devices in the account.",
                          "example": {
                            "deviceId": "900000000000001",
                            "mdn": "0000040881",
                            "model": "Model-A",
                            "make": "Verizon",
                            "firmware": "VerizonFirmwareVersion-01",
                            "fotaEligible": true,
                            "licenseAssigned": true,
                            "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC"
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "900000000000001",
                              "type": "string"
                            },
                            "mdn": {
                              "description": "The MDN (phone number) of the device.",
                              "example": "0000040881",
                              "type": "string"
                            },
                            "model": {
                              "description": "The device model name.",
                              "example": "Model-A",
                              "type": "string"
                            },
                            "make": {
                              "description": "The device make.",
                              "example": "Verizon",
                              "type": "string"
                            },
                            "firmware": {
                              "description": "The name of the firmware image currently installed on the device.",
                              "example": "VerizonFirmwareVersion-01",
                              "type": "string"
                            },
                            "fotaEligible": {
                              "description": "True if the device firmware can be upgraded over the air using the Software Management Services API.",
                              "example": true,
                              "type": "boolean"
                            },
                            "licenseAssigned": {
                              "description": "True if an MRC license has been assigned to this device.",
                              "example": true,
                              "type": "boolean"
                            },
                            "upgradeTime": {
                              "description": "The date and time that the device firmware was last upgraded. If a device has never been upgraded, the upgradeTime will be 01/01/1900 0:0:0.",
                              "example": "2021-06-03 00:03:56.079 +0000 UTC",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                example: '{"accountName":"0242078698-00001","hasMoreData":true,"lastSeenDeviceId":900000000001000,"deviceList":[{"deviceId":"900000000000001","mdn":"0000040881","model":"Model-A","make":"Verizon","firmware":"VerizonFirmwareVersion-01","fotaEligible":true,"licenseAssigned":true,"upgradeTime":"2021-06-03 00:03:56.079 +0000 UTC"},{"deviceId":"900000000000999","mdn":"0000041879","model":"Model-A","make":"Verizon","firmware":"VerizonFirmwareVersion-01","fotaEligible":true,"licenseAssigned":true,"upgradeTime":"2021-06-03 00:03:56.079 +0000 UTC"},{"deviceId":"900000000001000","mdn":"0000041880","model":"Model-A","make":"Verizon","firmware":"VerizonFirmwareVersion-01","fotaEligible":true,"licenseAssigned":true,"upgradeTime":"2021-06-03 00:03:56.079 +0000 UTC"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV1Result",
                    "title": "FotaV1Result",
                    "description": "Response in case of any errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error response code.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Description of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: The device endpoint gets devices information of an account.
      queryParameters:
        lastSeenDeviceId:
          description: Last seen device identifier.
          type: string
          example: 15-digit IMEI
          required: false
          displayName: lastSeenDeviceId
        distributionType:
          description: Filter distributionType to get specific type of devices. Values is LWM2M, OMD-DM or HTTP.
          type: string
          example: HTTP
          required: false
          displayName: distributionType
      responses:
        '200':
          description: Return array of devices.
          body:
            application/json:
              schema: |
                {
                  "id": "V2AccountDeviceList",
                  "title": "V2AccountDeviceList",
                  "description": "List of device information for an account.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "hasMoreData": true,
                    "lastSeenDeviceId": "15-digit IMEI",
                    "maxPageSize": 1000,
                    "deviceList": [
                      {
                        "deviceId": "15-digit IMEI",
                        "mdn": "10-digit MDN",
                        "model": "Model-A",
                        "make": "Verizon",
                        "fotaEligible": true,
                        "appFotaEligible": true,
                        "licenseAssigned": true,
                        "distributionType": "HTTP",
                        "softwareList": [
                          {
                            "name": "FOTA_Verizon_Model-A_02To03_HF",
                            "version": "3",
                            "upgradeTime": "2020-09-08T19:00:51.541Z"
                          }
                        ],
                        "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
                      },
                      {
                        "deviceId": "15-digit IMEI",
                        "mdn": "10-digit MDN",
                        "model": "Model-A",
                        "make": "Verizon",
                        "fotaEligible": true,
                        "appFotaEligible": true,
                        "licenseAssigned": true,
                        "distributionType": "HTTP",
                        "softwareList": [
                          {
                            "name": "FOTA_Verizon_Model-A_02To03_HF",
                            "version": "3",
                            "upgradeTime": "2020-09-08T19:00:51.541Z"
                          }
                        ],
                        "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
                      },
                      {
                        "deviceId": "15-digit IMEI",
                        "mdn": "10-digit MDN",
                        "model": "Model-A",
                        "make": "Verizon",
                        "fotaEligible": true,
                        "appFotaEligible": true,
                        "licenseAssigned": true,
                        "distributionType": "HTTP",
                        "softwareList": [
                          {
                            "name": "FOTA_Verizon_Model-A_02To03_HF",
                            "version": "3",
                            "upgradeTime": "2020-09-08T19:00:51.541Z"
                          }
                        ],
                        "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account name.",
                      "example": "0000123456-00001",
                      "type": "string"
                    },
                    "hasMoreData": {
                      "description": "Has more device flag?",
                      "example": true,
                      "type": "boolean"
                    },
                    "maxPageSize": {
                      "description": "Maximum page size.",
                      "example": 1000,
                      "type": "integer",
                      "format": "int32"
                    },
                    "deviceList": {
                      "description": "Account device list.",
                      "example": [
                        {
                          "deviceId": "15-digit IMEI",
                          "mdn": "10-digit MDN",
                          "model": "Model-A",
                          "make": "Verizon",
                          "fotaEligible": true,
                          "appFotaEligible": true,
                          "licenseAssigned": true,
                          "distributionType": "HTTP",
                          "softwareList": [
                            {
                              "name": "FOTA_Verizon_Model-A_02To03_HF",
                              "version": "3",
                              "upgradeTime": "2020-09-08T19:00:51.541Z"
                            }
                          ],
                          "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
                        },
                        {
                          "deviceId": "15-digit IMEI",
                          "mdn": "10-digit MDN",
                          "model": "Model-A",
                          "make": "Verizon",
                          "fotaEligible": true,
                          "appFotaEligible": true,
                          "licenseAssigned": true,
                          "distributionType": "HTTP",
                          "softwareList": [
                            {
                              "name": "FOTA_Verizon_Model-A_02To03_HF",
                              "version": "3",
                              "upgradeTime": "2020-09-08T19:00:51.541Z"
                            }
                          ],
                          "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
                        },
                        {
                          "deviceId": "15-digit IMEI",
                          "mdn": "10-digit MDN",
                          "model": "Model-A",
                          "make": "Verizon",
                          "fotaEligible": true,
                          "appFotaEligible": true,
                          "licenseAssigned": true,
                          "distributionType": "HTTP",
                          "softwareList": [
                            {
                              "name": "FOTA_Verizon_Model-A_02To03_HF",
                              "version": "3",
                              "upgradeTime": "2020-09-08T19:00:51.541Z"
                            }
                          ],
                          "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V2AccountDevice",
                        "title": "V2AccountDevice",
                        "description": "Account device information.",
                        "example": {
                          "deviceId": "15-digit IMEI",
                          "mdn": "10-digit MDN",
                          "model": "Model-A",
                          "make": "Verizon",
                          "fotaEligible": true,
                          "appFotaEligible": true,
                          "licenseAssigned": true,
                          "distributionType": "HTTP",
                          "softwareList": [
                            {
                              "name": "FOTA_Verizon_Model-A_02To03_HF",
                              "version": "3",
                              "upgradeTime": "2020-09-08T19:00:51.541Z"
                            }
                          ],
                          "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "upgradeTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "updateTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC"
                        },
                        "type": "object",
                        "properties": {
                          "deviceId": {
                            "description": "Device identifier.",
                            "example": "15-digit IMEI",
                            "type": "string"
                          },
                          "mdn": {
                            "description": "MDN.",
                            "example": "10-digit MDN",
                            "type": "string"
                          },
                          "model": {
                            "description": "Device model.",
                            "example": "Model-A",
                            "type": "string"
                          },
                          "make": {
                            "description": "Device make.",
                            "example": "Verizon",
                            "type": "string"
                          },
                          "fotaEligible": {
                            "description": "Device FOTA capable.",
                            "example": true,
                            "type": "boolean"
                          },
                          "appFotaEligible": {
                            "description": "Device application FOTA capable.",
                            "example": true,
                            "type": "boolean"
                          },
                          "licenseAssigned": {
                            "description": "License assigned device.",
                            "example": true,
                            "type": "boolean"
                          },
                          "distributionType": {
                            "description": "LWM2M, OMD-DM or HTTP.",
                            "example": "HTTP",
                            "type": "string"
                          },
                          "softwareList": {
                            "description": "List of sofware.",
                            "example": [
                              {
                                "name": "FOTA_Verizon_Model-A_02To03_HF",
                                "version": "3",
                                "upgradeTime": "2020-09-08T19:00:51.541Z"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "V2SoftwareInfo",
                              "title": "V2SoftwareInfo",
                              "description": "Software information.",
                              "example": {
                                "name": "FOTA_Verizon_Model-A_02To03_HF",
                                "version": "3",
                                "upgradeTime": "2020-09-08T19:00:51.541Z"
                              },
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Software name.",
                                  "example": "FOTA_Verizon_Model-A_02To03_HF",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Software version.",
                                  "example": "3",
                                  "type": "string"
                                },
                                "upgradeTime": {
                                  "description": "Upgrade time.",
                                  "example": "2020-09-08T19:00:51.541Z",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "version",
                                "upgradeTime"
                              ]
                            }
                          },
                          "createTime": {
                            "description": "The date and time of when the device is created.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "upgradeTime": {
                            "description": "The date and time of when the device firmware or software is upgraded.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "updateTime": {
                            "description": "The date and time of when the device is updated.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "refreshTime": {
                            "description": "The date and time of when the device is refreshed.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          }
                        },
                        "required": [
                          "deviceId",
                          "mdn",
                          "model",
                          "make",
                          "fotaEligible",
                          "appFotaEligible",
                          "licenseAssigned",
                          "distributionType",
                          "softwareList"
                        ]
                      }
                    },
                    "lastSeenDeviceId": {
                      "description": "Last seen device identifier.",
                      "example": "15-digit IMEI",
                      "type": "string"
                    }
                  },
                  "required": [
                    "accountName",
                    "hasMoreData",
                    "maxPageSize",
                    "deviceList"
                  ]
                }
              example: '{"accountName":"0000123456-00001","hasMoreData":true,"lastSeenDeviceId":"15-digit IMEI","maxPageSize":1000,"deviceList":[{"deviceId":"15-digit IMEI","mdn":"10-digit MDN","model":"Model-A","make":"Verizon","fotaEligible":true,"appFotaEligible":true,"licenseAssigned":true,"distributionType":"HTTP","softwareList":[{"name":"FOTA_Verizon_Model-A_02To03_HF","version":"3","upgradeTime":"2020-09-08T19:00:51.541Z"}],"createTime":"2021-06-03 00:03:56.079 +0000 UTC","upgradeTime":"2021-06-03 00:03:56.079 +0000 UTC","updateTime":"2021-06-03 00:03:56.079 +0000 UTC","refreshTime":"2021-06-03 00:03:56.079 +0000 UTC"},{"deviceId":"15-digit IMEI","mdn":"10-digit MDN","model":"Model-A","make":"Verizon","fotaEligible":true,"appFotaEligible":true,"licenseAssigned":true,"distributionType":"HTTP","softwareList":[{"name":"FOTA_Verizon_Model-A_02To03_HF","version":"3","upgradeTime":"2020-09-08T19:00:51.541Z"}],"createTime":"2021-06-03 00:03:56.079 +0000 UTC","upgradeTime":"2021-06-03 00:03:56.079 +0000 UTC","updateTime":"2021-06-03 00:03:56.079 +0000 UTC","refreshTime":"2021-06-03 00:03:56.079 +0000 UTC"},{"deviceId":"15-digit IMEI","mdn":"10-digit MDN","model":"Model-A","make":"Verizon","fotaEligible":true,"appFotaEligible":true,"licenseAssigned":true,"distributionType":"HTTP","softwareList":[{"name":"FOTA_Verizon_Model-A_02To03_HF","version":"3","upgradeTime":"2020-09-08T19:00:51.541Z"}],"createTime":"2021-06-03 00:03:56.079 +0000 UTC","upgradeTime":"2021-06-03 00:03:56.079 +0000 UTC","updateTime":"2021-06-03 00:03:56.079 +0000 UTC","refreshTime":"2021-06-03 00:03:56.079 +0000 UTC"}]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /{acc}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: acc
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Retrieve account device information such as reported firmware on the devices.
      queryParameters:
        lastSeenDeviceId:
          description: Last seen device identifier.
          type: string
          example: '0'
          required: false
          displayName: lastSeenDeviceId
        protocol:
          description: Filter to retrieve a specific protocol type used.
          example: LWM2M
          default: LWM2M
          required: false
          displayName: protocol
          enum:
          - LWM2M
          - OMDADM
          - HTTP
      responses:
        '200':
          description: Returns an array of devices.
          body:
            application/json:
              schema: |
                {
                  "id": "V3AccountDeviceList",
                  "title": "V3AccountDeviceList",
                  "description": "Array of devices.",
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account name.",
                      "example": "0000123456-00001",
                      "type": "string"
                    },
                    "hasMoreData": {
                      "description": "Has more device flag?",
                      "example": true,
                      "type": "boolean"
                    },
                    "maxPageSize": {
                      "description": "Maximum page size.",
                      "example": 1000,
                      "type": "integer",
                      "format": "int32"
                    },
                    "deviceList": {
                      "description": "Account device list.",
                      "type": "array",
                      "items": {
                        "id": "V3AccountDevice",
                        "title": "V3AccountDevice",
                        "description": "Device information.",
                        "type": "object",
                        "properties": {
                          "deviceId": {
                            "description": "Device identifier.",
                            "example": "15-digit device ID",
                            "type": "string"
                          },
                          "mdn": {
                            "description": "MDN.",
                            "example": "10-digit MDN",
                            "type": "string"
                          },
                          "model": {
                            "description": "Device model.",
                            "example": "BG96",
                            "type": "string"
                          },
                          "make": {
                            "description": "Device make.",
                            "example": "QUECTEL",
                            "type": "string"
                          },
                          "firmware": {
                            "description": "Device firmware version.",
                            "example": "BG96MAR04A04M1G",
                            "type": "string"
                          },
                          "fotaEligible": {
                            "description": "Value=true if the device software can be upgraded over the air using the Software Management Services API.",
                            "example": false,
                            "type": "boolean"
                          },
                          "status": {
                            "description": "Device status.",
                            "example": "Active",
                            "type": "string"
                          },
                          "licenseAssigned": {
                            "description": "License assigned device.",
                            "example": true,
                            "type": "boolean"
                          },
                          "protocol": {
                            "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.",
                            "example": "LWM2M",
                            "type": "string"
                          },
                          "softwareList": {
                            "description": "List of sofware.",
                            "example": [
                              {
                                "name": "VZ_MDM_IOT",
                                "version": "0.14",
                                "upgradeTime": "2012-04-23T18:25:43.511Z"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "V3SoftwareInfo",
                              "title": "V3SoftwareInfo",
                              "description": "Software information.",
                              "example": {
                                "name": "VZ_MDM_IOT",
                                "version": "0.14",
                                "upgradeTime": "2012-04-23T18:25:43.511Z"
                              },
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Software name.",
                                  "example": "VZ_MDM_IOT",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Software version.",
                                  "example": "0.14",
                                  "type": "string"
                                },
                                "upgradeTime": {
                                  "description": "Upgrade time.",
                                  "example": "2012-04-23T18:25:43.511Z",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "version",
                                "upgradeTime"
                              ]
                            }
                          },
                          "fileList": {
                            "description": "List of files.",
                            "example": [
                              {
                                "name": "VZ_MDM_IOT",
                                "version": "0.14",
                                "upgradeTime": "2012-04-23T18:25:43.511Z"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "$ref": "V3SoftwareInfo"
                            }
                          },
                          "createTime": {
                            "description": "The date and time of when the device is created.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "upgradeTime": {
                            "description": "The date and time of when the device firmware or software is updated.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "updateTime": {
                            "description": "The date and time of when the device is updated.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "refreshTime": {
                            "description": "The date and time of when the device is refreshed.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          }
                        },
                        "required": [
                          "deviceId",
                          "mdn",
                          "model",
                          "make",
                          "firmware",
                          "fotaEligible",
                          "status",
                          "licenseAssigned",
                          "protocol",
                          "softwareList"
                        ]
                      }
                    },
                    "lastSeenDeviceId": {
                      "description": "Last seen device identifier.",
                      "example": "15-digit IMEI",
                      "type": "string"
                    }
                  },
                  "required": [
                    "accountName",
                    "hasMoreData",
                    "maxPageSize",
                    "deviceList"
                  ]
                }
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Retrieve device information for a list of devices on an account.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "DeviceIMEI",
              "title": "DeviceIMEI",
              "description": "Request device list information.",
              "example": {
                "deviceList": [
                  "15-digit IMEI"
                ]
              },
              "type": "object",
              "properties": {
                "deviceList": {
                  "description": "Device IMEI list.",
                  "example": [
                    "15-digit IMEI"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "deviceList"
              ]
            }
          example: '{"deviceList":["15-digit IMEI"]}'
      responses:
        '200':
          description: Get device list information.
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceListResult",
                  "title": "DeviceListResult",
                  "description": "Device list information.",
                  "example": {
                    "accountName": "0000123456-00001",
                    "deviceCount": 1,
                    "deviceList": [
                      {
                        "deviceId": "15-digit IMEI",
                        "mdn": "10-digit MDN",
                        "model": "GM01Q",
                        "make": "SEQUANS COMMUNICATIONS",
                        "firmware": "SR1.2.0.0-10657",
                        "fotaEligible": true,
                        "licenseAssigned": true,
                        "status": "Active",
                        "protocol": "LWM2M",
                        "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "statusTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC",
                        "lastConnectionTime": "2012-04-23T18:25:43.511Z"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "Account name.",
                      "example": "0000123456-00001",
                      "type": "string"
                    },
                    "deviceCount": {
                      "description": "Total device count.",
                      "example": 1,
                      "type": "integer",
                      "format": "int32"
                    },
                    "deviceList": {
                      "description": "List of devices with id in IMEI.",
                      "example": [
                        {
                          "deviceId": "15-digit IMEI",
                          "mdn": "10-digit MDN",
                          "model": "GM01Q",
                          "make": "SEQUANS COMMUNICATIONS",
                          "firmware": "SR1.2.0.0-10657",
                          "fotaEligible": true,
                          "licenseAssigned": true,
                          "status": "Active",
                          "protocol": "LWM2M",
                          "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "statusTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "lastConnectionTime": "2012-04-23T18:25:43.511Z"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V3Device",
                        "title": "V3Device",
                        "description": "Device information.",
                        "example": {
                          "deviceId": "15-digit IMEI",
                          "mdn": "10-digit MDN",
                          "model": "GM01Q",
                          "make": "SEQUANS COMMUNICATIONS",
                          "firmware": "SR1.2.0.0-10657",
                          "fotaEligible": true,
                          "licenseAssigned": true,
                          "status": "Active",
                          "protocol": "LWM2M",
                          "createTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "statusTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "refreshTime": "2021-06-03 00:03:56.079 +0000 UTC",
                          "lastConnectionTime": "2012-04-23T18:25:43.511Z"
                        },
                        "type": "object",
                        "properties": {
                          "deviceId": {
                            "description": "Device IMEI.",
                            "example": "15-digit IMEI",
                            "type": "string"
                          },
                          "requestStatus": {
                            "description": "Success or failure.",
                            "example": "success",
                            "type": "string"
                          },
                          "resultReason": {
                            "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                            "type": "string"
                          },
                          "mdn": {
                            "description": "MDN.",
                            "example": "10-digit MDN",
                            "type": "string"
                          },
                          "model": {
                            "description": "Device model.",
                            "example": "GM01Q",
                            "type": "string"
                          },
                          "make": {
                            "description": "Device make.",
                            "example": "SEQUANS COMMUNICATIONS",
                            "type": "string"
                          },
                          "firmware": {
                            "description": "Device firmware version.",
                            "example": "SR1.2.0.0-10657",
                            "type": "string"
                          },
                          "fotaEligible": {
                            "description": "Value=true if the device software can be upgraded over the air using the Software Management Services API.",
                            "example": false,
                            "type": "boolean"
                          },
                          "status": {
                            "description": "Device status.",
                            "example": "Active",
                            "type": "string"
                          },
                          "licenseAssigned": {
                            "description": "License assigned device.",
                            "example": true,
                            "type": "boolean"
                          },
                          "protocol": {
                            "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.",
                            "example": "LWM2M",
                            "type": "string"
                          },
                          "softwareList": {
                            "description": "List of sofware.",
                            "example": [
                              {
                                "name": "VZ_MDM_IOT",
                                "version": "0.14",
                                "upgradeTime": "2012-04-23T18:25:43.511Z"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "id": "V3SoftwareInfo",
                              "title": "V3SoftwareInfo",
                              "description": "Software information.",
                              "example": {
                                "name": "VZ_MDM_IOT",
                                "version": "0.14",
                                "upgradeTime": "2012-04-23T18:25:43.511Z"
                              },
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Software name.",
                                  "example": "VZ_MDM_IOT",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Software version.",
                                  "example": "0.14",
                                  "type": "string"
                                },
                                "upgradeTime": {
                                  "description": "Upgrade time.",
                                  "example": "2012-04-23T18:25:43.511Z",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "version",
                                "upgradeTime"
                              ]
                            },
                            "maxItems": 1000
                          },
                          "fileList": {
                            "description": "List of files.",
                            "example": [
                              {
                                "name": "VZ_MDM_IOT",
                                "version": "0.14",
                                "upgradeTime": "2012-04-23T18:25:43.511Z"
                              }
                            ],
                            "type": "array",
                            "items": {
                              "$ref": "V3SoftwareInfo"
                            },
                            "maxItems": 1000
                          },
                          "createTime": {
                            "description": "The date and time of when the device is created.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "statusTime": {
                            "description": "The date and time of when the device firmware or software is updated.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "updateTime": {
                            "description": "The date and time of when the device is updated.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "refreshTime": {
                            "description": "The date and time of when the device is refreshed.",
                            "example": "2021-06-03 00:03:56.079 +0000 UTC",
                            "type": "string"
                          },
                          "lastConnectionTime": {
                            "description": "The date and time of when the device reachability is checked.",
                            "example": "2012-04-23T18:25:43.511Z",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "deviceId"
                        ]
                      },
                      "maxItems": 1000
                    }
                  },
                  "required": [
                    "accountName",
                    "deviceCount",
                    "deviceList"
                  ]
                }
              example: '{"accountName":"0000123456-00001","deviceCount":1,"deviceList":[{"deviceId":"15-digit IMEI","mdn":"10-digit MDN","model":"GM01Q","make":"SEQUANS COMMUNICATIONS","firmware":"SR1.2.0.0-10657","fotaEligible":true,"licenseAssigned":true,"status":"Active","protocol":"LWM2M","createTime":"2021-06-03 00:03:56.079 +0000 UTC","statusTime":"2021-06-03 00:03:56.079 +0000 UTC","refreshTime":"2021-06-03 00:03:56.079 +0000 UTC","lastConnectionTime":"2012-04-23T18:25:43.511Z"}]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /attributes/actions/observe:
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows the user to start or change observe diagnostics.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - '*/*'
      body:
        '*/*':
          schema: |
            {
              "id": "ObservationRequest",
              "title": "ObservationRequest",
              "description": "Request for device observation information.",
              "example": {
                "accountName": "0000123456-00001",
                "attributes": [
                  {
                    "name": "RADIO_SIGNAL_STRENGTH"
                  },
                  {
                    "name": "LINK_QUALITY"
                  },
                  {
                    "name": "NETWORK_BEARER"
                  },
                  {
                    "name": "CELL_ID"
                  }
                ],
                "devices": [
                  {
                    "id": "864508030026238",
                    "kind": "IMEI"
                  }
                ]
              },
              "type": "object",
              "properties": {
                "accountName": {
                  "description": "Account identifier in \"##########-#####\".",
                  "example": "0000123456-00001",
                  "type": "string"
                },
                "devices": {
                  "description": "List of devices.",
                  "example": [
                    {
                      "id": "864508030026238",
                      "kind": "IMEI"
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "Device",
                    "title": "Device",
                    "description": "Identifies a particular IoT device.",
                    "example": {
                      "id": "864508030026238",
                      "kind": "IMEI"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Device identifier.",
                        "example": "864508030026238",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Device kind identifier.",
                        "example": "IMEI",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "kind"
                    ]
                  }
                },
                "attributes": {
                  "description": "Attributes are streaming RF parameters that you want to observe.",
                  "example": [
                    {
                      "name": "RADIO_SIGNAL_STRENGTH"
                    },
                    {
                      "name": "LINK_QUALITY"
                    },
                    {
                      "name": "NETWORK_BEARER"
                    },
                    {
                      "name": "CELL_ID"
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "ObservationRequestAttribute",
                    "title": "ObservationRequestAttribute",
                    "description": "Streaming RF parameter that you want to observe.",
                    "example": {
                      "name": "RADIO_SIGNAL_STRENGTH"
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "AttributeIdentifier",
                        "description": "Attribute identifier.",
                        "example": "RADIO_SIGNAL_STRENGTH",
                        "type": "string",
                        "enum": [
                          "NETWORK_BEARER",
                          "RADIO_SIGNAL_STRENGTH",
                          "LINK_QUALITY",
                          "CELL_ID",
                          "MANUFACTURER"
                        ]
                      }
                    }
                  }
                },
                "frequency": {
                  "id": "NumericalData",
                  "title": "NumericalData",
                  "description": "Describes value and unit of time.",
                  "example": {
                    "value": 5,
                    "unit": "SECOND"
                  },
                  "type": "object",
                  "properties": {
                    "value": {
                      "description": "Numerical value.",
                      "example": 5,
                      "type": "integer",
                      "format": "int32"
                    },
                    "unit": {
                      "title": "NumericalDataUnit",
                      "description": "Unit of time.",
                      "example": "MINUTE",
                      "type": "string",
                      "enum": [
                        "SECOND",
                        "MINUTE",
                        "HOUR",
                        "DAY"
                      ]
                    }
                  }
                },
                "duration": {
                  "$ref": "NumericalData"
                }
              },
              "required": [
                "accountName",
                "devices",
                "attributes"
              ]
            }
          example: '{"accountName":"TestQAAccount","devices":[{"id":"864508030026238","kind":"IMEI"}],"attributes":[{"name":"RADIO_SIGNAL_STRENGTH"},{"name":"LINK_QUALITY"},{"name":"NETWORK_BEARER"},{"name":"CELL_ID"}],"frequency":{"value":15,"unit":"SECOND"},"duration":{"value":15,"unit":"SECOND"}}'
      responses:
        '200':
          description: Diagnostics observation result.
          body:
            application/json:
              schema: |
                {
                  "id": "DiagnosticsObservationResult",
                  "title": "DiagnosticsObservationResult",
                  "description": "A success response containing the current status of the request.",
                  "example": {
                    "createdOn": "2019-09-10T19:05:33.33Z",
                    "transactionID": "9c7bb124-11f5-4ff3-8a88-0eec1ba99205",
                    "status": "CANCEL_OBSERVE_PENDING"
                  },
                  "type": "object",
                  "properties": {
                    "transactionID": {
                      "description": "Transaction identifier.",
                      "example": "9c7bb124-11f5-4ff3-8a88-0eec1ba99205",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the request.",
                      "example": "CANCEL_OBSERVE_PENDING",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "The date and time of when this request was created.",
                      "example": "2019-09-10T19:05:33.33Z",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "transactionID",
                    "status",
                    "createdOn"
                  ]
                }
              example: '{"createdOn":"2019-09-10T19:05:33.33Z","transactionID":"9c7bb124-11f5-4ff3-8a88-0eec1ba99205","status":"CANCEL_OBSERVE_PENDING"}'
        '0':
          description: Error response.
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceDiagnosticsResult",
                  "title": "DeviceDiagnosticsResult",
                  "description": "All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.",
                  "example": {
                    "errorCode": "INTERNAL_SYSTEM_ERROR",
                    "errorMessage": "The system encountered an internal error."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Simple error code.",
                      "example": "INVALID_PARAMETER",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Detailed error message.",
                      "example": "The request parameter is invalid.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows the user to stop or reset observe diagnostics.
      queryParameters:
        transactionId:
          description: The ID value associated with the transaction.
          type: string
          example: 5f4bd2ff-5d7f-444d-af17-3f6a80bb2a94
          required: true
          displayName: transactionId
        accountName:
          description: The numeric account name.
          type: string
          example: 0000123456-00001
          required: true
          displayName: accountName
      responses:
        '200':
          description: Diagnostics observation result.
          body:
            application/json:
              schema: |
                {
                  "id": "DiagnosticsObservationResult",
                  "title": "DiagnosticsObservationResult",
                  "description": "A success response containing the current status of the request.",
                  "example": {
                    "createdOn": "2019-09-10T19:05:33.33Z",
                    "transactionID": "9c7bb124-11f5-4ff3-8a88-0eec1ba99205",
                    "status": "CANCEL_OBSERVE_PENDING"
                  },
                  "type": "object",
                  "properties": {
                    "transactionID": {
                      "description": "Transaction identifier.",
                      "example": "9c7bb124-11f5-4ff3-8a88-0eec1ba99205",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the request.",
                      "example": "CANCEL_OBSERVE_PENDING",
                      "type": "string"
                    },
                    "createdOn": {
                      "description": "The date and time of when this request was created.",
                      "example": "2019-09-10T19:05:33.33Z",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "transactionID",
                    "status",
                    "createdOn"
                  ]
                }
              example: '{"createdOn":"2019-09-10T19:05:33.33Z","transactionID":"9c7bb124-11f5-4ff3-8a88-0eec1ba99205","status":"CANCEL_OBSERVE_PENDING"}'
        '0':
          description: Error response.
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceDiagnosticsResult",
                  "title": "DeviceDiagnosticsResult",
                  "description": "All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.",
                  "example": {
                    "errorCode": "INTERNAL_SYSTEM_ERROR",
                    "errorMessage": "The system encountered an internal error."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Simple error code.",
                      "example": "INVALID_PARAMETER",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Detailed error message.",
                      "example": "The request parameter is invalid.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
  /settings:
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint retrieves diagnostics settings synchronously.
      queryParameters:
        accountName:
          description: Account identifier.
          type: string
          example: 0000123456-00001
          required: true
          displayName: accountName
        devices:
          description: 'Devices list format: [{"id":"{imei1}","kind":"imei"},{"id":"{imei2}","kind":"imei"}].'
          type: string
          example: '[{"id":"864508030026238","kind":"IMEI"},{"id":"864508030026238","kind":"IMEI"}]'
          required: true
          displayName: devices
      responses:
        '200':
          description: Diagnostic settings.
          body:
            application/json:
              schema: |
                {
                  "description": "The current diagnostic observation settings for a list of devices.",
                  "example": [
                    {
                      "accountName": "string",
                      "device": {
                        "id": "864508030026238",
                        "kind": "IMEI"
                      },
                      "attributes": [
                        {
                          "name": "MANUFACTURER",
                          "value": "string",
                          "createdOn": "2019-09-07T23:08:03.532Z",
                          "isObservable": true,
                          "isObserving": true,
                          "frequency": {
                            "value": 5,
                            "unit": "SECOND"
                          }
                        }
                      ]
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "DiagnosticObservationSetting",
                    "title": "DiagnosticObservationSetting",
                    "description": "Diagnostic observation settings and attributes for a device.",
                    "example": {
                      "accountName": "string",
                      "device": {
                        "id": "864508030026238",
                        "kind": "IMEI"
                      },
                      "attributes": [
                        {
                          "name": "MANUFACTURER",
                          "value": "string",
                          "createdOn": "2019-09-07T23:08:03.532Z",
                          "isObservable": true,
                          "isObserving": true,
                          "frequency": {
                            "value": 5,
                            "unit": "SECOND"
                          }
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "The name of the billing account for which callback messages will be sent. Format: \"##########-#####\".",
                        "example": "0000123456-00001",
                        "type": "string"
                      },
                      "device": {
                        "id": "Device",
                        "title": "Device",
                        "description": "Identifies a particular IoT device.",
                        "example": {
                          "id": "864508030026238",
                          "kind": "IMEI"
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Device identifier.",
                            "example": "864508030026238",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Device kind identifier.",
                            "example": "IMEI",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "kind"
                        ]
                      },
                      "attributes": {
                        "description": "Streaming RF parameters for which you want to retrieve diagnostic settings.",
                        "example": [
                          {
                            "name": "MANUFACTURER",
                            "value": "string",
                            "createdOn": "2019-09-07T23:08:03.532Z",
                            "isObservable": true,
                            "isObserving": true,
                            "frequency": {
                              "value": 5,
                              "unit": "SECOND"
                            }
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "AttributeSetting",
                          "title": "AttributeSetting",
                          "description": "Describes an attribute being observed and the frequency with which the attribute is being observed.",
                          "example": {
                            "name": "MANUFACTURER",
                            "value": "string",
                            "createdOn": "2019-09-07T23:08:03.532Z",
                            "isObservable": true,
                            "isObserving": true,
                            "frequency": {
                              "value": 5,
                              "unit": "SECOND"
                            }
                          },
                          "type": "object",
                          "properties": {
                            "name": {
                              "title": "AttributeIdentifier",
                              "description": "Attribute identifier.",
                              "example": "RADIO_SIGNAL_STRENGTH",
                              "type": "string",
                              "enum": [
                                "NETWORK_BEARER",
                                "RADIO_SIGNAL_STRENGTH",
                                "LINK_QUALITY",
                                "CELL_ID",
                                "MANUFACTURER"
                              ]
                            },
                            "value": {
                              "description": "Attribute value.",
                              "example": "string",
                              "type": "string"
                            },
                            "createdOn": {
                              "description": "Date and time request was created.",
                              "example": "2019-09-07T23:08:03.532Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "isObservable": {
                              "description": "Is the attribute observable?",
                              "example": true,
                              "type": "boolean"
                            },
                            "isObserving": {
                              "description": "Is the attribute being observed?",
                              "example": true,
                              "type": "boolean"
                            },
                            "frequency": {
                              "id": "NumericalData",
                              "title": "NumericalData",
                              "description": "Describes value and unit of time.",
                              "example": {
                                "value": 5,
                                "unit": "SECOND"
                              },
                              "type": "object",
                              "properties": {
                                "value": {
                                  "description": "Numerical value.",
                                  "example": 5,
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "unit": {
                                  "title": "NumericalDataUnit",
                                  "description": "Unit of time.",
                                  "example": "MINUTE",
                                  "type": "string",
                                  "enum": [
                                    "SECOND",
                                    "MINUTE",
                                    "HOUR",
                                    "DAY"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example: '[{"accountName":"string","device":{"id":"864508030026238","kind":"IMEI"},"attributes":[{"name":"MANUFACTURER","value":"string","createdOn":"2019-09-07T23:08:03.532Z","isObservable":true,"isObserving":true,"frequency":{"value":5,"unit":"SECOND"}}]}]'
        '0':
          description: Error response.
          body:
            application/json:
              schema: |
                {
                  "id": "DeviceDiagnosticsResult",
                  "title": "DeviceDiagnosticsResult",
                  "description": "All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.",
                  "example": {
                    "errorCode": "INTERNAL_SYSTEM_ERROR",
                    "errorMessage": "The system encountered an internal error."
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Simple error code.",
                      "example": "INVALID_PARAMETER",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Detailed error message.",
                      "example": "The request parameter is invalid.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
  /configuration/actions/set:
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Change configuration values on a device, such as setting how often a device records and reports sensor readings.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "ChangeConfigurationRequest",
              "title": "ChangeConfigurationRequest",
              "description": "The request body changes configuration values on a device.",
              "example": {
                "accountidentifier": {
                  "billingaccountid": "1223334444-00001"
                },
                "resourceidentifier": {
                  "id": "f8b112df-739c-6236-f059-106c67bafd99"
                },
                "configuration": {
                  "frequency": "Low"
                }
              },
              "type": "object",
              "properties": {
                "accountidentifier": {
                  "id": "AccountIdentifier",
                  "title": "AccountIdentifier",
                  "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                  "example": {
                    "billingaccountid": "0000000000-00001"
                  },
                  "type": "object",
                  "properties": {
                    "billingaccountid": {
                      "example": "1223334444-00001",
                      "type": "string"
                    }
                  }
                },
                "resourceidentifier": {
                  "id": "ResourceIdentifier",
                  "title": "ResourceIdentifier",
                  "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                  "example": {
                    "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Target ID.",
                      "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                      "type": "string"
                    },
                    "imei": {
                      "description": "Device IMEI.",
                      "type": "string"
                    }
                  }
                },
                "configuration": {
                  "id": "configuration",
                  "title": "configuration",
                  "description": "List of the field names and values to set.",
                  "example": {
                    "frequency": "Low"
                  },
                  "type": "object",
                  "properties": {
                    "frequency": {
                      "example": "Low",
                      "type": "string"
                    }
                  }
                }
              }
            }
          example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"resourceidentifier":{"imei":"864508030147323"},"configuration":{"frequency":"Low"}}'
      responses:
        '200':
          description: A success response contains the ts.event.configuration event that was created to record the change.
          body:
            application/json:
              schema: |
                {
                  "id": "ChangeConfigurationResponse",
                  "title": "ChangeConfigurationResponse",
                  "description": "Change Configuration resource definition.",
                  "example": {
                    "action": "set",
                    "createdon": "2019-02-14T01:41:03.619217664Z",
                    "deviceid": "8461f530-2e31-6e87-e357-6c38251d4d01",
                    "fields": {
                      "configuration": {
                        "frequency": "Low"
                      }
                    },
                    "foreignid": "e1f15861-7de7-69cb-ed7d-b4a92e091bc4",
                    "id": "05c12adc-50c0-6ebb-feb0-b9f9637a1dba",
                    "kind": "ts.event.configuration",
                    "lastupdated": "2019-02-14T01:41:03.619217727Z",
                    "name": "SetConfigurationReq",
                    "state": "pending",
                    "transactionid": "1d38aae7-558d-4cb9-8269-e8d4c0519045",
                    "version": "1.0"
                  },
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "The action requested in this event; “change” for device configuration changes.",
                      "example": "set",
                      "type": "string"
                    },
                    "createdon": {
                      "description": "The date and time of the change request.",
                      "example": "2019-02-14T01:41:03.619217664Z",
                      "type": "string"
                    },
                    "deviceid": {
                      "description": "The device’s ThingSpace UUID.",
                      "example": "8461f530-2e31-6e87-e357-6c38251d4d01",
                      "type": "string"
                    },
                    "fields": {
                      "id": "Fields",
                      "title": "Fields",
                      "description": "List of fields affected by the event.",
                      "example": {
                        "configuration": {
                          "frequency": "Low"
                        }
                      },
                      "type": "object",
                      "properties": {
                        "configuration": {
                          "id": "configuration",
                          "title": "configuration",
                          "description": "List of the field names and values to set.",
                          "example": {
                            "frequency": "Low"
                          },
                          "type": "object",
                          "properties": {
                            "frequency": {
                              "example": "Low",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "foreignid": {
                      "description": "foreign id",
                      "example": "e1f15861-7de7-69cb-ed7d-b4a92e091bc4",
                      "type": "string"
                    },
                    "id": {
                      "description": "The unique ID of this ts.event.configuration event.",
                      "example": "05c12adc-50c0-6ebb-feb0-b9f9637a1dba",
                      "type": "string"
                    },
                    "kind": {
                      "description": "The kind of the ThingSpace resource that is being reported",
                      "example": "ts.event.configuration",
                      "type": "string"
                    },
                    "lastupdated": {
                      "description": "The date and time that the event was last updated.",
                      "example": "2019-02-14T01:41:03.619217727Z",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the event; “SetConfigurationReq” for device configuration changes.",
                      "example": "SetConfigurationReq",
                      "type": "string"
                    },
                    "state": {
                      "description": "The current status of the request. The value will be “pending” until the device wakes up and ThingSpace can send the request to the device.",
                      "example": "pending",
                      "type": "string"
                    },
                    "transactionid": {
                      "description": "transaction id",
                      "example": "1d38aae7-558d-4cb9-8269-e8d4c0519045",
                      "type": "string"
                    },
                    "version": {
                      "description": "version",
                      "example": "1.0",
                      "type": "string"
                    }
                  }
                }
              example: '{"action":"set","createdon":"2019-02-14T01:41:03.619217664Z","deviceid":"8461f530-2e31-6e87-e357-6c38251d4d01","fields":{"configuration":{"frequency":"Low"}},"foreignid":"e1f15861-7de7-69cb-ed7d-b4a92e091bc4","id":"05c12adc-50c0-6ebb-feb0-b9f9637a1dba","kind":"ts.event.configuration","lastupdated":"2019-02-14T01:41:03.619217727Z","name":"SetConfigurationReq","state":"pending","transactionid":"1d38aae7-558d-4cb9-8269-e8d4c0519045","version":"1.0"}'
  /services:
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Gets the list of a status for hyper-precise location devices.
      queryParameters:
        imei:
          description: A unique identifier for a device.
          type: string
          example: '709312034493372'
          required: true
          displayName: imei
        accountNumber:
          description: A unique identifier for an account.
          type: string
          example: 0844021539-00001
          required: true
          displayName: accountNumber
      responses:
        '200':
          description: Returns the status of Hyper Precise Location on the device.
          body:
            application/json:
              schema: |
                {
                  "id": "BullseyeServiceResult",
                  "title": "BullseyeServiceResult",
                  "description": "Status of Hyper Precise Location on the device.",
                  "example": {
                    "accountNumber": "0844021539-00001",
                    "deviceList": [
                      {
                        "imei": "709312034493372",
                        "BullseyeEnable": true
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountNumber": {
                      "description": "The account the device belongs to.",
                      "example": "0844021539-00001",
                      "type": "string"
                    },
                    "deviceList": {
                      "description": "List of devices.",
                      "example": [
                        {
                          "imei": "709312034493372",
                          "BullseyeEnable": true
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "DeviceServiceInformation",
                        "title": "DeviceServiceInformation",
                        "description": "Device service information.",
                        "example": {
                          "imei": "709312034493372",
                          "BullseyeEnable": true
                        },
                        "type": "object",
                        "properties": {
                          "imei": {
                            "description": "The International Mobile Equipment Identifier of the device.",
                            "example": "709312034493372",
                            "type": "string"
                          },
                          "BullseyeEnable": {
                            "description": "Shows if Hyper Precise is enabled (true) or disabled (false).",
                            "example": true,
                            "type": "boolean"
                          },
                          "responseType": {
                            "id": "ApiResponseCode",
                            "title": "ApiResponseCode",
                            "description": "ResponseCode and/or a message indicating success or failure of the request.",
                            "type": "object",
                            "properties": {
                              "responseCode": {
                                "title": "ResponseCode",
                                "description": "Possible response codes.",
                                "example": "INVALID_ACCESS",
                                "type": "string",
                                "enum": [
                                  "INVALID_ACCESS",
                                  "INVALID_PARAMETER",
                                  "INTERNAL_ERROR",
                                  "SUCCESS"
                                ]
                              },
                              "message": {
                                "description": "More details about the responseCode received.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "responseCode",
                              "message"
                            ]
                          }
                        },
                        "required": [
                          "imei",
                          "BullseyeEnable"
                        ]
                      }
                    },
                    "responseType": {
                      "$ref": "ApiResponseCode"
                    }
                  }
                }
              example: '{"accountNumber":"0844021539-00001","deviceList":[{"imei":"709312034493372","BullseyeEnable":true}]}'
        '400':
          description: Bad request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "400",
                      "Name": "400",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Found, Request will be queued\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Found, Request will be queued"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Found, Request will be queued"
                }
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "401",
                      "Name": "401",
                      "Value": "{\n  \"responseCode\": \"INVALID_ACCESS\",\n  \"message\": \"The access policy denied the resource operation for this user\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_ACCESS",
                    "message": "The access policy denied the resource operation for this user"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_ACCESS",
                  "message": "The access policy denied the resource operation for this user"
                }
        '403':
          description: Forbidden request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "403",
                      "Name": "403",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Certified\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Certified"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Certified"
                }
        '404':
          description: Bad request. Not found.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "404",
                      "Name": "404",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Inactive\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Inactive"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Inactive"
                }
        '409':
          description: Bad request. Conflict state.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "409",
                      "Name": "409",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Service Not Purchased\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Service Not Purchased"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Service Not Purchased"
                }
        '500':
          description: Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "500",
                      "Name": "500",
                      "Value": "{\n  \"responseCode\": \"INTERNAL_ERROR\",\n  \"message\": \"Device is active in several accounts\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INTERNAL_ERROR",
                    "message": "Device is active in several accounts"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INTERNAL_ERROR",
                  "message": "Device is active in several accounts"
                }
    put:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Enable/disable hyper-precise service for a device.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "BullseyeServiceRequest",
              "title": "BullseyeServiceRequest",
              "description": "List of devices and hyper-precise required statuses.",
              "example": {
                "deviceList": [
                  {
                    "imei": "354658090356210",
                    "BullseyeEnable": true
                  }
                ],
                "accountNumber": "0242080353-00001"
              },
              "type": "object",
              "properties": {
                "deviceList": {
                  "description": "A list of devices.",
                  "example": [
                    {
                      "imei": "354658090356210",
                      "BullseyeEnable": true
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "DeviceServiceRequest",
                    "title": "DeviceServiceRequest",
                    "description": "Device information.",
                    "example": {
                      "imei": "354658090356210",
                      "BullseyeEnable": true
                    },
                    "type": "object",
                    "properties": {
                      "imei": {
                        "description": "International Mobile Equipment Identifier. The unique ID of a device.",
                        "example": "354658090356210",
                        "type": "string",
                        "pattern": "^[0-9]{15}$"
                      },
                      "BullseyeEnable": {
                        "description": "Set to Enable (true) or Disable (false).",
                        "example": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "imei",
                      "BullseyeEnable"
                    ]
                  }
                },
                "accountNumber": {
                  "description": "A unique identifier for an account.",
                  "example": "0242080353-00001",
                  "type": "string"
                }
              },
              "required": [
                "deviceList",
                "accountNumber"
              ]
            }
          example: '{"deviceList":[{"imei":"354658090356210","BullseyeEnable":true}],"accountNumber":"0242080353-00001"}'
      responses:
        '200':
          description: Successful response.
          body:
            application/json:
              schema: |
                {
                  "id": "BullseyeServiceResult",
                  "title": "BullseyeServiceResult",
                  "description": "Status of Hyper Precise Location on the device.",
                  "example": {
                    "accountNumber": "0844021539-00001",
                    "deviceList": [
                      {
                        "imei": "709312034493372",
                        "BullseyeEnable": true
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountNumber": {
                      "description": "The account the device belongs to.",
                      "example": "0844021539-00001",
                      "type": "string"
                    },
                    "deviceList": {
                      "description": "List of devices.",
                      "example": [
                        {
                          "imei": "709312034493372",
                          "BullseyeEnable": true
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "DeviceServiceInformation",
                        "title": "DeviceServiceInformation",
                        "description": "Device service information.",
                        "example": {
                          "imei": "709312034493372",
                          "BullseyeEnable": true
                        },
                        "type": "object",
                        "properties": {
                          "imei": {
                            "description": "The International Mobile Equipment Identifier of the device.",
                            "example": "709312034493372",
                            "type": "string"
                          },
                          "BullseyeEnable": {
                            "description": "Shows if Hyper Precise is enabled (true) or disabled (false).",
                            "example": true,
                            "type": "boolean"
                          },
                          "responseType": {
                            "id": "ApiResponseCode",
                            "title": "ApiResponseCode",
                            "description": "ResponseCode and/or a message indicating success or failure of the request.",
                            "type": "object",
                            "properties": {
                              "responseCode": {
                                "title": "ResponseCode",
                                "description": "Possible response codes.",
                                "example": "INVALID_ACCESS",
                                "type": "string",
                                "enum": [
                                  "INVALID_ACCESS",
                                  "INVALID_PARAMETER",
                                  "INTERNAL_ERROR",
                                  "SUCCESS"
                                ]
                              },
                              "message": {
                                "description": "More details about the responseCode received.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "responseCode",
                              "message"
                            ]
                          }
                        },
                        "required": [
                          "imei",
                          "BullseyeEnable"
                        ]
                      }
                    },
                    "responseType": {
                      "$ref": "ApiResponseCode"
                    }
                  }
                }
              example: '{"accountNumber":"0844021539-00001","deviceList":[{"imei":"709312034493372","BullseyeEnable":true}]}'
        '400':
          description: Bad request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "400",
                      "Name": "400",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Found, Request will be queued\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Found, Request will be queued"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Found, Request will be queued"
                }
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "401",
                      "Name": "401",
                      "Value": "{\n  \"responseCode\": \"INVALID_ACCESS\",\n  \"message\": \"The access policy denied the resource operation for this user\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_ACCESS",
                    "message": "The access policy denied the resource operation for this user"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_ACCESS",
                  "message": "The access policy denied the resource operation for this user"
                }
        '403':
          description: Forbidden request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "403",
                      "Name": "403",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Certified\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Certified"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Certified"
                }
        '404':
          description: Bad request. Not found.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "404",
                      "Name": "404",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Inactive\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Inactive"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Inactive"
                }
        '409':
          description: Bad request. Conflict state.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "409",
                      "Name": "409",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Service Not Purchased\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Service Not Purchased"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Service Not Purchased"
                }
        '500':
          description: Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "500",
                      "Name": "500",
                      "Value": "{\n  \"responseCode\": \"INTERNAL_ERROR\",\n  \"message\": \"Device is active in several accounts\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INTERNAL_ERROR",
                    "message": "Device is active in several accounts"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INTERNAL_ERROR",
                  "message": "Device is active in several accounts"
                }
  /actions:
    /restart:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Performs a device reboot or a factory reset on the modem portion of the device.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "DeviceResetRequest",
                "title": "DeviceResetRequest",
                "description": "A request to perform a device reboot.",
                "example": {
                  "accountName": "0642233522-00003",
                  "action": "reboot",
                  "devices": [
                    {
                      "id": "355154080648401",
                      "kind": "IMEI"
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "The name of the account. An account name is usually numeric, and must include any leading zeros.",
                    "example": "0642233522-00003",
                    "type": "string"
                  },
                  "action": {
                    "description": "The action you want to take on the device.",
                    "example": "reboot",
                    "type": "string"
                  },
                  "devices": {
                    "description": "The devices for which you want to perform a factory reset or reboot.",
                    "type": "array",
                    "items": {
                      "id": "Device",
                      "title": "Device",
                      "description": "Identifies a particular IoT device.",
                      "example": {
                        "id": "864508030026238",
                        "kind": "IMEI"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Device identifier.",
                          "example": "864508030026238",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Device kind identifier.",
                          "example": "IMEI",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "kind"
                      ]
                    }
                  }
                }
              }
            example: '{"accountName":"0642233522-00003","action":"reboot","devices":[{"id":"355154080648401","kind":"IMEI"}]}'
        responses:
          '200':
            description: Diagnostics observation result.
            body:
              application/json:
                schema: |
                  {
                    "id": "DiagnosticsObservationResult",
                    "title": "DiagnosticsObservationResult",
                    "description": "A success response containing the current status of the request.",
                    "example": {
                      "createdOn": "2019-09-10T19:05:33.33Z",
                      "transactionID": "9c7bb124-11f5-4ff3-8a88-0eec1ba99205",
                      "status": "CANCEL_OBSERVE_PENDING"
                    },
                    "type": "object",
                    "properties": {
                      "transactionID": {
                        "description": "Transaction identifier.",
                        "example": "9c7bb124-11f5-4ff3-8a88-0eec1ba99205",
                        "type": "string"
                      },
                      "status": {
                        "description": "Status of the request.",
                        "example": "CANCEL_OBSERVE_PENDING",
                        "type": "string"
                      },
                      "createdOn": {
                        "description": "The date and time of when this request was created.",
                        "example": "2019-09-10T19:05:33.33Z",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "transactionID",
                      "status",
                      "createdOn"
                    ]
                  }
                example: '{"createdOn":"2019-02-03T06:48:07","transactionID":"9c7bb124-11f5-4ff3-8a88-0eec1ba99205","status":"FACTORY_RESET_PENDING"}'
          '0':
            description: Error response.
            body:
              application/json:
                schema: |
                  {
                    "id": "DeviceDiagnosticsResult",
                    "title": "DeviceDiagnosticsResult",
                    "description": "All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.",
                    "example": {
                      "errorCode": "INTERNAL_SYSTEM_ERROR",
                      "errorMessage": "The system encountered an internal error."
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Simple error code.",
                        "example": "INVALID_PARAMETER",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Detailed error message.",
                        "example": "The request parameter is invalid.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"The type of error, such as INVALID_REQUEST.","errorMessage":"Additional error information."}'
    /query:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Find devices by property values. Returns an array of all matching device resources.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "QuerySubscriptionRequest",
                "title": "QuerySubscriptionRequest",
                "description": "The request body specifies fields and values to match.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "1223334444-00001"
                  },
                  "resourceidentifier": {
                    "id": "dd1682d3-2d80-cefc-f3ee-25154800beff"
                  }
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "$selection": {
                    "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
                    "example": {
                      "addressscheme": "streamawsiot"
                    },
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"resourceidentifier":{"imei":"159495694333703"}}'
        responses:
          '200':
            description: A success response includes an array of all matching devices. Each device includes the full device resource definition.
            body:
              application/json:
                schema: |
                  {
                    "id": "FindDeviceByPropertyResponseList",
                    "title": "FindDeviceByPropertyResponseList",
                    "description": "A success response includes an array of all matching devices. Each device includes the full device resource definition.",
                    "example": {
                      "DeviceProperty": [
                        {
                          "billingaccountid": "1223334444-00001",
                          "createdon": "2018-12-19T06:45:41.496Z",
                          "eventretention": "90",
                          "iccid": "20332350053095597842",
                          "id": "64612cb3-3685-6dad-fd2b-ea1adeb5a269",
                          "imei": "320778042285497",
                          "kind": "ts.device",
                          "lastupdated": "2018-12-19T06:45:41.508Z",
                          "providerid": "8a314f07-849e-6568-e3c1-8381c1f61bfc",
                          "refid": "20332350053095597842",
                          "refidtype": "iccid",
                          "state": "registered",
                          "version": "1.0",
                          "versionid": "b3cdaddb-0359-11e9-aba2-02420a4e1b0a"
                        },
                        {
                          "billingaccountid": "1223334444-00001",
                          "createdon": "2018-12-20T18:42:23.548Z",
                          "eventretention": "90",
                          "iccid": "89148000004197486411",
                          "id": "0481cf95-e3b1-63eb-eb18-43bf717156cb",
                          "imei": "864508030147323",
                          "kind": "ts.device.cHeAssetTracker",
                          "lastupdated": "2018-12-20T18:42:23.688Z",
                          "providerid": "9dfcfa69-a1c8-4eae-8611-b282646bb113",
                          "refid": "864508030147323",
                          "refidtype": "imei",
                          "state": "ready",
                          "version": "1.0",
                          "versionid": "fd835cc9-0486-11e9-a7da-02420a481608"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "DeviceProperty": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "FindDeviceByPropertyResponse",
                          "title": "FindDeviceByPropertyResponse",
                          "description": "Change Configuration resource definition.",
                          "type": "object",
                          "properties": {
                            "billingaccountid": {
                              "description": "Billing account ID of the resource.",
                              "example": "1223334444-00001",
                              "type": "string"
                            },
                            "createdon": {
                              "description": "The date the resource was created.",
                              "example": "2018-12-19T06:45:41.496Z",
                              "type": "string"
                            },
                            "eventretention": {
                              "example": "90",
                              "type": "string"
                            },
                            "iccid": {
                              "description": "Cellular SIM card identifier.",
                              "example": "20332350053095597842",
                              "type": "string"
                            },
                            "id": {
                              "description": "ThingSpace unique ID for the device that was added.",
                              "example": "64612cb3-3685-6dad-fd2b-ea1adeb5a269",
                              "type": "string"
                            },
                            "imei": {
                              "description": "4G hardware device identifier.",
                              "example": "320778042285497",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Identifies the resource kind.",
                              "example": "ts.device",
                              "type": "string"
                            },
                            "lastupdated": {
                              "description": "The date the resource was last updated.",
                              "example": "2018-12-19T06:45:41.508Z",
                              "type": "string"
                            },
                            "providerid": {
                              "description": "The device’s service provider.",
                              "example": "8a314f07-849e-6568-e3c1-8381c1f61bfc",
                              "type": "string"
                            },
                            "refid": {
                              "description": "The value of the refidtype identifier.",
                              "example": "20332350053095597842",
                              "type": "string"
                            },
                            "refidtype": {
                              "description": "The device identifier type used to refer to this device.",
                              "example": "iccid",
                              "type": "string"
                            },
                            "state": {
                              "description": "Service state of the device.",
                              "example": "registered",
                              "type": "string"
                            },
                            "version": {
                              "description": "Version of the underlying schema resource.",
                              "example": "1.0",
                              "type": "string"
                            },
                            "versionid": {
                              "description": "The version of the resource.",
                              "example": "b3cdaddb-0359-11e9-aba2-02420a4e1b0a",
                              "type": "string"
                            }
                          }
                        },
                        "maxItems": 100
                      }
                    }
                  }
                example: '{"DeviceProperty":[{"billingaccountid":"1223334444-00001","createdon":"2018-12-19T06:45:41.496Z","eventretention":"90","iccid":"20332350053095597842","id":"64612cb3-3685-6dad-fd2b-ea1adeb5a269","imei":"320778042285497","kind":"ts.device","lastupdated":"2018-12-19T06:45:41.508Z","providerid":"8a314f07-849e-6568-e3c1-8381c1f61bfc","refid":"20332350053095597842","refidtype":"iccid","state":"registered","version":"1.0","versionid":"b3cdaddb-0359-11e9-aba2-02420a4e1b0a"},{"billingaccountid":"1223334444-00001","createdon":"2018-12-20T18:42:23.548Z","eventretention":"90","iccid":"89148000004197486411","id":"0481cf95-e3b1-63eb-eb18-43bf717156cb","imei":"864508030147323","kind":"ts.device.cHeAssetTracker","lastupdated":"2018-12-20T18:42:23.688Z","providerid":"9dfcfa69-a1c8-4eae-8611-b282646bb113","refid":"864508030147323","refidtype":"imei","state":"ready","version":"1.0","versionid":"fd835cc9-0486-11e9-a7da-02420a481608"}]}'
    /search:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Search for devices by property values. Returns an array of all matching device resources.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "QuerySubscriptionRequest",
                "title": "QuerySubscriptionRequest",
                "description": "The request body specifies fields and values to match.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "1223334444-00001"
                  },
                  "resourceidentifier": {
                    "id": "dd1682d3-2d80-cefc-f3ee-25154800beff"
                  }
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "$selection": {
                    "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
                    "example": {
                      "addressscheme": "streamawsiot"
                    },
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"$selection":{"iccid":"89148000003499233389"}}'
        responses:
          '200':
            description: A success response includes an array of all matching devices.
            body:
              application/json:
                schema: |
                  {
                    "id": "SearchDeviceByPropertyResponseList",
                    "title": "SearchDeviceByPropertyResponseList",
                    "description": "A success response includes an array of all matching devices.",
                    "example": {
                      "DeviceProperty": [
                        {
                          "billingaccountid": "1223334444-00001",
                          "createdon": "2018-12-19T06:45:41.496Z",
                          "eventretention": "90",
                          "iccid": "20332350053095597842",
                          "id": "64612cb3-3685-6dad-fd2b-ea1adeb5a269",
                          "imei": "320778042285497",
                          "kind": "ts.device",
                          "lastupdated": "2018-12-19T06:45:41.508Z",
                          "providerid": "8a314f07-849e-6568-e3c1-8381c1f61bfc",
                          "refid": "20332350053095597842",
                          "refidtype": "iccid",
                          "state": "registered",
                          "version": "1.0",
                          "versionid": "b3cdaddb-0359-11e9-aba2-02420a4e1b0a"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "DeviceProperty": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "SearchDeviceByPropertyResponse",
                          "title": "SearchDeviceByPropertyResponse",
                          "description": "The device identifier and fields to match in the search.",
                          "type": "object",
                          "properties": {
                            "billingaccountid": {
                              "description": "Billing account ID of the resource.",
                              "example": "1223334444-00001",
                              "type": "string"
                            },
                            "createdon": {
                              "description": "The date the resource was created.",
                              "example": "2018-12-19T06:45:41.496Z",
                              "type": "string"
                            },
                            "eventretention": {
                              "example": "90",
                              "type": "string"
                            },
                            "fields": {
                              "id": "Fields1",
                              "title": "Fields1",
                              "type": "object",
                              "properties": {
                                "item": {
                                  "id": "SearchDeviceByPropertyFields",
                                  "title": "SearchDeviceByPropertyFields",
                                  "description": "List of device sensors and their most recently reported values.",
                                  "type": "object",
                                  "properties": {
                                    "acceleration": {
                                      "id": "acceleration",
                                      "title": "acceleration",
                                      "type": "object",
                                      "properties": {
                                        "x": {
                                          "example": "0.0277",
                                          "type": "string"
                                        },
                                        "y": {
                                          "example": "-1.0334",
                                          "type": "string"
                                        },
                                        "z": {
                                          "example": "-0.0134",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "battery": {
                                      "example": "95",
                                      "type": "string"
                                    },
                                    "humidity": {
                                      "example": "29",
                                      "type": "string"
                                    },
                                    "light": {
                                      "example": "150",
                                      "type": "string"
                                    },
                                    "pressure": {
                                      "example": "888",
                                      "type": "string"
                                    },
                                    "signalStrength": {
                                      "example": "-58",
                                      "type": "string"
                                    },
                                    "temperature": {
                                      "example": "19.2",
                                      "type": "string"
                                    },
                                    "DevicePropertylocation": {
                                      "id": "DevicePropertylocation",
                                      "title": "DevicePropertylocation",
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "example": "37.2314796",
                                          "type": "string"
                                        },
                                        "longitude": {
                                          "example": "-119.4692153",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "iccid": {
                              "description": "Cellular SIM card identifier.",
                              "example": "20332350053095597842",
                              "type": "string"
                            },
                            "id": {
                              "description": "ThingSpace unique ID for the device that was added.",
                              "example": "64612cb3-3685-6dad-fd2b-ea1adeb5a269",
                              "type": "string"
                            },
                            "imei": {
                              "description": "4G hardware device identifier.",
                              "example": "320778042285497",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Identifies the resource kind.",
                              "example": "ts.device",
                              "type": "string"
                            },
                            "lastupdated": {
                              "description": "The date the resource was last updated.",
                              "example": "2018-12-19T06:45:41.508Z",
                              "type": "string"
                            },
                            "providerid": {
                              "description": "The device’s service provider.",
                              "example": "8a314f07-849e-6568-e3c1-8381c1f61bfc",
                              "type": "string"
                            },
                            "refid": {
                              "description": "The value of the refidtype identifier.",
                              "example": "20332350053095597842",
                              "type": "string"
                            },
                            "refidtype": {
                              "description": "The device identifier type used to refer to this device.",
                              "example": "iccid",
                              "type": "string"
                            },
                            "state": {
                              "description": "Service state of the device.",
                              "example": "registered",
                              "type": "string"
                            },
                            "version": {
                              "description": "Version of the underlying schema resource.",
                              "example": "1.0",
                              "type": "string"
                            },
                            "versionid": {
                              "description": "The version of the resource.",
                              "example": "b3cdaddb-0359-11e9-aba2-02420a4e1b0a",
                              "type": "string"
                            }
                          }
                        },
                        "maxItems": 100
                      }
                    }
                  }
                example: '{"DeviceProperty":[{"billingaccountid":"1223334444-00001","createdon":"2018-12-19T06:45:41.496Z","eventretention":"90","iccid":"20332350053095597842","id":"64612cb3-3685-6dad-fd2b-ea1adeb5a269","imei":"320778042285497","kind":"ts.device","lastupdated":"2018-12-19T06:45:41.508Z","providerid":"8a314f07-849e-6568-e3c1-8381c1f61bfc","refid":"20332350053095597842","refidtype":"iccid","state":"registered","version":"1.0","versionid":"b3cdaddb-0359-11e9-aba2-02420a4e1b0a"}]}'
    /delete:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Remove a device from a ThingSpace account.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "RemoveDeviceRequest",
                "title": "RemoveDeviceRequest",
                "description": "The request body identifies the device to delete.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "1223334444-00001"
                  },
                  "resourceidentifier": {
                    "imei": "864508030084997"
                  }
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "accountidentifier",
                  "resourceidentifier"
                ]
              }
            example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"resourceidentifier":{"imei":"864508030084997"}}'
        responses:
          '204':
            description: Target deleted successfully.
  /fields:
    /actions/history/search:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Search device event history to find events that match criteria.Sensor readings, configuration changes, and other device data are all stored as events.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "SearchDeviceEventHistoryRequest",
                "title": "SearchDeviceEventHistoryRequest",
                "description": "The device identifier and fields to match in the search.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "1223334444-00001"
                  },
                  "resourceidentifier": {
                    "imei": "864508030084997"
                  },
                  "$selection": {
                    "kind": "ts.event.configuration"
                  },
                  "$limitnumber": 2
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  },
                  "$selection": {
                    "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
                    "example": {
                      "addressscheme": "streamawsiot"
                    },
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "$limitnumber": {
                    "description": "The maximum number of events to include in the response.",
                    "example": 2,
                    "type": "integer",
                    "format": "int32"
                  },
                  "$page": {
                    "description": "The maximum number of events to include in the response.",
                    "type": "string"
                  }
                },
                "required": [
                  "accountidentifier",
                  "resourceidentifier"
                ]
              }
            example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"resourceidentifier":{"imei":"864508030084997"},"$selection":{"kind":"ts.event.configuration"},"$limitnumber":2}'
        responses:
          '200':
            description: A success response includes an array of all matching devices.
            body:
              application/json:
                schema: |
                  {
                    "id": "SearchDeviceEventHistoryResponseList",
                    "title": "SearchDeviceEventHistoryResponseList",
                    "description": "A success response includes an array of all matching events.",
                    "example": {
                      "SearchDeviceEventHistory": [
                        {
                          "action": "set",
                          "createdon": "2019-02-21T02:05:25.270417481Z",
                          "deviceid": "8461f530-2e31-6e87-e357-6c38251d4d01",
                          "id": "e521b8ae-440d-6cc1-f687-7c80e085ff29",
                          "kind": "ts.event.configuration",
                          "lastupdated": "2019-02-21T02:05:25.394230017Z",
                          "name": "SetConfigurationReq",
                          "state": "update",
                          "tagids": [
                            "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
                            "cd81ed16-18ae-6c7d-eaba-2883b0395387"
                          ],
                          "transactionid": "c7a0a8cf-6856-4733-93ea-69913650e4ca",
                          "version": "1.0",
                          "versionid": "270e4820-357d-11e9-9d6c-02420a470c06"
                        },
                        {
                          "action": "set",
                          "createdon": "2019-02-21T01:58:45.163Z",
                          "deviceid": "8461f530-2e31-6e87-e357-6c38251d4d01",
                          "id": "25819e96-c4f2-6545-fb68-0e1d9662359f",
                          "kind": "ts.event.configuration",
                          "lastupdated": "2019-02-21T01:58:45.163Z",
                          "state": "pending",
                          "tagids": [
                            "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
                            "cd81ed16-18ae-6c7d-eaba-2883b0395387"
                          ],
                          "transactionid": "c7a0a8cf-6856-4733-93ea-69913650e4ca",
                          "version": "1.0",
                          "versionid": "387fe2fe-357c-11e9-ae40-02420a49140a"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "SearchDeviceEventHistory": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "SearchDeviceResponse",
                          "title": "SearchDeviceResponse",
                          "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
                          "type": "object",
                          "properties": {
                            "action": {
                              "description": "The action requested in this event; “change” for device configuration changes.",
                              "example": "set",
                              "type": "string"
                            },
                            "createdon": {
                              "description": "The date and time of the change request.",
                              "example": "2019-02-21T02:05:25.270417481Z",
                              "type": "string"
                            },
                            "deviceid": {
                              "description": "The device’s ThingSpace UUID.",
                              "example": "8461f530-2e31-6e87-e357-6c38251d4d01",
                              "type": "string"
                            },
                            "fields": {
                              "id": "Fields2",
                              "title": "Fields2",
                              "description": "List of fields affected by the event.",
                              "type": "object",
                              "properties": {
                                "temperature": {
                                  "example": "18.4",
                                  "type": "string"
                                }
                              }
                            },
                            "id": {
                              "description": "The unique ID of this ts.event.configuration event.",
                              "example": "e521b8ae-440d-6cc1-f687-7c80e085ff29",
                              "type": "string"
                            },
                            "kind": {
                              "description": "The kind of the ThingSpace resource that is being reported; “ts.event.configuration” for device configuration changes.",
                              "example": "ts.event.configuration",
                              "type": "string"
                            },
                            "lastupdated": {
                              "description": "The date and time that the event was last updated.",
                              "example": "2019-02-21T02:05:25.394230017Z",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the event",
                              "example": "SetConfigurationReq",
                              "type": "string"
                            },
                            "state": {
                              "description": "The current status of the request.",
                              "example": "update",
                              "type": "string"
                            },
                            "tagids": {
                              "description": "UUIDs of tag resources that are applied to this device.",
                              "example": [
                                "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
                                "cd81ed16-18ae-6c7d-eaba-2883b0395387"
                              ],
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "transactionid": {
                              "description": "transaction id",
                              "example": "c7a0a8cf-6856-4733-93ea-69913650e4ca",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version of the resource.",
                              "example": "1.0",
                              "type": "string"
                            },
                            "versionid": {
                              "description": "The version of the resource.",
                              "example": "270e4820-357d-11e9-9d6c-02420a470c06",
                              "type": "string"
                            }
                          }
                        },
                        "maxItems": 100
                      }
                    }
                  }
                example: '{"SearchDeviceEventHistory":[{"action":"set","createdon":"2019-02-21T02:05:25.270417481Z","deviceid":"8461f530-2e31-6e87-e357-6c38251d4d01","id":"e521b8ae-440d-6cc1-f687-7c80e085ff29","kind":"ts.event.configuration","lastupdated":"2019-02-21T02:05:25.394230017Z","name":"SetConfigurationReq","state":"update","tagids":["4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4","cd81ed16-18ae-6c7d-eaba-2883b0395387"],"transactionid":"c7a0a8cf-6856-4733-93ea-69913650e4ca","version":"1.0","versionid":"270e4820-357d-11e9-9d6c-02420a470c06"},{"action":"set","createdon":"2019-02-21T01:58:45.163Z","deviceid":"8461f530-2e31-6e87-e357-6c38251d4d01","id":"25819e96-c4f2-6545-fb68-0e1d9662359f","kind":"ts.event.configuration","lastupdated":"2019-02-21T01:58:45.163Z","state":"pending","tagids":["4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4","cd81ed16-18ae-6c7d-eaba-2883b0395387"],"transactionid":"c7a0a8cf-6856-4733-93ea-69913650e4ca","version":"1.0","versionid":"387fe2fe-357c-11e9-ae40-02420a49140a"}]}'
    /{fieldname}/actions/history:
      uriParameters:
        fieldname:
          description: The name of the sensor.
          type: string
          required: true
          displayName: fieldname
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Returns the readings of a specified sensor, with the most recent reading first. Sensor readings are stored as events; this request an array of events.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "SearchSensorHistoryRequest",
                "title": "SearchSensorHistoryRequest",
                "description": "The device identifier and fields to match in the search.",
                "example": {
                  "accountidentifier": {
                    "billingaccountid": "1223334444-00001"
                  },
                  "resourceidentifier": {
                    "imei": "864508030084997"
                  },
                  "$limitnumber": 2
                },
                "type": "object",
                "properties": {
                  "accountidentifier": {
                    "id": "AccountIdentifier",
                    "title": "AccountIdentifier",
                    "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
                    "example": {
                      "billingaccountid": "0000000000-00001"
                    },
                    "type": "object",
                    "properties": {
                      "billingaccountid": {
                        "example": "1223334444-00001",
                        "type": "string"
                      }
                    }
                  },
                  "resourceidentifier": {
                    "id": "ResourceIdentifier",
                    "title": "ResourceIdentifier",
                    "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
                    "example": {
                      "id": "2e61a17d-8fd1-6816-e995-e4c2528bf535"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Target ID.",
                        "example": "dd1682d3-2d80-cefc-f3ee-25154800beff",
                        "type": "string"
                      },
                      "imei": {
                        "description": "Device IMEI.",
                        "type": "string"
                      }
                    }
                  },
                  "$limitnumber": {
                    "description": "The maximum number of events to include in the response.",
                    "example": 2,
                    "type": "integer",
                    "format": "int32"
                  },
                  "$page": {
                    "description": "The maximum number of events to include in the response.",
                    "type": "string"
                  }
                },
                "required": [
                  "accountidentifier",
                  "resourceidentifier"
                ]
              }
            example: '{"accountidentifier":{"billingaccountid":"1223334444-00001"},"resourceidentifier":{"imei":"864508030084997"},"$limitnumber":2}'
        responses:
          '200':
            description: A success response includes an array of all matching devices.
            body:
              application/json:
                schema: |
                  {
                    "id": "SearchSensorHistoryResponseList",
                    "title": "SearchSensorHistoryResponseList",
                    "description": "A success response includes an array of all matching events.",
                    "example": {
                      "SearchSensorHistory": [
                        {
                          "action": "update",
                          "createdon": "2019-02-22T04:05:26Z",
                          "deviceid": "8461f530-2e31-6e87-e357-6c38251d4d01",
                          "fields": {
                            "temperature": "18.4"
                          },
                          "id": "4521b7a7-7de1-6e68-f020-1345ef3b764a",
                          "kind": "ts.event",
                          "lastupdated": "2019-02-22T04:05:49.786Z",
                          "state": "update",
                          "tagids": [
                            "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
                            "cd81ed16-18ae-6c7d-eaba-2883b0395387"
                          ],
                          "transactionid": "864508030084997-OnBoard-c05f946c-3f5c-4527-b4d0-5aca256fc3dd",
                          "version": "1.0",
                          "versionid": "238addb9-3657-11e9-8848-02420a951f13"
                        },
                        {
                          "action": "update",
                          "createdon": "2019-02-22T03:05:26Z",
                          "deviceid": "8461f530-2e31-6e87-e357-6c38251d4d01",
                          "fields": {
                            "temperature": "19.0"
                          },
                          "id": "05b1ea7b-4bf2-6af6-ea8b-414595f2c3e9",
                          "kind": "ts.event",
                          "lastupdated": "2019-02-22T03:05:48.483Z",
                          "state": "update",
                          "tagids": [
                            "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
                            "cd81ed16-18ae-6c7d-eaba-2883b0395387"
                          ],
                          "transactionid": "864508030084997-OnBoard-5f71f47d-4464-4f69-a3ee-5c243f0ef5b8",
                          "version": "1.0",
                          "versionid": "c0ffa4b5-364e-11e9-a3ee-02420a8c0d14"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "SearchSensorHistory": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "id": "SearchDeviceResponse",
                          "title": "SearchDeviceResponse",
                          "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
                          "type": "object",
                          "properties": {
                            "action": {
                              "description": "The action requested in this event; “change” for device configuration changes.",
                              "example": "set",
                              "type": "string"
                            },
                            "createdon": {
                              "description": "The date and time of the change request.",
                              "example": "2019-02-21T02:05:25.270417481Z",
                              "type": "string"
                            },
                            "deviceid": {
                              "description": "The device’s ThingSpace UUID.",
                              "example": "8461f530-2e31-6e87-e357-6c38251d4d01",
                              "type": "string"
                            },
                            "fields": {
                              "id": "Fields2",
                              "title": "Fields2",
                              "description": "List of fields affected by the event.",
                              "type": "object",
                              "properties": {
                                "temperature": {
                                  "example": "18.4",
                                  "type": "string"
                                }
                              }
                            },
                            "id": {
                              "description": "The unique ID of this ts.event.configuration event.",
                              "example": "e521b8ae-440d-6cc1-f687-7c80e085ff29",
                              "type": "string"
                            },
                            "kind": {
                              "description": "The kind of the ThingSpace resource that is being reported; “ts.event.configuration” for device configuration changes.",
                              "example": "ts.event.configuration",
                              "type": "string"
                            },
                            "lastupdated": {
                              "description": "The date and time that the event was last updated.",
                              "example": "2019-02-21T02:05:25.394230017Z",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the event",
                              "example": "SetConfigurationReq",
                              "type": "string"
                            },
                            "state": {
                              "description": "The current status of the request.",
                              "example": "update",
                              "type": "string"
                            },
                            "tagids": {
                              "description": "UUIDs of tag resources that are applied to this device.",
                              "example": [
                                "4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4",
                                "cd81ed16-18ae-6c7d-eaba-2883b0395387"
                              ],
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "transactionid": {
                              "description": "transaction id",
                              "example": "c7a0a8cf-6856-4733-93ea-69913650e4ca",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version of the resource.",
                              "example": "1.0",
                              "type": "string"
                            },
                            "versionid": {
                              "description": "The version of the resource.",
                              "example": "270e4820-357d-11e9-9d6c-02420a470c06",
                              "type": "string"
                            }
                          }
                        },
                        "maxItems": 100
                      }
                    }
                  }
                example: '{"SearchSensorHistory":[{"action":"update","createdon":"2019-02-22T04:05:26Z","deviceid":"8461f530-2e31-6e87-e357-6c38251d4d01","fields":{"temperature":"18.4"},"id":"4521b7a7-7de1-6e68-f020-1345ef3b764a","kind":"ts.event","lastupdated":"2019-02-22T04:05:49.786Z","state":"update","tagids":["4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4","cd81ed16-18ae-6c7d-eaba-2883b0395387"],"transactionid":"864508030084997-OnBoard-c05f946c-3f5c-4527-b4d0-5aca256fc3dd","version":"1.0","versionid":"238addb9-3657-11e9-8848-02420a951f13"},{"action":"update","createdon":"2019-02-22T03:05:26Z","deviceid":"8461f530-2e31-6e87-e357-6c38251d4d01","fields":{"temperature":"19.0"},"id":"05b1ea7b-4bf2-6af6-ea8b-414595f2c3e9","kind":"ts.event","lastupdated":"2019-02-22T03:05:48.483Z","state":"update","tagids":["4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4","cd81ed16-18ae-6c7d-eaba-2883b0395387"],"transactionid":"864508030084997-OnBoard-5f71f47d-4464-4f69-a3ee-5c243f0ef5b8","version":"1.0","versionid":"c0ffa4b5-364e-11e9-a3ee-02420a8c0d14"}]}'
/reports:
  /{account}:
    /status/{upgradeStatus}/index/{startIndex}:
      uriParameters:
        upgradeStatus:
          description: The status of the upgrades that you want to retrieve.
          example: RequestPending
          required: true
          displayName: upgradeStatus
          enum:
          - RequestPending
          - Queued
          - RequestFailed
          - InProgress
          - Finished
          - UpgradeFailed
        startIndex:
          description: The zero-based number of the first record to return. Set startIndex=0 for the first request. If `hasMoreFlag`=true in the response, use the `lastSeenUpgradeId` value from the response as the startIndex in the next request.
          type: string
          required: true
          displayName: startIndex
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Returns a list of all upgrades with a specified status.
        responses:
          '200':
            description: A list of all upgrades with a specified status.
            body:
              application/json:
                schema: |
                  {
                    "id": "UpgradeListQueryResult",
                    "title": "UpgradeListQueryResult",
                    "description": "Upgrade information.",
                    "type": "object",
                    "properties": {
                      "hasMoreFlag": {
                        "description": "True if there are more devices to retrieve.",
                        "example": false,
                        "type": "boolean"
                      },
                      "lastSeenUpgradeId": {
                        "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "reportList": {
                        "description": "Array of upgrade objects with the specified status.",
                        "example": [
                          {
                            "id": "3ac8c863-bde7-4f41-878e-dd5473e973bb",
                            "accountName": "0242078689-00001",
                            "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
                            "firmwareTo": "VerizonFirmwareVersion-02",
                            "startDate": "2018-04-01",
                            "status": "Queued",
                            "deviceList": [
                              {
                                "deviceId": "900000000000002",
                                "status": "Device Accepted",
                                "resultReason": "success"
                              },
                              {
                                "deviceId": "900000000000003",
                                "status": "Device Accepted",
                                "resultReason": "success"
                              }
                            ]
                          },
                          {
                            "id": "efb8206b-2e88-4fdb-886d-31d8e87cd95f",
                            "accountName": "0242078689-00001",
                            "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
                            "firmwareTo": "VerizonFirmwareVersion-02",
                            "startDate": "2018-04-01T16:03:00.000Z",
                            "status": "Queued",
                            "deviceList": [
                              {
                                "deviceId": "900000000000008",
                                "status": "Device Accepted",
                                "resultReason": "success"
                              }
                            ]
                          }
                        ],
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "id": "FirmwareUpgrade",
                          "title": "FirmwareUpgrade",
                          "description": "Array of upgrade objects with the specified status.",
                          "example": {
                            "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                            "accountName": "0402196254-00001",
                            "firmwareName": "FOTA_Verizon_Model-A_01To02_HF",
                            "firmwareTo": "VerizonFirmwareVersion-02",
                            "startDate": "2018-04-01",
                            "status": "Queued",
                            "deviceList": [
                              {
                                "deviceId": "900000000000002",
                                "status": "Device Accepted",
                                "resultReason": "success"
                              },
                              {
                                "deviceId": "900000000000003",
                                "status": "Device Accepted",
                                "resultReason": "success"
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The unique identifier for this upgrade.",
                              "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                              "type": "string"
                            },
                            "accountName": {
                              "description": "Account identifier in \"##########-#####\".",
                              "example": "0402196254-00001",
                              "type": "string"
                            },
                            "firmwareName": {
                              "description": "The name of the firmware image that will be used for the upgrade.",
                              "example": "FOTA_Verizon_Model-A_01To02_HF",
                              "type": "string"
                            },
                            "firmwareTo": {
                              "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
                              "example": "VerizonFirmwareVersion-02",
                              "type": "string"
                            },
                            "startDate": {
                              "description": "The intended start date for the upgrade.",
                              "example": "2018-04-01",
                              "type": "string"
                            },
                            "status": {
                              "description": "The current status of the upgrade.",
                              "example": "Queued",
                              "type": "string"
                            },
                            "deviceList": {
                              "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
                              "example": [
                                {
                                  "deviceId": "900000000000002",
                                  "status": "Device Accepted",
                                  "resultReason": "success"
                                },
                                {
                                  "deviceId": "900000000000003",
                                  "status": "Device Accepted",
                                  "resultReason": "success"
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "FirmwareUpgradeDeviceListItem",
                                "title": "FirmwareUpgradeDeviceListItem",
                                "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
                                "example": {
                                  "deviceId": "900000000000002",
                                  "status": "Device Accepted",
                                  "resultReason": "success"
                                },
                                "type": "object",
                                "properties": {
                                  "deviceId": {
                                    "description": "Device IMEI.",
                                    "example": "900000000000002",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "The status of the upgrade for this device.",
                                    "example": "Device Accepted",
                                    "type": "string"
                                  },
                                  "resultReason": {
                                    "description": "Additional details about the status. Not included when status='Request Pending.'",
                                    "example": "success",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV1Result",
                    "title": "FotaV1Result",
                    "description": "Response in case of any errors.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error response code.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Description of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /devices/{deviceId}:
      uriParameters:
        deviceId:
          description: The IMEI of the device.
          type: string
          example: '900000000000001'
          required: true
          displayName: deviceId
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: The endpoint allows user to get software upgrade history of a device based on device IMEI.
        responses:
          '200':
            description: Return array of upgrades.
            body:
              application/json:
                schema: |
                  {
                    "description": "Array of software upgrade objects with the specified status.",
                    "example": [
                      {
                        "deviceId": "990013907835573",
                        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                        "accountName": "0402196254-00001",
                        "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                        "startDate": "2018-03-05",
                        "status": "UpgradeSuccess",
                        "reason": "success"
                      },
                      {
                        "deviceId": "990013907835573",
                        "id": "50d5d639-aaca-3ca7-7713-958ac83b84ae",
                        "accountName": "0402196254-00001",
                        "softwareName": "VerizonSoftwareVersion-01",
                        "startDate": "2018-02-20",
                        "status": "UpgradeSuccess",
                        "reason": "success"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "DeviceSoftwareUpgrade",
                      "title": "DeviceSoftwareUpgrade",
                      "description": "Array of software upgrade objects with the specified status.",
                      "example": {
                        "deviceId": "990013907835573",
                        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                        "accountName": "0402196254-00001",
                        "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                        "startDate": "2018-03-05",
                        "status": "UpgradeSuccess",
                        "reason": "success"
                      },
                      "type": "object",
                      "properties": {
                        "deviceId": {
                          "description": "Device identifier.",
                          "example": "990013907835573",
                          "type": "string"
                        },
                        "id": {
                          "description": "Upgrade identifier.",
                          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account identifier.",
                          "example": "0402196254-00001",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "Software upgrade start date.",
                          "example": "2018-03-05",
                          "type": "string",
                          "format": "date"
                        },
                        "status": {
                          "description": "Software upgrade status.",
                          "example": "UpgradeSuccess",
                          "type": "string"
                        },
                        "reason": {
                          "description": "Software upgrade result reason.",
                          "example": "success",
                          "type": "string"
                        },
                        "softwareName": {
                          "description": "Software name.",
                          "example": "FOTA_Verizon_Model-A_02To03_HF",
                          "type": "string"
                        }
                      },
                      "required": [
                        "deviceId",
                        "id",
                        "accountName",
                        "startDate",
                        "status",
                        "reason"
                      ]
                    }
                  }
                example: '[{"deviceId":"990013907835573","id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","accountName":"0402196254-00001","softwareName":"FOTA_Verizon_Model-A_02To03_HF","startDate":"2018-03-05","status":"UpgradeSuccess","reason":"success"},{"deviceId":"990013907835573","id":"50d5d639-aaca-3ca7-7713-958ac83b84ae","accountName":"0402196254-00001","softwareName":"VerizonSoftwareVersion-01","startDate":"2018-02-20","status":"UpgradeSuccess","reason":"success"}]'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /campaigns:
      uriParameters: {}
      /{campaignId}/devices:
        uriParameters:
          campaignId:
            description: Campaign identifier.
            type: string
            example: 60b5d639-ccdc-4db8-8824-069bd94c95bf
            required: true
            displayName: campaignId
        get:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: The report endpoint allows user to get the full list of device of a campaign.
          queryParameters:
            lastSeenDeviceId:
              description: Last seen device identifier.
              type: string
              example: 15-digit IMEI
              required: false
              displayName: lastSeenDeviceId
          responses:
            '200':
              description: Return list of campaign history.
              body:
                application/json:
                  schema: |
                    {
                      "id": "V2CampaignDevice",
                      "title": "V2CampaignDevice",
                      "description": "List of devices in a campaign.",
                      "example": {
                        "totalDevice": 1148,
                        "hasMoreData": true,
                        "lastSeenDeviceId": "15-digit IMEI",
                        "maxPageSize": 1000,
                        "deviceList": [
                          {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradeSuccess",
                            "resultReason": "DownloadInstallSucceeded"
                          },
                          {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradeSuccess",
                            "resultReason": "DownloadInstallSucceeded"
                          },
                          {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradeSuccess",
                            "resultReason": "DownloadInstallSucceeded"
                          }
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "hasMoreData": {
                          "description": "Has more report flag.",
                          "example": true,
                          "type": "boolean"
                        },
                        "maxPageSize": {
                          "description": "Maximum page size.",
                          "example": 1000,
                          "type": "integer",
                          "format": "int32"
                        },
                        "deviceList": {
                          "description": "List of devices with id in IMEI.",
                          "example": [
                            {
                              "deviceId": "15-digit IMEI",
                              "status": "UpgradeSuccess",
                              "resultReason": "DownloadInstallSucceeded"
                            },
                            {
                              "deviceId": "15-digit IMEI",
                              "status": "UpgradeSuccess",
                              "resultReason": "DownloadInstallSucceeded"
                            },
                            {
                              "deviceId": "15-digit IMEI",
                              "status": "UpgradeSuccess",
                              "resultReason": "DownloadInstallSucceeded"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "V2DeviceStatus",
                            "title": "V2DeviceStatus",
                            "description": "Device with id in IMEI.",
                            "example": {
                              "deviceId": "990000473475967",
                              "status": "Failure",
                              "resultReason": "Device does not exist."
                            },
                            "type": "object",
                            "properties": {
                              "deviceId": {
                                "description": "Device IMEI.",
                                "example": "990000473475967",
                                "type": "string"
                              },
                              "status": {
                                "description": "Success or failure.",
                                "example": "Failure",
                                "type": "string"
                              },
                              "resultReason": {
                                "description": "Result reason.",
                                "example": "Device does not exist.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "deviceId",
                              "status"
                            ]
                          }
                        },
                        "totalDevice": {
                          "description": "Total device count.",
                          "example": 1148,
                          "type": "integer",
                          "format": "int32"
                        },
                        "lastSeenDeviceId": {
                          "description": "Device identifier.",
                          "example": "15-digit IMEI",
                          "type": "string"
                        }
                      },
                      "required": [
                        "hasMoreData",
                        "maxPageSize",
                        "deviceList"
                      ]
                    }
                  example: '{"totalDevice":1148,"hasMoreData":true,"lastSeenDeviceId":"15-digit IMEI","maxPageSize":1000,"deviceList":[{"deviceId":"15-digit IMEI","status":"UpgradeSuccess","resultReason":"DownloadInstallSucceeded"},{"deviceId":"15-digit IMEI","status":"UpgradeSuccess","resultReason":"DownloadInstallSucceeded"},{"deviceId":"15-digit IMEI","status":"UpgradeSuccess","resultReason":"DownloadInstallSucceeded"}]}'
            '400':
              description: Unexpected error.
              body:
                application/json:
                  schema: |
                    {
                      "id": "FotaV2Result",
                      "title": "FotaV2Result",
                      "description": "Response for error cases.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "errorCode",
                        "errorMessage"
                      ]
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: The report endpoint allows user to get campaign history of an account for specified status.
        queryParameters:
          campaignStatus:
            description: Status of the campaign.
            type: string
            required: true
            displayName: campaignStatus
          lastSeenCampaignId:
            description: Last seen campaign Id.
            type: string
            example: 60b5d639-ccdc-4db8-8824-069bd94c95bf
            required: false
            displayName: lastSeenCampaignId
        responses:
          '200':
            description: Return list of campaign history.
            body:
              application/json:
                schema: |
                  {
                    "id": "V2CampaignHistory",
                    "title": "V2CampaignHistory",
                    "description": "Campaign history details.",
                    "example": {
                      "hasMoreData": true,
                      "lastSeenCampaignId": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                      "campaignList": [
                        {
                          "accountName": "0402196254-00001",
                          "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                          "campaignName": "FOTA_Verizon_Upgrade",
                          "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                          "distributionType": "HTTP",
                          "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                          "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                          "make": "Verizon",
                          "model": "Model-A",
                          "startDate": "2020-08-21",
                          "endDate": "2020-08-22",
                          "downloadAfterDate": "2020-08-21",
                          "downloadTimeWindowList": [
                            {
                              "startTime": 20,
                              "endTime": 21
                            }
                          ],
                          "installAfterDate": "2020-08-21",
                          "installTimeWindowList": [
                            {
                              "startTime": 22,
                              "endTime": 23
                            }
                          ],
                          "status": "CampaignEnded"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "hasMoreData": {
                        "description": "Has more report flag.",
                        "example": true,
                        "type": "boolean"
                      },
                      "campaignList": {
                        "description": "Software upgrade list.",
                        "example": [
                          {
                            "accountName": "0402196254-00001",
                            "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                            "campaignName": "FOTA_Verizon_Upgrade",
                            "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                            "distributionType": "HTTP",
                            "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                            "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                            "make": "Verizon",
                            "model": "Model-A",
                            "startDate": "2020-08-21",
                            "endDate": "2020-08-22",
                            "downloadAfterDate": "2020-08-21",
                            "downloadTimeWindowList": [
                              {
                                "startTime": 20,
                                "endTime": 21
                              }
                            ],
                            "installAfterDate": "2020-08-21",
                            "installTimeWindowList": [
                              {
                                "startTime": 22,
                                "endTime": 23
                              }
                            ],
                            "status": "CampaignEnded"
                          }
                        ],
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "id": "V2CampaignMetaInfo",
                          "title": "V2CampaignMetaInfo",
                          "description": "Campaign and campaign details.",
                          "example": {
                            "accountName": "0402196254-00001",
                            "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                            "campaignName": "FOTA_Verizon_Upgrade",
                            "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                            "distributionType": "HTTP",
                            "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                            "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                            "make": "Verizon",
                            "model": "Model-A",
                            "startDate": "2020-08-21",
                            "endDate": "2020-08-22",
                            "downloadAfterDate": "2020-08-21",
                            "downloadTimeWindowList": [
                              {
                                "startTime": 20,
                                "endTime": 21
                              }
                            ],
                            "installAfterDate": "2020-08-21",
                            "installTimeWindowList": [
                              {
                                "startTime": 22,
                                "endTime": 23
                              }
                            ],
                            "status": "CampaignEnded"
                          },
                          "type": "object",
                          "properties": {
                            "accountName": {
                              "description": "Account identifier.",
                              "example": "0402196254-00001",
                              "type": "string"
                            },
                            "id": {
                              "description": "Campaign identifier.",
                              "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                              "type": "string"
                            },
                            "softwareName": {
                              "description": "Software name.",
                              "example": "FOTA_Verizon_Model-A_02To03_HF",
                              "type": "string"
                            },
                            "distributionType": {
                              "description": "LWM2M, OMD-DM or HTTP.",
                              "example": "HTTP",
                              "type": "string"
                            },
                            "softwareFrom": {
                              "description": "Old software name.",
                              "example": "FOTA_Verizon_Model-A_00To01_HF",
                              "type": "string"
                            },
                            "softwareTo": {
                              "description": "New software name.",
                              "example": "FOTA_Verizon_Model-A_02To03_HF",
                              "type": "string"
                            },
                            "make": {
                              "description": "Applicable make.",
                              "example": "Verizon",
                              "type": "string"
                            },
                            "model": {
                              "description": "Applicable model.",
                              "example": "Model-A",
                              "type": "string"
                            },
                            "startDate": {
                              "description": "Campaign start date.",
                              "example": "2020-08-21",
                              "type": "string",
                              "format": "date"
                            },
                            "endDate": {
                              "description": "Campaign end date.",
                              "example": "2020-08-21",
                              "type": "string",
                              "format": "date"
                            },
                            "status": {
                              "description": "Software upgrade status.",
                              "example": "CampaignEnded",
                              "type": "string"
                            },
                            "campaignName": {
                              "description": "Campaign name.",
                              "example": "FOTA_Verizon_Upgrade",
                              "type": "string"
                            },
                            "downloadAfterDate": {
                              "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
                              "example": "2020-08-21",
                              "type": "string",
                              "format": "date"
                            },
                            "downloadTimeWindowList": {
                              "description": "List of allowed download time windows.",
                              "example": [
                                {
                                  "startTime": 20,
                                  "endTime": 21
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "V2TimeWindow",
                                "title": "V2TimeWindow",
                                "description": "Allowed start and end time windows.",
                                "example": {
                                  "startTime": 20,
                                  "endTime": 21
                                },
                                "type": "object",
                                "properties": {
                                  "startTime": {
                                    "description": "Start hour in range [0..23], current hour >= startTime.",
                                    "example": 20,
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "endTime": {
                                    "description": "End hour in range [1..24], current hour < endTime.",
                                    "example": 21,
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ]
                              }
                            },
                            "installAfterDate": {
                              "description": "Client will install package after date. If null, client will install as soon as possible.",
                              "example": "2020-08-21",
                              "type": "string",
                              "format": "date"
                            },
                            "installTimeWindowList": {
                              "description": "List of allowed install time windows.",
                              "example": [
                                {
                                  "startTime": 22,
                                  "endTime": 23
                                }
                              ],
                              "type": "array",
                              "items": {
                                "$ref": "V2TimeWindow"
                              }
                            }
                          },
                          "required": [
                            "accountName",
                            "id",
                            "softwareName",
                            "distributionType",
                            "softwareFrom",
                            "softwareTo",
                            "make",
                            "model",
                            "startDate",
                            "endDate",
                            "status"
                          ]
                        }
                      },
                      "lastSeenCampaignId": {
                        "description": "Campaign identifier.",
                        "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                        "type": "string"
                      }
                    },
                    "required": [
                      "hasMoreData",
                      "campaignList"
                    ]
                  }
                example: '{"hasMoreData":true,"lastSeenCampaignId":"60b5d639-ccdc-4db8-8824-069bd94c95bf","campaignList":[{"accountName":"0402196254-00001","id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","campaignName":"FOTA_Verizon_Upgrade","softwareName":"FOTA_Verizon_Model-A_02To03_HF","distributionType":"HTTP","softwareFrom":"FOTA_Verizon_Model-A_00To01_HF","softwareTo":"FOTA_Verizon_Model-A_02To03_HF","make":"Verizon","model":"Model-A","startDate":"2020-08-21","endDate":"2020-08-22","downloadAfterDate":"2020-08-21","downloadTimeWindowList":[{"startTime":20,"endTime":21}],"installAfterDate":"2020-08-21","installTimeWindowList":[{"startTime":22,"endTime":23}],"status":"CampaignEnded"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /{acc}:
    /firmware/campaigns:
      uriParameters: {}
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Retrieve a list of campaigns for an account that have a specified campaign status.
        queryParameters:
          campaignStatus:
            description: Campaign status.
            example: CampaignRequestPending
            required: true
            displayName: campaignStatus
            enum:
            - CampaignRequestPending
            - CampaignRequestFailed
            - CampaignRequestQueued
            - CampaignCancelled
            - CampaignAborted
            - CampaignFailed
            - CampaignScheduled
            - CampaignEnded
          lastSeenCampaignId:
            description: Last seen campaign Id.
            type: string
            example: 60b5d639-ccdc-4db8-8824-069bd94c95bf
            required: false
            displayName: lastSeenCampaignId
        responses:
          '200':
            description: Return array of campaign history.
            body:
              application/json:
                schema: |
                  {
                    "id": "V3CampaignHistory",
                    "title": "V3CampaignHistory",
                    "description": "Campaign history.",
                    "example": {
                      "hasMoreData": true,
                      "lastSeenCampaignId": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                      "campaignList": [
                        {
                          "accountName": "0000123456-00001",
                          "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                          "campaignName": "FOTA_Verizon_Upgrade",
                          "make": "Verizon",
                          "model": "Model-A",
                          "status": "CampaignEnded",
                          "startDate": "2020-08-21",
                          "endDate": "2020-08-22",
                          "campaignTimeWindowList": [
                            {
                              "startTime": 20,
                              "endTime": 21
                            }
                          ]
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "hasMoreData": {
                        "description": "Has more report flag?",
                        "example": true,
                        "type": "boolean"
                      },
                      "campaignList": {
                        "description": "Firmware upgrade list.",
                        "example": [
                          {
                            "accountName": "0000123456-00001",
                            "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                            "campaignName": "FOTA_Verizon_Upgrade",
                            "firmwareName": "FOTA_Verizon_Model-A_02To03_HF",
                            "firmwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                            "firmwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                            "make": "Verizon",
                            "model": "Model-A",
                            "status": "CampaignEnded",
                            "startDate": "2020-08-21",
                            "endDate": "2020-08-22",
                            "campaignTimeWindowList": [
                              {
                                "startTime": 20,
                                "endTime": 21
                              }
                            ]
                          }
                        ],
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "id": "V3CampaignMetaInfo",
                          "title": "V3CampaignMetaInfo",
                          "description": "Campaign and campaign details.",
                          "example": {
                            "accountName": "0000123456-00001",
                            "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                            "campaignName": "FOTA_Verizon_Upgrade",
                            "firmwareName": "FOTA_Verizon_Model-A_02To03_HF",
                            "firmwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                            "firmwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                            "make": "Verizon",
                            "model": "Model-A",
                            "status": "CampaignEnded",
                            "startDate": "2020-08-21",
                            "endDate": "2020-08-22",
                            "campaignTimeWindowList": [
                              {
                                "startTime": 20,
                                "endTime": 21
                              }
                            ]
                          },
                          "type": "object",
                          "properties": {
                            "accountName": {
                              "description": "Account identifier.",
                              "example": "0000123456-00001",
                              "type": "string"
                            },
                            "id": {
                              "description": "Campaign identifier.",
                              "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                              "type": "string"
                            },
                            "make": {
                              "description": "Device make.",
                              "example": "Verizon",
                              "type": "string"
                            },
                            "model": {
                              "description": "Device model.",
                              "example": "Model-A",
                              "type": "string"
                            },
                            "startDate": {
                              "description": "Campaign start date.",
                              "example": "2020-08-21",
                              "type": "string",
                              "format": "date"
                            },
                            "endDate": {
                              "description": "Campaign end date.",
                              "example": "2020-08-22",
                              "type": "string",
                              "format": "date"
                            },
                            "status": {
                              "description": "Firmware upgrade status.",
                              "example": "CampaignEnded",
                              "type": "string"
                            },
                            "campaignName": {
                              "description": "Campaign name.",
                              "example": "FOTA_Verizon_Upgrade",
                              "type": "string"
                            },
                            "firmwareName": {
                              "description": "Firmware name.",
                              "example": "FOTA_Verizon_Model-A_02To03_HF",
                              "type": "string"
                            },
                            "firmwareFrom": {
                              "description": "Old firmware version.",
                              "example": "FOTA_Verizon_Model-A_00To01_HF",
                              "type": "string"
                            },
                            "firmwareTo": {
                              "description": "New software version.",
                              "example": "FOTA_Verizon_Model-A_02To03_HF",
                              "type": "string"
                            },
                            "protocol": {
                              "title": "CampaignMetaInfoProtocol",
                              "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM.",
                              "example": "LWM2M",
                              "type": "string",
                              "enum": [
                                "LWM2M",
                                "OMD-DM"
                              ]
                            },
                            "campaignTimeWindowList": {
                              "description": "List of allowed campaign time windows.",
                              "example": [
                                {
                                  "startTime": 20,
                                  "endTime": 21
                                }
                              ],
                              "type": "array",
                              "items": {
                                "id": "V3TimeWindow",
                                "title": "V3TimeWindow",
                                "description": "Time window.",
                                "example": {
                                  "startTime": 18,
                                  "endTime": 22
                                },
                                "type": "object",
                                "properties": {
                                  "startTime": {
                                    "description": "Start hour in range [0..23], current hour >= startTime.",
                                    "example": 18,
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "endTime": {
                                    "description": "End hour in range [1..24], current hour < endTime.",
                                    "example": 22,
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "startTime",
                                  "endTime"
                                ]
                              }
                            }
                          },
                          "required": [
                            "accountName",
                            "id",
                            "make",
                            "model",
                            "startDate",
                            "endDate",
                            "status"
                          ]
                        }
                      },
                      "lastSeenCampaignId": {
                        "description": "Campaign identifier.",
                        "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                        "type": "string"
                      }
                    },
                    "required": [
                      "hasMoreData",
                      "campaignList"
                    ]
                  }
                example: '{"hasMoreData":true,"lastSeenCampaignId":"60b5d639-ccdc-4db8-8824-069bd94c95bf","campaignList":[{"accountName":"0000123456-00001","id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","campaignName":"FOTA_Verizon_Upgrade","firmwareName":"FOTA_Verizon_Model-A_02To03_HF","firmwareFrom":"FOTA_Verizon_Model-A_00To01_HF","firmwareTo":"FOTA_Verizon_Model-A_02To03_HF","make":"Verizon","model":"Model-A","status":"CampaignEnded","startDate":"2020-08-21","endDate":"2020-08-22","campaignTimeWindowList":[{"startTime":20,"endTime":21}]}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV3Result",
                    "title": "FotaV3Result",
                    "description": "Error response.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error code string.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Error message string.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /devices/{deviceId}:
      uriParameters:
        deviceId:
          description: Device IMEI identifier.
          type: string
          example: 15-digit IMEI
          required: true
          displayName: deviceId
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Retrieve campaign history for a specific device.
        responses:
          '200':
            description: Returns a list of firmware upgrades.
            body:
              application/json:
                schema: |
                  {
                    "description": "A list of firmware upgrades.",
                    "example": [
                      {
                        "deviceId": "15-digit IMEI",
                        "campaignId": "252d7ffc-7e35-11ec-931d-76f56843c393",
                        "accountName": "0000123456-00001",
                        "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512",
                        "firmwareFrom": "SR1.2.0.0-10657",
                        "firmwareTo": "SR1.2.0.0-10512",
                        "startDate": "2022-01-25",
                        "reportUpdatedTime": "2022-01-26 03:45:01.608 +0000 UTC",
                        "status": "UpgradeSuccess",
                        "reason": "Upgrade completed successfully"
                      },
                      {
                        "deviceId": "15-digit IMEI",
                        "campaignId": "8f5e9a4a-6ce2-11ec-ace7-3ea293843397",
                        "accountName": "0000123456-00001",
                        "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                        "firmwareFrom": "SR1.2.0.0-10512",
                        "firmwareTo": "SR1.2.0.0-10657",
                        "startDate": "2022-01-03",
                        "reportUpdatedTime": "2022-01-04 02:45:00.67 +0000 UTC",
                        "status": "UpgradeSuccess",
                        "reason": "Upgrade completed successfully"
                      }
                    ],
                    "type": "array",
                    "items": {
                      "id": "DeviceFirmwareUpgrade",
                      "title": "DeviceFirmwareUpgrade",
                      "description": "Firmware upgrades information.",
                      "example": {
                        "deviceId": "15-digit IMEI",
                        "campaignId": "252d7ffc-7e35-11ec-931d-76f56843c393",
                        "accountName": "0000123456-00001",
                        "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512",
                        "firmwareFrom": "SR1.2.0.0-10657",
                        "firmwareTo": "SR1.2.0.0-10512",
                        "startDate": "2022-01-25",
                        "reportUpdatedTime": "2022-01-26 03:45:01.608 +0000 UTC",
                        "status": "UpgradeSuccess",
                        "reason": "Upgrade completed successfully"
                      },
                      "type": "object",
                      "properties": {
                        "deviceId": {
                          "description": "Device identifier.",
                          "example": "15-digit IMEI",
                          "type": "string"
                        },
                        "campaignId": {
                          "description": "Campaign identifier.",
                          "example": "252d7ffc-7e35-11ec-931d-76f56843c393",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account identifier.",
                          "example": "0000123456-00001",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "Firmware upgrade start date.",
                          "example": "2022-01-25",
                          "type": "string",
                          "format": "date"
                        },
                        "status": {
                          "description": "Firmware upgrade status.",
                          "example": "UpgradeSuccess",
                          "type": "string"
                        },
                        "reason": {
                          "description": "Software upgrade result reason.",
                          "example": "Upgrade completed successfully",
                          "type": "string"
                        },
                        "firmwareName": {
                          "description": "Firmware name.",
                          "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512",
                          "type": "string"
                        },
                        "firmwareFrom": {
                          "description": "Old firmware version.",
                          "example": "SR1.2.0.0-10657",
                          "type": "string"
                        },
                        "firmwareTo": {
                          "description": "New firmware version.",
                          "example": "SR1.2.0.0-10512",
                          "type": "string"
                        },
                        "reportUpdatedTime": {
                          "description": "Report updated time.",
                          "example": "2022-01-26 03:45:01.608 +0000 UTC",
                          "type": "string"
                        }
                      },
                      "required": [
                        "deviceId",
                        "campaignId",
                        "accountName",
                        "startDate",
                        "status",
                        "reason"
                      ]
                    }
                  }
                example: '[{"deviceId":"15-digit IMEI","campaignId":"252d7ffc-7e35-11ec-931d-76f56843c393","accountName":"0000123456-00001","firmwareName":"SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512","firmwareFrom":"SR1.2.0.0-10657","firmwareTo":"SR1.2.0.0-10512","startDate":"2022-01-25","reportUpdatedTime":"2022-01-26 03:45:01.608 +0000 UTC","status":"UpgradeSuccess","reason":"Upgrade completed successfully"},{"deviceId":"15-digit IMEI","campaignId":"8f5e9a4a-6ce2-11ec-ace7-3ea293843397","accountName":"0000123456-00001","firmwareName":"SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657","firmwareFrom":"SR1.2.0.0-10512","firmwareTo":"SR1.2.0.0-10657","startDate":"2022-01-03","reportUpdatedTime":"2022-01-04 02:45:00.67 +0000 UTC","status":"UpgradeSuccess","reason":"Upgrade completed successfully"}]'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV3Result",
                    "title": "FotaV3Result",
                    "description": "Error response.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error code string.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Error message string.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    /campaigns/{campaignId}/devices:
      uriParameters:
        campaignId:
          description: Campaign identifier.
          type: string
          example: f858b8c4-2153-11ec-8c44-aeb16d1aa652
          required: true
          displayName: campaignId
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: Retrieve a list of all devices in a campaign and the status of each device.
        queryParameters:
          lastSeenDeviceId:
            description: Last seen device identifier.
            type: string
            example: 15-digit IMEI
            required: false
            displayName: lastSeenDeviceId
        responses:
          '200':
            description: Returns an array of campaign history.
            body:
              application/json:
                schema: |
                  {
                    "id": "V3CampaignDevice",
                    "title": "V3CampaignDevice",
                    "description": "Campaign history.",
                    "example": {
                      "totalDevice": 2689,
                      "hasMoreData": true,
                      "lastSeenDeviceId": "15-digit IMEI",
                      "maxPageSize": 1000,
                      "deviceList": [
                        {
                          "deviceId": "15-digit IMEI",
                          "status": "UpgradePending",
                          "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                          "updatedTime": "2022-08-05T21:05:27.129Z",
                          "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                          "nextAttemptTime": "2022-10-06T18:35:00Z"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "hasMoreData": {
                        "description": "Has more report flag.",
                        "example": true,
                        "type": "boolean"
                      },
                      "maxPageSize": {
                        "description": "Maximum page size.",
                        "example": 1000,
                        "type": "integer",
                        "format": "int32"
                      },
                      "deviceList": {
                        "description": "List of devices with id in IMEI.",
                        "example": [
                          {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradePending",
                            "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                            "updatedTime": "2022-08-05T21:05:27.129Z",
                            "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                            "nextAttemptTime": "2022-10-06T18:35:00Z"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "V3DeviceStatus",
                          "title": "V3DeviceStatus",
                          "description": "Device status.",
                          "example": {
                            "deviceId": "15-digit IMEI",
                            "status": "UpgradePending",
                            "resultReason": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                            "updatedTime": "2022-08-05T21:05:27.129Z",
                            "recentAttemptTime": "2022-10-05T21:05:01.19Z",
                            "nextAttemptTime": "2022-10-06T18:35:00Z"
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "15-digit IMEI",
                              "type": "string"
                            },
                            "status": {
                              "description": "Success or failure.",
                              "example": "UpgradePending",
                              "type": "string"
                            },
                            "resultReason": {
                              "description": "Result reason.",
                              "example": "Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC",
                              "type": "string"
                            },
                            "updatedTime": {
                              "description": "Updated Time.",
                              "example": "2022-08-06T18:35:00Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "recentAttemptTime": {
                              "description": "The most recent attempt time.",
                              "example": "2022-10-05T21:05:01.19Z",
                              "type": "string",
                              "format": "date-time"
                            },
                            "nextAttemptTime": {
                              "description": "Next attempt time.",
                              "example": "2022-10-06T18:35:00Z",
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "required": [
                            "deviceId",
                            "status"
                          ]
                        }
                      },
                      "totalDevice": {
                        "description": "Total device count.",
                        "example": 2689,
                        "type": "integer",
                        "format": "int32"
                      },
                      "lastSeenDeviceId": {
                        "description": "Device identifier.",
                        "example": "15-digit IMEI",
                        "type": "string"
                      }
                    },
                    "required": [
                      "hasMoreData",
                      "maxPageSize",
                      "deviceList"
                    ]
                  }
                example: '{"totalDevice":2689,"hasMoreData":true,"lastSeenDeviceId":"15-digit IMEI","maxPageSize":1000,"deviceList":[{"deviceId":"15-digit IMEI","status":"UpgradePending","resultReason":"Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC","updatedTime":"2022-08-05T21:05:27.129Z","recentAttemptTime":"2022-10-05T21:05:01.19Z","nextAttemptTime":"2022-10-06T18:35:00Z"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV3Result",
                    "title": "FotaV3Result",
                    "description": "Error response.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error code string.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Error message string.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
/campaigns:
  /{account}:
    uriParameters:
      account:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: account
    /{campaignId}:
      uriParameters:
        campaignId:
          description: Software upgrade identifier.
          type: string
          example: 60b5d639-ccdc-4db8-8824-069bd94c95bf
          required: true
          displayName: campaignId
      /dates:
        uriParameters: {}
        put:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: This endpoint allows user to change campaign dates and time windows. Fields which need to remain unchanged should be also provided.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - '*/*'
          body:
            '*/*':
              schema: |
                {
                  "id": "V2ChangeCampaignDatesRequest",
                  "title": "V2ChangeCampaignDatesRequest",
                  "description": "New dates and time windows.",
                  "example": {
                    "startDate": "2020-08-21",
                    "endDate": "2020-08-22",
                    "downloadAfterDate": "2020-08-21",
                    "downloadTimeWindowList": [
                      {
                        "startTime": 3,
                        "endTime": 4
                      }
                    ],
                    "installAfterDate": "2020-08-21",
                    "installTimeWindowList": [
                      {
                        "startTime": 5,
                        "endTime": 6
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "startDate": {
                      "description": "Campaign start date.",
                      "example": "2020-08-21",
                      "type": "string",
                      "format": "date"
                    },
                    "endDate": {
                      "description": "Campaign end date.",
                      "example": "2020-08-21",
                      "type": "string",
                      "format": "date"
                    },
                    "downloadAfterDate": {
                      "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
                      "example": "2020-08-21",
                      "type": "string",
                      "format": "date"
                    },
                    "downloadTimeWindowList": {
                      "description": "List of allowed download time windows. Removing of existing windows is not allowed.",
                      "example": [
                        {
                          "startTime": 3,
                          "endTime": 4
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V2TimeWindow",
                        "title": "V2TimeWindow",
                        "description": "Allowed start and end time windows.",
                        "example": {
                          "startTime": 20,
                          "endTime": 21
                        },
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "description": "Start hour in range [0..23], current hour >= startTime.",
                            "example": 20,
                            "type": "integer",
                            "format": "int32"
                          },
                          "endTime": {
                            "description": "End hour in range [1..24], current hour < endTime.",
                            "example": 21,
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "required": [
                          "startTime",
                          "endTime"
                        ]
                      }
                    },
                    "installAfterDate": {
                      "description": "Client will install package after date. If null, client will install as soon as possible.",
                      "example": "2020-08-21",
                      "type": "string",
                      "format": "date"
                    },
                    "installTimeWindowList": {
                      "description": "List of allowed install time windows. Removing of existing windows is not allowed.",
                      "example": [
                        {
                          "startTime": 5,
                          "endTime": 6
                        }
                      ],
                      "type": "array",
                      "items": {
                        "$ref": "V2TimeWindow"
                      }
                    }
                  },
                  "required": [
                    "startDate",
                    "endDate"
                  ]
                }
              example: '{"startDate":"2020-08-21","endDate":"2020-08-22","downloadAfterDate":"2020-08-21","downloadTimeWindowList":[{"startTime":3,"endTime":4}],"installAfterDate":"2020-08-21","installTimeWindowList":[{"startTime":5,"endTime":6}]}'
          responses:
            '200':
              description: Updated campaign information.
              body:
                application/json:
                  schema: |
                    {
                      "id": "CampaignSoftware",
                      "title": "CampaignSoftware",
                      "description": "Software upgrade information.",
                      "example": {
                        "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                        "accountName": "0402196254-00001",
                        "campaignName": "FOTA_Verizon_Upgrade",
                        "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                        "distributionType": "HTTP",
                        "make": "Verizon",
                        "model": "Model-A",
                        "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                        "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                        "startDate": "2020-08-21",
                        "endDate": "2020-08-22",
                        "downloadAfterDate": "2020-08-21",
                        "downloadTimeWindowList": [
                          {
                            "startTime": 20,
                            "endTime": 21
                          }
                        ],
                        "installAfterDate": "2020-08-21",
                        "installTimeWindowList": [
                          {
                            "startTime": 22,
                            "endTime": 23
                          }
                        ],
                        "status": "CampaignRequestPending"
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Upgrade identifier.",
                          "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account identifier.",
                          "example": "0402196254-00001",
                          "type": "string"
                        },
                        "softwareName": {
                          "description": "Software name.",
                          "example": "FOTA_Verizon_Model-A_02To03_HF",
                          "type": "string"
                        },
                        "distributionType": {
                          "description": "LWM2M, OMD-DM or HTTP.",
                          "example": "HTTP",
                          "type": "string"
                        },
                        "make": {
                          "description": "Applicable make.",
                          "example": "Verizon",
                          "type": "string"
                        },
                        "model": {
                          "description": "Applicable model.",
                          "example": "Model-A",
                          "type": "string"
                        },
                        "softwareFrom": {
                          "description": "Old software name.",
                          "example": "FOTA_Verizon_Model-A_00To01_HF",
                          "type": "string"
                        },
                        "softwareTo": {
                          "description": "New software name.",
                          "example": "FOTA_Verizon_Model-A_02To03_HF",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "Campaign start date.",
                          "example": "2020-08-21",
                          "type": "string",
                          "format": "date"
                        },
                        "endDate": {
                          "description": "Campaign end date.",
                          "example": "2020-08-21",
                          "type": "string",
                          "format": "date"
                        },
                        "status": {
                          "description": "Software upgrade status.",
                          "example": "CampaignRequestPending",
                          "type": "string"
                        },
                        "campaignName": {
                          "description": "Campaign name.",
                          "example": "FOTA_Verizon_Upgrade",
                          "type": "string"
                        },
                        "downloadAfterDate": {
                          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
                          "example": "2020-08-21",
                          "type": "string",
                          "format": "date"
                        },
                        "downloadTimeWindowList": {
                          "description": "List of allowed download time windows.",
                          "example": [
                            {
                              "startTime": 20,
                              "endTime": 21
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "V2TimeWindow",
                            "title": "V2TimeWindow",
                            "description": "Allowed start and end time windows.",
                            "example": {
                              "startTime": 20,
                              "endTime": 21
                            },
                            "type": "object",
                            "properties": {
                              "startTime": {
                                "description": "Start hour in range [0..23], current hour >= startTime.",
                                "example": 20,
                                "type": "integer",
                                "format": "int32"
                              },
                              "endTime": {
                                "description": "End hour in range [1..24], current hour < endTime.",
                                "example": 21,
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "required": [
                              "startTime",
                              "endTime"
                            ]
                          }
                        },
                        "installAfterDate": {
                          "description": "Client will install package after date. If null, client will install as soon as possible.",
                          "example": "2020-08-21",
                          "type": "string",
                          "format": "date"
                        },
                        "installTimeWindowList": {
                          "description": "List of allowed install time windows.",
                          "example": [
                            {
                              "startTime": 22,
                              "endTime": 23
                            }
                          ],
                          "type": "array",
                          "items": {
                            "$ref": "V2TimeWindow"
                          }
                        }
                      },
                      "required": [
                        "id",
                        "accountName",
                        "softwareName",
                        "distributionType",
                        "make",
                        "model",
                        "softwareFrom",
                        "softwareTo",
                        "startDate",
                        "endDate",
                        "status"
                      ]
                    }
                  example: '{"id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","accountName":"0402196254-00001","campaignName":"FOTA_Verizon_Upgrade","softwareName":"FOTA_Verizon_Model-A_02To03_HF","distributionType":"HTTP","make":"Verizon","model":"Model-A","softwareFrom":"FOTA_Verizon_Model-A_00To01_HF","softwareTo":"FOTA_Verizon_Model-A_02To03_HF","startDate":"2020-08-21","endDate":"2020-08-22","downloadAfterDate":"2020-08-21","downloadTimeWindowList":[{"startTime":3,"endTime":4},{"startTime":5,"endTime":6}],"installAfterDate":"2020-08-21","installTimeWindowList":[{"startTime":5,"endTime":6},{"startTime":6,"endTime":7}],"status":"RequestPending"}'
            '400':
              description: Unexpected error.
              body:
                application/json:
                  schema: |
                    {
                      "id": "FotaV2Result",
                      "title": "FotaV2Result",
                      "description": "Response for error cases.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Code of the error.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Details of the error.",
                          "example": "error message string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "errorCode",
                        "errorMessage"
                      ]
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to get information of a software upgrade.
        responses:
          '200':
            description: Return software upgrade information.
            body:
              application/json:
                schema: |
                  {
                    "id": "CampaignSoftware",
                    "title": "CampaignSoftware",
                    "description": "Software upgrade information.",
                    "example": {
                      "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                      "accountName": "0402196254-00001",
                      "campaignName": "FOTA_Verizon_Upgrade",
                      "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                      "distributionType": "HTTP",
                      "make": "Verizon",
                      "model": "Model-A",
                      "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                      "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                      "startDate": "2020-08-21",
                      "endDate": "2020-08-22",
                      "downloadAfterDate": "2020-08-21",
                      "downloadTimeWindowList": [
                        {
                          "startTime": 20,
                          "endTime": 21
                        }
                      ],
                      "installAfterDate": "2020-08-21",
                      "installTimeWindowList": [
                        {
                          "startTime": 22,
                          "endTime": 23
                        }
                      ],
                      "status": "CampaignRequestPending"
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Upgrade identifier.",
                        "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                        "type": "string"
                      },
                      "accountName": {
                        "description": "Account identifier.",
                        "example": "0402196254-00001",
                        "type": "string"
                      },
                      "softwareName": {
                        "description": "Software name.",
                        "example": "FOTA_Verizon_Model-A_02To03_HF",
                        "type": "string"
                      },
                      "distributionType": {
                        "description": "LWM2M, OMD-DM or HTTP.",
                        "example": "HTTP",
                        "type": "string"
                      },
                      "make": {
                        "description": "Applicable make.",
                        "example": "Verizon",
                        "type": "string"
                      },
                      "model": {
                        "description": "Applicable model.",
                        "example": "Model-A",
                        "type": "string"
                      },
                      "softwareFrom": {
                        "description": "Old software name.",
                        "example": "FOTA_Verizon_Model-A_00To01_HF",
                        "type": "string"
                      },
                      "softwareTo": {
                        "description": "New software name.",
                        "example": "FOTA_Verizon_Model-A_02To03_HF",
                        "type": "string"
                      },
                      "startDate": {
                        "description": "Campaign start date.",
                        "example": "2020-08-21",
                        "type": "string",
                        "format": "date"
                      },
                      "endDate": {
                        "description": "Campaign end date.",
                        "example": "2020-08-21",
                        "type": "string",
                        "format": "date"
                      },
                      "status": {
                        "description": "Software upgrade status.",
                        "example": "CampaignRequestPending",
                        "type": "string"
                      },
                      "campaignName": {
                        "description": "Campaign name.",
                        "example": "FOTA_Verizon_Upgrade",
                        "type": "string"
                      },
                      "downloadAfterDate": {
                        "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
                        "example": "2020-08-21",
                        "type": "string",
                        "format": "date"
                      },
                      "downloadTimeWindowList": {
                        "description": "List of allowed download time windows.",
                        "example": [
                          {
                            "startTime": 20,
                            "endTime": 21
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "V2TimeWindow",
                          "title": "V2TimeWindow",
                          "description": "Allowed start and end time windows.",
                          "example": {
                            "startTime": 20,
                            "endTime": 21
                          },
                          "type": "object",
                          "properties": {
                            "startTime": {
                              "description": "Start hour in range [0..23], current hour >= startTime.",
                              "example": 20,
                              "type": "integer",
                              "format": "int32"
                            },
                            "endTime": {
                              "description": "End hour in range [1..24], current hour < endTime.",
                              "example": 21,
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "required": [
                            "startTime",
                            "endTime"
                          ]
                        }
                      },
                      "installAfterDate": {
                        "description": "Client will install package after date. If null, client will install as soon as possible.",
                        "example": "2020-08-21",
                        "type": "string",
                        "format": "date"
                      },
                      "installTimeWindowList": {
                        "description": "List of allowed install time windows.",
                        "example": [
                          {
                            "startTime": 22,
                            "endTime": 23
                          }
                        ],
                        "type": "array",
                        "items": {
                          "$ref": "V2TimeWindow"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "accountName",
                      "softwareName",
                      "distributionType",
                      "make",
                      "model",
                      "softwareFrom",
                      "softwareTo",
                      "startDate",
                      "endDate",
                      "status"
                    ]
                  }
                example: '{"id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","accountName":"0402196254-00001","campaignName":"FOTA_Verizon_Upgrade","softwareName":"FOTA_Verizon_Model-A_02To03_HF","distributionType":"HTTP","make":"Verizon","model":"Model-A","softwareFrom":"FOTA_Verizon_Model-A_00To01_HF","softwareTo":"FOTA_Verizon_Model-A_02To03_HF","startDate":"2020-08-21","endDate":"2020-08-22","downloadAfterDate":"2020-08-21","downloadTimeWindowList":[{"startTime":20,"endTime":21}],"installAfterDate":"2020-08-21","installTimeWindowList":[{"startTime":22,"endTime":23}],"status":"CampaignEnded"}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      put:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to Add or Remove devices to an existing software upgrade.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - '*/*'
        body:
          '*/*':
            schema: |
              {
                "id": "V2AddOrRemoveDeviceRequest",
                "title": "V2AddOrRemoveDeviceRequest",
                "description": "Request to add or remove device to existing software upgrade information.",
                "example": {
                  "Type": "remove",
                  "deviceList": [
                    "990013907884259",
                    "990013907835573",
                    "990013907833575"
                  ]
                },
                "type": "object",
                "properties": {
                  "Type": {
                    "description": "Operation either 'append' or 'remove'.",
                    "example": "remove",
                    "type": "string"
                  },
                  "deviceList": {
                    "description": "Device IMEI list.",
                    "example": [
                      "990013907884259",
                      "990013907835573",
                      "990013907833575"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "Type",
                  "deviceList"
                ]
              }
            example: '{"Type":"remove","deviceList":["990013907884259","990013907835573","990013907833575"]}'
        responses:
          '200':
            description: Result of adding or removing devices to existing software upgrade information.
            body:
              application/json:
                schema: |
                  {
                    "id": "V2AddOrRemoveDeviceResult",
                    "title": "V2AddOrRemoveDeviceResult",
                    "description": "Add or remove devices from the existing software upgrade information.",
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account identifier.",
                        "example": "0402196254-00001",
                        "type": "string"
                      },
                      "campaignId": {
                        "description": "Campaign identifier.",
                        "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                        "type": "string"
                      },
                      "requestId": {
                        "description": "Request identifier.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "accountName",
                      "campaignId",
                      "requestId"
                    ]
                  }
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      delete:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to cancel software upgrade. A software upgrade already started can not be cancelled.
        responses:
          '200':
            description: Return cancellation status.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2SuccessResult",
                    "title": "FotaV2SuccessResult",
                    "description": "Response to a successful request.",
                    "example": {
                      "success": true
                    },
                    "type": "object",
                    "properties": {
                      "success": {
                        "example": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "success"
                    ]
                  }
                example: '{"success":true}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV2Result",
                    "title": "FotaV2Result",
                    "description": "Response for error cases.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Code of the error.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Details of the error.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to schedule a software upgrade.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - '*/*'
      body:
        '*/*':
          schema: |
            {
              "id": "CampaignSoftwareUpgrade",
              "title": "CampaignSoftwareUpgrade",
              "description": "Software upgrade information.",
              "example": {
                "campaignName": "FOTA_Verizon_Upgrade",
                "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                "distributionType": "HTTP",
                "startDate": "2020-08-21",
                "endDate": "2020-08-22",
                "downloadAfterDate": "2020-08-21",
                "downloadTimeWindowList": [
                  {
                    "startTime": 20,
                    "endTime": 21
                  }
                ],
                "installAfterDate": "2020-08-21",
                "installTimeWindowList": [
                  {
                    "startTime": 22,
                    "endTime": 23
                  }
                ],
                "deviceList": [
                  "990013907835573",
                  "990013907884259"
                ]
              },
              "type": "object",
              "properties": {
                "softwareName": {
                  "description": "Software name to upgrade to.",
                  "example": "FOTA_Verizon_Model-A_02To03_HF",
                  "type": "string"
                },
                "softwareFrom": {
                  "description": "Old software name.",
                  "example": "FOTA_Verizon_Model-A_00To01_HF",
                  "type": "string"
                },
                "softwareTo": {
                  "description": "New software name.",
                  "example": "FOTA_Verizon_Model-A_02To03_HF",
                  "type": "string"
                },
                "distributionType": {
                  "description": "OMA or HTTP.",
                  "example": "HTTP",
                  "type": "string"
                },
                "startDate": {
                  "description": "Campaign start date.",
                  "example": "2020-08-21",
                  "type": "string",
                  "format": "date"
                },
                "endDate": {
                  "description": "Campaign end date.",
                  "example": "2020-08-21",
                  "type": "string",
                  "format": "date"
                },
                "deviceList": {
                  "description": "Device IMEI list.",
                  "example": [
                    "990013907835573",
                    "990013907884259"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "campaignName": {
                  "description": "Campaign name.",
                  "example": "FOTA_Verizon_Upgrade",
                  "type": "string"
                },
                "downloadAfterDate": {
                  "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
                  "example": "2020-08-21",
                  "type": "string",
                  "format": "date"
                },
                "downloadTimeWindowList": {
                  "description": "List of allowed download time windows.",
                  "example": [
                    {
                      "startTime": 20,
                      "endTime": 21
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "V2TimeWindow",
                    "title": "V2TimeWindow",
                    "description": "Allowed start and end time windows.",
                    "example": {
                      "startTime": 20,
                      "endTime": 21
                    },
                    "type": "object",
                    "properties": {
                      "startTime": {
                        "description": "Start hour in range [0..23], current hour >= startTime.",
                        "example": 20,
                        "type": "integer",
                        "format": "int32"
                      },
                      "endTime": {
                        "description": "End hour in range [1..24], current hour < endTime.",
                        "example": 21,
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "startTime",
                      "endTime"
                    ]
                  }
                },
                "installAfterDate": {
                  "description": "Client will install package after date. If null, client will install as soon as possible.",
                  "example": "2020-08-21",
                  "type": "string",
                  "format": "date"
                },
                "installTimeWindowList": {
                  "description": "List of allowed install time windows.",
                  "example": [
                    {
                      "startTime": 22,
                      "endTime": 23
                    }
                  ],
                  "type": "array",
                  "items": {
                    "$ref": "V2TimeWindow"
                  }
                }
              },
              "required": [
                "softwareName",
                "softwareFrom",
                "softwareTo",
                "distributionType",
                "startDate",
                "endDate",
                "deviceList"
              ]
            }
          example: '{"campaignName":"FOTA_Verizon_Upgrade","softwareName":"FOTA_Verizon_Model-A_02To03_HF","softwareFrom":"FOTA_Verizon_Model-A_00To01_HF","softwareTo":"FOTA_Verizon_Model-A_02To03_HF","distributionType":"HTTP","startDate":"2020-08-21","endDate":"2020-08-22","downloadAfterDate":"2020-08-21","downloadTimeWindowList":[{"startTime":20,"endTime":21}],"installAfterDate":"2020-08-21","installTimeWindowList":[{"startTime":22,"endTime":23}],"deviceList":["990013907835573","990013907884259"]}'
      responses:
        '200':
          description: Return software upgrade information.
          body:
            application/json:
              schema: |
                {
                  "id": "CampaignSoftware",
                  "title": "CampaignSoftware",
                  "description": "Software upgrade information.",
                  "example": {
                    "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                    "accountName": "0402196254-00001",
                    "campaignName": "FOTA_Verizon_Upgrade",
                    "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                    "distributionType": "HTTP",
                    "make": "Verizon",
                    "model": "Model-A",
                    "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                    "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                    "startDate": "2020-08-21",
                    "endDate": "2020-08-22",
                    "downloadAfterDate": "2020-08-21",
                    "downloadTimeWindowList": [
                      {
                        "startTime": 20,
                        "endTime": 21
                      }
                    ],
                    "installAfterDate": "2020-08-21",
                    "installTimeWindowList": [
                      {
                        "startTime": 22,
                        "endTime": 23
                      }
                    ],
                    "status": "CampaignRequestPending"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Upgrade identifier.",
                      "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                      "type": "string"
                    },
                    "accountName": {
                      "description": "Account identifier.",
                      "example": "0402196254-00001",
                      "type": "string"
                    },
                    "softwareName": {
                      "description": "Software name.",
                      "example": "FOTA_Verizon_Model-A_02To03_HF",
                      "type": "string"
                    },
                    "distributionType": {
                      "description": "LWM2M, OMD-DM or HTTP.",
                      "example": "HTTP",
                      "type": "string"
                    },
                    "make": {
                      "description": "Applicable make.",
                      "example": "Verizon",
                      "type": "string"
                    },
                    "model": {
                      "description": "Applicable model.",
                      "example": "Model-A",
                      "type": "string"
                    },
                    "softwareFrom": {
                      "description": "Old software name.",
                      "example": "FOTA_Verizon_Model-A_00To01_HF",
                      "type": "string"
                    },
                    "softwareTo": {
                      "description": "New software name.",
                      "example": "FOTA_Verizon_Model-A_02To03_HF",
                      "type": "string"
                    },
                    "startDate": {
                      "description": "Campaign start date.",
                      "example": "2020-08-21",
                      "type": "string",
                      "format": "date"
                    },
                    "endDate": {
                      "description": "Campaign end date.",
                      "example": "2020-08-21",
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "description": "Software upgrade status.",
                      "example": "CampaignRequestPending",
                      "type": "string"
                    },
                    "campaignName": {
                      "description": "Campaign name.",
                      "example": "FOTA_Verizon_Upgrade",
                      "type": "string"
                    },
                    "downloadAfterDate": {
                      "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
                      "example": "2020-08-21",
                      "type": "string",
                      "format": "date"
                    },
                    "downloadTimeWindowList": {
                      "description": "List of allowed download time windows.",
                      "example": [
                        {
                          "startTime": 20,
                          "endTime": 21
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V2TimeWindow",
                        "title": "V2TimeWindow",
                        "description": "Allowed start and end time windows.",
                        "example": {
                          "startTime": 20,
                          "endTime": 21
                        },
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "description": "Start hour in range [0..23], current hour >= startTime.",
                            "example": 20,
                            "type": "integer",
                            "format": "int32"
                          },
                          "endTime": {
                            "description": "End hour in range [1..24], current hour < endTime.",
                            "example": 21,
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "required": [
                          "startTime",
                          "endTime"
                        ]
                      }
                    },
                    "installAfterDate": {
                      "description": "Client will install package after date. If null, client will install as soon as possible.",
                      "example": "2020-08-21",
                      "type": "string",
                      "format": "date"
                    },
                    "installTimeWindowList": {
                      "description": "List of allowed install time windows.",
                      "example": [
                        {
                          "startTime": 22,
                          "endTime": 23
                        }
                      ],
                      "type": "array",
                      "items": {
                        "$ref": "V2TimeWindow"
                      }
                    }
                  },
                  "required": [
                    "id",
                    "accountName",
                    "softwareName",
                    "distributionType",
                    "make",
                    "model",
                    "softwareFrom",
                    "softwareTo",
                    "startDate",
                    "endDate",
                    "status"
                  ]
                }
              example: '{"id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","accountName":"0402196254-00001","campaignName":"FOTA_Verizon_Upgrade","softwareName":"FOTA_Verizon_Model-A_02To03_HF","distributionType":"HTTP","make":"Verizon","model":"Model-A","softwareFrom":"FOTA_Verizon_Model-A_00To01_HF","softwareTo":"FOTA_Verizon_Model-A_02To03_HF","startDate":"2020-08-21","endDate":"2020-08-22","downloadAfterDate":"2020-08-21","downloadTimeWindowList":[{"startTime":20,"endTime":21}],"installAfterDate":"2020-08-21","installTimeWindowList":[{"startTime":22,"endTime":23}],"status":"CampaignRequestPending"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /files/{acc}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0402196254-00001
        required: true
        displayName: acc
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: You can upload configuration files and schedule them in a campaign to devices.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "UploadAndScheduleFileRequest",
              "title": "UploadAndScheduleFileRequest",
              "description": "Device logging information.",
              "type": "object",
              "properties": {
                "campaignName": {
                  "description": "The campaign name.",
                  "example": "FOTA_Verizon_Upgrade",
                  "type": "string"
                },
                "fileName": {
                  "description": "The name of the file you are upgrading to.",
                  "example": "configfile-Verizon_VZW1_hello-world.txt",
                  "type": "string"
                },
                "fileVersion": {
                  "description": "The version of the file you are upgrading to.",
                  "example": "1.0",
                  "type": "string"
                },
                "distributionType": {
                  "description": "Valid values",
                  "example": "HTTP",
                  "type": "string"
                },
                "startDate": {
                  "description": "Campaign start date.",
                  "example": "2021-02-08",
                  "type": "string"
                },
                "endDate": {
                  "description": "Campaign end date.",
                  "example": "2021-02-08",
                  "type": "string"
                },
                "downloadAfterDate": {
                  "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
                  "example": "2021-02-08",
                  "type": "string"
                },
                "downloadTimeWindowList": {
                  "description": "List of allowed download time windows.",
                  "type": "array",
                  "items": {
                    "id": "downloadTimeWindow",
                    "title": "downloadTimeWindow",
                    "type": "object",
                    "properties": {
                      "startTime": {
                        "description": "Device IMEI list.",
                        "example": "0",
                        "type": "string"
                      },
                      "endTime": {
                        "description": "Device IMEI list.",
                        "example": "0",
                        "type": "string"
                      }
                    }
                  }
                },
                "installAfterDate": {
                  "description": "The date after which you install the package. If null, install as soon as possible.",
                  "type": "string"
                },
                "installTimeWindowList": {
                  "description": "List of allowed install time windows.",
                  "type": "array",
                  "items": {
                    "$ref": "downloadTimeWindow"
                  }
                },
                "deviceList": {
                  "description": "Device IMEI list.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          example: ''
      responses:
        '200':
          description: Successful responses.
          body:
            application/json:
              schema: |
                {
                  "id": "UploadAndScheduleFileResponse",
                  "title": "UploadAndScheduleFileResponse",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Updgrade identifier.",
                      "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                      "type": "string"
                    },
                    "accountName": {
                      "description": "Account identifer.",
                      "example": "0242078689-00001",
                      "type": "string"
                    },
                    "campaignName": {
                      "description": "The campaign name.",
                      "example": "FOTA_Verizon_Upgrade",
                      "type": "string"
                    },
                    "softwareName": {
                      "description": "Software name.",
                      "example": "FOTA_Verizon_Model-A_02To03_HF",
                      "type": "string"
                    },
                    "softwareFrom": {
                      "description": "Old software name.",
                      "example": "FOTA_Verizon_Model-A_00To01_HF",
                      "type": "string"
                    },
                    "softwareTo": {
                      "description": "New software name.",
                      "example": "FOTA_Verizon_Model-A_02To03_HF",
                      "type": "string"
                    },
                    "fileName": {
                      "description": "The name of the file you are upgrading to.",
                      "example": "configfile-Verizon_VZW1_hello-world.txt",
                      "type": "string"
                    },
                    "fileVersion": {
                      "description": "The version of the file you are upgrading to.",
                      "example": "1.0",
                      "type": "string"
                    },
                    "distributionType": {
                      "description": "Valid values",
                      "example": "HTTP",
                      "type": "string"
                    },
                    "make": {
                      "description": "Applicable make.",
                      "example": "Verizon",
                      "type": "string"
                    },
                    "model": {
                      "description": "Applicable model.",
                      "example": "Model-A",
                      "type": "string"
                    },
                    "startDate": {
                      "description": "Campaign start date.",
                      "example": "2021-02-08",
                      "type": "string"
                    },
                    "endDate": {
                      "description": "Campaign end date.",
                      "example": "2021-02-08",
                      "type": "string"
                    },
                    "downloadAfterDate": {
                      "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
                      "example": "2021-02-08",
                      "type": "string"
                    },
                    "downloadTimeWindowList": {
                      "description": "List of allowed download time windows.",
                      "type": "array",
                      "items": {
                        "id": "downloadTimeWindow",
                        "title": "downloadTimeWindow",
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "description": "Device IMEI list.",
                            "example": "0",
                            "type": "string"
                          },
                          "endTime": {
                            "description": "Device IMEI list.",
                            "example": "0",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "installAfterDate": {
                      "description": "The date after which you install the package. If null, install as soon as possible.",
                      "type": "string"
                    },
                    "installTimeWindowList": {
                      "description": "List of allowed install time windows.",
                      "type": "array",
                      "items": {
                        "$ref": "downloadTimeWindow"
                      }
                    },
                    "deviceList": {
                      "description": "Device IMEI list.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "Software update status.",
                      "example": "pending",
                      "type": "string"
                    }
                  }
                }
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /software/{acc}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0402196254-00001
        required: true
        displayName: acc
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Campaign time windows for downloading and installing software are available as long as the device OEM supports this.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "SchedulesSoftwareUpgradeRequest",
              "title": "SchedulesSoftwareUpgradeRequest",
              "description": "Device logging information.",
              "example": {
                "campaignName": "FOTA_Verizon_Upgrade",
                "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                "distributionType": "HTTP",
                "startDate": "2020-08-21",
                "endDate": "2020-08-22",
                "downloadAfterDate": "2020-08-21",
                "downloadTimeWindowList": [
                  {
                    "startTime": "20",
                    "endTime": "21"
                  }
                ],
                "installAfterDate": "2020-08-21",
                "installTimeWindowList": [
                  {
                    "startTime": "22",
                    "endTime": "23"
                  }
                ],
                "deviceList": [
                  "990013907835573",
                  "990013907884259"
                ]
              },
              "type": "object",
              "properties": {
                "campaignName": {
                  "description": "The campaign name.",
                  "example": "FOTA_Verizon_Upgrade",
                  "type": "string"
                },
                "softwareName": {
                  "description": "Software name.",
                  "example": "FOTA_Verizon_Model-A_02To03_HF",
                  "type": "string"
                },
                "softwareFrom": {
                  "description": "Old software name.",
                  "example": "FOTA_Verizon_Model-A_00To01_HF",
                  "type": "string"
                },
                "softwareTo": {
                  "description": "New software name.",
                  "example": "FOTA_Verizon_Model-A_02To03_HF",
                  "type": "string"
                },
                "distributionType": {
                  "description": "Valid values",
                  "example": "HTTP",
                  "type": "string"
                },
                "startDate": {
                  "description": "Campaign start date.",
                  "example": "2021-02-08",
                  "type": "string"
                },
                "endDate": {
                  "description": "Campaign end date.",
                  "example": "2021-02-08",
                  "type": "string"
                },
                "downloadAfterDate": {
                  "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
                  "example": "2021-02-08",
                  "type": "string"
                },
                "downloadTimeWindowList": {
                  "description": "List of allowed download time windows.",
                  "type": "array",
                  "items": {
                    "id": "downloadTimeWindow",
                    "title": "downloadTimeWindow",
                    "type": "object",
                    "properties": {
                      "startTime": {
                        "description": "Device IMEI list.",
                        "example": "0",
                        "type": "string"
                      },
                      "endTime": {
                        "description": "Device IMEI list.",
                        "example": "0",
                        "type": "string"
                      }
                    }
                  }
                },
                "installAfterDate": {
                  "description": "The date after which you install the package. If null, install as soon as possible.",
                  "type": "string"
                },
                "installTimeWindowList": {
                  "description": "List of allowed install time windows.",
                  "type": "array",
                  "items": {
                    "$ref": "downloadTimeWindow"
                  }
                },
                "deviceList": {
                  "description": "Device IMEI list.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          example: '{"campaignName":"FOTA_Verizon_Upgrade","softwareName":"FOTA_Verizon_Model-A_02To03_HF","softwareFrom":"FOTA_Verizon_Model-A_00To01_HF","softwareTo":"FOTA_Verizon_Model-A_02To03_HF","distributionType":"HTTP","startDate":"2020-08-21","endDate":"2020-08-22","downloadAfterDate":"2020-08-21","downloadTimeWindowList":[{"startTime":"20","endTime":"21"}],"installAfterDate":"2020-08-21","installTimeWindowList":[{"startTime":"22","endTime":"23"}],"deviceList":["990013907835573","990013907884259"]}'
      responses:
        '200':
          description: Successful responses.
          body:
            application/json:
              schema: |
                {
                  "id": "UploadAndScheduleFileResponse",
                  "title": "UploadAndScheduleFileResponse",
                  "example": {
                    "id": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                    "accountName": "0402196254-00001",
                    "campaignName": "FOTA_Verizon_Upgrade",
                    "softwareName": "FOTA_Verizon_Model-A_02To03_HF",
                    "distributionType": "HTTP",
                    "make": "Verizon",
                    "model": "Model-A",
                    "softwareFrom": "FOTA_Verizon_Model-A_00To01_HF",
                    "softwareTo": "FOTA_Verizon_Model-A_02To03_HF",
                    "startDate": "2020-08-21",
                    "endDate": "2020-08-22",
                    "downloadAfterDate": "2020-08-21",
                    "downloadTimeWindowList": [
                      {
                        "startTime": "20",
                        "endTime": "21"
                      }
                    ],
                    "installAfterDate": "2020-08-21",
                    "installTimeWindowList": [
                      {
                        "startTime": "22",
                        "endTime": "23"
                      }
                    ],
                    "status": "CampaignRequestPending"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Updgrade identifier.",
                      "example": "60b5d639-ccdc-4db8-8824-069bd94c95bf",
                      "type": "string"
                    },
                    "accountName": {
                      "description": "Account identifer.",
                      "example": "0242078689-00001",
                      "type": "string"
                    },
                    "campaignName": {
                      "description": "The campaign name.",
                      "example": "FOTA_Verizon_Upgrade",
                      "type": "string"
                    },
                    "softwareName": {
                      "description": "Software name.",
                      "example": "FOTA_Verizon_Model-A_02To03_HF",
                      "type": "string"
                    },
                    "softwareFrom": {
                      "description": "Old software name.",
                      "example": "FOTA_Verizon_Model-A_00To01_HF",
                      "type": "string"
                    },
                    "softwareTo": {
                      "description": "New software name.",
                      "example": "FOTA_Verizon_Model-A_02To03_HF",
                      "type": "string"
                    },
                    "fileName": {
                      "description": "The name of the file you are upgrading to.",
                      "example": "configfile-Verizon_VZW1_hello-world.txt",
                      "type": "string"
                    },
                    "fileVersion": {
                      "description": "The version of the file you are upgrading to.",
                      "example": "1.0",
                      "type": "string"
                    },
                    "distributionType": {
                      "description": "Valid values",
                      "example": "HTTP",
                      "type": "string"
                    },
                    "make": {
                      "description": "Applicable make.",
                      "example": "Verizon",
                      "type": "string"
                    },
                    "model": {
                      "description": "Applicable model.",
                      "example": "Model-A",
                      "type": "string"
                    },
                    "startDate": {
                      "description": "Campaign start date.",
                      "example": "2021-02-08",
                      "type": "string"
                    },
                    "endDate": {
                      "description": "Campaign end date.",
                      "example": "2021-02-08",
                      "type": "string"
                    },
                    "downloadAfterDate": {
                      "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
                      "example": "2021-02-08",
                      "type": "string"
                    },
                    "downloadTimeWindowList": {
                      "description": "List of allowed download time windows.",
                      "type": "array",
                      "items": {
                        "id": "downloadTimeWindow",
                        "title": "downloadTimeWindow",
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "description": "Device IMEI list.",
                            "example": "0",
                            "type": "string"
                          },
                          "endTime": {
                            "description": "Device IMEI list.",
                            "example": "0",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "installAfterDate": {
                      "description": "The date after which you install the package. If null, install as soon as possible.",
                      "type": "string"
                    },
                    "installTimeWindowList": {
                      "description": "List of allowed install time windows.",
                      "type": "array",
                      "items": {
                        "$ref": "downloadTimeWindow"
                      }
                    },
                    "deviceList": {
                      "description": "Device IMEI list.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "Software update status.",
                      "example": "pending",
                      "type": "string"
                    }
                  }
                }
              example: '{"id":"60b5d639-ccdc-4db8-8824-069bd94c95bf","accountName":"0402196254-00001","campaignName":"FOTA_Verizon_Upgrade","softwareName":"FOTA_Verizon_Model-A_02To03_HF","distributionType":"HTTP","make":"Verizon","model":"Model-A","softwareFrom":"FOTA_Verizon_Model-A_00To01_HF","softwareTo":"FOTA_Verizon_Model-A_02To03_HF","startDate":"2020-08-21","endDate":"2020-08-22","downloadAfterDate":"2020-08-21","downloadTimeWindowList":[{"startTime":"20","endTime":"21"}],"installAfterDate":"2020-08-21","installTimeWindowList":[{"startTime":"22","endTime":"23"}],"status":"CampaignRequestPending"}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV2Result",
                  "title": "FotaV2Result",
                  "description": "Response for error cases.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Code of the error.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Details of the error.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /firmware/{acc}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: acc
    /{campaignId}:
      uriParameters:
        campaignId:
          description: Unique identifier of a campaign.
          type: string
          example: f858b8c4-2153-11ec-8c44-aeb16d1aa652
          required: true
          displayName: campaignId
      /dates:
        uriParameters: {}
        put:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: This endpoint allows user to change campaign dates and time windows. Fields which need to remain unchanged should be also provided.
          headers:
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "V3ChangeCampaignDatesRequest",
                  "title": "V3ChangeCampaignDatesRequest",
                  "description": "New dates and time windows.",
                  "example": {
                    "startDate": "2022-02-23",
                    "endDate": "2022-02-24",
                    "campaignTimeWindowList": [
                      {
                        "startTime": 14,
                        "endTime": 18
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "startDate": {
                      "description": "Campaign start date.",
                      "example": "2022-02-23",
                      "type": "string",
                      "format": "date"
                    },
                    "endDate": {
                      "description": "Campaign end date.",
                      "example": "2022-02-24",
                      "type": "string",
                      "format": "date"
                    },
                    "campaignTimeWindowList": {
                      "description": "List of allowed campaign time windows.",
                      "example": [
                        {
                          "startTime": 14,
                          "endTime": 18
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V3TimeWindow",
                        "title": "V3TimeWindow",
                        "description": "Time window.",
                        "example": {
                          "startTime": 18,
                          "endTime": 22
                        },
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "description": "Start hour in range [0..23], current hour >= startTime.",
                            "example": 18,
                            "type": "integer",
                            "format": "int32"
                          },
                          "endTime": {
                            "description": "End hour in range [1..24], current hour < endTime.",
                            "example": 22,
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "required": [
                          "startTime",
                          "endTime"
                        ]
                      }
                    }
                  },
                  "required": [
                    "startDate",
                    "endDate"
                  ]
                }
              example: '{"startDate":"2022-02-23","endDate":"2022-02-24","campaignTimeWindowList":[{"startTime":14,"endTime":18}]}'
          responses:
            '200':
              description: Updated campaign information.
              body:
                application/json:
                  schema: |
                    {
                      "id": "FirmwareCampaign",
                      "title": "FirmwareCampaign",
                      "description": "Firmware upgrade information.",
                      "example": {
                        "id": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
                        "accountName": "0000123456-00001",
                        "campaignName": "Smart FOTA - test 4",
                        "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                        "protocol": "LWM2M",
                        "firmwareFrom": "SR1.2.0.0-10512",
                        "firmwareTo": "SR1.2.0.0-10657",
                        "make": "SEQUANS Communications",
                        "model": "GM01Q",
                        "status": "CampaignRequestPending",
                        "startDate": "2021-09-29",
                        "endDate": "2021-10-01",
                        "campaignTimeWindowList": [
                          {
                            "startTime": 18,
                            "endTime": 22
                          }
                        ]
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Upgrade identifier.",
                          "example": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
                          "type": "string"
                        },
                        "accountName": {
                          "description": "Account identifier.",
                          "example": "0000123456-00001",
                          "type": "string"
                        },
                        "firmwareFrom": {
                          "description": "Old firmware version (for firmware upgrade only).",
                          "example": "SR1.2.0.0-10512",
                          "type": "string"
                        },
                        "firmwareTo": {
                          "description": "New firmware version (for firmware upgrade only).",
                          "example": "SR1.2.0.0-10657",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "Available values: LWM2M.",
                          "example": "LWM2M",
                          "type": "string"
                        },
                        "make": {
                          "example": "SEQUANS Communications",
                          "type": "string"
                        },
                        "model": {
                          "example": "GM01Q",
                          "type": "string"
                        },
                        "startDate": {
                          "description": "Campaign start date.",
                          "example": "2021-09-29",
                          "type": "string",
                          "format": "date"
                        },
                        "endDate": {
                          "description": "Campaign end date.",
                          "example": "2021-10-01",
                          "type": "string",
                          "format": "date"
                        },
                        "status": {
                          "description": "Campaign status.",
                          "example": "CampaignRequestPending",
                          "type": "string"
                        },
                        "campaignName": {
                          "description": "Campaign name.",
                          "example": "Smart FOTA - test 4",
                          "type": "string"
                        },
                        "firmwareName": {
                          "description": "Firmware name (for firmware upgrade only).",
                          "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                          "type": "string"
                        },
                        "campaignTimeWindowList": {
                          "description": "List of allowed campaign time windows.",
                          "example": [
                            {
                              "startTime": 18,
                              "endTime": 22
                            }
                          ],
                          "type": "array",
                          "items": {
                            "id": "V3TimeWindow",
                            "title": "V3TimeWindow",
                            "description": "Time window.",
                            "example": {
                              "startTime": 18,
                              "endTime": 22
                            },
                            "type": "object",
                            "properties": {
                              "startTime": {
                                "description": "Start hour in range [0..23], current hour >= startTime.",
                                "example": 18,
                                "type": "integer",
                                "format": "int32"
                              },
                              "endTime": {
                                "description": "End hour in range [1..24], current hour < endTime.",
                                "example": 22,
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "required": [
                              "startTime",
                              "endTime"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "accountName",
                        "firmwareFrom",
                        "firmwareTo",
                        "protocol",
                        "make",
                        "model",
                        "startDate",
                        "endDate",
                        "status"
                      ]
                    }
                  example: '{"id":"4e03b882-936a-11ec-931f-76f56843c393","accountName":"0000123456-00001","campaignName":"modify-campaign-test-1","firmwareName":"NordicSemiconductorASA_nRF9160_ee58ac77-f1fd-4960-8dc4-4d32e118a6d4_4325d595-7b69-4474-ba39-9c177930aac3","protocol":"LWM2M","firmwareFrom":"ee58ac77-f1fd-4960-8dc4-4d32e118a6d4","firmwareTo":"4325d595-7b69-4474-ba39-9c177930aac3","make":"Nordic Semiconductor ASA","model":"nRF9160","status":"CampaignRequestQueued","startDate":"2022-02-23","endDate":"2022-02-24","campaignTimeWindowList":[{"startTime":14,"endTime":18}]}'
            '400':
              description: Unexpected error.
              body:
                application/json:
                  schema: |
                    {
                      "id": "FotaV3Result",
                      "title": "FotaV3Result",
                      "description": "Error response.",
                      "example": {
                        "errorCode": "error code string",
                        "errorMessage": "error message string"
                      },
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "description": "Error code string.",
                          "example": "error code string",
                          "type": "string"
                        },
                        "errorMessage": {
                          "description": "Error message string.",
                          "example": "error message string",
                          "type": "string"
                        }
                      },
                      "required": [
                        "errorCode",
                        "errorMessage"
                      ]
                    }
                  example: '{"errorCode":"error code string","errorMessage":"error message string"}'
      put:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to Add or Remove devices to an existing campaign.
        headers:
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "V3AddOrRemoveDeviceRequest",
                "title": "V3AddOrRemoveDeviceRequest",
                "description": "Add or remove device to existing upgrade information.",
                "example": {
                  "Type": "remove",
                  "deviceList": [
                    "15-digit IMEI"
                  ]
                },
                "type": "object",
                "properties": {
                  "Type": {
                    "description": "Operation either 'append' or 'remove'",
                    "example": "remove",
                    "type": "string"
                  },
                  "deviceList": {
                    "description": "Device IMEI list.",
                    "example": [
                      "15-digit IMEI"
                    ],
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "Type",
                  "deviceList"
                ]
              }
            example: '{"Type":"remove","deviceList":["15-digit IMEI"]}'
        responses:
          '200':
            description: Returns add or remove devices to existing upgrade information.
            body:
              application/json:
                schema: |
                  {
                    "id": "V3AddOrRemoveDeviceResult",
                    "title": "V3AddOrRemoveDeviceResult",
                    "description": "Add or remove devices to existing upgrade information.",
                    "example": {
                      "accountName": "0000123456-00001",
                      "campaignId": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
                      "deviceList": [
                        {
                          "deviceId": "15-digit IMEI",
                          "status": "AddDeviceSucceed",
                          "Reason": "Device added Successfully"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Account identifier.",
                        "example": "0000123456-00001",
                        "type": "string"
                      },
                      "campaignId": {
                        "description": "Campaign identifier.",
                        "example": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
                        "type": "string"
                      },
                      "deviceList": {
                        "description": "Array of devices changed.",
                        "example": [
                          {
                            "deviceId": "15-digit IMEI",
                            "status": "AddDeviceSucceed",
                            "Reason": "Device added Successfully"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "V3DeviceListItem",
                          "title": "V3DeviceListItem",
                          "description": "Device changed.",
                          "example": {
                            "deviceId": "15-digit IMEI",
                            "status": "AddDeviceSucceed",
                            "Reason": "Device added Successfully"
                          },
                          "type": "object",
                          "properties": {
                            "deviceId": {
                              "description": "Device IMEI.",
                              "example": "15-digit IMEI",
                              "type": "string"
                            },
                            "status": {
                              "description": "Success or failure.",
                              "example": "AddDeviceSucceed",
                              "type": "string"
                            },
                            "Reason": {
                              "description": "Result reason.",
                              "example": "Device added Successfully",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "accountName",
                      "campaignId",
                      "deviceList"
                    ]
                  }
                example: '{"accountName":"0000123456-00001","campaignId":"f858b8c4-2153-11ec-8c44-aeb16d1aa652","deviceList":[{"deviceId":"15-digit IMEI","status":"AddDeviceSucceed","Reason":"Device added Successfully"}]}'
          '400':
            description: Unexpected error.
            body:
              application/json:
                schema: |
                  {
                    "id": "FotaV3Result",
                    "title": "FotaV3Result",
                    "description": "Error response.",
                    "example": {
                      "errorCode": "error code string",
                      "errorMessage": "error message string"
                    },
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error code string.",
                        "example": "error code string",
                        "type": "string"
                      },
                      "errorMessage": {
                        "description": "Error message string.",
                        "example": "error message string",
                        "type": "string"
                      }
                    },
                    "required": [
                      "errorCode",
                      "errorMessage"
                    ]
                  }
                example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows a user to schedule a firmware upgrade for a list of devices.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "CampaignFirmwareUpgrade",
              "title": "CampaignFirmwareUpgrade",
              "description": "Firmware upgrade information.",
              "example": {
                "campaignName": "Smart FOTA - test 4",
                "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                "firmwareFrom": "SR1.2.0.0-10512",
                "firmwareTo": "SR1.2.0.0-10657",
                "protocol": "LWM2M",
                "startDate": "2021-09-29",
                "endDate": "2021-10-01",
                "campaignTimeWindowList": [
                  {
                    "startTime": 18,
                    "endTime": 22
                  }
                ],
                "deviceList": [
                  "15-digit IMEI"
                ]
              },
              "type": "object",
              "properties": {
                "firmwareName": {
                  "description": "Firmware name to upgrade to.",
                  "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                  "type": "string"
                },
                "firmwareFrom": {
                  "description": "Old firmware version.",
                  "example": "SR1.2.0.0-10512",
                  "type": "string"
                },
                "firmwareTo": {
                  "description": "New firmware version.",
                  "example": "SR1.2.0.0-10657",
                  "type": "string"
                },
                "protocol": {
                  "description": "Valid values include: LWM2M, OMA and HTTP.",
                  "example": "LWM2M",
                  "type": "string"
                },
                "startDate": {
                  "description": "Campaign start date.",
                  "example": "2021-09-29",
                  "type": "string",
                  "format": "date"
                },
                "endDate": {
                  "description": "Campaign end date.",
                  "example": "2021-10-01",
                  "type": "string",
                  "format": "date"
                },
                "deviceList": {
                  "description": "Device IMEI list.",
                  "example": [
                    "15-digit IMEI"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "campaignName": {
                  "description": "Campaign name.",
                  "example": "Smart FOTA - test 4",
                  "type": "string"
                },
                "campaignTimeWindowList": {
                  "description": "List of allowed campaign time windows.",
                  "example": [
                    {
                      "startTime": 18,
                      "endTime": 22
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "V3TimeWindow",
                    "title": "V3TimeWindow",
                    "description": "Time window.",
                    "example": {
                      "startTime": 18,
                      "endTime": 22
                    },
                    "type": "object",
                    "properties": {
                      "startTime": {
                        "description": "Start hour in range [0..23], current hour >= startTime.",
                        "example": 18,
                        "type": "integer",
                        "format": "int32"
                      },
                      "endTime": {
                        "description": "End hour in range [1..24], current hour < endTime.",
                        "example": 22,
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "required": [
                      "startTime",
                      "endTime"
                    ]
                  }
                }
              },
              "required": [
                "firmwareName",
                "firmwareFrom",
                "firmwareTo",
                "protocol",
                "startDate",
                "endDate",
                "deviceList"
              ]
            }
          example: '{"campaignName":"Smart FOTA - test 4","firmwareName":"SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657","firmwareFrom":"SR1.2.0.0-10512","firmwareTo":"SR1.2.0.0-10657","protocol":"LWM2M","startDate":"2021-09-29","endDate":"2021-10-01","campaignTimeWindowList":[{"startTime":18,"endTime":22}],"deviceList":["15-digit IMEI"]}'
      responses:
        '200':
          description: Return upgrade information.
          body:
            application/json:
              schema: |
                {
                  "id": "FirmwareCampaign",
                  "title": "FirmwareCampaign",
                  "description": "Firmware upgrade information.",
                  "example": {
                    "id": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
                    "accountName": "0000123456-00001",
                    "campaignName": "Smart FOTA - test 4",
                    "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                    "protocol": "LWM2M",
                    "firmwareFrom": "SR1.2.0.0-10512",
                    "firmwareTo": "SR1.2.0.0-10657",
                    "make": "SEQUANS Communications",
                    "model": "GM01Q",
                    "status": "CampaignRequestPending",
                    "startDate": "2021-09-29",
                    "endDate": "2021-10-01",
                    "campaignTimeWindowList": [
                      {
                        "startTime": 18,
                        "endTime": 22
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Upgrade identifier.",
                      "example": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
                      "type": "string"
                    },
                    "accountName": {
                      "description": "Account identifier.",
                      "example": "0000123456-00001",
                      "type": "string"
                    },
                    "firmwareFrom": {
                      "description": "Old firmware version (for firmware upgrade only).",
                      "example": "SR1.2.0.0-10512",
                      "type": "string"
                    },
                    "firmwareTo": {
                      "description": "New firmware version (for firmware upgrade only).",
                      "example": "SR1.2.0.0-10657",
                      "type": "string"
                    },
                    "protocol": {
                      "description": "Available values: LWM2M.",
                      "example": "LWM2M",
                      "type": "string"
                    },
                    "make": {
                      "example": "SEQUANS Communications",
                      "type": "string"
                    },
                    "model": {
                      "example": "GM01Q",
                      "type": "string"
                    },
                    "startDate": {
                      "description": "Campaign start date.",
                      "example": "2021-09-29",
                      "type": "string",
                      "format": "date"
                    },
                    "endDate": {
                      "description": "Campaign end date.",
                      "example": "2021-10-01",
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "description": "Campaign status.",
                      "example": "CampaignRequestPending",
                      "type": "string"
                    },
                    "campaignName": {
                      "description": "Campaign name.",
                      "example": "Smart FOTA - test 4",
                      "type": "string"
                    },
                    "firmwareName": {
                      "description": "Firmware name (for firmware upgrade only).",
                      "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                      "type": "string"
                    },
                    "campaignTimeWindowList": {
                      "description": "List of allowed campaign time windows.",
                      "example": [
                        {
                          "startTime": 18,
                          "endTime": 22
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V3TimeWindow",
                        "title": "V3TimeWindow",
                        "description": "Time window.",
                        "example": {
                          "startTime": 18,
                          "endTime": 22
                        },
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "description": "Start hour in range [0..23], current hour >= startTime.",
                            "example": 18,
                            "type": "integer",
                            "format": "int32"
                          },
                          "endTime": {
                            "description": "End hour in range [1..24], current hour < endTime.",
                            "example": 22,
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "required": [
                          "startTime",
                          "endTime"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "accountName",
                    "firmwareFrom",
                    "firmwareTo",
                    "protocol",
                    "make",
                    "model",
                    "startDate",
                    "endDate",
                    "status"
                  ]
                }
              example: '{"id":"f858b8c4-2153-11ec-8c44-aeb16d1aa652","accountName":"0000123456-00001","campaignName":"Smart FOTA - test 4","firmwareName":"SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657","protocol":"LWM2M","firmwareFrom":"SR1.2.0.0-10512","firmwareTo":"SR1.2.0.0-10657","make":"SEQUANS Communications","model":"GM01Q","status":"CampaignRequestPending","startDate":"2021-09-29","endDate":"2021-10-01","campaignTimeWindowList":[{"startTime":18,"endTime":22}]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
  /{acc}/{campaignId}:
    uriParameters:
      acc:
        description: Account identifier.
        type: string
        example: 0000123456-00001
        required: true
        displayName: acc
      campaignId:
        description: Firmware upgrade identifier.
        type: string
        example: f858b8c4-2153-11ec-8c44-aeb16d1aa652
        required: true
        displayName: campaignId
    get:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows the user to retrieve campaign level information for a specified campaign.
      responses:
        '200':
          description: Returns firmware upgrade information.
          body:
            application/json:
              schema: |
                {
                  "id": "Campaign",
                  "title": "Campaign",
                  "description": "Firmware upgrade information.",
                  "example": {
                    "id": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
                    "accountName": "0642233522-00001",
                    "campaignName": "Smart FOTA - test 4",
                    "protocol": "LWM2M",
                    "make": "SEQUANS Communications",
                    "model": "GM01Q",
                    "status": "CampaignPreScheduled",
                    "startDate": "2021-09-29",
                    "endDate": "2021-10-01",
                    "firmwareName": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                    "firmwareFrom": "SR1.2.0.0-10512",
                    "firmwareTo": "SR1.2.0.0-10657",
                    "campaignTimeWindowList": [
                      {
                        "startTime": 18,
                        "endTime": 22
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Upgrade identifier.",
                      "example": "f858b8c4-2153-11ec-8c44-aeb16d1aa652",
                      "type": "string"
                    },
                    "accountName": {
                      "description": "Account identifier.",
                      "example": "0642233522-00001",
                      "type": "string"
                    },
                    "protocol": {
                      "description": "The protocol of the firmware distribution. Default: LWM2M.",
                      "example": "LWM2M",
                      "type": "string"
                    },
                    "make": {
                      "description": "Applicable make.",
                      "example": "SEQUANS Communications",
                      "type": "string"
                    },
                    "model": {
                      "description": "Applicable model.",
                      "example": "GM01Q",
                      "type": "string"
                    },
                    "startDate": {
                      "description": "Campaign start date.",
                      "example": "2021-09-29",
                      "type": "string",
                      "format": "date"
                    },
                    "endDate": {
                      "description": "Campaign end date.",
                      "example": "2021-10-01",
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "description": "Firmware upgrade status.",
                      "example": "CampaignPreScheduled",
                      "type": "string"
                    },
                    "campaignName": {
                      "description": "Campaign name.",
                      "example": "Smart FOTA - test 4",
                      "type": "string"
                    },
                    "firmwareName": {
                      "description": "Name of firmware.",
                      "example": "SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657",
                      "type": "string"
                    },
                    "firmwareFrom": {
                      "description": "Old firmware version.",
                      "example": "SR1.2.0.0-10512",
                      "type": "string"
                    },
                    "firmwareTo": {
                      "description": "New firmware version.",
                      "example": "SR1.2.0.0-10657",
                      "type": "string"
                    },
                    "campaignTimeWindowList": {
                      "description": "List of allowed campaign time windows.",
                      "example": [
                        {
                          "startTime": 18,
                          "endTime": 22
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "V3TimeWindow",
                        "title": "V3TimeWindow",
                        "description": "Time window.",
                        "example": {
                          "startTime": 18,
                          "endTime": 22
                        },
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "description": "Start hour in range [0..23], current hour >= startTime.",
                            "example": 18,
                            "type": "integer",
                            "format": "int32"
                          },
                          "endTime": {
                            "description": "End hour in range [1..24], current hour < endTime.",
                            "example": 22,
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "required": [
                          "startTime",
                          "endTime"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "accountName",
                    "protocol",
                    "make",
                    "model",
                    "startDate",
                    "endDate",
                    "status"
                  ]
                }
              example: '{"id":"f858b8c4-2153-11ec-8c44-aeb16d1aa652","accountName":"0642233522-00001","campaignName":"Smart FOTA - test 4","protocol":"LWM2M","make":"SEQUANS Communications","model":"GM01Q","status":"CampaignPreScheduled","startDate":"2021-09-29","endDate":"2021-10-01","firmwareName":"SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657","firmwareFrom":"SR1.2.0.0-10512","firmwareTo":"SR1.2.0.0-10657","campaignTimeWindowList":[{"startTime":18,"endTime":22}]}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: This endpoint allows user to cancel a firmware campaign. A firmware campaign already started can not be cancelled.
      responses:
        '200':
          description: Returns cancellation status.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3SuccessResult",
                  "title": "FotaV3SuccessResult",
                  "description": "Cancelation status.",
                  "example": {
                    "success": true
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "True or false.",
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              example: '{"success":true}'
        '400':
          description: Unexpected error.
          body:
            application/json:
              schema: |
                {
                  "id": "FotaV3Result",
                  "title": "FotaV3Result",
                  "description": "Error response.",
                  "example": {
                    "errorCode": "error code string",
                    "errorMessage": "error message string"
                  },
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "description": "Error code string.",
                      "example": "error code string",
                      "type": "string"
                    },
                    "errorMessage": {
                      "description": "Error message string.",
                      "example": "error message string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "errorCode",
                    "errorMessage"
                  ]
                }
              example: '{"errorCode":"error code string","errorMessage":"error message string"}'
/v1:
  /devices/license/actions/assign:
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Assigns SIM-Secure for IoT licenses to SIMs.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
        X-Request-ID:
          description: Transaction Id.
          type: string
          required: false
          displayName: X-Request-ID
          pattern: ^[0-9]-[0-9]{3,32}$
          minLength: '3'
          maxLength: '32'
      body:
        application/json:
          schema: |
            {
              "id": "AssignLicenseRequest",
              "title": "AssignLicenseRequest",
              "description": "Request to assign license to devices.",
              "example": {
                "accountName": "0000123456-00001",
                "skuNumber": "SIMSec-IoT-Lt",
                "devices": [
                  {
                    "deviceIds": [
                      {
                        "id": "864508030109877",
                        "kind": "IMEI"
                      }
                    ]
                  }
                ]
              },
              "type": "object",
              "properties": {
                "accountName": {
                  "description": "The name of a billing account.This parameter is required only if the UWS account used for the current API session has access to multiple accounts. An account name is usually numeric, and must include any leading zeros.",
                  "example": "0000123456-00001",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 32
                },
                "devices": {
                  "description": "A list of 4G devices.",
                  "example": [
                    {
                      "deviceIds": [
                        {
                          "id": "864508030109877",
                          "kind": "IMEI"
                        }
                      ]
                    }
                  ],
                  "type": "array",
                  "items": {
                    "id": "LicenseDeviceList",
                    "title": "LicenseDeviceList",
                    "description": "List of all devices.",
                    "example": {
                      "deviceIds": [
                        {
                          "id": "864508030109877",
                          "kind": "IMEI"
                        }
                      ]
                    },
                    "type": "object",
                    "properties": {
                      "deviceIds": {
                        "description": "For 4G devices, IMEI (decimal, up to 15 digits).",
                        "example": [
                          {
                            "id": "864508030109877",
                            "kind": "IMEI"
                          }
                        ],
                        "type": "array",
                        "items": {
                          "id": "LicenseDeviceId",
                          "title": "LicenseDeviceId",
                          "description": "Id of the devices.",
                          "example": {
                            "id": "864508030109877",
                            "kind": "IMEI"
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "For 4G devices, IMEI (decimal, up to 15 digits) for unassign and ICCID (decimal, up to 20 digits) for assign.",
                              "example": "864508030109877",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 32,
                              "pattern": "^[0-9]{3,32}$"
                            },
                            "kind": {
                              "description": "For 4G devices, ICCID (decimal, up to 20 digits) for unassign and IMEI (decimal, up to 15 digits) for assign.",
                              "example": "IMEI",
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 6,
                              "pattern": "^[A-Z]{3,6}$"
                            }
                          }
                        },
                        "maxItems": 100
                      },
                      "ipAddress": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 32,
                        "pattern": "^[0-9].[0-9].[0-9].[0-9]{3,32}$"
                      }
                    }
                  },
                  "maxItems": 100
                },
                "skuNumber": {
                  "description": "The Stock Keeping Unit (SKU). Valid skuNumbers for license types: “SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.",
                  "example": "SIMSec-IoT-Lt",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 32
                }
              }
            }
          example: '{"accountName":"0000123456-00001","skuNumber":"SIMSec-IoT-Lt","devices":[{"deviceIds":[{"id":"864508030109877","kind":"IMEI"}]}]}'
      responses:
        '200':
          description: Success response.
          body:
            application/json:
              schema: |
                {
                  "id": "SecuritySuccessResult",
                  "title": "SecuritySuccessResult",
                  "description": "Success response.",
                  "example": {
                    "requestId": "c3f3d17c-79ff-4b35-82df-94446785b6e0"
                  },
                  "type": "object",
                  "properties": {
                    "requestId": {
                      "description": "A unique string that associates the request with the results that are sent via a callback message.The ThingSpace Platform sends a separate callback message for each device that matches the request criteria, indicating whether the operation succeeded for that device and containing any requested information. All callback messages will have the same requestId.",
                      "example": "c3f3d17c-79ff-4b35-82df-94446785b6e0",
                      "type": "string"
                    }
                  }
                }
              example: '{"requestId":"c3f3d17c-79ff-4b35-82df-94446785b6e0"}'
        '400':
          description: Bad request.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '401':
          description: Unauthorized request.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '403':
          description: Request Forbidden.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '404':
          description: Not Found / Does not exist.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '406':
          description: Format / Request Unacceptable.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '429':
          description: Too many requests.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '0':
          description: Error response.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
    delete:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Unassigns SIM-Secure for IoT Flexible and Flexible Bundle license from SIMs.
      headers:
        X-Request-ID:
          description: Transaction Id.
          type: string
          required: true
          displayName: X-Request-ID
          pattern: ^[0-9]-[0-9]{3,32}$
          minLength: '3'
          maxLength: '32'
      responses:
        '200':
          description: Success response.
          body:
            application/json:
              schema: |
                {
                  "id": "SecuritySuccessResult",
                  "title": "SecuritySuccessResult",
                  "description": "Success response.",
                  "example": {
                    "requestId": "c3f3d17c-79ff-4b35-82df-94446785b6e0"
                  },
                  "type": "object",
                  "properties": {
                    "requestId": {
                      "description": "A unique string that associates the request with the results that are sent via a callback message.The ThingSpace Platform sends a separate callback message for each device that matches the request criteria, indicating whether the operation succeeded for that device and containing any requested information. All callback messages will have the same requestId.",
                      "example": "c3f3d17c-79ff-4b35-82df-94446785b6e0",
                      "type": "string"
                    }
                  }
                }
              example: '{"requestId":"1f28c944-d007-44c9-9543-003b8820cc69"}'
        '400':
          description: Bad request.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '401':
          description: Unauthorized request.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '403':
          description: Request forbidden.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '404':
          description: Not Found / Does not exist.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '406':
          description: Format / Request Unacceptable.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '429':
          description: Too many requests.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '0':
          description: Error response.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
  /accounts/subscriptions/actions/list:
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Retrieves the total number of SIM-Secure for IoT subscription licenses purchased for your account by license type, and lists the number of licenses assigned and available for each license type.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
        X-Request-ID:
          description: Transaction Id.
          type: string
          required: false
          displayName: X-Request-ID
          pattern: ^[0-9]-[0-9]{3,32}$
          minLength: '3'
          maxLength: '32'
      body:
        application/json:
          schema: |
            {
              "id": "SecuritySubscriptionRequest",
              "title": "SecuritySubscriptionRequest",
              "description": "Request for account subscription.",
              "example": {
                "accountName": "000012345600001",
                "skuNumber": "SIMSec-IoT-Lt"
              },
              "type": "object",
              "properties": {
                "accountName": {
                  "description": "The name of a billing account.",
                  "example": "000012345600001",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 32,
                  "pattern": "^[A-Za-z0-9]{3,32}$"
                },
                "skuNumber": {
                  "description": "The Stock Keeping Unit (SKU). Valid skuNumbers for SIM-Secure for IoT are:SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.*“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.",
                  "example": "SIMSec-IoT-Lt",
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 32
                }
              }
            }
          example: '{"accountName":"000012345600001","skuNumber":"SIMSec-IoT-Lt"}'
      responses:
        '200':
          description: Security subscription result.
          body:
            application/json:
              schema: |
                {
                  "id": "SecuritySubscriptionResult",
                  "title": "SecuritySubscriptionResult",
                  "description": "Response for a subscription request.",
                  "example": {
                    "accountName": "000012345600001",
                    "subscriptionList": [
                      {
                        "skuNumber": "TS-BUNDLE-KTO-SIMSEC-MRC",
                        "licenseType": "Flexible Bundle",
                        "licensePurchased": 9,
                        "licenseAssigned": 7,
                        "licenseAvailable": 1
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "accountName": {
                      "description": "The name of a billing account.",
                      "example": "000012345600001",
                      "type": "string"
                    },
                    "subscriptionList": {
                      "description": "The list of SKU numbers and counts for each license type specified in the request.",
                      "example": [
                        {
                          "skuNumber": "TS-BUNDLE-KTO-SIMSEC-MRC",
                          "licenseType": "Flexible Bundle",
                          "licensePurchased": 9,
                          "licenseAssigned": 7,
                          "licenseAvailable": 1
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "SecuritySubscription",
                        "title": "SecuritySubscription",
                        "description": "Subscription of the device.",
                        "example": {
                          "skuNumber": "TS-BUNDLE-KTO-SIMSEC-MRC",
                          "licenseType": "Flexible Bundle",
                          "licensePurchased": 9,
                          "licenseAssigned": 7,
                          "licenseAvailable": 1
                        },
                        "type": "object",
                        "properties": {
                          "extendedAttributes": {
                            "description": "Attributes of the subscription.",
                            "type": "array",
                            "items": {
                              "id": "ExtendedAttributes",
                              "title": "ExtendedAttributes",
                              "description": "Additional properties associated with data.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            },
                            "maxItems": 5
                          },
                          "licenseAssigned": {
                            "description": "The total number of licenses for this license type that are assigned to device SIMs.",
                            "example": 7,
                            "type": "integer",
                            "minimum": 0.0,
                            "maximum": 10.0,
                            "format": "int32"
                          },
                          "licenseAvailable": {
                            "description": "The total number of licenses for this license type that are available to assign to device SIMs.",
                            "example": 1,
                            "type": "integer",
                            "minimum": 0.0,
                            "maximum": 10.0,
                            "format": "int32"
                          },
                          "licensePurchased": {
                            "description": "The total number of licenses purchased for the license type.",
                            "example": 9,
                            "type": "integer",
                            "minimum": 0.0,
                            "maximum": 10.0,
                            "format": "int32"
                          },
                          "licenseType": {
                            "description": "The license type associated with the skuNumber.",
                            "example": "Flexible Bundle",
                            "type": "string"
                          },
                          "skuNumber": {
                            "description": "The skuNumber that identifies the license type.",
                            "example": "TS-BUNDLE-KTO-SIMSEC-MRC",
                            "type": "string"
                          }
                        }
                      },
                      "maxItems": 5
                    }
                  }
                }
              example: '{"accountName":"000012345600001","subscriptionList":[{"skuNumber":"TS-BUNDLE-KTO-SIMSEC-MRC","licenseType":"Flexible Bundle","licensePurchased":9,"licenseAssigned":7,"licenseAvailable":1}]}'
        '400':
          description: Bad request.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '401':
          description: Unauthorized request.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '403':
          description: Request forbidden.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '404':
          description: Not Found / Does not exist.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '406':
          description: Format / Request Unacceptable.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '429':
          description: Too many requests.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
        '0':
          description: Error response.
          body:
            application/json:
              schema: |
                {
                  "id": "SecurityResult",
                  "title": "SecurityResult",
                  "description": "Error response.",
                  "type": "object",
                  "properties": {
                    "errorCode": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 3,
                      "pattern": "^[0-9]{3,3}$"
                    },
                    "errorMessage": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 32,
                      "pattern": "^[A-Za-z0-9]{3,32}$"
                    },
                    "errorUrl": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 64,
                      "pattern": "^https://[A-Za-z0-9].[A-Za-z]{3,64}$"
                    }
                  }
                }
/report:
  /aggregate:
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Calculate aggregated report per day with number of sessions and usage information. User will receive synchronous response for specified list of devices (Max 10) and date range (Max 180 days).
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "AggregateSessionReportRequest",
              "title": "AggregateSessionReportRequest",
              "description": "Aggregated report request.",
              "example": {
                "accountNumber": "0844021539-00001",
                "startDate": "2022-12-09T22:01:06.217Z",
                "endDate": "2022-12-09T22:01:08.734Z",
                "imei": [
                  "709312034493372"
                ],
                "deviceGroup": null,
                "dataPlan": null,
                "noSessionFlag": "false"
              },
              "type": "object",
              "properties": {
                "accountNumber": {
                  "description": "The unique identifier for the account.",
                  "example": "0844021539-00001",
                  "type": "string"
                },
                "imei": {
                  "description": "Devices for which return usage info. Could be 0, 1 or more. In case of 0 will return all devices belonging to customer (except of filtered by other parameters).",
                  "example": [
                    "709312034493372"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "startDate": {
                  "description": "Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.",
                  "example": "2022-12-09T22:01:06.217Z",
                  "type": "string"
                },
                "endDate": {
                  "description": "End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.",
                  "example": "2022-12-09T22:01:08.734Z",
                  "type": "string"
                },
                "deviceGroup": {
                  "description": "User defined group name the devices are a member of.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "deviceLabel": {
                  "description": "Optional filter parameter.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "dataPlan": {
                  "description": "The data plan the devices beign queried belong to.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "noSessionFlag": {
                  "description": "Optional filter parameter which return only devices with no sessions.",
                  "example": "false",
                  "type": "string"
                }
              },
              "required": [
                "accountNumber",
                "imei"
              ]
            }
          example: '{"accountNumber":"0844021539-00001","startDate":"2022-12-09T22:01:06.217Z","endDate":"2022-12-09T22:01:08.734Z","imei":["709312034493372"],"deviceGroup":null,"dataPlan":null,"noSessionFlag":"false"}'
      responses:
        '200':
          description: A successful response shows session and usage details for up to 10 devices.
          body:
            application/json:
              schema: |
                {
                  "id": "AggregateSessionReport",
                  "title": "AggregateSessionReport",
                  "description": "Session and usage details for up to 10 devices.",
                  "example": {
                    "txid": null,
                    "usage": [
                      {
                        "imei": "709312034493372",
                        "numberOfSessions": 1,
                        "bytesTransferred": 2057
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "txid": {
                      "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "usage": {
                      "description": "Contains usage per device.",
                      "example": [
                        {
                          "imei": "709312034493372",
                          "numberOfSessions": 1,
                          "bytesTransferred": 2057
                        }
                      ],
                      "type": "array",
                      "items": {
                        "id": "AggregateUsageItem",
                        "title": "AggregateUsageItem",
                        "description": "Contains usage information per device.",
                        "type": "object",
                        "properties": {
                          "imei": {
                            "description": "International Mobile Equipment Identifier. This is the ID of the device reporting usage.",
                            "example": "709312034493372",
                            "type": "string"
                          },
                          "numberOfSessions": {
                            "description": "Number of sessions established by the device reporting usage.",
                            "example": 1,
                            "type": "integer",
                            "format": "int32"
                          },
                          "bytesTransferred": {
                            "description": "The amount of data transferred by the device reporting usage, measured in Bytes.",
                            "example": 2057,
                            "type": "integer",
                            "format": "int32"
                          },
                          "example": {}
                        }
                      },
                      "uniqueItems": true
                    },
                    "errors": {
                      "description": "An object containing any errors reported by the device.",
                      "type": "array",
                      "items": {
                        "id": "AggregateUsageError",
                        "title": "AggregateUsageError",
                        "description": "Error reported by a device.",
                        "type": "object",
                        "properties": {
                          "imei": {
                            "description": "International Mobile Equipment Identifier. This is the ID of the device reporting errors.",
                            "type": "string"
                          },
                          "errorMessage": {
                            "description": "A general error message.",
                            "type": "string"
                          },
                          "errorResponse": {
                            "id": "IErrorMessage",
                            "title": "IErrorMessage",
                            "description": "Error message.",
                            "example": {
                              "httpStatusCode": "200 OK",
                              "errorCode": "INVALID_ACCESS"
                            },
                            "type": "object",
                            "properties": {
                              "errorCode": {
                                "title": "ErrorResponseCode",
                                "description": "Error Code.",
                                "example": "INVALID_ACCESS",
                                "type": "string",
                                "enum": [
                                  "INVALID_ACCESS",
                                  "INVALID_PARAMETER",
                                  "INTERNAL_ERROR",
                                  "SUCCESS"
                                ]
                              },
                              "errorMessage": {
                                "description": "Details and additional information about the error code.",
                                "type": "string"
                              },
                              "httpStatusCode": {
                                "title": "HttpStatusCode",
                                "description": "HTML error code and description.",
                                "example": "200 OK",
                                "type": "string",
                                "enum": [
                                  "100 CONTINUE",
                                  "101 SWITCHING_PROTOCOLS",
                                  "102 PROCESSING",
                                  "103 CHECKPOINT",
                                  "200 OK",
                                  "201 CREATED",
                                  "202 ACCEPTED",
                                  "203 NON_AUTHORITATIVE_INFORMATION",
                                  "204 NO_CONTENT",
                                  "205 RESET_CONTENT",
                                  "206 PARTIAL_CONTENT",
                                  "207 MULTI_STATUS",
                                  "208 ALREADY_REPORTED",
                                  "226 IM_USED",
                                  "300 MULTIPLE_CHOICES",
                                  "301 MOVED_PERMANENTLY",
                                  "302 FOUND",
                                  "302 MOVED_TEMPORARILY",
                                  "303 SEE_OTHER",
                                  "304 NOT_MODIFIED",
                                  "305 USE_PROXY",
                                  "307 TEMPORARY_REDIRECT",
                                  "308 PERMANENT_REDIRECT",
                                  "400 BAD_REQUEST",
                                  "401 UNAUTHORIZED",
                                  "402 PAYMENT_REQUIRED",
                                  "403 FORBIDDEN",
                                  "404 NOT_FOUND",
                                  "405 METHOD_NOT_ALLOWED",
                                  "406 NOT_ACCEPTABLE",
                                  "407 PROXY_AUTHENTICATION_REQUIRED",
                                  "408 REQUEST_TIMEOUT",
                                  "409 CONFLICT",
                                  "410 GONE",
                                  "411 LENGTH_REQUIRED",
                                  "412 PRECONDITION_FAILED",
                                  "413 PAYLOAD_TOO_LARGE",
                                  "413 REQUEST_ENTITY_TOO_LARGE",
                                  "414 URI_TOO_LONG",
                                  "414 REQUEST_URI_TOO_LONG",
                                  "415 UNSUPPORTED_MEDIA_TYPE",
                                  "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                                  "417 EXPECTATION_FAILED",
                                  "418 I_AM_A_TEAPOT",
                                  "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                                  "420 METHOD_FAILURE",
                                  "421 DESTINATION_LOCKED",
                                  "422 UNPROCESSABLE_ENTITY",
                                  "423 LOCKED",
                                  "424 FAILED_DEPENDENCY",
                                  "425 TOO_EARLY",
                                  "426 UPGRADE_REQUIRED",
                                  "428 PRECONDITION_REQUIRED",
                                  "429 TOO_MANY_REQUESTS",
                                  "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                                  "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                                  "500 INTERNAL_SERVER_ERROR",
                                  "501 NOT_IMPLEMENTED",
                                  "502 BAD_GATEWAY",
                                  "503 SERVICE_UNAVAILABLE",
                                  "504 GATEWAY_TIMEOUT",
                                  "505 HTTP_VERSION_NOT_SUPPORTED",
                                  "506 VARIANT_ALSO_NEGOTIATES",
                                  "507 INSUFFICIENT_STORAGE",
                                  "508 LOOP_DETECTED",
                                  "509 BANDWIDTH_LIMIT_EXCEEDED",
                                  "510 NOT_EXTENDED",
                                  "511 NETWORK_AUTHENTICATION_REQUIRED"
                                ]
                              },
                              "detailErrorMessage": {
                                "description": "More detail and information about the HTML error code.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "uniqueItems": true
                    }
                  },
                  "required": [
                    "txid"
                  ]
                }
              example: '{"txid":null,"usage":[{"imei":"709312034493372","numberOfSessions":1,"bytesTransferred":2057}]}'
        '400':
          description: Bad request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "400",
                      "Name": "400",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Found, Request will be queued\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Found, Request will be queued"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Found, Request will be queued"
                }
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "401",
                      "Name": "401",
                      "Value": "{\n  \"responseCode\": \"INVALID_ACCESS\",\n  \"message\": \"The access policy denied the resource operation for this user\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_ACCESS",
                    "message": "The access policy denied the resource operation for this user"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_ACCESS",
                  "message": "The access policy denied the resource operation for this user"
                }
        '403':
          description: Forbidden request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "403",
                      "Name": "403",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Certified\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Certified"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Certified"
                }
        '404':
          description: Bad request. Not found.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "404",
                      "Name": "404",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Inactive\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Inactive"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Inactive"
                }
        '409':
          description: Bad request. Conflict state.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "409",
                      "Name": "409",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Service Not Purchased\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Service Not Purchased"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Service Not Purchased"
                }
        '500':
          description: Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "500",
                      "Name": "500",
                      "Value": "{\n  \"responseCode\": \"INTERNAL_ERROR\",\n  \"message\": \"Device is active in several accounts\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INTERNAL_ERROR",
                    "message": "Device is active in several accounts"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INTERNAL_ERROR",
                  "message": "Device is active in several accounts"
                }
  /async/aggregate:
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Calculate aggregated report per day with number of sessions and usage information. User will receive an asynchronous callback for the specified list of devices (Max 10000) and date range (Max 180 days).
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "AggregateSessionReportRequest",
              "title": "AggregateSessionReportRequest",
              "description": "Aggregated session report request.",
              "example": {
                "accountNumber": "0844021539-00001",
                "startDate": "2022-12-09T22:01:06.217Z",
                "endDate": "2022-12-09T22:01:08.734Z",
                "imei": [
                  "709312034493372"
                ],
                "deviceGroup": null,
                "dataPlan": null,
                "noSessionFlag": "false"
              },
              "type": "object",
              "properties": {
                "accountNumber": {
                  "description": "The unique identifier for the account.",
                  "example": "0844021539-00001",
                  "type": "string"
                },
                "imei": {
                  "description": "Devices for which return usage info. Could be 0, 1 or more. In case of 0 will return all devices belonging to customer (except of filtered by other parameters).",
                  "example": [
                    "709312034493372"
                  ],
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "startDate": {
                  "description": "Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.",
                  "example": "2022-12-09T22:01:06.217Z",
                  "type": "string"
                },
                "endDate": {
                  "description": "End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.",
                  "example": "2022-12-09T22:01:08.734Z",
                  "type": "string"
                },
                "deviceGroup": {
                  "description": "User defined group name the devices are a member of.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "deviceLabel": {
                  "description": "Optional filter parameter.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "dataPlan": {
                  "description": "The data plan the devices beign queried belong to.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "noSessionFlag": {
                  "description": "Optional filter parameter which return only devices with no sessions.",
                  "example": "false",
                  "type": "string"
                }
              },
              "required": [
                "accountNumber",
                "imei"
              ]
            }
          example: '{"accountNumber":"0844021539-00001","startDate":"2022-12-09T22:01:06.217Z","endDate":"2022-12-09T22:01:08.734Z","imei":["709312034493372"],"deviceGroup":null,"dataPlan":null,"noSessionFlag":"false"}'
      responses:
        '200':
          description: A successful response shows the request is queued with a unique `txid` to identify the report data with.
          body:
            application/json:
              schema: |
                {
                  "id": "AggregatedReportCallbackResult",
                  "title": "AggregatedReportCallbackResult",
                  "description": "Aggregated usage report (Asynchronous).",
                  "example": {
                    "txid": "60c07fff-470b-4d6d-afcc-75e6a7c238f6",
                    "status": "QUEUED"
                  },
                  "type": "object",
                  "properties": {
                    "txid": {
                      "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
                      "example": "60c07fff-470b-4d6d-afcc-75e6a7c238f6",
                      "type": "string"
                    },
                    "status": {
                      "title": "AggregatedReportCallbackStatus",
                      "description": "QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all other requests are QUEUED.",
                      "example": "QUEUED",
                      "type": "string",
                      "enum": [
                        "QUEUED",
                        "COMPLETED"
                      ]
                    }
                  },
                  "required": [
                    "txid"
                  ]
                }
              example: '{"txid":"60c07fff-470b-4d6d-afcc-75e6a7c238f6","status":"QUEUED"}'
        '400':
          description: Bad request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "400",
                      "Name": "400",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Found, Request will be queued\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Found, Request will be queued"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Found, Request will be queued"
                }
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "401",
                      "Name": "401",
                      "Value": "{\n  \"responseCode\": \"INVALID_ACCESS\",\n  \"message\": \"The access policy denied the resource operation for this user\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_ACCESS",
                    "message": "The access policy denied the resource operation for this user"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_ACCESS",
                  "message": "The access policy denied the resource operation for this user"
                }
        '403':
          description: Forbidden request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "403",
                      "Name": "403",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Certified\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Certified"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Certified"
                }
        '404':
          description: Bad request. Not found.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "404",
                      "Name": "404",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Inactive\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Inactive"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Inactive"
                }
        '409':
          description: Bad request. Conflict state.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "409",
                      "Name": "409",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Service Not Purchased\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Service Not Purchased"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Service Not Purchased"
                }
        '500':
          description: Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "500",
                      "Name": "500",
                      "Value": "{\n  \"responseCode\": \"INTERNAL_ERROR\",\n  \"message\": \"Device is active in several accounts\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INTERNAL_ERROR",
                    "message": "Device is active in several accounts"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INTERNAL_ERROR",
                  "message": "Device is active in several accounts"
                }
  /sessions:
    post:
      securedBy:
      - thingspace_oauth
      - VZ-M2M-Token
      description: Detailed report of session duration and number of bytes transferred per day.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "SessionReportRequest",
              "title": "SessionReportRequest",
              "description": "Request for sessions report.",
              "example": {
                "accountNumber": "0844021539-00001",
                "startDate": "2022-12-09T22:01:06.217Z",
                "endDate": "2022-12-09T22:01:08.734Z",
                "imei": "709312034493372",
                "durationLow": null,
                "durationHigh": null
              },
              "type": "object",
              "properties": {
                "accountNumber": {
                  "description": "Account Number.",
                  "example": "0844021539-00001",
                  "type": "string"
                },
                "imei": {
                  "description": "Device ids.",
                  "example": "709312034493372",
                  "type": "string"
                },
                "startDate": {
                  "description": "Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.",
                  "example": "CURRENT_MONTH",
                  "type": "string"
                },
                "endDate": {
                  "description": "End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.",
                  "example": "CURRENT_MONTH",
                  "type": "string"
                },
                "durationLow": {
                  "description": "The Low value of session duration.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "durationHigh": {
                  "description": "The High value of session duration.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                }
              },
              "required": [
                "accountNumber",
                "imei"
              ]
            }
          example: '{"accountNumber":"0844021539-00001","startDate":"2022-12-09T22:01:06.217Z","endDate":"2022-12-09T22:01:08.734Z","imei":"709312034493372","durationLow":null,"durationHigh":null}'
      responses:
        '200':
          description: A successful response includes the session information for an individual device.
          body:
            application/json:
              schema: |
                {
                  "id": "SessionReport",
                  "title": "SessionReport",
                  "description": "Session report for a device.",
                  "example": {
                    "id": "709312034493372",
                    "txid": "60c07fff-470b-4d6d-afcc-75e6a7c238f6"
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The 10-digit ID of the device.",
                      "example": "709312034493372",
                      "type": "string"
                    },
                    "txid": {
                      "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
                      "example": "60c07fff-470b-4d6d-afcc-75e6a7c238f6",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "sessions": {
                      "description": "An object containing the start and end time of the session with the amount of data transferred.",
                      "type": "array",
                      "items": {
                        "id": "DailyUsageItem",
                        "title": "DailyUsageItem",
                        "description": "Contains only dates when device had sessions.",
                        "type": "object",
                        "properties": {
                          "startTime": {
                            "description": "Start date of session. ISO 8601 format.",
                            "type": "string"
                          },
                          "endTime": {
                            "description": "End date of session. ISO 8601 format.",
                            "type": "string"
                          },
                          "numBytes": {
                            "description": "Amount of data transferred, measured in Bytes.",
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    },
                    "example": {}
                  },
                  "required": [
                    "id",
                    "txid"
                  ]
                }
              example: '{"id":"709312034493372","txid":"60c07fff-470b-4d6d-afcc-75e6a7c238f6"}'
        '400':
          description: Bad request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "400",
                      "Name": "400",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Found, Request will be queued\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Found, Request will be queued"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Found, Request will be queued"
                }
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "401",
                      "Name": "401",
                      "Value": "{\n  \"responseCode\": \"INVALID_ACCESS\",\n  \"message\": \"The access policy denied the resource operation for this user\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_ACCESS",
                    "message": "The access policy denied the resource operation for this user"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_ACCESS",
                  "message": "The access policy denied the resource operation for this user"
                }
        '403':
          description: Forbidden request.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "403",
                      "Name": "403",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Not Certified\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Not Certified"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Not Certified"
                }
        '404':
          description: Bad request. Not found.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "404",
                      "Name": "404",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Device Inactive\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Device Inactive"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Device Inactive"
                }
        '409':
          description: Bad request. Conflict state.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "409",
                      "Name": "409",
                      "Value": "{\n  \"responseCode\": \"INVALID_PARAMETER\",\n  \"message\": \"Service Not Purchased\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INVALID_PARAMETER",
                    "message": "Service Not Purchased"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INVALID_PARAMETER",
                  "message": "Service Not Purchased"
                }
        '500':
          description: Internal Server Error.
          body:
            application/json:
              schema: |
                {
                  "id": "HyperPreciseLocationResult",
                  "title": "HyperPreciseLocationResult",
                  "description": "Error response.",
                  "examples": [
                    {
                      "Id": "500",
                      "Name": "500",
                      "Value": "{\n  \"responseCode\": \"INTERNAL_ERROR\",\n  \"message\": \"Device is active in several accounts\"\n}",
                      "ExternalValue": null,
                      "Description": null
                    }
                  ],
                  "example": {
                    "responseCode": "INTERNAL_ERROR",
                    "message": "Device is active in several accounts"
                  },
                  "type": "object",
                  "properties": {
                    "responseCode": {
                      "title": "ErrorResponseCode",
                      "description": "Error Code.",
                      "example": "INVALID_ACCESS",
                      "type": "string",
                      "enum": [
                        "INVALID_ACCESS",
                        "INVALID_PARAMETER",
                        "INTERNAL_ERROR",
                        "SUCCESS"
                      ]
                    },
                    "message": {
                      "description": "Error message.",
                      "type": "string"
                    },
                    "fault": {
                      "id": "HyperPreciseLocationFault",
                      "title": "HyperPreciseLocationFault",
                      "description": "Fault occurred while responding.",
                      "example": {
                        "code": "900906",
                        "message": "No matching resource found in the API for the given request",
                        "description": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL."
                      },
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "Hyper precise location fault code.",
                          "example": "900906",
                          "type": "string"
                        },
                        "message": {
                          "description": "Hyper precise location fault message.",
                          "example": "No matching resource found in the API for the given request",
                          "type": "string"
                        },
                        "description": {
                          "description": "Hyper precise location fault description.",
                          "example": "Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL",
                          "type": "string"
                        }
                      }
                    },
                    "example": {}
                  }
                }
              example: |
                {
                  "responseCode": "INTERNAL_ERROR",
                  "message": "Device is active in several accounts"
                }
/api:
  /v1:
    /vendors/registration:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: >
          With this API call the users (clients) register themselves as Vendors to the IMP system. Therefore, when a registration is initiated from a device or software service to the IMP system with the registered VendorID, then the client registration will be authorized.
        headers:
          BasicToken:
            description: This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).
            type: string
            example: RGFrb3RhQ2xpZWnTAtYjNhMjGyYWE0ZWMz
            required: true
            displayName: BasicToken
            pattern: ^[A-Za-z0-9]+$
            maxLength: '256'
          Username:
            description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
            type: string
            example: VerizonImpUser
            required: true
            displayName: Username
            pattern: ^[@\-\w\.]+$
            maxLength: '64'
          Password:
            description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
            type: string
            example: Some-Password_123
            required: true
            displayName: Password
            pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
            maxLength: '128'
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - application/json
        body:
          application/json:
            schema: |
              {
                "id": "VendorRegistrationRequest",
                "title": "VendorRegistrationRequest",
                "description": "Request for /vendors/registration endpoint. It requires the VendorID and ThingSpace Billing Account number to be defined.",
                "example": {
                  "VendorID": "VerizonIMP",
                  "ThingSpaceBillingAccount": "0242080520-00001"
                },
                "type": "object",
                "properties": {
                  "VendorID": {
                    "description": "The ID the vendor wants it's devices to be registered under. E.g. Verizon, GM, Ford, etc.",
                    "example": "VerizonIMP",
                    "type": "string",
                    "maxLength": 64,
                    "pattern": "^[a-zA-Z0-9]+$"
                  },
                  "ThingSpaceBillingAccount": {
                    "description": "The ThingSpace Billing Account number.",
                    "example": "0242080520-00001",
                    "type": "string",
                    "maxLength": 16,
                    "pattern": "^\\d{10}-\\d{5}$"
                  }
                },
                "required": [
                  "VendorID",
                  "ThingSpaceBillingAccount"
                ]
              }
            example: ''
        responses:
          '201':
            description: Successful Vendor Registration
            body:
              application/json:
                schema: |
                  {
                    "id": "VendorRegistrationResponse",
                    "title": "VendorRegistrationResponse",
                    "description": "Response for /vendors/registration. It provides a response if the vendor wa added to the system or updated with the new data.",
                    "type": "object",
                    "properties": {
                      "ActionType": {
                        "title": "ActionType",
                        "description": "The type of action the vendor registration service took for the request\n\nValues:\n- **Added** - A new vendor was added to the system\n- **Updated** - The existing vendor was updated with the newly provided properties",
                        "example": "Added",
                        "type": "string",
                        "enum": [
                          "Added",
                          "Updated"
                        ]
                      }
                    },
                    "required": [
                      "ActionType"
                    ]
                  }
          '202':
            description: Successful Vendor Registration Update
            body:
              application/json:
                schema: |
                  {
                    "id": "VendorRegistrationResponse",
                    "title": "VendorRegistrationResponse",
                    "description": "Response for /vendors/registration. It provides a response if the vendor wa added to the system or updated with the new data.",
                    "type": "object",
                    "properties": {
                      "ActionType": {
                        "title": "ActionType",
                        "description": "The type of action the vendor registration service took for the request\n\nValues:\n- **Added** - A new vendor was added to the system\n- **Updated** - The existing vendor was updated with the newly provided properties",
                        "example": "Added",
                        "type": "string",
                        "enum": [
                          "Added",
                          "Updated"
                        ]
                      }
                    },
                    "required": [
                      "ActionType"
                    ]
                  }
          '400':
            description: Invalid Request
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '401':
            description: Unauthorized Request
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '403':
            description: Forbidden Request
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '429':
            description: Too Many Requests
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '503':
            description: Internal Server Error
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '0':
            description: Forbidden
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
      delete:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: >
          With this API call the users (clients) can unregister themselves from the IMP system. The devices and services for this Vendor will no longer be able to use the IMP Message Exchange.
        headers:
          BasicToken:
            description: This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).
            type: string
            example: RGFrb3RhQ2xpZWnTAtYjNhMjGyYWE0ZWMz
            required: true
            displayName: BasicToken
            pattern: ^[A-Za-z0-9]+$
            maxLength: '256'
          Username:
            description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
            type: string
            example: VerizonImpUser
            required: true
            displayName: Username
            pattern: ^[@\-\w\.]+$
            maxLength: '64'
          Password:
            description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
            type: string
            example: Some-Password_123
            required: true
            displayName: Password
            pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
            maxLength: '128'
        queryParameters:
          VendorID:
            description: The VendorID set during the Vendor registration call.
            type: string
            example: VerizonIMP
            required: true
            displayName: VendorID
            pattern: ^[a-zA-Z0-9]+$
            maxLength: '64'
        responses:
          '204':
            description: Successful Deletion
          '400':
            description: Invalid Request
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '401':
            description: Unauthorized Request
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '403':
            description: Forbidden Request
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '429':
            description: Too Many Requests
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '503':
            description: Internal Server Error
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '0':
            description: Forbidden
            body:
              application/json:
                schema: |
                  {
                    "id": "IMPResponseError",
                    "title": "IMPResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
    /mapdata:
      post:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to upload map messages in asn.1 J2735 encoded format. The MapData can have one or more intersections.
        headers:
          BasicToken:
            description: This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).
            type: string
            example: RGFrb3RhQ2xpZWnTAtYjNhMjGyYWE0ZWMz
            required: true
            displayName: BasicToken
            pattern: ^[A-Za-z0-9]+$
            maxLength: '256'
          Username:
            description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
            type: string
            example: VerizonImpUser
            required: true
            displayName: Username
            pattern: ^[@\-\w\.]+$
            maxLength: '64'
          Password:
            description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
            type: string
            example: Some-Password_123
            required: true
            displayName: Password
            pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
            maxLength: '128'
          Content-Type:
            required: true
            displayName: Content-Type
            enum:
            - text/plain
        body:
          text/plain:
            schema: |
              {
                "type": "string",
                "maxLength": 1000000,
                "pattern": "^[A-Za-z0-9]+$"
              }
            example: ''
        responses:
          '201':
            description: Map message/s successfully processed
            body:
              text/plain:
                schema: |
                  {
                    "type": "string",
                    "maxLength": 100,
                    "pattern": "^[\\w\\s<>=+:;,\"'\\-\\?\\.\\!]+$"
                  }
          '400':
            description: Invalid request
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '401':
            description: Unauthorized
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '403':
            description: Forbidden Request
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '429':
            description: Too Many Requests
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '503':
            description: Internal server Error
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '0':
            description: Forbidden
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
      get:
        securedBy:
        - thingspace_oauth
        - VZ-M2M-Token
        description: This endpoint allows user to download SAE J2735 MAP messages in ASN.1 UPER format. The area for the MAP messages is needed to be defined in the query.
        headers:
          BasicToken:
            description: This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).
            type: string
            example: RGFrb3RhQ2xpZWnTAtYjNhMjGyYWE0ZWMz
            required: true
            displayName: BasicToken
            pattern: ^[A-Za-z0-9]+$
            maxLength: '256'
          Username:
            description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
            type: string
            example: Imp-Us3r@verizon.com
            required: true
            displayName: Username
            pattern: ^[@\-\w\.]+$
            maxLength: '64'
          Password:
            description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
            type: string
            example: Some-Password_123
            required: true
            displayName: Password
            pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
            maxLength: '128'
        queryParameters:
          GeoFence:
            type: string
            required: true
            displayName: GeoFence
        responses:
          '200':
            description: The response is a list line separated ASN.1 UPER J2735 base64 encoded MapData messages
            body:
              text/plain:
                schema: |
                  {
                    "type": "string",
                    "maxLength": 1000000,
                    "pattern": "^[\\w\\s<>=+:;,\"'\\-\\?\\.\\!]+$"
                  }
          '401':
            description: Unauthorized
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '403':
            description: Forbidden Request
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '429':
            description: Too Many Requests
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '503':
            description: Internal server Error
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
          '0':
            description: Forbidden
            body:
              application/json:
                schema: |
                  {
                    "id": "MapDataResponseError",
                    "title": "MapDataResponseError",
                    "description": "error response structure",
                    "type": "object",
                    "properties": {
                      "error": {
                        "description": "The short summary of the error",
                        "example": "Error Summary",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 1024,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      },
                      "description": {
                        "description": "The detailed description of the error",
                        "example": "Error Description",
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 4096,
                        "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\"'':,.\\/<>?|\\s]+$"
                      }
                    },
                    "required": [
                      "error",
                      "description"
                    ]
                  }
    /clients:
      /registration:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: >
            With this API call the user (client) registers its device or software service to the IMP system. Therefore, when a connection is initiated from the device or software service to the IMP system along with the credential provided by this registration call, then the connection will be authorized.

            Note 1: One user can register multiple devices or software services, which can all be used at the same time.


            Note 2: The user needs to authenticate with their ThingSpace credentials and request a bearer token in order to call this API.
          headers:
            Username:
              description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
              type: string
              example: VerizonImpUser
              required: true
              displayName: Username
              pattern: ^[@\-\w\.]+$
              maxLength: '64'
            Password:
              description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
              type: string
              example: Some-Password_123
              required: true
              displayName: Password
              pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
              maxLength: '128'
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "ClientRegistrationRequest",
                  "title": "ClientRegistrationRequest",
                  "description": "Request for /clients/registration endpoint. It requires the Client Type, Subtype and Vendor to be defined.",
                  "type": "object",
                  "properties": {
                    "ClientType": {},
                    "ClientSubtype": {
                      "title": "ClientSubtype",
                      "description": "The subtype or subgroup of the client type. This further specifies the client type. For example it will specify if the client is a passenger car or a truck. See the ClientType description for the supported Subtypes for each client type.",
                      "type": "string",
                      "enum": [
                        "PassengerCar",
                        "Truck",
                        "Bus",
                        "EmergencyVehicle",
                        "SchoolBus",
                        "MaintenanceVehicle",
                        "Pedestrian",
                        "Bicycle",
                        "Scooter",
                        "Motorcycle",
                        "RoadSideUnit",
                        "Camera",
                        "Lidar",
                        "Radar",
                        "InductiveLoop",
                        "MagneticSensor",
                        "NA"
                      ]
                    },
                    "VendorID": {
                      "description": "The vendor that the client belongs to. E.g. Verizon, GM, Ford, etc.",
                      "example": "Verizon",
                      "type": "string",
                      "maxLength": 64,
                      "pattern": "^[a-zA-Z0-9]+$"
                    }
                  },
                  "required": [
                    "ClientType",
                    "ClientSubtype",
                    "VendorID"
                  ]
                }
              example: ''
          responses:
            '200':
              description: Successful Registration
              body:
                application/json:
                  schema: |
                    {
                      "id": "ClientRegistrationResponse",
                      "title": "ClientRegistrationResponse",
                      "description": "Response for /clients/registration. It provides a generated device ID and the certificates needed to connect the IMP Message Exchange.",
                      "type": "object",
                      "properties": {
                        "DeviceID": {
                          "description": "The generated ID for the device. It has to be used as the MQTT Client ID when connecting to the Message Exchange system or when asking for the connection endpoint.",
                          "example": "a4fcd16a-343d-4527-8203-2f46e3e4ff4b",
                          "type": "string",
                          "format": "uuid"
                        },
                        "Certificate": {
                          "id": "Certificate",
                          "title": "Certificate",
                          "description": "Structure for the credentials required to connect to the IMP MQTT Message Exchange.",
                          "type": "object",
                          "properties": {
                            "cert.pem": {
                              "description": "The string containing the certificate",
                              "example": "\"-----BEGIN CERTIFICATE-----\nMIIDrjCCApagAwIBAgICEAEwDQYJKoZIhvcNAQELBQAwUjELMAkGA1UEBhMCQVUx\n...\nuuA1Zog3aBOeeEzp9SEJBMTJRYPXbK4e8Xer+7m98OL/3g==\n-----END CERTIFICATE-----\" \n",
                              "type": "string",
                              "minLength": 0,
                              "maxLength": 4096,
                              "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                            },
                            "key.pem": {
                              "description": "The string containing the private key",
                              "example": "\"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDa1lF7DWudshQ5\n...\nJbjD2hacWGzpKzTfn5Mt1frE\n-----END PRIVATE KEY-----\"\n",
                              "type": "string",
                              "minLength": 0,
                              "maxLength": 4096,
                              "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                            }
                          },
                          "required": [
                            "cert.pem",
                            "key.pem"
                          ]
                        }
                      },
                      "required": [
                        "DeviceID",
                        "Certificate"
                      ]
                    }
            '400':
              description: Invalid Request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '401':
              description: Unauthorized Request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '403':
              description: Forbidden Request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '429':
              description: Too Many Requests
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '503':
              description: Internal Server Error
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '0':
              description: Forbidden
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
        delete:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: >
            With this API call the user (client) can unregister its devices and software services from the IMP system. The unregistered devices and services will no longer be able to use the IMP Message Exchange.
          headers:
            Username:
              description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
              type: string
              example: VerizonImpUser
              required: true
              displayName: Username
              pattern: ^[@\-\w\.]+$
              maxLength: '64'
            Password:
              description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
              type: string
              example: Some-Password_123
              required: true
              displayName: Password
              pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
              maxLength: '128'
          queryParameters:
            DeviceIDs:
              description: The Device IDs acquired through the registration API.
              required: true
              displayName: DeviceIDs
          responses:
            '204':
              description: Successful Deletion
            '400':
              description: Invalid Request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '401':
              description: Unauthorized Request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '403':
              description: Forbidden Request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '429':
              description: Too Many Requests
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '503':
              description: Internal Server Error
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '0':
              description: Forbidden
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
      /connection:
        post:
          securedBy:
          - thingspace_oauth
          - VZ-M2M-Token
          description: >
            With this API call the  or software service requests the MQTT URL for the location that it needs to connect. To determine the proper URL the device or software service needs to provide its ID (the one that was provided in the registration request), location (GPS coordinates), and whether it is on the Verizon cellular network or not.


            Note: The user needs to authenticate with their ThingSpace credentials and request a bearer token in order to call this API.
          headers:
            Username:
              description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
              type: string
              example: VerizonImpUser
              required: true
              displayName: Username
              pattern: ^[@\-\w\.]+$
              maxLength: '64'
            Password:
              description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
              type: string
              example: Some-Password_123
              required: true
              displayName: Password
              pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
              maxLength: '128'
            VendorID:
              description: The VendorID set during the Vendor registration call.
              type: string
              example: VerizonIMP
              required: true
              displayName: VendorID
              pattern: ^[a-zA-Z0-9]+$
              maxLength: '64'
            Content-Type:
              required: true
              displayName: Content-Type
              enum:
              - application/json
          body:
            application/json:
              schema: |
                {
                  "id": "ConnectionRequest",
                  "title": "ConnectionRequest",
                  "description": "Request for /clients/connection. It requires the device ID acquired in the registration request call; the geolocation of the device at the time of the request; and the network type (Verizon or non-Verizon). The system uses this information to determine with MQTT endpoint the device should use to connect the IMP Message Exchange.",
                  "example": {
                    "DeviceID": "976c4bad-03d3-4dcb-9688-ee57db7890e4",
                    "Geolocation": {
                      "Latitude": 42.36,
                      "Longitude": -71.06
                    },
                    "NetworkType": "non-VZ"
                  },
                  "type": "object",
                  "properties": {
                    "DeviceID": {
                      "description": "The device ID acquired through the registration API.",
                      "example": "976c4bad-03d3-4dcb-9688-ee57db7890e4",
                      "type": "string",
                      "format": "uuid"
                    },
                    "Geolocation": {
                      "id": "Geolocation",
                      "title": "Geolocation",
                      "description": "Geolocation of the device at the time of the connection request in GPS coordinates.",
                      "example": {
                        "Latitude": 42.36,
                        "Longitude": -71.06
                      },
                      "type": "object",
                      "properties": {
                        "Latitude": {
                          "description": "The GPS Latitude value",
                          "example": 42.36,
                          "type": "number",
                          "minimum": -90.0,
                          "maximum": 90.0
                        },
                        "Longitude": {
                          "description": "The GPS Longitude value",
                          "example": -71.06,
                          "type": "number",
                          "minimum": -180.0,
                          "maximum": 180.0
                        }
                      },
                      "required": [
                        "Latitude",
                        "Longitude"
                      ]
                    },
                    "NetworkType": {}
                  },
                  "required": [
                    "DeviceID",
                    "Geolocation",
                    "NetworkType"
                  ]
                }
              example: ''
          responses:
            '200':
              description: Successful retrieval
              body:
                application/json:
                  schema: |
                    {
                      "id": "ConnectionResponse",
                      "title": "ConnectionResponse",
                      "description": "response for /clients/connection",
                      "type": "object",
                      "properties": {
                        "MqttURL": {
                          "type": "string",
                          "maxLength": 1024,
                          "pattern": "^(http?mqtt)://[^\\s/$.?#].[^\\s]*$"
                        }
                      },
                      "required": [
                        "MqttURL"
                      ]
                    }
            '400':
              description: Invalid request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '401':
              description: Unauthorized
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '403':
              description: Forbidden Request
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '429':
              description: Too Many Requests
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '503':
              description: Internal server Error
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
            '0':
              description: Forbidden
              body:
                application/json:
                  schema: |
                    {
                      "id": "IMPResponseError",
                      "title": "IMPResponseError",
                      "description": "error response structure",
                      "type": "object",
                      "properties": {
                        "error": {
                          "description": "The short summary of the error",
                          "example": "Error Summary",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1024,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        },
                        "description": {
                          "description": "The detailed description of the error",
                          "example": "Error Description",
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 4096,
                          "pattern": "^[a-zA-Z0-9~\\+\\-!@#$%^&*()\\`\\[\\]{=};\\\"':,.\\/<>?|\\s]+$"
                        }
                      },
                      "required": [
                        "error",
                        "description"
                      ]
                    }
