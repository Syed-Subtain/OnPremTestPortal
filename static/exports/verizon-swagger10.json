{
  "swaggerVersion": "1.2",
  "basePath": "https://5gedge.verizon.com/api/mec/eds",
  "resourcePath": "/",
  "apis": [
    {
      "path": "/mecplatforms",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list of optimal MEC Platforms where you can register your deployed application. **Note:** If a query is sent with all of the parameters, it will fail with a \"400\" error. You can search based on the following parameter combinations - region plus Service Profile ID and subscriber density (density is optional but recommended), region plus UEIdentity(Including UEIdentity Type) or Service Profile ID plus UEIdentity(Including UEIdentity Type).",
          "nickname": "ListMECPlatforms",
          "parameters": [
            {
              "name": "region",
              "description": "MEC region name. Current valid values are US_WEST_2 and US_EAST_1.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "serviceProfileId",
              "description": "Unique identifier of the service profile.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "subscriberDensity",
              "description": "Minimum number of 4G/5G subscribers per square kilometer.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "UEIdentityType",
              "description": "Type of User Equipment identifier used in `UEIdentity`.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "IPAddress"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "UEIdentity",
              "description": "The identifier value for User Equipment. The type of identifier is defined by the 'UEIdentityType' parameter. The`IPAddress`format can be IPv4 or IPv6.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "ListMECPlatformsResult"
        }
      ]
    },
    {
      "path": "/regions",
      "operations": [
        {
          "method": "GET",
          "summary": "List the geographical regions available, based on the user's bearer token. **Note:** Country code, Metropolitan area, Area and Zone are future functionality and will currently return a \"null\" value.",
          "nickname": "ListRegions",
          "parameters": [],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "ListRegionsResult"
        }
      ]
    },
    {
      "path": "/serviceendpoints",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list of optimal Service Endpoints that client devices can connect to. **Note:** If a query is sent with all of the parameters, it will fail with a \"400\" error. You can search based on the following parameter combinations - Region plus Service Endpoints IDs and Subscriber density (density is optional but recommended), Region plus Service Endpoints IDs and UEIdentity(Including UEIdentity Type) and Service Endpoints IDs plus UEIdentity(Including UEIdentity Type).",
          "nickname": "ListOptimalServiceEndpoints",
          "parameters": [
            {
              "name": "region",
              "description": "MEC region name. Current valid values are US_WEST_2 and US_EAST_1.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "subscriberDensity",
              "description": "Minimum number of 4G/5G subscribers per square kilometer.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "UEIdentityType",
              "description": "Type of User Equipment identifier used in `UEIdentity`.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "IPAddress"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "UEIdentity",
              "description": "The identifier value for User Equipment. The type of identifier is defined by the 'UEIdentityType' parameter. The`IPAddress`format can be IPv4 or IPv6.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "serviceEndpointsIds",
              "description": "A system-defined string identifier representing one or more registered Service Endpoints.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "ListOptimalServiceEndpointsResult"
        },
        {
          "method": "POST",
          "summary": "Register Service Endpoints of a deployed application to specified MEC Platforms.",
          "nickname": "RegisterServiceEndpoints",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "An array of Service Endpoint data for a deployed application. The request body passes all of the needed parameters to create a service endpoint. Parameters will be edited here rather than the **Parameters** section above. The `ern`,`applicationServerProviderId`, `applicationId` and `serviceProfileID` parameters are required. **Note:** Currently, the only valid value for `applicationServerProviderId`is **AWS**. Also, if you do not know one of the optional values (i.e. URI), you can erase the line from the query by back-spacing over it.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "ResourcesEdgeHostedServiceWithProfileId"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "RegisterServiceEndpointResult"
        }
      ]
    },
    {
      "path": "/serviceendpointsall",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list of all registered service endpoints.",
          "nickname": "ListAllServiceEndpoints",
          "parameters": [],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "ListAllServiceEndpointsResult"
        }
      ]
    },
    {
      "path": "/serviceendpoints/{serviceEndpointsId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns endpoint information for all Service Endpoints registered to a specified serviceEndpointId.",
          "nickname": "GetServiceEndpoint",
          "parameters": [
            {
              "name": "serviceEndpointsId",
              "description": "A system-defined string identifier representing one or more registered Service Endpoints.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "items": {
            "$ref": "ResourcesEdgeHostedServiceWithProfileId"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "PUT",
          "summary": "Update registered Service Endpoint information.",
          "nickname": "UpdateServiceEndpoint",
          "parameters": [
            {
              "name": "serviceEndpointsId",
              "description": "A system-defined string identifier representing one or more registered Service Endpoints.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Data needed for Service Endpoint information. The request body passes the rest of the needed parameters to create a service endpoint. Parameters other than `serviceEndpointsId` will be edited here rather than the **Parameters** section above. The `ern`,`applicationServerProviderId` and `applicationId` parameters are required. **Note:** Currently, the only valid value for `applicationServerProviderId`is **AWS**.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "ResourcesEdgeHostedServiceWithProfileId"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "UpdateServiceEndpointResult"
        },
        {
          "method": "DELETE",
          "summary": "Deregister an application's Service Endpoint from the MEC Platform(s).",
          "nickname": "DeregisterServiceEndpoint",
          "parameters": [
            {
              "name": "serviceEndpointsId",
              "description": "A system-defined string identifier representing one or more registered Service Endpoints.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeregisterServiceEndpointResult"
        }
      ]
    },
    {
      "path": "/serviceprofiles",
      "operations": [
        {
          "method": "POST",
          "summary": "Creates a service profile that describes the resource requirements of a service.",
          "nickname": "CreateServiceProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body passes all of the needed parameters to create a service profile. Parameters will be edited here rather than the **Parameters** section above. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Additionally, \"GPU\" is future functionality and the values are not captured.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ResourcesServiceProfile"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "CreateServiceProfileResult"
        },
        {
          "method": "GET",
          "summary": "List all service profiles registered under your API key.",
          "nickname": "ListServiceProfiles",
          "parameters": [],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "ListServiceProfilesResult"
        }
      ]
    },
    {
      "path": "/serviceprofiles/{serviceProfileId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a specified service profile.",
          "nickname": "GetServiceProfile",
          "parameters": [
            {
              "name": "serviceProfileId",
              "description": "",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "ResourcesServiceProfileWithId"
        },
        {
          "method": "PUT",
          "summary": "Update the definition of a Service Profile.",
          "nickname": "UpdateServiceProfile",
          "parameters": [
            {
              "name": "serviceProfileId",
              "description": "",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body passes the rest of the needed parameters to create a service profile. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Additionally, \"GPU\" is future functionality and the values are not captured. Default values to use are shown.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ResourcesServiceProfile"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "UpdateServiceProfileResult"
        },
        {
          "method": "DELETE",
          "summary": "Delete Service Profile based on unique service profile ID.",
          "nickname": "DeleteServiceProfile",
          "parameters": [
            {
              "name": "serviceProfileId",
              "description": "",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 400 Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgeDiscoveryResult",
              "message": "HTTP 401 Unauthorized."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeleteServiceProfileResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/activate",
      "operations": [
        {
          "method": "POST",
          "summary": "If the devices do not already exist in the account, this API resource adds them before activation.",
          "nickname": "ActivateServiceForDevices",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for activating a service on devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CarrierActivateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/add",
      "operations": [
        {
          "method": "POST",
          "summary": "Use this API if you want to manage some device settings before you are ready to activate service for the devices.",
          "nickname": "AddDevices",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Devices to add.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "AddDevicesRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "items": {
            "$ref": "AddDevicesResult"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/contactinfo",
      "operations": [
        {
          "method": "PUT",
          "summary": "Sends a CarrierService callback message for each device in the request when the contact information has been changed, or if there was a problem and the change could not be completed.",
          "nickname": "UpdateDevicesContactInformation",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to update contact information for devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ContactInfoUpdateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/customFields",
      "operations": [
        {
          "method": "PUT",
          "summary": "Sends a CarrierService callback message for each device in the request when the custom fields have been changed, or if there was a problem and the change could not be completed.",
          "nickname": "UpdateDevicesCustomFields",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to update custom field of devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CustomFieldsUpdateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/deactivate",
      "operations": [
        {
          "method": "POST",
          "summary": "Deactivating service for a device may result in an early termination fee (ETF) being charged to the account, depending on the terms of the contract with Verizon. If your contract allows ETF waivers and if you want to use one for a particular deactivation, set the etfWaiver value to True.",
          "nickname": "DeactivateServiceForDevices",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to deactivate service for one or more devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CarrierDeactivateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/delete",
      "operations": [
        {
          "method": "POST",
          "summary": "Use this API to remove unneeded devices from an account.",
          "nickname": "DeleteDeactivatedDevices",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Devices to delete.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeleteDevicesRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "items": {
            "$ref": "DeleteDevicesResult"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Returns information about a single device or information about all devices that match the given parameters. Returned information includes device provisioning state, service plan, MDN, MIN, and IP address.",
          "nickname": "ListDevicesInformation",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device information query.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "AccountDeviceListRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "AccountDeviceListResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/list/imeiiccidmismatch",
      "operations": [
        {
          "method": "POST",
          "summary": "Returns a list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
          "nickname": "ListDevicesWithImeiIccidMismatch",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to list devices with mismatched IMEIs and ICCIDs.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceMismatchListRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceMismatchListResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/move",
      "operations": [
        {
          "method": "PUT",
          "summary": "Move active devices from one billing account to another within a customer profile.",
          "nickname": "MoveDevicesWithinAccountsOfProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to move devices between accounts.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "MoveDeviceRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/gotostate",
      "operations": [
        {
          "method": "PUT",
          "summary": "Changes the provisioning state of one or more devices to a specified customer-defined service and state.",
          "nickname": "UpdateDevicesState",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to change device state to one defined by the user.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GoToStateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/plan",
      "operations": [
        {
          "method": "PUT",
          "summary": "Changes the service plan for one or more devices.",
          "nickname": "ChangeDevicesServicePlan",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to change device service plan.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ServicePlanUpdateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/suspend",
      "operations": [
        {
          "method": "POST",
          "summary": "Suspends service for one or more devices.",
          "nickname": "SuspendServiceForDevices",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to suspend service for one or more devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CarrierActionsRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/restore",
      "operations": [
        {
          "method": "POST",
          "summary": "Restores service to one or more suspended devices.",
          "nickname": "RestoreServiceForSuspendedDevices",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to restore services of one or more suspended devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CarrierActionsRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/availability/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Checks whether specified devices are registered by the manufacturer with the Verizon network and are available to be activated.",
          "nickname": "CheckDevicesAvailabilityForActivation",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to check if devices can be activated or not.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceActivationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/connections/actions/listHistory",
      "operations": [
        {
          "method": "POST",
          "summary": "Each response includes a maximum of 500 records. To obtain more records, you can call the API multiple times, adjusting the earliest value each time to start where the previous request finished.",
          "nickname": "RetrieveDeviceConnectionHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Query to retrieve device connection history.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceConnectionListRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "ConnectionHistoryResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/costCenter",
      "operations": [
        {
          "method": "PUT",
          "summary": "Changes or removes the CostCenterCode value or customer name and address (Primary Place of Use) for one or more devices.",
          "nickname": "UpdateDevicesCostCenterCode",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to update cost center code value for one or more devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceCostCenterRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/extendeddiagnostics/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Returns extended diagnostic information about a specified device, including connectivity, provisioning, billing and location status.",
          "nickname": "GetDeviceExtendedDiagnosticInformation",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to query extended diagnostics information for a device.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceExtendedDiagnosticsRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceExtendedDiagnosticsResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/history/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Returns the provisioning history of a specified device during a specified time period.",
          "nickname": "ListDevicesProvisioningHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Query to obtain device provisioning history.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceProvisioningHistoryListRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "items": {
            "$ref": "DeviceProvisioningHistoryListResult"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/prl/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "4G and GSM devices do not have a PRL.",
          "nickname": "ListCurrentDevicesPRLVersion",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to query device PRL.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DevicePrlListRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/suspension/status",
      "operations": [
        {
          "method": "POST",
          "summary": "Returns DeviceSuspensionStatus callback messages containing the current device state and information on how many days a device has been suspended and can continue to be suspended.",
          "nickname": "GetDeviceServiceSuspensionStatus",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to obtain service suspenstion status for a device.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceSuspensionStatusRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/usage/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Returns the network data usage history of a device during a specified time period.",
          "nickname": "ListDevicesUsageHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to obtain usage history for a specific device.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceUsageListRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceUsageListResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/usage/actions/list/aggregate",
      "operations": [
        {
          "method": "POST",
          "summary": "The information is returned in a callback response, so you must register a URL for DeviceUsage callback messages using the POST /callbacks API.",
          "nickname": "RetrieveAggregateDeviceUsageHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "A request to retrieve aggregated device usage history information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceAggregateUsageListRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/{serviceType}/actions/deviceId",
      "operations": [
        {
          "method": "PUT",
          "summary": "Changes the identifier of a 3G or 4G device to match hardware changes made for a line of service. Use this request to transfer the line of service and the MDN to new hardware, or to change the MDN.",
          "nickname": "UpdateDeviceId",
          "parameters": [
            {
              "name": "serviceType",
              "description": "Identifier type.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to update device id.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ChangeDeviceIdRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/upload",
      "operations": [
        {
          "method": "POST",
          "summary": "This corresponds to the M2M-MC SOAP interface, ```DeviceUploadService```.",
          "nickname": "DeviceUpload",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Upload Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceUploadRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Error Response"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/usage/actions/billedusage/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Gets billed usage for for either multiple devices or an entire billing account.",
          "nickname": "BilledUsageInfo",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to list devices with mismatched IMEIs and ICCIDs.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "billedusageListRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/usagesegmentationlabels",
      "operations": [
        {
          "method": "POST",
          "summary": "Allows you to associate your own usage segmentation label with a device.",
          "nickname": "UsageSegmentationLabelAssociation",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to associate a label to a device.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "AssociateLabelRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        },
        {
          "method": "DELETE",
          "summary": "Allow customers to remove the associated label from a device.",
          "nickname": "UsageSegmentationLabelDeletion",
          "parameters": [
            {
              "name": "accountName",
              "description": "The numeric name of the account.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "LabelList",
              "description": "A list of the Label IDs to remove from the exclusion list.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "LabelsList"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/uploadactivate",
      "operations": [
        {
          "method": "POST",
          "summary": "Uploads and activates device identifiers and SKUs for new devices from OEMs to Verizon.",
          "nickname": "ActivationOrderStatus",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to Uploads and activates device.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "UploadsActivatesDeviceRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/requests/status",
      "operations": [
        {
          "method": "POST",
          "summary": "Checks the status of an activation order and lists where the order is in the provisioning process.",
          "nickname": "UploadDeviceIdentifier",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body identifies the device and reporting period that you want included in the report.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CheckOrderStatusRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/accounts/{aname}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns information about a specified account.",
          "nickname": "GetAccountInformation",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "Account"
        }
      ]
    },
    {
      "path": "/m2m/v1/accounts/{aname}/statesandservices",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list and details of all custom services and states defined for a specified account.",
          "nickname": "ListAccountStatesAndServices",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "AccountStatesAndServices"
        }
      ]
    },
    {
      "path": "/m2m/v1/leads/{aname}",
      "operations": [
        {
          "method": "GET",
          "summary": "When HTTP status is 202, a URL will be returned in the Location header of the form /leads/{aname}?next={token}. This URL can be used to request the next set of leads.",
          "nickname": "ListAccountLeads",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "next",
              "description": "Continue the previous query from the pageUrl in Location Header.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "AccountLeadsResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/groups",
      "operations": [
        {
          "method": "POST",
          "summary": "Create a new device group and optionally add devices to the group. Device groups can make it easier to manage similar devices and to get reports on their usage.",
          "nickname": "CreateDeviceGroup",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "A request to create a new device group.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CreateDeviceGroupRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "ConnectivityManagementSuccessResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/groups/{aname}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list of all device groups in a specified account.",
          "nickname": "ListDeviceGroups",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "items": {
            "$ref": "DeviceGroup"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/m2m/v1/groups/{aname}/name/{gname}",
      "operations": [
        {
          "method": "GET",
          "summary": "When HTTP status is 202, a URL will be returned in the Location header of the form /groups/{aname}/name/{gname}/?next={token}. This URL can be used to request the next set of groups.",
          "nickname": "GetDeviceGroupInformation",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "gname",
              "description": "Group name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "next",
              "description": "Continue the previous query from the pageUrl pagetoken.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceGroupDevicesData"
        },
        {
          "method": "PUT",
          "summary": "Make changes to a device group, including changing the name and description, and adding or removing devices.",
          "nickname": "UpdateDeviceGroup",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "gname",
              "description": "Group name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to update device group.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceGroupUpdateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "ConnectivityManagementSuccessResult"
        },
        {
          "method": "DELETE",
          "summary": "Deletes a device group from the account. Devices in the group are moved to the default device group and are not deleted from the account.",
          "nickname": "DeleteDeviceGroup",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "gname",
              "description": "Group name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "ConnectivityManagementSuccessResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/sms",
      "operations": [
        {
          "method": "POST",
          "summary": "The messages are queued on the ThingSpace Platform and sent as soon as possible, but they may be delayed due to traffic and routing considerations.",
          "nickname": "SendSMSToDevice",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to send SMS.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SMSSendRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        },
        {
          "method": "POST",
          "summary": "Sends an SMS message to one device. Messages are queued on the M2M MC Platform and sent as soon as possible, but they may be delayed due to traffic and routing considerations.",
          "nickname": "SendAnSmsMessage",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "SMS message to an indiividual device.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GIOSMSSendRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/sms/{aname}/history",
      "operations": [
        {
          "method": "GET",
          "summary": "When HTTP status is 202, a URL will be returned in the Location header of the form /sms/{aname}/history?next={token}. This URL can be used to request the next set of messages.",
          "nickname": "ListDevicesSMSMessages",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "next",
              "description": "Continue the previous query from the URL in Location Header.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int64"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "SMSMessagesQueryResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/sms/{aname}/startCallbacks",
      "operations": [
        {
          "method": "PUT",
          "summary": "Tells the ThingSpace Platform to start sending mobile-originated SMS messages through the EnhancedConnectivityService callback service. SMS messages from devices are queued until they are retrieved by your application, either by callback or synchronously with GET /sms/{accountName}/history.",
          "nickname": "StartQueuedSMSDelivery",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "ConnectivityManagementSuccessResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/session/login",
      "operations": [
        {
          "method": "POST",
          "summary": "Initiates a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.",
          "nickname": "StartConnectivityManagementSession",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to initiate a session.",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "LogInRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "LogInResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/session/logout",
      "operations": [
        {
          "method": "POST",
          "summary": "Ends a Connectivity Management session.",
          "nickname": "EndConnectivityManagementSession",
          "parameters": [],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "LogOutRequest"
        }
      ]
    },
    {
      "path": "/m2m/v1/session/password/actions/reset",
      "operations": [
        {
          "method": "PUT",
          "summary": "The new password is effective immediately. Passwords do not expire, but Verizon recommends changing your password every 90 days.",
          "nickname": "ResetConnectivityManagementPassword",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request with current password that needs to be reset.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SessionResetPasswordRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "SessionResetPasswordResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/callbacks/{aname}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns the name and endpoint URL of the callback listening services registered for a given account.",
          "nickname": "ListRegisteredCallbacks",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "items": {
            "$ref": "ConnectivityManagementCallback"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "You are responsible for creating and running a listening process on your server at that URL.",
          "nickname": "RegisterCallback",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to register a callback.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "RegisterCallbackRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "CallbackActionResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/callbacks/{aname}/name/{sname}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Stops ThingSpace from sending callback messages for the specified account and service.",
          "nickname": "DeregisterCallback",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "sname",
              "description": "Service name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "CallbackActionResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/accounts/{aname}/requests/{requestId}/status",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns the current status of an asynchronous request that was made for a single device.",
          "nickname": "GetCurrentAsynchronousRequestStatus",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "requestId",
              "description": "UUID from synchronous response.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "AsynchronousRequestResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/plans/{aname}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list of all data service plans that are associated with a specified billing account. When you send a request to /devices/actions/activate to activate a line of service you must specify the code for one of the service plans associated with your account.",
          "nickname": "ListAccountServicePlans",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "items": {
            "$ref": "ServicePlan"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/m2m/v1/diagnostics/basic/devicereachability/status",
      "operations": [
        {
          "method": "POST",
          "summary": "If the devices do not already exist in the account, this API resource adds them before activation.",
          "nickname": "DeviceReachabilityStatusUsingPOST",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Retrieve Reachability Report Status for a device.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "NotificationReportStatusRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/diagnostics/basic/devicereachability/monitors",
      "operations": [
        {
          "method": "POST",
          "summary": "Retrieve all the active monitors.",
          "nickname": "RetrieveActiveMonitorsUsingPOST",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Retrieve Monitor Request.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "RetrieveMonitorsRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/activate_enable",
      "operations": [
        {
          "method": "POST",
          "summary": "Uses the profile to bring the device under management.",
          "nickname": "ActivateDeviceThroughProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ActivateDeviceProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Bad request"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/activate",
      "operations": [
        {
          "method": "POST",
          "summary": "Uses the profile to activate the device.",
          "nickname": "ProfileToActivateDevice",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Bad request"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        },
        {
          "method": "POST",
          "summary": "Activate a device with either a lead or local profile.",
          "nickname": "ActivateADeviceProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GIOProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        },
        {
          "method": "POST",
          "summary": "Uses the profile to activate the SIM.",
          "nickname": "setactivateUsingPOST",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "eSIMProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Bad request"
            },
            {
              "code": 401,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Not Found / Does not exist"
            },
            {
              "code": 406,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Format / Request Unacceptable"
            },
            {
              "code": 429,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Too many requests"
            }
          ],
          "uniqueItems": false,
          "$ref": "eSIMRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/deactivate",
      "operations": [
        {
          "method": "POST",
          "summary": "Uses the profile to deactivate the device.",
          "nickname": "ProfileToDeactivateDevice",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeactivateDeviceProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Bad request"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        },
        {
          "method": "POST",
          "summary": "Deactivate the lead or local profile. **Note:** to reactivate the profile, use the **Activate** endpoint above.",
          "nickname": "DeactivateADeviceProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GIODeactivateDeviceProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        },
        {
          "method": "POST",
          "summary": "Uses the profile to deactivate the SIM.",
          "nickname": "setdeactivateUsingPOST",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ProfileRequest2"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Bad request"
            },
            {
              "code": 401,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Not Found / Does not exist"
            },
            {
              "code": 406,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Format / Request Unacceptable"
            },
            {
              "code": 429,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Too many requests"
            }
          ],
          "uniqueItems": false,
          "$ref": "eSIMRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/setfallbackattribute",
      "operations": [
        {
          "method": "POST",
          "summary": "Allows the profile to set the fallback attribute to the device.",
          "nickname": "ProfileToSetFallbackAttribute",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SetFallbackAttributeRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Bad request"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/diagnostics/basic/devicereachability",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "DeviceReachability",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Create Reachability Report Request",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "NotificationReportRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Error Response"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "StopDeviceReachability",
          "parameters": [
            {
              "name": "accountName",
              "description": "The numeric name of the account.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "monitorIds",
              "description": "The array contains the monitorIDs (UUID) for which the monitor is to be deleted.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Error Response"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/download_enable",
      "operations": [
        {
          "method": "POST",
          "summary": "Downloads an eUICC local profile to devices and enables the profile.",
          "nickname": "DownloadLocalProfileToEnable",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ProfileChangeStateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        },
        {
          "method": "POST",
          "summary": "Enable the Global IoT Orchestration device profile for download.",
          "nickname": "EnableADeviceProfileForDownload",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/download_disable",
      "operations": [
        {
          "method": "POST",
          "summary": "Downloads an eUICC local profile to devices and leaves the profile disabled.",
          "nickname": "DownloadLocalProfileToDisable",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ProfileChangeStateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "ConnectivityManagementResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceManagementResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/enable",
      "operations": [
        {
          "method": "POST",
          "summary": "Enable a local profile that has been downloaded to eUICC devices.",
          "nickname": "EnableLocalProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Update state",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ProfileChangeStateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Error Response"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        },
        {
          "method": "POST",
          "summary": "Enable a device lead or local profile.",
          "nickname": "EnableADeviceProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/disable",
      "operations": [
        {
          "method": "POST",
          "summary": "Disable a local profile on eUICC devices. The default or boot profile will become the enabled profile.",
          "nickname": "DisableLocalProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Update state",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ProfileChangeStateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Error Response"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/delete",
      "operations": [
        {
          "method": "POST",
          "summary": "Delete a local profile from eUICC devices. If the local profile is enabled, it will first be disabled and the boot or default profile will be enabled.",
          "nickname": "DeleteLocalProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Update state",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ProfileChangeStateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "RestErrorResponse",
              "message": "Error Response"
            }
          ],
          "uniqueItems": false,
          "$ref": "RequestResponse"
        },
        {
          "method": "POST",
          "summary": "Delete a device profile for Global IoT Orchestration. **Note:** the profile must be deactivated first!",
          "nickname": "DeleteADeviceProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        }
      ]
    },
    {
      "path": "/locations",
      "operations": [
        {
          "method": "POST",
          "summary": "This locations endpoint retrieves the locations for a list of devices.",
          "nickname": "ListDevicesLocationsSynchronous",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to obtain location of devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "LocationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "items": {
            "$ref": "Location"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/devicelocations",
      "operations": [
        {
          "method": "POST",
          "summary": "Requests the current or cached location of up to 10,000 IoT or consumer devices (phones, tablets. etc.). This request returns a synchronous transaction ID, and the location information for each device is returned asynchronously as a DeviceLocation callback message.",
          "nickname": "ListDevicesLocationsAsynchronous",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "An asynchronous request to obtain locations of devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "LocationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "SynchronousLocationRequestResult"
        }
      ]
    },
    {
      "path": "/devicelocations/{txid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Cancel a queued or unfinished device location request.",
          "nickname": "CancelDeviceLocationRequest",
          "parameters": [
            {
              "name": "accountName",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "txid",
              "description": "Transaction ID of the request to cancel, from the synchronous response to the original request.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "TransactionID"
        }
      ]
    },
    {
      "path": "/locationreports",
      "operations": [
        {
          "method": "POST",
          "summary": "Request an asynchronous device location report.",
          "nickname": "CreateLocationReport",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for device location report.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "LocationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "AsynchronousLocationRequestResult"
        }
      ]
    },
    {
      "path": "/locationreports/{account}/report/{txid}/index/{startindex}",
      "operations": [
        {
          "method": "GET",
          "summary": "Download a completed asynchronous device location report.",
          "nickname": "RetrieveLocationReport",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "txid",
              "description": "Transaction ID from POST /locationreports response.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startindex",
              "description": "Zero-based number of the first record to return.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "minimum": "",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "LocationReport"
        }
      ]
    },
    {
      "path": "/locationreports/{account}/report/{txid}/status",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns the current status of a requested device location report.",
          "nickname": "GetLocationReportStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "txid",
              "description": "Transaction ID of the report.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "LocationReportStatus"
        }
      ]
    },
    {
      "path": "/locationreports/{account}/report/{txid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Cancel a queued device location report.",
          "nickname": "CancelQueuedLocationReportGeneration",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "txid",
              "description": "Transaction ID of the report to cancel.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "TransactionID"
        }
      ]
    },
    {
      "path": "/consents",
      "operations": [
        {
          "method": "POST",
          "summary": "This consents endpoint sets a new exclusion list.",
          "nickname": "ExcludeDevices",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to update account consent exclusion list.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ConsentRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceLocationSuccessResult"
        },
        {
          "method": "DELETE",
          "summary": "Removes devices from the exclusion list so that they can be located with Device Location Services requests.",
          "nickname": "RemoveDevicesFromExclusionList",
          "parameters": [
            {
              "name": "accountName",
              "description": "The numeric name of the account.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceList",
              "description": "A list of the device IDs to remove from the exclusion list.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceLocationSuccessResult"
        }
      ]
    },
    {
      "path": "/consents/{account}/index/{startIndex}",
      "operations": [
        {
          "method": "GET",
          "summary": "This consents endpoint retrieves a list of excluded devices in an account.",
          "nickname": "ListExcludedDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startIndex",
              "description": "Zero-based number of the first record to return.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DevicesConsentResult"
        }
      ]
    },
    {
      "path": "/subscriptions/{account}",
      "operations": [
        {
          "method": "GET",
          "summary": "This subscriptions endpoint retrieves an account's current location subscription status.",
          "nickname": "GetLocationServiceSubscriptionStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceLocationSubscription"
        },
        {
          "method": "GET",
          "summary": "This subscriptions endpoint retrieves an account's current Software Management Service subscription status.",
          "nickname": "GetAccountSubscriptionStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V1AccountSubscription"
        },
        {
          "method": "GET",
          "summary": "This endpoint retrieves a FOTA subscription by account.",
          "nickname": "GetAccountSubscriptionStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV2Subscription"
        }
      ]
    },
    {
      "path": "/usage",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows user to search for billable usage for accounts based on the provided date range.",
          "nickname": "GetLocationServiceUsage",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to obtain billable usage for accounts.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "BillUsageRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/callbacks/{account}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list of all registered callback URLs for the account.",
          "nickname": "ListRegisteredCallbacks",
          "parameters": [
            {
              "name": "account",
              "description": "Account number.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Error response."
            }
          ],
          "items": {
            "$ref": "DeviceLocationCallback"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "Provide a URL to receive messages from a ThingSpace callback service.",
          "nickname": "RegisterCallback",
          "parameters": [
            {
              "name": "account",
              "description": "Account number.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to register a callback.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceLocationCallback"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "CallbackRegistrationResult"
        },
        {
          "method": "GET",
          "summary": "Returns the name and endpoint URL of the callback listening services registered for a given account.",
          "nickname": "ListRegisteredCallbacks",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "RegisteredCallbacks"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "Registers a URL to receive RESTful messages from a callback service when new firmware versions are available and when upgrades start and finish.",
          "nickname": "RegisterCallback",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Callback details.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "FotaV1CallbackRegistrationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV1CallbackRegistrationResult"
        },
        {
          "method": "GET",
          "summary": "This endpoint allows user to get the registered callback information.",
          "nickname": "ListRegisteredCallbacks",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "CallbackSummary"
        },
        {
          "method": "PUT",
          "summary": "This endpoint allows user to update the HTTPS callback address.",
          "nickname": "UpdateCallback",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Callback URL registration.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "FotaV2CallbackRegistrationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV2CallbackRegistrationResult"
        },
        {
          "method": "POST",
          "summary": "This endpoint allows user to create the HTTPS callback address.",
          "nickname": "RegisterCallback",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Callback URL registration.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "FotaV2CallbackRegistrationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV2CallbackRegistrationResult"
        },
        {
          "method": "DELETE",
          "summary": "This endpoint allows user to delete a previously registered callback URL.",
          "nickname": "DeregisterCallback",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV2SuccessResult"
        }
      ]
    },
    {
      "path": "/callbacks/{account}/name/{service}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "Deregister a URL to stop receiving callback messages.",
          "nickname": "DeregisterCallback",
          "parameters": [
            {
              "name": "account",
              "description": "Account number.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "service",
              "description": "Callback service name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "Location",
                "DeviceLocation"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Error response."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceLocationSuccessResult"
        },
        {
          "method": "DELETE",
          "summary": "Deregisters the callback endpoint and stops ThingSpace from sending FOTA callback messages for the specified account.",
          "nickname": "DeregisterCallback",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "service",
              "description": "Callback type. Must be 'Fota' for Software Management Services API.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "Fota"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV1SuccessResult"
        }
      ]
    },
    {
      "path": "/usage/triggers",
      "operations": [
        {
          "method": "POST",
          "summary": "Create a new usage trigger, which will send an alert when the number of device location service transactions reaches a specified percentage of the monthly subscription amount.\n",
          "nickname": "CreateNewTrigger",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "License assignment.",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "UsageTriggerAddRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error"
            }
          ],
          "uniqueItems": false,
          "$ref": "UsageTriggerResponse"
        }
      ]
    },
    {
      "path": "/usage/triggers/{triggerId}",
      "operations": [
        {
          "method": "POST",
          "summary": "Update an existing usage trigger\n",
          "nickname": "UpdateTrigger",
          "parameters": [
            {
              "name": "triggerId",
              "description": "Usage trigger ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "New trigger values",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "UsageTriggerUpdateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error"
            }
          ],
          "uniqueItems": false,
          "$ref": "UsageTriggerResponse"
        }
      ]
    },
    {
      "path": "/usage/accounts/{accountName}/triggers/{triggerId}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "eletes the specified usage trigger from the given account",
          "nickname": "DeleteTrigger",
          "parameters": [
            {
              "name": "accountName",
              "description": "Account name",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "triggerId",
              "description": "Usage trigger ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error"
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceLocationSuccessResult"
        }
      ]
    },
    {
      "path": "/managedaccounts/actions/add",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows user to add managed accounts to a primary account.\n",
          "nickname": "AddAccount",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Service name and list of accounts to add",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ManagedAccountsAddRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error"
            }
          ],
          "uniqueItems": false,
          "$ref": "ManagedAccountsAddResponse"
        }
      ]
    },
    {
      "path": "/managedaccounts/actions/provision",
      "operations": [
        {
          "method": "POST",
          "summary": "Activates a managed billing service relationship between a managed account and the primary account.",
          "nickname": "ManagedAccountAction",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Service name and list of accounts to add",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ManagedAccountsProvisionRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error"
            }
          ],
          "uniqueItems": false,
          "$ref": "ManagedAccountsProvisionResponse"
        }
      ]
    },
    {
      "path": "/managedaccounts/actions/cancel",
      "operations": [
        {
          "method": "POST",
          "summary": "Deactivates a managed billing service relationship between a managed account and the primary account. ",
          "nickname": "CancelManagedAccountAction",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Service name and list of accounts to add",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ManagedAccountCancelRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error"
            }
          ],
          "uniqueItems": false,
          "$ref": "ManagedAccountCancelResponse"
        }
      ]
    },
    {
      "path": "/managedaccounts/{accountName}/service/{serviceName}",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint allows user to retrieve the list of all accounts managed by a primary account.",
          "nickname": "ListManagedAccount",
          "parameters": [
            {
              "name": "accountName",
              "description": "Primary account identifier",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "serviceName",
              "description": "Service name",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceLocationResult",
              "message": "Unexpected error"
            }
          ],
          "uniqueItems": false,
          "$ref": "ManagedAccountsGetAllResponse"
        }
      ]
    },
    {
      "path": "/licenses/{account}/index/{startIndex}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns information about an account's Software Management Services licenses and a list of licensed devices.",
          "nickname": "GetAccountLicenseStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startIndex",
              "description": "The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices in the response, set startIndex=1000 for the second request, 2000 for the third request, etc.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "AccountLicenseInfo"
        }
      ]
    },
    {
      "path": "/licenses/{account}/assign",
      "operations": [
        {
          "method": "POST",
          "summary": "Assigns licenses to a specified list of devices so that firmware upgrades can be scheduled for those devices.",
          "nickname": "AssignLicensesToDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "IMEIs of the devices to assign licenses to.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V1LicensesAssignedRemovedRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V1LicensesAssignedRemovedResult"
        },
        {
          "method": "POST",
          "summary": "This endpoint allows user to assign licenses to a list of devices.",
          "nickname": "AssignLicensesToDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "License assignment.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V2LicenseIMEI"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2LicensesAssignedRemovedResult"
        }
      ]
    },
    {
      "path": "/licenses/{account}/remove",
      "operations": [
        {
          "method": "POST",
          "summary": "Remove unused licenses from device.",
          "nickname": "RemoveLicensesFromDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "IMEIs of the devices to remove licenses from.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V1LicensesAssignedRemovedRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V1LicensesAssignedRemovedResult"
        },
        {
          "method": "POST",
          "summary": "This endpoint allows user to remove licenses from a list of devices.",
          "nickname": "RemoveLicensesFromDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "License removal.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V2LicenseIMEI"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2LicensesAssignedRemovedResult"
        }
      ]
    },
    {
      "path": "/licenses/{account}/cancel",
      "operations": [
        {
          "method": "POST",
          "summary": "Creates a list of devices from which licenses will be removed if the number of MRC licenses becomes less than the number of assigned licenses.",
          "nickname": "CreateListOfLicensesToRemove",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Cancellation candidate device list.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V1ListOfLicensesToRemoveRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V1ListOfLicensesToRemoveResult"
        },
        {
          "method": "DELETE",
          "summary": "Deletes the entire list of cancellation candidate devices.",
          "nickname": "DeleteListOfLicensesToRemove",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV1SuccessResult"
        },
        {
          "method": "GET",
          "summary": "The license cancel endpoint allows user to list registered license cancellation candidate devices.",
          "nickname": "ListLicensesToRemove",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startIndex",
              "description": "Start index to retrieve.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2ListOfLicensesToRemove"
        },
        {
          "method": "POST",
          "summary": "The license cancel endpoint allows user to create a list of license cancellation candidate devices.",
          "nickname": "CreateListOfLicensesToRemove",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "List of licensess to remove.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V2ListOfLicensesToRemoveRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2ListOfLicensesToRemoveResult"
        },
        {
          "method": "DELETE",
          "summary": "This endpoint allows user to delete a created cancel candidate device list.",
          "nickname": "DeleteListOfLicensesToRemove",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV2SuccessResult"
        }
      ]
    },
    {
      "path": "/licenses/{account}/cancel/index/{startIndex}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list of devices from which licenses will be removed if the number of MRC licenses becomes less than the number of assigned licenses.",
          "nickname": "ListLicensesToRemove",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startIndex",
              "description": "The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices in the response, set startIndex=1000 for the second request, 2000 for the third request, etc.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V1ListOfLicensesToRemove"
        }
      ]
    },
    {
      "path": "/firmware/{account}",
      "operations": [
        {
          "method": "GET",
          "summary": "Lists all device firmware images available for an account, based on the devices registered to that account.",
          "nickname": "ListAvailableFirmware",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "Firmware"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/upgrades",
      "operations": [
        {
          "method": "POST",
          "summary": "Schedules a firmware upgrade for devices.",
          "nickname": "ScheduleFirmwareUpgrade",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Details of the firmware upgrade request.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "FirmwareUpgradeRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FirmwareUpgrade"
        }
      ]
    },
    {
      "path": "/upgrades/{account}/upgrade/{upgradeId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns information about a specified upgrade, include the target date of the upgrade, the list of devices in the upgrade, and the status of the upgrade for each device.",
          "nickname": "ListFirmwareUpgradeDetails",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "upgradeId",
              "description": "The UUID of the upgrade, returned by POST /upgrades when the upgrade was scheduled.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FirmwareUpgrade"
        },
        {
          "method": "PUT",
          "summary": "Add or remove devices from a scheduled upgrade.",
          "nickname": "UpdateFirmwareUpgradeDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "upgradeId",
              "description": "The UUID of the upgrade, returned by POST /upgrades when the upgrade was scheduled.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "List of devices to add or remove.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "FirmwareUpgradeChangeRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FirmwareUpgradeChangeResult"
        },
        {
          "method": "DELETE",
          "summary": "Cancel a scheduled firmware upgrade.",
          "nickname": "CancelScheduledFirmwareUpgrade",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "upgradeId",
              "description": "The UUID of the scheduled upgrade that you want to cancel.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV1SuccessResult"
        }
      ]
    },
    {
      "path": "/devices/{account}/index/{startIndex}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns an array of all devices in the specified account. Each device object includes information needed for managing firmware, including the device make and model, MDN and IMEI, and current firmware version.",
          "nickname": "ListAccountDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startIndex",
              "description": "Only return devices with IMEIs larger than this value. Use 0 for the first request. If `hasMoreData`=true in the response, use the `lastSeenDeviceId` value from the response as the startIndex in the next request.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceListQueryResult"
        }
      ]
    },
    {
      "path": "/reports/{account}/status/{upgradeStatus}/index/{startIndex}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns a list of all upgrades with a specified status.",
          "nickname": "ListUpgradesForSpecifiedStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "upgradeStatus",
              "description": "The status of the upgrades that you want to retrieve.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "RequestPending",
                "Queued",
                "RequestFailed",
                "InProgress",
                "Finished",
                "UpgradeFailed"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "startIndex",
              "description": "The zero-based number of the first record to return. Set startIndex=0 for the first request. If `hasMoreFlag`=true in the response, use the `lastSeenUpgradeId` value from the response as the startIndex in the next request.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "UpgradeListQueryResult"
        }
      ]
    },
    {
      "path": "/reports/{account}/devices/{deviceId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns the upgrade history of the specified device from the previous six months.",
          "nickname": "GetDeviceFirmwareUpgradeHistory",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier in \"##########-#####\".",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "description": "The IMEI of the device.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV1Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "DeviceUpgradeHistory"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "GET",
          "summary": "The endpoint allows user to get software upgrade history of a device based on device IMEI.",
          "nickname": "GetDeviceFirmwareUpgradeHistory",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "description": "Device IMEI identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "DeviceSoftwareUpgrade"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/licenses/{account}",
      "operations": [
        {
          "method": "GET",
          "summary": "The endpoint allows user to list license usage.",
          "nickname": "GetAccountLicenseStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastSeenDeviceId",
              "description": "Last seen device identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2LicenseSummary"
        }
      ]
    },
    {
      "path": "/campaigns/{account}",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows user to schedule a software upgrade.",
          "nickname": "ScheduleCampaignFirmwareUpgrade",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Software upgrade information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CampaignSoftwareUpgrade"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "CampaignSoftware"
        }
      ]
    },
    {
      "path": "/campaigns/{account}/{campaignId}",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint allows user to get information of a software upgrade.",
          "nickname": "GetCampaignInformation",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Software upgrade identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "CampaignSoftware"
        },
        {
          "method": "PUT",
          "summary": "This endpoint allows user to Add or Remove devices to an existing software upgrade.",
          "nickname": "UpdateCampaignFirmwareDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Software upgrade information.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to add or remove device to existing software upgrade information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V2AddOrRemoveDeviceRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AddOrRemoveDeviceResult"
        },
        {
          "method": "DELETE",
          "summary": "This endpoint allows user to cancel software upgrade. A software upgrade already started can not be cancelled.",
          "nickname": "CancelCampaign",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Unique identifier of campaign.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV2SuccessResult"
        }
      ]
    },
    {
      "path": "/campaigns/{account}/{campaignId}/dates",
      "operations": [
        {
          "method": "PUT",
          "summary": "This endpoint allows user to change campaign dates and time windows. Fields which need to remain unchanged should be also provided.",
          "nickname": "UpdateCampaignDates",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Software upgrade information.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "New dates and time windows.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V2ChangeCampaignDatesRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "CampaignSoftware"
        }
      ]
    },
    {
      "path": "/campaigns/files/{acc}",
      "operations": [
        {
          "method": "POST",
          "summary": "You can upload configuration files and schedule them in a campaign to devices.",
          "nickname": "ScheduleFileUpgrade",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device logging information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "UploadAndScheduleFileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "UploadAndScheduleFileResponse"
        }
      ]
    },
    {
      "path": "/campaigns/software/{acc}",
      "operations": [
        {
          "method": "POST",
          "summary": "Campaign time windows for downloading and installing software are available as long as the device OEM supports this.",
          "nickname": "ScheduleSWUpgradeHttpDevices",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device logging information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SchedulesSoftwareUpgradeRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "UploadAndScheduleFileResponse"
        }
      ]
    },
    {
      "path": "/software/{account}",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint allows user to list a certain type of software of an account.",
          "nickname": "ListAvailableSoftware",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "distributionType",
              "description": "Filter distributionType to get specific type of software. Value is LWM2M, OMD-DM or HTTP.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "SoftwarePackage"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/devices/{account}",
      "operations": [
        {
          "method": "GET",
          "summary": "The device endpoint gets devices information of an account.",
          "nickname": "ListAccountDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastSeenDeviceId",
              "description": "Last seen device identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "distributionType",
              "description": "Filter distributionType to get specific type of devices. Values is LWM2M, OMD-DM or HTTP.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AccountDeviceList"
        }
      ]
    },
    {
      "path": "/reports/{account}/campaigns",
      "operations": [
        {
          "method": "GET",
          "summary": "The report endpoint allows user to get campaign history of an account for specified status.",
          "nickname": "GetCampaignHistoryByStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignStatus",
              "description": "Status of the campaign.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastSeenCampaignId",
              "description": "Last seen campaign Id.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2CampaignHistory"
        }
      ]
    },
    {
      "path": "/reports/{account}/campaigns/{campaignId}/devices",
      "operations": [
        {
          "method": "GET",
          "summary": "The report endpoint allows user to get the full list of device of a campaign.",
          "nickname": "GetCampaignDeviceStatus",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Campaign identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastSeenDeviceId",
              "description": "Last seen device identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V2CampaignDevice"
        }
      ]
    },
    {
      "path": "/logging/{account}/devices",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns an array of all devices in the specified account for which logging is enabled.",
          "nickname": "ListDevicesWithLoggingEnabled",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "DeviceLoggingStatus"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "PUT",
          "summary": "Each customer may have a maximum of 20 devices enabled for logging.",
          "nickname": "EnableLoggingForDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device logging information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceLoggingRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "DeviceLoggingStatus"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "DELETE",
          "summary": "Turn logging off for a list of devices.",
          "nickname": "DisableLoggingForDevices",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceIds",
              "description": "The list of device IDs.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/logging/{account}/devices/{deviceId}",
      "operations": [
        {
          "method": "PUT",
          "summary": "Enables logging for a specific device.",
          "nickname": "EnableDeviceLogging",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "description": "Device IMEI identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceLoggingStatus"
        },
        {
          "method": "DELETE",
          "summary": "Disables logging for a specific device.",
          "nickname": "DisableDeviceLogging",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "description": "Device IMEI identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/logging/{account}/devices/{deviceId}/logs",
      "operations": [
        {
          "method": "GET",
          "summary": "Gets logs for a specific device.",
          "nickname": "ListDeviceLogs",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "description": "Device IMEI identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "DeviceLog"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/logging/{account}/devices/{deviceId}/checkInHistory",
      "operations": [
        {
          "method": "GET",
          "summary": "Check-in history can be retrieved for any device belonging to the account, not necessarily with logging enabled.",
          "nickname": "GetDeviceCheckInHistory",
          "parameters": [
            {
              "name": "account",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "description": "Device IMEI identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "CheckInHistoryItem"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/files/{acc}",
      "operations": [
        {
          "method": "GET",
          "summary": "You can retrieve a list of configuration or supplementary of files for an account.",
          "nickname": "GetListOfFiles",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "distributionType",
              "description": "Filter the distributionType to only retrieve files for a specific distribution type.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "RetrievesAvailableFilesResponseList"
        },
        {
          "method": "POST",
          "summary": "Uploads a configuration/supplementary file for an account. ThingSpace generates a fileName after the upload and is returned in the response.",
          "nickname": "UploadConfigFile",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileupload",
              "description": "The file to upload.",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "fileVersion",
              "description": "Version of the file.",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "make",
              "description": "The software-applicable device make.",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "model",
              "description": "The software-applicable device model.",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "localTargetPath",
              "description": "Local target path on the device.",
              "paramType": "form",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "multipart/form-data"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV2Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "UploadConfigurationFilesResponse"
        }
      ]
    },
    {
      "path": "/subscriptions/{acc}",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint retrieves a FOTA subscription by account.",
          "nickname": "GetAccountSubscriptionStatus",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV3Subscription"
        }
      ]
    },
    {
      "path": "/licenses/{acc}",
      "operations": [
        {
          "method": "GET",
          "summary": "The endpoint allows user to list license usage.",
          "nickname": "GetAccountLicensesStatus",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastSeenDeviceId",
              "description": "Last seen device identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V3LicenseSummary"
        }
      ]
    },
    {
      "path": "/licenses/{acc}/assign",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows user to assign licenses to a list of devices.",
          "nickname": "AssignLicensesToDevices",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "License assignment.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V3LicenseIMEI"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V3LicenseAssignedRemovedResult"
        }
      ]
    },
    {
      "path": "/licenses/{acc}/remove",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows user to remove licenses from a list of devices.",
          "nickname": "RemoveLicensesFromDevices",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "License removal.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V3LicenseIMEI"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V3LicenseAssignedRemovedResult"
        }
      ]
    },
    {
      "path": "/campaigns/firmware/{acc}",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows a user to schedule a firmware upgrade for a list of devices.",
          "nickname": "ScheduleCampaignFirmwareUpgrade",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Firmware upgrade information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CampaignFirmwareUpgrade"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FirmwareCampaign"
        }
      ]
    },
    {
      "path": "/campaigns/firmware/{acc}/{campaignId}",
      "operations": [
        {
          "method": "PUT",
          "summary": "This endpoint allows user to Add or Remove devices to an existing campaign.",
          "nickname": "UpdateCampaignFirmwareDevices",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Unique identifier of a campaign.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Add or remove device to existing upgrade information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V3AddOrRemoveDeviceRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V3AddOrRemoveDeviceResult"
        }
      ]
    },
    {
      "path": "/campaigns/firmware/{acc}/{campaignId}/dates",
      "operations": [
        {
          "method": "PUT",
          "summary": "This endpoint allows user to change campaign dates and time windows. Fields which need to remain unchanged should be also provided.",
          "nickname": "UpdateCampaignDates",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Firmware upgrade information.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "New dates and time windows.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "V3ChangeCampaignDatesRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FirmwareCampaign"
        }
      ]
    },
    {
      "path": "/campaigns/{acc}/{campaignId}",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint allows the user to retrieve campaign level information for a specified campaign.",
          "nickname": "GetCampaignInformation",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Firmware upgrade identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "Campaign"
        },
        {
          "method": "DELETE",
          "summary": "This endpoint allows user to cancel a firmware campaign. A firmware campaign already started can not be cancelled.",
          "nickname": "CancelCampaign",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Firmware upgrade information.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV3SuccessResult"
        }
      ]
    },
    {
      "path": "/reports/{acc}/firmware/campaigns",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve a list of campaigns for an account that have a specified campaign status.",
          "nickname": "GetCampaignHistoryByStatus",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignStatus",
              "description": "Campaign status.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "enum": [
                "CampaignRequestPending",
                "CampaignRequestFailed",
                "CampaignRequestQueued",
                "CampaignCancelled",
                "CampaignAborted",
                "CampaignFailed",
                "CampaignScheduled",
                "CampaignEnded"
              ],
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastSeenCampaignId",
              "description": "Last seen campaign Id.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V3CampaignHistory"
        }
      ]
    },
    {
      "path": "/reports/{acc}/devices/{deviceId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve campaign history for a specific device.",
          "nickname": "GetDeviceFirmwareUpgradeHistory",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "description": "Device IMEI identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "DeviceFirmwareUpgrade"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/reports/{acc}/campaigns/{campaignId}/devices",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve a list of all devices in a campaign and the status of each device.",
          "nickname": "GetCampaignDeviceStatus",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "campaignId",
              "description": "Campaign identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastSeenDeviceId",
              "description": "Last seen device identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V3CampaignDevice"
        }
      ]
    },
    {
      "path": "/firmware/{acc}",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint allows user to list the firmware of an account.",
          "nickname": "ListAvailableFirmware",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "protocol",
              "description": "Filter to retrieve a specific protocol type used.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "LWM2M",
              "enum": [
                "LWM2M",
                "OMD-DM",
                "all"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "FirmwarePackage"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/firmware/{acc}/devices",
      "operations": [
        {
          "method": "PUT",
          "summary": "Synchronize ThingSpace with the FOTA server for up to 100 devices.",
          "nickname": "SynchronizeDeviceFirmware",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "DeviceIds to get firmware info synchronously.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "FirmwareIMEI"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceFirmwareList"
        }
      ]
    },
    {
      "path": "/firmware/{acc}/async/{deviceId}",
      "operations": [
        {
          "method": "PUT",
          "summary": "Ask a device to report its firmware version asynchronously.",
          "nickname": "ReportDeviceFirmware",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "deviceId",
              "description": "Device identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceFirmwareVersionUpdateResult"
        }
      ]
    },
    {
      "path": "/devices/{acc}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve account device information such as reported firmware on the devices.",
          "nickname": "GetAccountDeviceInformation",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "lastSeenDeviceId",
              "description": "Last seen device identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "protocol",
              "description": "Filter to retrieve a specific protocol type used.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "LWM2M",
              "enum": [
                "LWM2M",
                "OMDADM",
                "HTTP"
              ],
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "V3AccountDeviceList"
        },
        {
          "method": "POST",
          "summary": "Retrieve device information for a list of devices on an account.",
          "nickname": "ListAccountDevicesInformation",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request device list information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceIMEI"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceListResult"
        }
      ]
    },
    {
      "path": "/callbacks/{acc}",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint allows user to get the registered callback information.",
          "nickname": "ListRegisteredCallbacks",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV3CallbackSummary"
        },
        {
          "method": "PUT",
          "summary": "This endpoint allows the user to update the HTTPS callback address.",
          "nickname": "UpdateCallback",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Callback URL registration.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "FotaV3CallbackRegistrationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV3CallbackRegistrationResult"
        },
        {
          "method": "POST",
          "summary": "This endpoint allows the user to create the HTTPS callback address.",
          "nickname": "RegisterCallback",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Callback URL registration.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "FotaV3CallbackRegistrationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV3CallbackRegistrationResult"
        },
        {
          "method": "DELETE",
          "summary": "This endpoint allows user to delete a previously registered callback URL.",
          "nickname": "DeregisterCallback",
          "parameters": [
            {
              "name": "acc",
              "description": "Account identifier.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "FotaV3Result",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "FotaV3SuccessResult"
        }
      ]
    },
    {
      "path": "/v1/devices/license/actions/assign",
      "operations": [
        {
          "method": "POST",
          "summary": "Assigns SIM-Secure for IoT licenses to SIMs.",
          "nickname": "AssignLicenseToDevices",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to assign license to devices.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "AssignLicenseRequest"
            },
            {
              "name": "X-Request-ID",
              "description": "Transaction Id.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "SecurityResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "SecurityResult",
              "message": "Unauthorized request."
            },
            {
              "code": 403,
              "responseModel": "SecurityResult",
              "message": "Request Forbidden."
            },
            {
              "code": 404,
              "responseModel": "SecurityResult",
              "message": "Not Found / Does not exist."
            },
            {
              "code": 406,
              "responseModel": "SecurityResult",
              "message": "Format / Request Unacceptable."
            },
            {
              "code": 429,
              "responseModel": "SecurityResult",
              "message": "Too many requests."
            }
          ],
          "uniqueItems": false,
          "$ref": "SecuritySuccessResult"
        },
        {
          "method": "DELETE",
          "summary": "Unassigns SIM-Secure for IoT Flexible and Flexible Bundle license from SIMs.",
          "nickname": "UnassignLicenseToDevices",
          "parameters": [
            {
              "name": "X-Request-ID",
              "description": "Transaction Id.",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "SecurityResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "SecurityResult",
              "message": "Unauthorized request."
            },
            {
              "code": 403,
              "responseModel": "SecurityResult",
              "message": "Request forbidden."
            },
            {
              "code": 404,
              "responseModel": "SecurityResult",
              "message": "Not Found / Does not exist."
            },
            {
              "code": 406,
              "responseModel": "SecurityResult",
              "message": "Format / Request Unacceptable."
            },
            {
              "code": 429,
              "responseModel": "SecurityResult",
              "message": "Too many requests."
            }
          ],
          "uniqueItems": false,
          "$ref": "SecuritySuccessResult"
        }
      ]
    },
    {
      "path": "/v1/accounts/subscriptions/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Retrieves the total number of SIM-Secure for IoT subscription licenses purchased for your account by license type, and lists the number of licenses assigned and available for each license type.",
          "nickname": "ListAccountSubscriptions",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for account subscription.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SecuritySubscriptionRequest"
            },
            {
              "name": "X-Request-ID",
              "description": "Transaction Id.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "SecurityResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "SecurityResult",
              "message": "Unauthorized request."
            },
            {
              "code": 403,
              "responseModel": "SecurityResult",
              "message": "Request forbidden."
            },
            {
              "code": 404,
              "responseModel": "SecurityResult",
              "message": "Not Found / Does not exist."
            },
            {
              "code": 406,
              "responseModel": "SecurityResult",
              "message": "Format / Request Unacceptable."
            },
            {
              "code": 429,
              "responseModel": "SecurityResult",
              "message": "Too many requests."
            }
          ],
          "uniqueItems": false,
          "$ref": "SecuritySubscriptionResult"
        }
      ]
    },
    {
      "path": "/performance/device/network/metrics",
      "operations": [
        {
          "method": "POST",
          "summary": "Query the most recent data for Key Performance Indicators (KPIs) like network availability, MEC hostnames and more.",
          "nickname": "QueryMECPerformanceMetrics",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "QueryMECPerformanceMetricsRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [
              {
                "scope": "edge:discovery:read"
              },
              {
                "scope": "edge:serviceprofile:read"
              },
              {
                "scope": "edge:serviceprofile:write"
              },
              {
                "scope": "edge:serviceregistry:read"
              },
              {
                "scope": "edge:serviceregistry:write"
              },
              {
                "scope": "ts.application.ro"
              },
              {
                "scope": "ts.mec.fullaccess",
                "description": "Full access for /serviceprofiles and /serviceendpoints."
              },
              {
                "scope": "ts.mec.limitaccess",
                "description": "Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery."
              }
            ],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "EdgePerformanceResult",
              "message": "Bad Request."
            },
            {
              "code": 401,
              "responseModel": "EdgePerformanceResult",
              "message": "Unauthorized request."
            },
            {
              "code": 403,
              "responseModel": "EdgePerformanceResult",
              "message": "Request forbidden."
            },
            {
              "code": 404,
              "responseModel": "EdgePerformanceResult",
              "message": "Resource Not Found."
            },
            {
              "code": 405,
              "responseModel": "EdgePerformanceResult",
              "message": "Method Not Allowed."
            },
            {
              "code": 503,
              "responseModel": "EdgePerformanceResult",
              "message": "Service Unavailable."
            }
          ],
          "uniqueItems": false,
          "$ref": "MECPerformanceMetrics"
        }
      ]
    },
    {
      "path": "/subscriptions",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint retrieves a diagnostics subscription by account.",
          "nickname": "GetDiagnosticsSubscription",
          "parameters": [
            {
              "name": "accountName",
              "description": "Account identifier.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "DiagnosticsSubscription"
        },
        {
          "method": "POST",
          "summary": "Create a subscription to define a streaming channel that sends data from devices in the account to an endpoint defined in a target resource.",
          "nickname": "CreateSubscription",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body provides the details of the subscription that you want to create.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CreateSubscriptionRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "Subscription"
        }
      ]
    },
    {
      "path": "/devices/attributes/actions/observe",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows the user to start or change observe diagnostics.",
          "nickname": "StartDiagnosticsObservation",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for device observation information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ObservationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "DiagnosticsObservationResult"
        },
        {
          "method": "DELETE",
          "summary": "This endpoint allows the user to stop or reset observe diagnostics.",
          "nickname": "StopDiagnosticsObservation",
          "parameters": [
            {
              "name": "transactionId",
              "description": "The ID value associated with the transaction.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountName",
              "description": "The numeric account name.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "DiagnosticsObservationResult"
        }
      ]
    },
    {
      "path": "/history/actions/$search",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows the user to get the history data.",
          "nickname": "GetDiagnosticsHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "History data information.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "HistorySearchRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [],
          "items": {
            "$ref": "History"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/devices/settings",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint retrieves diagnostics settings synchronously.",
          "nickname": "ListDiagnosticsSettings",
          "parameters": [
            {
              "name": "accountName",
              "description": "Account identifier.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "devices",
              "description": "Devices list format: [{\"id\":\"{imei1}\",\"kind\":\"imei\"},{\"id\":\"{imei2}\",\"kind\":\"imei\"}].",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "items": {
            "$ref": "DiagnosticObservationSetting"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/callbacks",
      "operations": [
        {
          "method": "GET",
          "summary": "This endpoint allows user to get the registered callback information of an existing diagnostics subscription.",
          "nickname": "GetDiagnosticsSubscriptionCallbackInfo",
          "parameters": [
            {
              "name": "accountName",
              "description": "Account identifier.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceDiagnosticsResult",
              "message": "Unexpected error."
            }
          ],
          "items": {
            "$ref": "DeviceDiagnosticsCallback"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "This endpoint allows user update the callback HTTPS address of an existing diagnostics subscription.",
          "nickname": "RegisterDiagnosticsCallbackURL",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "*/*",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Callback URL registration request.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CallbackRegistrationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "*/*"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceDiagnosticsResult",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceDiagnosticsCallback"
        },
        {
          "method": "DELETE",
          "summary": "This endpoint allows user to delete a registered callback URL and credential.",
          "nickname": "UnregisterDiagnosticsCallback",
          "parameters": [
            {
              "name": "accountName",
              "description": "Account identifier.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "serviceName",
              "description": "Service name for callback notification.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "DeviceDiagnosticsResult",
              "message": "Unexpected error."
            }
          ],
          "uniqueItems": false,
          "$ref": "DeviceDiagnosticsCallback"
        },
        {
          "method": "GET",
          "summary": "Find registered callback listener for account by account number.",
          "nickname": "ListRegisteredCallbacks",
          "parameters": [
            {
              "name": "accountNumber",
              "description": "A unique identifier for an account.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Unauthorized request. Access token is missing or invalid."
            },
            {
              "code": 403,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Forbidden request."
            },
            {
              "code": 404,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Not found."
            },
            {
              "code": 409,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Conflict state."
            },
            {
              "code": 500,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Internal Server Error."
            }
          ],
          "items": {
            "$ref": "CallbackCreated"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "Registers a URL at which an account receives asynchronous responses and other messages from a ThingSpace Platform callback service. The messages are REST messages. You are responsible for creating and running a listening process on your server at that URL to receive and parse the messages.",
          "nickname": "RegisterCallback",
          "parameters": [
            {
              "name": "accountNumber",
              "description": "A unique identifier for an account.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "HyperPreciseLocationCallback"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Unauthorized request. Access token is missing or invalid."
            },
            {
              "code": 403,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Forbidden request."
            },
            {
              "code": 404,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Not found."
            },
            {
              "code": 409,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Conflict state."
            },
            {
              "code": 500,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Internal Server Error."
            }
          ],
          "uniqueItems": false,
          "$ref": "CallbackRegistered"
        },
        {
          "method": "DELETE",
          "summary": "Stops ThingSpace from sending callback messages for the specified account and listener name.",
          "nickname": "DeregisterCallback",
          "parameters": [
            {
              "name": "accountNumber",
              "description": "A unique identifier for a account.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "service",
              "description": "The name of the callback service that will be deleted.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Unauthorized request. Access token is missing or invalid."
            },
            {
              "code": 403,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Forbidden request."
            },
            {
              "code": 404,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Not found."
            },
            {
              "code": 409,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Conflict state."
            },
            {
              "code": 500,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Internal Server Error."
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/devices/actions/restart",
      "operations": [
        {
          "method": "POST",
          "summary": "Performs a device reboot or a factory reset on the modem portion of the device.",
          "nickname": "DecivesRestart",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "A request to perform a device reboot.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceResetRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "DiagnosticsObservationResult"
        }
      ]
    },
    {
      "path": "/targets/actions/query",
      "operations": [
        {
          "method": "POST",
          "summary": "Search for targets by property values. Returns an array of all matching target resources.",
          "nickname": "QueryTarget",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Search for targets by property values.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "QueryTargetRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "items": {
            "$ref": "Target"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/targets/actions/delete",
      "operations": [
        {
          "method": "POST",
          "summary": "Remove a target from a ThingSpace account.",
          "nickname": "DeleteTarget",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body identifies the target to delete.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeleteTargetRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/targets",
      "operations": [
        {
          "method": "POST",
          "summary": "Define a target to receive data streams, alerts, or callbacks. After creating the target resource, use its ID in a subscription to set up a data stream.",
          "nickname": "CreateTarget",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body provides the details of the target that you want to create.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CreateTargetRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "Target"
        }
      ]
    },
    {
      "path": "/targets/actions/newextid",
      "operations": [
        {
          "method": "POST",
          "summary": "Create a unique string that ThingSpace will pass to AWS for increased security.",
          "nickname": "GenerateTargetExternalID",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body only contains the authenticating account.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GenerateExternalIDRequest"
            }
          ],
          "authorizations": {},
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GenerateExternalIDResult"
        }
      ]
    },
    {
      "path": "/targets/actions/newaic",
      "operations": [
        {
          "method": "POST",
          "summary": "Deploy a new Azure IoT Central application based on the Verizon ARM template within the specified Azure Active Directory account.",
          "nickname": "CreateAzureCentralIoTApplication",
          "parameters": [
            {
              "name": "BillingaccountID",
              "description": "TThe ThingSpace ID of the authenticating billing account.",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body must include the UUID of the subscription that you want to update plus any properties that you want to change.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CreateIoTApplicationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "CreateIoTApplicationResponse"
        }
      ]
    },
    {
      "path": "/subscriptions/actions/query",
      "operations": [
        {
          "method": "POST",
          "summary": "Search for subscriptions by property values. Returns an array of all matching subscription resources.",
          "nickname": "QuerySubscription",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body specifies fields and values to match.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "QuerySubscriptionRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "items": {
            "$ref": "Subscription"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/subscriptions/actions/delete",
      "operations": [
        {
          "method": "POST",
          "summary": "Remove a subscription from a ThingSpace account.",
          "nickname": "DeleteSubscription",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body identifies the subscription to delete.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeleteSubscriptionRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/devices/configuration/actions/set",
      "operations": [
        {
          "method": "POST",
          "summary": "Change configuration values on a device, such as setting how often a device records and reports sensor readings.",
          "nickname": "UpdateDevicesConfigurationValue",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body changes configuration values on a device.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ChangeConfigurationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "ChangeConfigurationResponse"
        }
      ]
    },
    {
      "path": "/devices/actions/query",
      "operations": [
        {
          "method": "POST",
          "summary": "Find devices by property values. Returns an array of all matching device resources.",
          "nickname": "FindDeviceByPropertyValues",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body specifies fields and values to match.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "QuerySubscriptionRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "FindDeviceByPropertyResponseList"
        }
      ]
    },
    {
      "path": "/devices/actions/search",
      "operations": [
        {
          "method": "POST",
          "summary": "Search for devices by property values. Returns an array of all matching device resources.",
          "nickname": "SearchDevicesResourcesByPropertyValues",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body specifies fields and values to match.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "QuerySubscriptionRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "SearchDeviceByPropertyResponseList"
        }
      ]
    },
    {
      "path": "/devices/fields/actions/history/search",
      "operations": [
        {
          "method": "POST",
          "summary": "Search device event history to find events that match criteria.Sensor readings, configuration changes, and other device data are all stored as events.",
          "nickname": "SearchDeviceEventHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The device identifier and fields to match in the search.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SearchDeviceEventHistoryRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "SearchDeviceEventHistoryResponseList"
        }
      ]
    },
    {
      "path": "/devices/fields/{fieldname}/actions/history",
      "operations": [
        {
          "method": "POST",
          "summary": "Returns the readings of a specified sensor, with the most recent reading first. Sensor readings are stored as events; this request an array of events.",
          "nickname": "SearchSensorReadings",
          "parameters": [
            {
              "name": "fieldname",
              "description": "The name of the sensor.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The device identifier and fields to match in the search.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SearchSensorHistoryRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "SearchSensorHistoryResponseList"
        }
      ]
    },
    {
      "path": "/devices/actions/delete",
      "operations": [
        {
          "method": "POST",
          "summary": "Remove a device from a ThingSpace account.",
          "nickname": "DeleteDeviceFromAccount",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request body identifies the device to delete.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "RemoveDeviceRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/devices/services",
      "operations": [
        {
          "method": "GET",
          "summary": "Gets the list of a status for hyper-precise location devices.",
          "nickname": "GetDeviceHyperPreciseStatus",
          "parameters": [
            {
              "name": "imei",
              "description": "A unique identifier for a device.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "accountNumber",
              "description": "A unique identifier for an account.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Unauthorized request. Access token is missing or invalid."
            },
            {
              "code": 403,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Forbidden request."
            },
            {
              "code": 404,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Not found."
            },
            {
              "code": 409,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Conflict state."
            },
            {
              "code": 500,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Internal Server Error."
            }
          ],
          "uniqueItems": false,
          "$ref": "BullseyeServiceResult"
        },
        {
          "method": "PUT",
          "summary": "Enable/disable hyper-precise service for a device.",
          "nickname": "UpdateDeviceHyperPreciseStatus",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "List of devices and hyper-precise required statuses.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "BullseyeServiceRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Unauthorized request. Access token is missing or invalid."
            },
            {
              "code": 403,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Forbidden request."
            },
            {
              "code": 404,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Not found."
            },
            {
              "code": 409,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Conflict state."
            },
            {
              "code": 500,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Internal Server Error."
            }
          ],
          "uniqueItems": false,
          "$ref": "BullseyeServiceResult"
        }
      ]
    },
    {
      "path": "/report/aggregate",
      "operations": [
        {
          "method": "POST",
          "summary": "Calculate aggregated report per day with number of sessions and usage information. User will receive synchronous response for specified list of devices (Max 10) and date range (Max 180 days).",
          "nickname": "CalculateAggregatedReportSynchronous",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Aggregated report request.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "AggregateSessionReportRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Unauthorized request. Access token is missing or invalid."
            },
            {
              "code": 403,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Forbidden request."
            },
            {
              "code": 404,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Not found."
            },
            {
              "code": 409,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Conflict state."
            },
            {
              "code": 500,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Internal Server Error."
            }
          ],
          "uniqueItems": false,
          "$ref": "AggregateSessionReport"
        }
      ]
    },
    {
      "path": "/report/async/aggregate",
      "operations": [
        {
          "method": "POST",
          "summary": "Calculate aggregated report per day with number of sessions and usage information. User will receive an asynchronous callback for the specified list of devices (Max 10000) and date range (Max 180 days).",
          "nickname": "CalculateAggregatedReportAsynchronous",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Aggregated session report request.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "AggregateSessionReportRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Unauthorized request. Access token is missing or invalid."
            },
            {
              "code": 403,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Forbidden request."
            },
            {
              "code": 404,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Not found."
            },
            {
              "code": 409,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Conflict state."
            },
            {
              "code": 500,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Internal Server Error."
            }
          ],
          "uniqueItems": false,
          "$ref": "AggregatedReportCallbackResult"
        }
      ]
    },
    {
      "path": "/report/sessions",
      "operations": [
        {
          "method": "POST",
          "summary": "Detailed report of session duration and number of bytes transferred per day.",
          "nickname": "GetSessionsReport",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for sessions report.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SessionReportRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request."
            },
            {
              "code": 401,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Unauthorized request. Access token is missing or invalid."
            },
            {
              "code": 403,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Forbidden request."
            },
            {
              "code": 404,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Not found."
            },
            {
              "code": 409,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Bad request. Conflict state."
            },
            {
              "code": 500,
              "responseModel": "HyperPreciseLocationResult",
              "message": "Internal Server Error."
            }
          ],
          "uniqueItems": false,
          "$ref": "SessionReport"
        }
      ]
    },
    {
      "path": "/m2m/v1/intelligence/anomaly/settings",
      "operations": [
        {
          "method": "POST",
          "summary": "Uses the subscribed account ID to activate anomaly detection and set threshold values.",
          "nickname": "ActivateAnomalyDetection",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to activate anomaly detection.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "AnomalyDetectionRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "IntelligenceSuccessResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/intelligence/{accountName}/anomaly/settings",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieves the current anomaly detection settings for an account.",
          "nickname": "ListAnomalyDetectionSettings",
          "parameters": [
            {
              "name": "accountName",
              "description": "The name of the subscribed account.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "AnomalyDetectionSettings"
        }
      ]
    },
    {
      "path": "/m2m/v1/intelligence/{accountName}/anomaly/settings/reset",
      "operations": [
        {
          "method": "PUT",
          "summary": "Resets the thresholds to zero.",
          "nickname": "ResetAnomalyDetectionParameters",
          "parameters": [
            {
              "name": "accountName",
              "description": "The name of the subscribed account.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "IntelligenceSuccessResult"
        }
      ]
    },
    {
      "path": "/m2m/v1/triggers",
      "operations": [
        {
          "method": "GET",
          "summary": "This corresponds to the M2M-MC SOAP interface, ```GetTriggers```.",
          "nickname": "ListAnomalyDetectionTriggers",
          "parameters": [],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IntelligenceResult",
              "message": "Bad request"
            },
            {
              "code": 401,
              "responseModel": "IntelligenceResult",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "IntelligenceResult",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "IntelligenceResult",
              "message": "Not Found / Does not exist"
            },
            {
              "code": 406,
              "responseModel": "IntelligenceResult",
              "message": "Format / Request Unacceptable"
            },
            {
              "code": 429,
              "responseModel": "IntelligenceResult",
              "message": "Too many requests"
            }
          ],
          "items": {
            "$ref": "GetTriggerResponseList"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "PUT",
          "summary": "This corresponds to the M2M-MC SOAP interface, ```UpdateTriggerRequest```.",
          "nickname": "UpdateAnomalyDetectionTrigger",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Update Trigger Request",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "UpdateTriggerRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IntelligenceResult",
              "message": "Bad request"
            },
            {
              "code": 401,
              "responseModel": "IntelligenceResult",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "IntelligenceResult",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "IntelligenceResult",
              "message": "Not Found / Does not exist"
            },
            {
              "code": 406,
              "responseModel": "IntelligenceResult",
              "message": "Format / Request Unacceptable"
            },
            {
              "code": 429,
              "responseModel": "IntelligenceResult",
              "message": "Too many requests"
            }
          ],
          "uniqueItems": false,
          "$ref": "AnomalyDetectionTrigger"
        },
        {
          "method": "POST",
          "summary": "This corresponds to the M2M-MC SOAP interface, ```CreateTrigger```.",
          "nickname": "CreateAnomalyDetectionTrigger",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Create Trigger Request",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "CreateTriggerRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IntelligenceResult",
              "message": "Bad request"
            },
            {
              "code": 401,
              "responseModel": "IntelligenceResult",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "IntelligenceResult",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "IntelligenceResult",
              "message": "Not Found / Does not exist"
            },
            {
              "code": 406,
              "responseModel": "IntelligenceResult",
              "message": "Format / Request Unacceptable"
            },
            {
              "code": 429,
              "responseModel": "IntelligenceResult",
              "message": "Too many requests"
            }
          ],
          "uniqueItems": false,
          "$ref": "AnomalyDetectionTrigger"
        }
      ]
    },
    {
      "path": "/m2m/v1/triggers/{triggerId}",
      "operations": [
        {
          "method": "GET",
          "summary": "This corresponds to the M2M-MC SOAP interface, ```GetTriggers```.",
          "nickname": "ListAnomalyDetectionTriggerSettings",
          "parameters": [
            {
              "name": "triggerId",
              "description": "trigger ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IntelligenceResult",
              "message": "Bad request"
            },
            {
              "code": 401,
              "responseModel": "IntelligenceResult",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "IntelligenceResult",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "IntelligenceResult",
              "message": "Not Found / Does not exist"
            },
            {
              "code": 406,
              "responseModel": "IntelligenceResult",
              "message": "Format / Request Unacceptable"
            },
            {
              "code": 429,
              "responseModel": "IntelligenceResult",
              "message": "Too many requests"
            }
          ],
          "items": {
            "$ref": "GetTriggerResponseList"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "DELETE",
          "summary": "Deletes a specific trigger ID",
          "nickname": "DeleteAnomalyDetectionTrigger",
          "parameters": [
            {
              "name": "triggerId",
              "description": "The trigger ID to be deleted",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "AnomalyDetectionTrigger"
        }
      ]
    },
    {
      "path": "/m2m/v2/triggers",
      "operations": [
        {
          "method": "POST",
          "summary": "Creates the trigger to identify an anomaly.",
          "nickname": "CreateAnomalyDetectionTriggerV2",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to create an anomaly trigger.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "CreateTriggerRequestOptions"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "AnomalyDetectionTrigger"
        },
        {
          "method": "PUT",
          "summary": "Updates an existing trigger using the account name.",
          "nickname": "UpdateAnomalyDetectionTriggerV2",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request to update existing trigger.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "UpdateTriggerRequestOptions"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "IntelligenceSuccessResult"
        },
        {
          "method": "GET",
          "summary": "Retrieves all of the available triggers for pseudo-MDN.",
          "nickname": "GetAllAvailableTriggers",
          "parameters": [],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "TriggerValueResponse"
        },
        {
          "method": "PUT",
          "summary": "Updates the promotional triggers for pseudo-MDN.",
          "nickname": "UpdateAllAvailableTriggers",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Update the triggers",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "requestTrigger"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "success"
        }
      ]
    },
    {
      "path": "/m2m/v2/triggers/{triggerId}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieves the values for a specific trigger ID.",
          "nickname": "ListAnomalyDetectionTriggerSettingsV2",
          "parameters": [
            {
              "name": "triggerId",
              "description": "The trigger ID of a specific trigger.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "AnomalyTriggerResult"
        },
        {
          "method": "GET",
          "summary": "Retrives a specific trigger by its ID.",
          "nickname": "GetTriggersById",
          "parameters": [
            {
              "name": "triggerId",
              "description": "The ID of a specific trigger",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "TriggerValueResponse2"
        }
      ]
    },
    {
      "path": "/m2m/v1/intelligence/network-conditions",
      "operations": [
        {
          "method": "POST",
          "summary": "WNP Query for current network condition.",
          "nickname": "NearRealTimeNetworkConditions",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for current network health.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GetNetworkConditionsRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "WNPRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/intelligence/wireless-coverage",
      "operations": [
        {
          "method": "POST",
          "summary": "Run a report to determine network types available and available coverage. Network types covered include: CAT-M, NB-IOT, LTE, LTE-AWS and 5GNW.",
          "nickname": "Domestic4GAnd5GNationwideNetworkCoverage",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for network coverage details.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GetWirelessCoverageRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "WNPRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/intelligence/site-proximity/action/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Identify the direction and general distance of nearby cell sites and the technology supported by the equipment.",
          "nickname": "SiteProximity",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for cell site proximity.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GetNetworkConditionsRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "WNPRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/intelligence/device-experience/history/30-days",
      "operations": [
        {
          "method": "POST",
          "summary": "A report of a specific device's service scores over a 30 day period.",
          "nickname": "DeviceExperience30daysHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for a device's 30 day experience.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GetDeviceExperienceScoreHistoryRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "WNPRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/intelligence/device-experience/bulk/latest",
      "operations": [
        {
          "method": "POST",
          "summary": "Run a report to view the latest device experience score for specific devices.",
          "nickname": "DeviceExperienceBulkLatest",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for bulk latest history details.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GetDeviceExperienceScoreBulkRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "WNPRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/intelligence/wireless-coverage",
      "operations": [
        {
          "method": "POST",
          "summary": "Use this query for Fixed Wireless Qualification of an address. Network types include: LTE, C-BAND and MMWAVE.",
          "nickname": "Domestic4GAnd5GFixedWirelessQualification",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Request for network coverage details.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GetWirelessCoverageRequestFWA"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "WNPRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/profile/actions/download",
      "operations": [
        {
          "method": "POST",
          "summary": "Download a Global IoT Orchestration device profile.",
          "nickname": "DownloadADeviceProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "DeviceProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/sms/{accountName}/history",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieves queued SMS messages sent by all M2M MC devices associated with an account.",
          "nickname": "GetSmsMessages",
          "parameters": [
            {
              "name": "accountName",
              "description": "Numeric account name",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "next",
              "description": "Continue the previous query from the pageUrl in Location Header",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "SmsMessagesResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/sms/{accountName}/startCallbacks",
      "operations": [
        {
          "method": "PUT",
          "summary": "Starts delivery of SMS messages for the specified account.",
          "nickname": "StartSmsMessageDelivery",
          "parameters": [
            {
              "name": "accountName",
              "description": "Numeric account name",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "SuccessResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/sms/history/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Returns a list of sms history for a given device during a specified time frame.",
          "nickname": "ListSmsMessageHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "SMSEventHistoryRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v2/devices/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Allows the profile to fetch the complete device list. This works with Verizon US and Global profiles.",
          "nickname": "RetrieveTheGlobalDeviceList",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Profile Query",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "GetDeviceListWithProfilesRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v2/devices/history/actions/list",
      "operations": [
        {
          "method": "POST",
          "summary": "Retreive the provisioning history of a specific device or devices.",
          "nickname": "RetrieveDeviceProvisioningHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Provisioning History",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ProvhistoryRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GIORequestResponse"
        },
        {
          "method": "POST",
          "summary": "Retreive the provisioning history of a specific device or devices.",
          "nickname": "deviceprovhistoryUsingPOST",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Device Provisioning History",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "eSIMProvhistoryRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Bad request"
            },
            {
              "code": 401,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Not Found / Does not exist"
            },
            {
              "code": 406,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Format / Request Unacceptable"
            },
            {
              "code": 429,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Too many requests"
            }
          ],
          "uniqueItems": false,
          "$ref": "eSIMRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v2/accounts/{accountName}/requests/{requestID}/status",
      "operations": [
        {
          "method": "GET",
          "summary": "Get the status of an asynchronous request made with the Device Actions.",
          "nickname": "GetAsynchronousRequestStatus",
          "parameters": [
            {
              "name": "accountName",
              "description": "",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "requestID",
              "description": "",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "StatusResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/actions/enhanceQoS",
      "operations": [
        {
          "method": "POST",
          "summary": "Creates a QoS elevation subscription ID and activates the subscription.",
          "nickname": "CreateAThingSpaceQualityOfServiceAPISubscription",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "The request details to create a ThingSpace Quality of Service API subscription.",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "subscribeRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "201success"
        },
        {
          "method": "DELETE",
          "summary": "Stops an active ThingSpace Quality of Service API subscription using the account name and the subscription ID.",
          "nickname": "StopAThingSpaceQualityOfServiceAPISubscription",
          "parameters": [
            {
              "name": "accountName",
              "description": "",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "qosSubscriptionId",
              "description": "",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "201success"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/mec/kpi/list/{aname}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "KPIList",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "KPIInfoList"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/mec/profiles/list/{aname}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "GetProfileList",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "MECProfileList"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/mec/actions/state/activate",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "ChangePmecDeviceStateActivate",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ChangePmecDeviceStateActivateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "ChangeMecDeviceStateResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/mec/actions/state/deactivate",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "ChangePmecDeviceStateBulkDeactivate",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ChangePmecDeviceStateBulkDeactivateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "ChangeMecDeviceStateResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/mec/actions/profile",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "ChangePmecDeviceProfile",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ChangePmecDeviceProfileRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "ChangeMecDeviceProfileResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/mec/actions/ipaddress",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "ChangePmecDeviceIPaddressBulk",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ChangePmecDeviceStateBulkDeactivateRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "ChangeMecDeviceIPAddressResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/mec/performance/consent/{aname}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "GetMECPerformanceConsent",
          "parameters": [
            {
              "name": "aname",
              "description": "Account name.",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "GetMECPerformanceConsentResponse"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/usage/actions/promodeviceusage",
      "operations": [
        {
          "method": "POST",
          "summary": "Retrieves the usage history of a device during the promotion period.",
          "nickname": "getPromoDeviceUsageHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Retrieve Aggregate Usage",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "RequestBodyforUsage1"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "ResponsetoUsageQuery"
        }
      ]
    },
    {
      "path": "/m2m/v1/devices/usage/actions/promoaggregateusage",
      "operations": [
        {
          "method": "POST",
          "summary": "Retrieves the aggregate usage for an account using pseudo-MDN during the promotional period using a callback.",
          "nickname": "GetPromoDeviceAggregateUsageHistory",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Retrieve Aggregate Usage",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "RequestBodyforUsage"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "usageRequestResponse"
        }
      ]
    },
    {
      "path": "/m2m/v2/triggers/accounts/{accountName}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieve the triggers associated with an account name.",
          "nickname": "GetAllTriggersByAccountName",
          "parameters": [
            {
              "name": "accountName",
              "description": "The account name",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "TriggerValueResponse"
        }
      ]
    },
    {
      "path": "/m2m/v2/triggers/categories/PromoAlerts",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieves all of the triggers for the specified account associated with the PromoAlert category",
          "nickname": "GetAllTriggersByTriggerCategory",
          "parameters": [],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [],
          "uniqueItems": false,
          "$ref": "TriggerValueResponse2"
        }
      ]
    },
    {
      "path": "/m2m/v2/accounts/{accountname}/requests/{requestID}/status",
      "operations": [
        {
          "method": "GET",
          "summary": "Get the status of a request made with the Device Actions.",
          "nickname": "requeststatususingGET",
          "parameters": [
            {
              "name": "accountname",
              "description": "",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "requestID",
              "description": "",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Bad request"
            },
            {
              "code": 401,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Not Found / Does not exist"
            },
            {
              "code": 406,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Format / Request Unacceptable"
            },
            {
              "code": 429,
              "responseModel": "eSIMRestErrorResponse",
              "message": "Too many requests"
            }
          ],
          "uniqueItems": false,
          "$ref": "eSIMStatusResponse"
        }
      ]
    },
    {
      "path": "/api/v1/vendors/registration",
      "operations": [
        {
          "method": "POST",
          "summary": "With this API call the users (clients) register themselves as Vendors to the IMP system. Therefore, when a registration is initiated from a device or software service to the IMP system with the registered VendorID, then the client registration will be authorized.\n",
          "nickname": "RegisterIMPVendor",
          "parameters": [
            {
              "name": "BasicToken",
              "description": "This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Username",
              "description": "This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Password",
              "description": "This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "VendorRegistrationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IMPResponseError",
              "message": "Invalid Request"
            },
            {
              "code": 401,
              "responseModel": "IMPResponseError",
              "message": "Unauthorized Request"
            },
            {
              "code": 403,
              "responseModel": "IMPResponseError",
              "message": "Forbidden Request"
            },
            {
              "code": 429,
              "responseModel": "IMPResponseError",
              "message": "Too Many Requests"
            },
            {
              "code": 503,
              "responseModel": "IMPResponseError",
              "message": "Internal Server Error"
            }
          ],
          "uniqueItems": false,
          "$ref": "VendorRegistrationResponse"
        },
        {
          "method": "DELETE",
          "summary": "With this API call the users (clients) can unregister themselves from the IMP system. The devices and services for this Vendor will no longer be able to use the IMP Message Exchange.\n",
          "nickname": "UnregisterIMPVendor",
          "parameters": [
            {
              "name": "BasicToken",
              "description": "This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Username",
              "description": "This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Password",
              "description": "This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "VendorID",
              "description": "The VendorID set during the Vendor registration call.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IMPResponseError",
              "message": "Invalid Request"
            },
            {
              "code": 401,
              "responseModel": "IMPResponseError",
              "message": "Unauthorized Request"
            },
            {
              "code": 403,
              "responseModel": "IMPResponseError",
              "message": "Forbidden Request"
            },
            {
              "code": 429,
              "responseModel": "IMPResponseError",
              "message": "Too Many Requests"
            },
            {
              "code": 503,
              "responseModel": "IMPResponseError",
              "message": "Internal Server Error"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/api/v1/clients/registration",
      "operations": [
        {
          "method": "POST",
          "summary": "With this API call the user (client) registers its device or software service to the IMP system. Therefore, when a connection is initiated from the device or software service to the IMP system along with the credential provided by this registration call, then the connection will be authorized.\nNote 1: One user can register multiple devices or software services, which can all be used at the same time.\n\nNote 2: The user needs to authenticate with their ThingSpace credentials and request a bearer token in order to call this API.\n",
          "nickname": "RegisterIMPDevice",
          "parameters": [
            {
              "name": "Username",
              "description": "This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Password",
              "description": "This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ClientRegistrationRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IMPResponseError",
              "message": "Invalid Request"
            },
            {
              "code": 401,
              "responseModel": "IMPResponseError",
              "message": "Unauthorized Request"
            },
            {
              "code": 403,
              "responseModel": "IMPResponseError",
              "message": "Forbidden Request"
            },
            {
              "code": 429,
              "responseModel": "IMPResponseError",
              "message": "Too Many Requests"
            },
            {
              "code": 503,
              "responseModel": "IMPResponseError",
              "message": "Internal Server Error"
            }
          ],
          "uniqueItems": false,
          "$ref": "ClientRegistrationResponse"
        },
        {
          "method": "DELETE",
          "summary": "With this API call the user (client) can unregister its devices and software services from the IMP system. The unregistered devices and services will no longer be able to use the IMP Message Exchange.\n",
          "nickname": "UnregisterIMPDevice",
          "parameters": [
            {
              "name": "Username",
              "description": "This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Password",
              "description": "This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "DeviceIDs",
              "description": "The Device IDs acquired through the registration API.",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IMPResponseError",
              "message": "Invalid Request"
            },
            {
              "code": 401,
              "responseModel": "IMPResponseError",
              "message": "Unauthorized Request"
            },
            {
              "code": 403,
              "responseModel": "IMPResponseError",
              "message": "Forbidden Request"
            },
            {
              "code": 429,
              "responseModel": "IMPResponseError",
              "message": "Too Many Requests"
            },
            {
              "code": 503,
              "responseModel": "IMPResponseError",
              "message": "Internal Server Error"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/api/v1/clients/connection",
      "operations": [
        {
          "method": "POST",
          "summary": "With this API call the  or software service requests the MQTT URL for the location that it needs to connect. To determine the proper URL the device or software service needs to provide its ID (the one that was provided in the registration request), location (GPS coordinates), and whether it is on the Verizon cellular network or not.\n\nNote: The user needs to authenticate with their ThingSpace credentials and request a bearer token in order to call this API.\n",
          "nickname": "RetrieveMQTTurl",
          "parameters": [
            {
              "name": "Username",
              "description": "This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Password",
              "description": "This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "VendorID",
              "description": "The VendorID set during the Vendor registration call.",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "ConnectionRequest"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "IMPResponseError",
              "message": "Invalid request"
            },
            {
              "code": 401,
              "responseModel": "IMPResponseError",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "IMPResponseError",
              "message": "Forbidden Request"
            },
            {
              "code": 429,
              "responseModel": "IMPResponseError",
              "message": "Too Many Requests"
            },
            {
              "code": 503,
              "responseModel": "IMPResponseError",
              "message": "Internal server Error"
            }
          ],
          "uniqueItems": false,
          "$ref": "ConnectionResponse"
        }
      ]
    },
    {
      "path": "/api/v1/mapdata",
      "operations": [
        {
          "method": "POST",
          "summary": "This endpoint allows user to upload map messages in asn.1 J2735 encoded format. The MapData can have one or more intersections.",
          "nickname": "UploadMapDataMessage",
          "parameters": [
            {
              "name": "BasicToken",
              "description": "This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Username",
              "description": "This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Password",
              "description": "This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "text/plain",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "text/plain",
            "application/json"
          ],
          "consumes": [
            "text/plain"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "MapDataResponseError",
              "message": "Invalid request"
            },
            {
              "code": 401,
              "responseModel": "MapDataResponseError",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "MapDataResponseError",
              "message": "Forbidden Request"
            },
            {
              "code": 429,
              "responseModel": "MapDataResponseError",
              "message": "Too Many Requests"
            },
            {
              "code": 503,
              "responseModel": "MapDataResponseError",
              "message": "Internal server Error"
            }
          ],
          "uniqueItems": false,
          "type": "string"
        },
        {
          "method": "GET",
          "summary": "This endpoint allows user to download SAE J2735 MAP messages in ASN.1 UPER format. The area for the MAP messages is needed to be defined in the query.",
          "nickname": "DownloadMapDataMessage",
          "parameters": [
            {
              "name": "BasicToken",
              "description": "This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Username",
              "description": "This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Password",
              "description": "This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "GeoFence",
              "description": "",
              "paramType": "query",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "",
              "uniqueItems": false,
              "type": "Polygon"
            }
          ],
          "authorizations": {
            "thingspace_oauth": [],
            "VZM2MToken": []
          },
          "produces": [
            "text/plain",
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "MapDataResponseError",
              "message": "Unauthorized"
            },
            {
              "code": 403,
              "responseModel": "MapDataResponseError",
              "message": "Forbidden Request"
            },
            {
              "code": 429,
              "responseModel": "MapDataResponseError",
              "message": "Too Many Requests"
            },
            {
              "code": 503,
              "responseModel": "MapDataResponseError",
              "message": "Internal server Error"
            }
          ],
          "uniqueItems": false,
          "type": "string"
        }
      ]
    }
  ],
  "models": {
    "DeleteServiceProfileResult": {
      "id": "DeleteServiceProfileResult",
      "description": "Response on successful deletion of service profile.",
      "required": [],
      "properties": {
        "status": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UpdateServiceProfileResult": {
      "id": "UpdateServiceProfileResult",
      "description": "Response on successful update of service profile.",
      "required": [],
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Service Profile that are updated or error details in case of an error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ListServiceProfilesResult": {
      "id": "ListServiceProfilesResult",
      "description": "Response on successful retrieval of service profiles.",
      "required": [],
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "A comma delimited list of all the service profiles registered under your API key.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "CreateServiceProfileResult": {
      "id": "CreateServiceProfileResult",
      "description": "A successful request returns a serviceProfileId that you can use in subsequent requests.",
      "required": [],
      "properties": {
        "serviceProfileId": {
          "description": "Unique identifier for a service profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeregisterServiceEndpointResult": {
      "id": "DeregisterServiceEndpointResult",
      "description": "Response to deregister an application's Service Endpoint from one or more Multi-access Edge Compute (MEC) Platforms.",
      "required": [],
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "EdgeAppServicesID that are deleted or error details in case of an error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UpdateServiceEndpointResult": {
      "id": "UpdateServiceEndpointResult",
      "description": "Response to update registered Service Endpoint information.",
      "required": [],
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "EdgeAppServices are updated or error details in case of an error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ListAllServiceEndpointsResult": {
      "id": "ListAllServiceEndpointsResult",
      "description": "Response on successful retrieval of all registered service endpoints.",
      "required": [],
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "defaultValue": "success",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "A comma delimited list of all registered service endpoints.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RegisterServiceEndpointResult": {
      "id": "RegisterServiceEndpointResult",
      "description": "Response to register Service Endpoints of a deployed application to specified Muli-access Edge Compute (MEC) Platforms.",
      "required": [],
      "properties": {
        "serviceEndpointsId": {
          "description": "A system-defined string identifier representing one or more registered Service Endpoints.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ListOptimalServiceEndpointsResult": {
      "id": "ListOptimalServiceEndpointsResult",
      "description": "Response on successful retrieval of optimal service endpoints for clients.",
      "required": [],
      "properties": {
        "serviceEndpoints": {
          "description": "An array of optimal Service Endpoint IDs for clients to connect to.",
          "items": {
            "$ref": "ResourcesEdgeHostedService"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ListRegionsResult": {
      "id": "ListRegionsResult",
      "description": "Response to return an array of all regions in the Verizon 5G Edge service. You can use the region IDs from the response to find optimal Edge platforms or service endpoints.",
      "required": [],
      "properties": {
        "regions": {
          "description": "An array of all regions in the Verizon 5G Edge service.",
          "items": {
            "$ref": "Region"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ListMECPlatformsResult": {
      "id": "ListMECPlatformsResult",
      "description": "Response to return the optimal 5G Edge platforms for deployment based on a region, service profile of the service that you want to deploy or user equipment.",
      "required": [],
      "properties": {
        "MECPlatforms": {
          "description": "A list of optimal MEC Platforms where you can register your deployed application.",
          "items": {
            "$ref": "MECPlatformResource"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ResourcesServiceProfile": {
      "id": "ResourcesServiceProfile",
      "description": "Information about the resource requirements and service characteristics of an edge application. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Does not include serviceProfileId",
      "required": [
        "clientType"
      ],
      "properties": {
        "clientType": {
          "description": "The category of application client.",
          "defaultValue": "",
          "enum": [
            "V2X",
            "ComputerVision",
            "MachineLearning",
            "IoT",
            "Gaming",
            "AR",
            "VR",
            "Analytics",
            "Robotics"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "ecspFilter": {
          "description": "Identity of the preferred Edge Computing Service Provider.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "clientSchedule": {
          "description": "The expected operation schedule of the application client (e.g. time windows).",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "clientServiceArea": {
          "description": "The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "networkResources": {
          "description": "Network resources of a service profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "NetworkResourcesType"
        },
        "computeResources": {
          "description": "Compute resources of a service profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ComputeResourcesType"
        },
        "properties": {
          "description": "Additional service support information for the MEC platform.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "MECPlatformsAdditionalSupportInfo"
        }
      }
    },
    "ResourcesServiceProfileWithId": {
      "id": "ResourcesServiceProfileWithId",
      "description": "Information about the resource requirements and service characteristics of an edge application. Includes serviceProfileId. Used when retrieving a service profile.",
      "required": [
        "clientType"
      ],
      "properties": {
        "serviceProfileId": {
          "description": "Unique identifier for a service profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "clientType": {
          "description": "The category of application client.",
          "defaultValue": "",
          "enum": [
            "V2X",
            "ComputerVision",
            "MachineLearning",
            "IoT",
            "Gaming",
            "AR",
            "VR",
            "Analytics",
            "Robotics"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "ecspFilter": {
          "description": "Identity of the preferred Edge Computing Service Provider.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "clientSchedule": {
          "description": "The expected operation schedule of the application client (e.g. time windows).",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "clientServiceArea": {
          "description": "The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "networkResources": {
          "description": "Network resources of a service profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "NetworkResourcesType"
        },
        "computeResources": {
          "description": "Compute resources of a service profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ComputeResourcesType"
        },
        "properties": {
          "description": "Additional service support information for the MEC platform.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "MECPlatformsAdditionalSupportInfo"
        }
      }
    },
    "MECPlatformsAdditionalSupportInfo": {
      "id": "MECPlatformsAdditionalSupportInfo",
      "description": "Additional service support information for the MEC platform.",
      "required": [],
      "properties": {
        "type": {
          "description": "Type of additional service support information for the MEC platform.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "Data about additional service support information for the MEC platform.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "MECPlatformsAdditionalSupportInfoData"
        }
      }
    },
    "MECPlatformsAdditionalSupportInfoData": {
      "id": "MECPlatformsAdditionalSupportInfoData",
      "description": "Data about additional service support information for the MEC platform.",
      "required": [],
      "properties": {
        "additionalInfo": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ResourcesEdgeHostedService": {
      "id": "ResourcesEdgeHostedService",
      "description": "Edge hosted service represented by Service Endpoint definition.",
      "required": [],
      "properties": {
        "ern": {
          "description": "Edge Resource Name. A string identifier for a set of edge resources.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceEndpoint": {
          "description": "Service Endpoint path, address, and port.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourcesServiceEndpoint"
        },
        "applicationServerProviderId": {
          "description": "Unique ID representing the Edge Application Provider.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "applicationId": {
          "description": "Unique ID representing the Edge Application.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceDescription": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ResourcesEdgeHostedServiceWithProfileId": {
      "id": "ResourcesEdgeHostedServiceWithProfileId",
      "description": "Edge hosted service represented by Service Endpoint definition.",
      "required": [],
      "properties": {
        "ern": {
          "description": "Edge Resource Name. A string identifier for a set of edge resources.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceEndpoint": {
          "description": "Service Endpoint path, address, and port.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourcesServiceEndpoint"
        },
        "applicationServerProviderId": {
          "description": "Unique ID representing the Edge Application Provider.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "applicationId": {
          "description": "Unique ID representing the Edge Application.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceDescription": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceProfileID": {
          "description": "The system assigned ID of the service profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ResourcesServiceEndpoint": {
      "id": "ResourcesServiceEndpoint",
      "description": "Service Endpoint path, address, and port.",
      "required": [],
      "properties": {
        "URI": {
          "description": "URI of Service Endpoint if available.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "FQDN": {
          "description": "FQDN of Service Endpoint if available.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "IPv4Address": {
          "description": "IPv4 Address of Service Endpoint if available.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "IPv6Address": {
          "description": "IPv6 Address of Service Endpoint if available.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "port": {
          "description": "Port information of Service Endpoint if IPv4 or IPv6 is mentioned.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "10000",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Region": {
      "id": "Region",
      "description": "Information representing a certain geographical or logical area where MEC resources and services are provided.",
      "required": [],
      "properties": {
        "regionId": {
          "description": "The unique identifier of the region.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "A relevant and identifiable region name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "countryCode": {
          "description": "A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future functionality, so the value returned is 'null'.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "metro": {
          "description": "The metropolitan area or 'City' value.  This is future functionality, so the value returned is 'null'.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "area": {
          "description": "This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the value returned is 'null'.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MECPlatformResource": {
      "id": "MECPlatformResource",
      "description": "5G Edge platform used for deployment of a service. The ern of each platform contains the name of the matching AWS Wavelength zone that can be used when deploying.",
      "required": [],
      "properties": {
        "ern": {
          "description": "Edge Resource Name. A string identifier for a set of edge resources.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zone": {
          "description": "Unique identifier representing a zone. *Note:* This will have a null value as a placeholder.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "MEC region name. Current valid values are US_WEST_2 and US_EAST_1.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Status of the MEC Platform (default is 'unknown')",
          "defaultValue": "unknown",
          "enum": [
            "Active",
            "Inactive",
            "unknown"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "properties": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "NetworkResourcesType": {
      "id": "NetworkResourcesType",
      "description": "Network resources of a service profile.",
      "required": [
        "maxLatencyMs"
      ],
      "properties": {
        "minBandwidthKbits": {
          "description": "Minimum required connection bandwidth in Kbit/s for the application.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "10000",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "serviceContinuitySupport": {
          "description": "Indicates if service continuity support is required or not for the application.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "maxRequestRate": {
          "description": "Maximum request rate that the application can handle.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "maxLatencyMs": {
          "description": "Maximum response time or latency that the application can handle, in milliseconds. Note: this value must be in multiples of 5.",
          "defaultValue": "",
          "minimum": "5",
          "maximum": "1000",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "minAvailability": {
          "description": "Minimum availability required for the server.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ComputeResourcesType": {
      "id": "ComputeResourcesType",
      "description": "Compute resources of a service profile.",
      "required": [],
      "properties": {
        "GPU": {
          "description": "GPU resources of a service profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "GPU"
        },
        "minRAMGB": {
          "description": "Minimum RAM required in Gigabytes.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "minStorageGB": {
          "description": "Minimum storage requirement in Gigabytes.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GPU": {
      "id": "GPU",
      "description": "GPU resources of a service profile.",
      "required": [],
      "properties": {
        "minCoreClockMHz": {
          "description": "Minimum Core Clock value in megahertz.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "10000",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "minMemoryClockMHz": {
          "description": "Minimum Memory Clock value in megahertz.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "100000",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "minBandwidthGBs": {
          "description": "Minimum GPU bandwidth in GB/s.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "1000",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "minTFLOPS": {
          "description": "Minimum Floating Point Operations Per Second in Teraflops.",
          "defaultValue": "",
          "minimum": "1",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EdgeDiscoveryResult": {
      "id": "EdgeDiscoveryResult",
      "description": "Base type for all errors.",
      "required": [
        "status",
        "message"
      ],
      "properties": {
        "status": {
          "description": "HTTP status code or status of response.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error details.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "EdgeDiscoveryResultData"
        }
      }
    },
    "EdgeDiscoveryResultData": {
      "id": "EdgeDiscoveryResultData",
      "description": "For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.",
      "required": [],
      "properties": {
        "additionalMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Account": {
      "id": "Account",
      "description": "Returns information about a specified account.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of the account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountNumber": {
          "description": "The billing number of the account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "organizationName": {
          "description": "The name of the organization that the account is part of.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isProvisioningAllowed": {
          "description": "True if devices can be added to the account and activated with a single request. False if devices must be added to the account before they can be activated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "carriers": {
          "description": "The names of all carriers for the account.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "features": {
          "description": "The names of features that are enabled for the account.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "iPPools": {
          "description": "Array of IP pools that are available to the account.",
          "items": {
            "$ref": "IPPool"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "servicePlans": {
          "description": "Array of service plans that are available to the account.",
          "items": {
            "$ref": "ServicePlan"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AddDevicesRequest": {
      "id": "AddDevicesRequest",
      "description": "Request to add the devices.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The billing account to which the devices are added.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "The names and values for any custom fields that you want set for the devices as they are added to the account.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devicesToAdd": {
          "description": "The devices that you want to add.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group to add the devices to. They are added to the default device group if you don't include this parameter.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "The initial service state for the devices. The only valid state is “Preactive.”",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsrOid": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AddDevicesResult": {
      "id": "AddDevicesResult",
      "description": "Contains the device identifiers and a success or failure response for each device in the request.",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "Identifiers for the device.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "response": {
          "description": "The success message or error message for the current device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Address": {
      "id": "Address",
      "description": "The customer address for the line's primary place of use, for line usage taxation.",
      "required": [
        "addressLine1",
        "city",
        "state",
        "zip",
        "country"
      ],
      "properties": {
        "addressLine1": {
          "description": "The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "addressLine2": {
          "description": "Optional additional street address information.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "The city for the line's primary place of use.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "The state for the line's primary place of use.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "The ZIP code for the line's primary place of use.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip4": {
          "description": "The ZIP+4 for the line's primary place of use.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Either “US” or “USA” for the country of the line's primary place of use.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "A phone number where the customer can be reached.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "phoneType": {
          "description": "A single letter to indicate the customer phone type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "emailAddress": {
          "description": "An email address for the customer.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ConnectivityManagementCallback": {
      "id": "ConnectivityManagementCallback",
      "description": "Includes callback listeners that were registered through the Connectivity Management API.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "password": {
          "description": "The password defined when a URL was registered for the callback service, or an empty string if no password was defined.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "url": {
          "description": "The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "username": {
          "description": "The username defined when a URL was registered for the callback service, or an empty string if no username was defined.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CallbackActionResult": {
      "id": "CallbackActionResult",
      "description": "Response to a callback action.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of the billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service that was registered/deregistered.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CarrierActionsRequest": {
      "id": "CarrierActionsRequest",
      "description": "Request for a carrier action.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devices": {
          "description": "The devices for which you want to restore service, specified by device identifier.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group, if you want to restore service for all devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "NotificationReportStatusRequest": {
      "id": "NotificationReportStatusRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "device": {
          "description": "An identifier for a single device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceId"
        },
        "requestExpirationTime": {
          "description": "The time at which the request expires.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "requestType": {
          "description": "The type of request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "RetrieveMonitorsRequest": {
      "id": "RetrieveMonitorsRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "The devices for which you want to restore service, specified by device identifier.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "monitorType": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CarrierActivateRequest": {
      "id": "CarrierActivateRequest",
      "description": "Request for carrier activation.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "The private IP pool (Carrier Group Name) from which your device IP addresses will be derived.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierName": {
          "description": "The carrier that will perform the activation.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "costCenterCode": {
          "description": "A string to identify the cost center that the device is associated with.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "A user-defined descriptive field, limited to 50 characters.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devices": {
          "description": "Up to 10,000 devices for which you want to activate service, specified by device identifier.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "If you specify devices by ID in the devices parameters, this is the name of a device group that the devices should be added to.If you don't specify individual devices with the devices parameter, you can provide the name of a device group to activate all devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "leadId": {
          "description": "The ID of a “Qualified” or “Closed - Won” VPP customer lead, which is used with other values to determine MDN assignment, taxation, and compensation.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdnZipCode": {
          "description": "The Zip code of the location where the line of service will primarily be used, or a Zip code that you have been told to use with these devices. For accounts that are configured for geographic numbering, this is the ZIP code from which the MDN will be derived.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "primaryPlaceOfUse": {
          "description": "The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "PlaceOfUse"
        },
        "publicIpRestriction": {
          "description": "For devices with static IP addresses on the public network, this specifies whether the devices have general access to the Internet.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to all specified devices.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU) of a 4G device type can be used with ICCID device identifiers in lieu of an IMEI when activating 4G devices. The SkuNumber will be used with all devices in the request, so all devices must be of the same type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CarrierDeactivateRequest": {
      "id": "CarrierDeactivateRequest",
      "description": "Request to deactivate a carrier.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devices": {
          "description": "The devices for which you want to deactivate service, specified by device identifier.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "etfWaiver": {
          "description": "Fees may be assessed for deactivating Verizon Wireless devices, depending on the account contract. The etfWaiver parameter waives the Early Termination Fee (ETF), if applicable.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "groupName": {
          "description": "The name of a device group, if you want to deactivate all devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reasonCode": {
          "description": "Code identifying the reason for the deactivation. Currently the only valid reason code is “FF”, which corresponds to General Admin/Maintenance.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deleteAfterDeactivation": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "CarrierInformation": {
      "id": "CarrierInformation",
      "description": "Information about the carrier.",
      "required": [],
      "properties": {
        "carrierName": {
          "description": "The carrier that will perform the activation. This parameter is only required if you have more than one carrier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that is assigned to the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "The device state. Valid values include: Activate, Suspend, Deactive, Pre-active.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangeDeviceIdRequest": {
      "id": "ChangeDeviceIdRequest",
      "description": "Changes the identifier of a 3G or 4G device to match hardware changes made for a line of service. Use this request to transfer the line of service and the MDN to new hardware, or to change the MDN.",
      "required": [],
      "properties": {
        "assignNonGeoMdn": {
          "description": "Set to true to assign a non-Geo MDN and MSISDN, or false to assign an MDN and MSISDN from a specific NPA-NXX.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "change4gOption": {
          "description": "The type of change that you want to make for a 4G device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceIds": {
          "description": "The device that you want to change, specified by a device identifier.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "deviceIdsTo": {
          "description": "The new identifier for the device. Required for all change4GOptions except ChangeMSISDN.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "npaNxx": {
          "description": "The NPA NXX (area code and prefix) from which the MDN and MSISDN will be derived when assignNonGeoMDN is false. Specify the 6-digit NPA NXX of the location where the line of service will primarily be used. This API checks to see if a number starting with the NPA NXX is available. If not, this API uses the zipCode parameter, if specified, to assign a number in the area of the line of service. This parameter is required when you change an MDN/MSISDN for a B2B carrier, such as Verizon Wireless.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The code for a different service plan, if you want to change the service plan while changing the device identifier. Set this parameter to one of the Code values returned by GET /plans.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zipCode": {
          "description": "The ZIP code from which the MDN and MSISDN will be derived when assignNonGeoMDN is true. Specify the zip code of the location where the line of service will primarily be used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsrOid": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ConnectionEvent": {
      "id": "ConnectionEvent",
      "description": "Network connection events for a device during a specified time period.",
      "required": [],
      "properties": {
        "connectionEventAttributes": {
          "description": "The attributes that describe the connection event.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "extendedAttributes": {
          "description": "Currently not used.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "occurredAt": {
          "description": "The date and time when the connection event occured.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ConnectionHistoryResult": {
      "id": "ConnectionHistoryResult",
      "description": "Response containing the connection history. It is a list of Network Connection Events for a device.",
      "required": [],
      "properties": {
        "connectionHistory": {
          "description": "Device connection events, sorted by the occurredAt timestamp, oldest first.",
          "items": {
            "$ref": "ConnectionEvent"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved. Send another request, adjusting the earliest value in the request based on the occuredAt value for the last device in the current response.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "ContactInfoUpdateRequest": {
      "id": "ContactInfoUpdateRequest",
      "description": "Request to update contact information.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of the billing account that the devices belong to. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "A list of the devices that you want to change, specified by device identifier. You only need to provide one identifier per device. Do not include accountName, groupName, customFields, or servicePlan if you use this parameter.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "primaryPlaceOfUse": {
          "description": "The customer name and the address of the device's primary place of use. These values are applied to all devices in the request.The Primary Place of Use location may affect taxation or have other legal implications. You may want to speak with legal and/or financial advisers before entering values for these fields.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "CreateDeviceGroupRequest": {
      "id": "CreateDeviceGroupRequest",
      "description": "Create request for a new device group and optionally add devices to the group.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The Verizon billing account that the device group will belong to. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devicesToAdd": {
          "description": "Zero or more devices to add to the device group. You can use POST /devices/actions/list to get a list of all devices in the account.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupDescription": {
          "description": "A description for the device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "The name for the new device group. This name must be unique within the specified account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CustomerName": {
      "id": "CustomerName",
      "description": "The customer name to be used for line usage taxation.",
      "required": [
        "firstName",
        "lastName"
      ],
      "properties": {
        "title": {
          "description": "An optional title for the customer, such as “Mr.” or “Dr.”",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "The customer's first name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "middleName": {
          "description": "The customer's middle name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "The customer's last name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "suffix": {
          "description": "An optional suffix for the customer name, such as “Jr.” or “III.”",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CustomFieldsUpdateRequest": {
      "id": "CustomFieldsUpdateRequest",
      "description": "Request to assign or change custom field values for one or more devices.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.This parameter is only required if the UWS account used for the current API session has access to multiple billing accounts.An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "customFieldsToUpdate": {
          "description": "The names and new values of any custom fields that you want to change.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devices": {
          "description": "The devices that you want to change.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group, if you want to only include devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DateFilter": {
      "id": "DateFilter",
      "description": "Filter out the dates.",
      "required": [],
      "properties": {
        "earliest": {
          "description": "Only include devices that were added after this date and time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "latest": {
          "description": "Only include devices that were added before this date and time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeleteDevicesRequest": {
      "id": "DeleteDevicesRequest",
      "description": "Request to delete a device request.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The Verizon billing account that the device group belongs to. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devicesToDelete": {
          "description": "A list of up to 100 devices that you want to delete, specified by device identifier. You only need to provide one identifier per device.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceId": {
      "id": "DeviceId",
      "description": "An identifier for a single device.",
      "required": [],
      "properties": {
        "id": {
          "description": "The value of the device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeleteDevicesResult": {
      "id": "DeleteDevicesResult",
      "description": "Response for a request made to delete a device.",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "One object per device to be deleted. Each object must contain a kind and id element identifying the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        },
        "status": {
          "description": "“Success” if the device was deleted, or “Failed” if there was a problem.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Not present if status=Success. One of these messages if status=Failed:The device is not in deactivate state.The user does not have access to delete the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ThingspaceDevice": {
      "id": "ThingspaceDevice",
      "description": "Device that exist in Verizon Mobile Device Management (MDM).",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The billing account that the device is associated with.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "billingCycleEndDate": {
          "description": "The date that the device's current billing cycle ends.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierInformations": {
          "description": "The carrier information associated with the device.",
          "items": {
            "$ref": "CarrierInformation"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "connected": {
          "description": "True if the device is connected; false if it is not.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "The date and time that the device was added to the system.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "The custom fields and values that have been set for the device.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "deviceIds": {
          "description": "All identifiers for the device.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "extendedAttributes": {
          "description": "Any extended attributes for the device, as Key and Value pairs. The pairs listed below are returned as part of the response for a single device, but are not included if the request was for information about multiple devices.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupNames": {
          "description": "The device groups that the device belongs to.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "ipAddress": {
          "description": "The IP address of the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastActivationBy": {
          "description": "The user who last activated the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastActivationDate": {
          "description": "The date and time that the device was last activated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastConnectionDate": {
          "description": "The most recent connection date and time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceAggregateUsageListRequest": {
      "id": "DeviceAggregateUsageListRequest",
      "description": "Request to list device aggregate usage.",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "One or more devices for which you want aggregate data, specified by device ID.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "The name of a device group, if you want to only include devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startTime": {
          "description": "The beginning of the reporting period. The startTime cannot be more than 6 months before the current date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endTime": {
          "description": "The end of the reporting period. The endTime date must be within on month of the startTime date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "label": {
          "description": "",
          "items": {
            "$ref": "Label"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceConnectionListRequest": {
      "id": "DeviceConnectionListRequest",
      "description": "Request to list of network connection events for a device during a specified time period.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "An identifier for a single device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceId"
        },
        "earliest": {
          "description": "The earliest date and time for which you want connection events.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "latest": {
          "description": "The last date and time for which you want connection events.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceCostCenterRequest": {
      "id": "DeviceCostCenterRequest",
      "description": "Request to retrieve cost center value of a device.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "costCenter": {
          "description": "The new cost center code. Valid values are any string of up to 36 alphanumeric characters, space, dash, exclamation point, and pound sign.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devices": {
          "description": "A list of the devices that you want to change, specified by device identifier. Do not include accountName, groupName, customFields, or servicePlan if you use this parameter.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group, if you want to only include devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "primaryPlaceOfUse": {
          "description": "The customer name and the address of the device's primary place of use. These values are applied to all devices in the request.The Primary Place of Use location may affect taxation or have other legal implications. You may want to speak with legal and/or financial advisers before entering values for these fields.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        },
        "removeCostCenter": {
          "description": "Set to true to remove the cost center code value. This flag takes precedence over a new costCenter value. If this flag is true and costCenter has a value, the cost center code is removed. Do not include this parameter, or set it to false to change the costCenter value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceExtendedDiagnosticsRequest": {
      "id": "DeviceExtendedDiagnosticsRequest",
      "description": "Request for obtaining device extended diagnostics.",
      "required": [
        "accountName",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "The Verizon billing account that the device belongs to. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "The device for which you want diagnostic information, specified by the device's MDN.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceExtendedDiagnosticsResult": {
      "id": "DeviceExtendedDiagnosticsResult",
      "description": "Result for a request to obtain device extended diagnostics.",
      "required": [],
      "properties": {
        "categories": {
          "description": "The response includes various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.",
          "items": {
            "$ref": "DiagnosticsCategory"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceFilter": {
      "id": "DeviceFilter",
      "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
      "required": [],
      "properties": {
        "account": {
          "description": "The the billing account that the devices belong to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "Only include devices that are in this device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "Only include devices that have this service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceFilterWithoutAccount": {
      "id": "DeviceFilterWithoutAccount",
      "description": "Filter for devices without account.",
      "required": [],
      "properties": {
        "groupName": {
          "description": "Only include devices that are in this device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "Only include devices that have this service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceIdSearch": {
      "id": "DeviceIdSearch",
      "description": "Search by device id.",
      "required": [
        "kind"
      ],
      "properties": {
        "contains": {
          "description": "The string appears anywhere in the identifer.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startswith": {
          "description": "The identifer must start with the specified string.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endswith": {
          "description": "The identifier must end with the specified string.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AccountDeviceList": {
      "id": "AccountDeviceList",
      "description": "A list of deviceId objects to use when requesting information from multiple devices.",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "All identifiers for the device.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "ipAddress": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AccountDeviceListFilter": {
      "id": "AccountDeviceListFilter",
      "description": "Filter for a list of devices.",
      "required": [],
      "properties": {
        "deviceIdentifierFilters": {
          "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
          "items": {
            "$ref": "DeviceIdSearch"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AccountDeviceListRequest": {
      "id": "AccountDeviceListRequest",
      "description": "Request for listing account devices.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The billing account for which a list of devices is returned. If you don't specify an accountName, the list includes all devices to which you have access.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceId": {
          "description": "An identifier for a single device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceId"
        },
        "filter": {
          "description": "Filter for a list of devices.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountDeviceListFilter"
        },
        "currentState": {
          "description": "The name of a device state, to only include devices in that state.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "earliest": {
          "description": "Only include devices that were added after this date and time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "Only include devices that are in this device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "latest": {
          "description": "Only include devices that were added before this date and time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "Only include devices that have this service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "maxNumberOfDevices": {
          "description": "",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "largestDeviceIdSeen": {
          "description": "",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AccountDeviceListResult": {
      "id": "AccountDeviceListResult",
      "description": "Response for a request to list down account devices.",
      "required": [],
      "properties": {
        "devices": {
          "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
          "items": {
            "$ref": "ThingspaceDevice"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "DeviceActivationRequest": {
      "id": "DeviceActivationRequest",
      "description": "Request for device status to check availability of activation.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DevicePrlListRequest": {
      "id": "DevicePrlListRequest",
      "description": "Requests the current PRL (Preferred Roaming List) version for 2G or 3G devices, which can help determine which devices need a PRL update. (4G and GSM devices do not have a PRL.).",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "The devices for which you want the PRL version, specified by device identifier. You only need to provide one identifier per device. Do not use any of the other parameters if you specify device IDs.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "The name of a billing account. This parameter is only required if you are passing groupName and the UWS account used for the current API session has access to multiple billing accounts, because the same device group name can exist in multiple accounts.An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "The names and values of custom fields, if you want to only include devices that have matching custom fields.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group, if you want to only include devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceMismatchListRequest": {
      "id": "DeviceMismatchListRequest",
      "description": "Request to list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
      "required": [],
      "properties": {
        "devices": {
          "description": "A list of specific devices that you want to check, specified by ICCID or MDN.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "filter": {
          "description": "Filter out the dates.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DateFilter"
        },
        "accountName": {
          "description": "The account that you want to search for mismatched devices. If you don't specify an accountName, the search includes all devices to which you have access.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "The name of a device group, to only include devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceMismatchListResult": {
      "id": "DeviceMismatchListResult",
      "description": "Response to list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
      "required": [],
      "properties": {
        "devices": {
          "description": "A list of specific devices that you want to check, specified by ICCID or MDN.",
          "items": {
            "$ref": "MismatchedDevice"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceProvisioningHistoryListRequest": {
      "id": "DeviceProvisioningHistoryListRequest",
      "description": "Request to return the provisioning history of a specified device during a specified time period.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "An identifier for a single device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceId"
        },
        "earliest": {
          "description": "The earliest date and time for which you want provisioning data.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "latest": {
          "description": "The last date and time for which you want provisioning data.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceProvisioningHistoryListResult": {
      "id": "DeviceProvisioningHistoryListResult",
      "description": "Response to return the provisioning history of a specified device during a specified time period.",
      "required": [],
      "properties": {
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "provisioningHistory": {
          "description": "The provisioning history of a specified device during a specified time period.",
          "items": {
            "$ref": "ProvisioningHistory"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceSuspensionStatusRequest": {
      "id": "DeviceSuspensionStatusRequest",
      "description": "Request to return service suspension information about one or more devices.",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "The devices that you want to include in the request, specified by device identifier. You only need to provide one identifier per device.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "filter": {
          "description": "Filter for devices without account.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceFilterWithoutAccount"
        },
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceUsageListRequest": {
      "id": "DeviceUsageListRequest",
      "description": "Request to return the daily network data usage of a single device during a specified time period.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "An identifier for a single device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceId"
        },
        "earliest": {
          "description": "The earliest date for which you want usage data.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "latest": {
          "description": "The last date for which you want usage data.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "label": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Label"
        }
      }
    },
    "Label": {
      "id": "Label",
      "required": [],
      "properties": {
        "name": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceUsageListResult": {
      "id": "DeviceUsageListResult",
      "description": "Response to return the daily network data usage of a single device during a specified time period.",
      "required": [],
      "properties": {
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "usageHistory": {
          "description": "Placeholder.",
          "items": {
            "$ref": "Usage"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DiagnosticsCategory": {
      "id": "DiagnosticsCategory",
      "description": "Various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.",
      "required": [],
      "properties": {
        "categoryName": {
          "description": "The name of the category.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "extendedAttributes": {
          "description": "A list of Extended Attribute objects as key-value pairs.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Engagement": {
      "id": "Engagement",
      "description": "The engagements associated with the account.",
      "required": [],
      "properties": {
        "engagementId": {
          "description": "The engagement ID.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "chargingGroup": {
          "description": "The charging group name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "services": {
          "description": "The services associated with the account.",
          "items": {
            "$ref": "AccountService"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AccountStatesAndServices": {
      "id": "AccountStatesAndServices",
      "description": "Returns a list and details of all custom services and states defined for a specified account.",
      "required": [
        "engagement"
      ],
      "properties": {
        "engagement": {
          "description": "The engagements associated with the account.",
          "items": {
            "$ref": "Engagement"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "GoToStateRequest": {
      "id": "GoToStateRequest",
      "description": "Changes the provisioning state of one or more devices to a specified customer-defined service and state.",
      "required": [],
      "properties": {
        "devices": {
          "description": "Up to 10,000 devices that you want to push to a different state, specified by device identifier.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "filter": {
          "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceFilter"
        },
        "serviceName": {
          "description": "The name of a customer-defined service to push the devices to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "stateName": {
          "description": "The name of a customer-defined stage state to push the devices to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to all specified devices in the new state.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdnZipCode": {
          "description": "The Zip code of the location where the line of service will primarily be used, or a Zip code that you have been told to use with these devices. For accounts that are configured for geographic numbering, this is the ZIP code from which the MDN will be derived.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "The pool from which your device IP addresses will be derived if the service or state change requires new IP addresses.If you do not include this element, the default pool will be used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "publicIpRestriction": {
          "description": "For devices with static IP addresses on the public network, this specifies whether the devices have general access to the Internet. Valid values are “restricted” or “unrestricted”.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM. Can be used with ICCID or EID device identifiers in lieu of an IMEI when activating 4G devices. The SkuNumber will be used with all devices in the request, so all devices must be of the same type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "The names and values of any custom fields that you want to set for the devices.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group that the devices should be added to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "primaryPlaceOfUse": {
          "description": "The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "PlaceOfUse"
        }
      }
    },
    "DeviceGroupDevicesData": {
      "id": "DeviceGroupDevicesData",
      "description": "Returns the name, description, and list of devices in a device group.",
      "required": [],
      "properties": {
        "description": {
          "description": "The description of the device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "The devices in the device group.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "The name of the device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceGroup": {
      "id": "DeviceGroup",
      "description": "Returns a list of all device groups in a specified account.",
      "required": [],
      "properties": {
        "description": {
          "description": "The description of the device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "extendedAttributes": {
          "description": "Any extended attributes for the device group, as Key and Value pairs.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "isDefaultGroup": {
          "description": "Identifies the default device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "The name of the device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceGroupUpdateRequest": {
      "id": "DeviceGroupUpdateRequest",
      "description": "Make changes to a device group, including changing the name and description, and adding or removing devices.",
      "required": [],
      "properties": {
        "devicesToAdd": {
          "description": "Zero or more devices to add to the device group, specified by device ID. The devices will be removed from their current device groups. You can use POST /devices/actions/list to get a list of all devices in the account.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devicesToRemove": {
          "description": "Zero or more devices to remove from the device group, specified by device ID. The devices will be added to the default device group.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "newGroupDescription": {
          "description": "A new description for the device group. Do not include this parameter to leave the group description unchanged.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "newGroupName": {
          "description": "A new name for the device group. Do not include this parameter if you want to leave the group name unchanged.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "IPPool": {
      "id": "IPPool",
      "description": "IP pool that is available to the account.",
      "required": [],
      "properties": {
        "poolName": {
          "description": "The name of the IP pool.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "poolType": {
          "description": "The type of IP pool, such as “Static IP” or “Dynamic IP.”",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isDefaultPool": {
          "description": "True if this is the default IP pool for the account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "CustomFields": {
      "id": "CustomFields",
      "description": "Custom data that can be included using key-value pairs.",
      "required": [],
      "properties": {
        "key": {
          "description": "The key for an extended attribute.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "The value of an extended attribute.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AccountLeadsResult": {
      "id": "AccountLeadsResult",
      "description": "Returns information for all leads associated with an account.",
      "required": [],
      "properties": {
        "hasMoreData": {
          "description": "False if no more leads.True if there is more data to be retrieved.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "leads": {
          "description": "The leads associated with an account.",
          "items": {
            "$ref": "AccountLead"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AccountLead": {
      "id": "AccountLead",
      "description": "A successful response returns an array of lead objects.",
      "required": [],
      "properties": {
        "address": {
          "description": "The customer address for the line's primary place of use, for line usage taxation.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "leadId": {
          "description": "Unique number for each lead. Use this value in the leadId parameter when activating devices to credit the activations to the lead.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "leadState": {
          "description": "The current state of the lead, such as “Qualified” or “Closed.”",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "LogInRequest": {
      "id": "LogInRequest",
      "description": "Request to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.",
      "required": [],
      "properties": {
        "username": {
          "description": "The username for authentication.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "password": {
          "description": "The password for authentication.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "LogInResult": {
      "id": "LogInResult",
      "description": "Response to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.",
      "required": [],
      "properties": {
        "sessionToken": {
          "description": "The identifier for the session that was created by the request. Store the sessionToken for use in the header of all other API requests.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "LogOutRequest": {
      "id": "LogOutRequest",
      "description": "Request to end a Connectivity Management session.",
      "required": [],
      "properties": {
        "sessionToken": {
          "description": "The session token is returned to confirm that it was invalidated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MismatchedDevice": {
      "id": "MismatchedDevice",
      "description": "4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The account that the device is associated with.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdn": {
          "description": "The assigned phone number of the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "activationDate": {
          "description": "The date and time when the SIM was last activated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "iccid": {
          "description": "The ID of the SIM.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "preImei": {
          "description": "The IMEI of the device prior to the SIM OTA activation on simOtaDate.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "postImei": {
          "description": "The IMEI of the device after the SIM OTA activation on simOtaDate.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "simOtaDate": {
          "description": "The date and time of the SIM OTA activation.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MoveDeviceRequest": {
      "id": "MoveDeviceRequest",
      "description": "Request to move active devices from one billing account to another within a customer profile.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of the billing account that you want to move the devices to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "filter": {
          "description": "Specify the kind of the device identifier, the type of match, and the string that you want to match.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceFilter"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devices": {
          "description": "Up to 10,000 devices that you want to move to a different account, specified by device identifier.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group, to only include devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "The pool from which device IP addresses will be derived in the new account. If you do not include this element, the default pool will be used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to the devices in the new account. If you do not include this element, ThingSpace will attempt to use the current service plan, which will result in a error if the new account does not have that service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PlaceOfUse": {
      "id": "PlaceOfUse",
      "description": "The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.",
      "required": [],
      "properties": {
        "address": {
          "description": "The customer address for the line's primary place of use, for line usage taxation.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Address"
        },
        "customerName": {
          "description": "The customer name to be used for line usage taxation.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "CustomerName"
        }
      }
    },
    "ProvisioningHistory": {
      "id": "ProvisioningHistory",
      "description": "The provisioning history of a specified device during a specified time period.",
      "required": [],
      "properties": {
        "occurredAt": {
          "description": "The date and time when the provisioning event occured.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "The success or failure of the provisioning event.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "eventBy": {
          "description": "The user who performed the provisioning event.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "eventType": {
          "description": "The provisioning action:Activate,Suspend,Restore,Deactivate,Device Move.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdn": {
          "description": "The MDN assigned to the device after the provisioning event.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "msisdn": {
          "description": "The MSISDN assigned to the device after the provisioning event.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan of the device after the provisioning event occurred.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "extendedAttributes": {
          "description": "Any extended attributes for the event, as Key and Value pairs.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RegisterCallbackRequest": {
      "id": "RegisterCallbackRequest",
      "description": "Request to register a callback.",
      "required": [],
      "properties": {
        "name": {
          "description": "The name of the callback service that you want to subscribe to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "url": {
          "description": "The address on your server where you have enabled a listening service for callback messages.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "username": {
          "description": "The user name that the M2M Platform should return in the callback messages.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "password": {
          "description": "The password that the M2M Platform should return in the callback messages.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceManagementResult": {
      "id": "DeviceManagementResult",
      "description": "Response to activate service for one or more devices so that they can send and receive data.",
      "required": [],
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback service.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AsynchronousRequestResult": {
      "id": "AsynchronousRequestResult",
      "description": "A successful request returns the request ID and the current status.",
      "required": [],
      "properties": {
        "requestId": {
          "description": "The unique ID of the asynchronous request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "The current status of the callback response.",
          "defaultValue": "",
          "enum": [
            "Pending",
            "Success",
            "Failure"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ConnectivityManagementResult": {
      "id": "ConnectivityManagementResult",
      "description": "Response to errors.",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "Code of the error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "Details of the error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ConnectivityManagementSuccessResult": {
      "id": "ConnectivityManagementSuccessResult",
      "description": "Response to successful request.",
      "required": [],
      "properties": {
        "success": {
          "description": "A value of “true” indicates that the device group was created successfully.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "AccountService": {
      "id": "AccountService",
      "description": "Service associated with the account.",
      "required": [],
      "properties": {
        "name": {
          "description": "The name of the service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "The description of the service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "states": {
          "description": "The state of the service plan.",
          "items": {
            "$ref": "State"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ServicePlan": {
      "id": "ServicePlan",
      "description": "Details of the service plan.",
      "required": [],
      "properties": {
        "carrierServicePlanCode": {
          "description": "The code that is used by the carrier for the service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "The code of the service plan, which may not be the same as the name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "extendedAttributes": {
          "description": "Any extended attributes for the service plan, as Key and Value pairs.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "name": {
          "description": "The name of the service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sizeKb": {
          "description": "The size of the service plan in kilobytes.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServicePlanUpdateRequest": {
      "id": "ServicePlanUpdateRequest",
      "description": "Request to update service plan.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "currentServicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "Custom field names and values, if you want to only include devices that have matching values.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "devices": {
          "description": "A list of the devices that you want to change, specified by device identifier.",
          "items": {
            "$ref": "AccountDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group, if you want to restore service for all devices in that group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to all specified devices.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "takeEffect": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SessionResetPasswordRequest": {
      "id": "SessionResetPasswordRequest",
      "description": "Request to a new, randomly generated password for the current username.",
      "required": [],
      "properties": {
        "oldPassword": {
          "description": "The current password for the username.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SessionResetPasswordResult": {
      "id": "SessionResetPasswordResult",
      "description": "Response to a new, randomly generated password for the current username.",
      "required": [],
      "properties": {
        "newPassword": {
          "description": "The new password for the username.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SMSMessage": {
      "id": "SMSMessage",
      "description": "SMS messages sent by all M2M devices associated with a billing account.",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "One or more IDs of the device that sent the message.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "message": {
          "description": "The contents of the SMS message.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timestamp": {
          "description": "The date and time that the message was received by the Verizon ThingSpace Platform.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SMSMessagesQueryResult": {
      "id": "SMSMessagesQueryResult",
      "description": "Response to SMS messages sent by all M2M devices associated with a billing account.",
      "required": [],
      "properties": {
        "hasMoreData": {
          "description": "False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "messages": {
          "description": "An array of up to 100 SMS messages that were sent by devices in the account.",
          "items": {
            "$ref": "SMSMessage"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "SMSSendRequest": {
      "id": "SMSSendRequest",
      "description": "Request to send SMS.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "The names and values of custom fields, if you want to only include devices that have matching custom fields.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "dataEncoding": {
          "description": "The SMS message encoding, which can be 7-bit (default), 8-bit-ASCII, 8-bit-UTF-8, 8-bit-DATA.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceIds": {
          "description": "The devices that you want to send the message to, specified by device identifier.",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "groupName": {
          "description": "The name of a device group, if you want to send the SMS message to all devices in the device group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The name of a service plan, if you want to only include devices that have that service plan.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsMessage": {
          "description": "The contents of the SMS message. The SMS message is limited to 160 characters in 7-bit format, or 140 characters in 8-bit format.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "State": {
      "id": "State",
      "description": "Each service includes custom states.",
      "required": [],
      "properties": {
        "name": {
          "description": "The name of the state.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "workflowSequenceNumber": {
          "description": "The workflow sequence number of this state.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "servicePlans": {
          "description": "The service plans that can be used to charge for services for devices in this state.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Usage": {
      "id": "Usage",
      "description": "The daily network data usage of a single device during a specified time period.",
      "required": [],
      "properties": {
        "bytesUsed": {
          "description": "The number of bytes that the device sent or received on the report date.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "extendedAttributes": {
          "description": "The number of mobile-originated and mobile-terminated SMS messages on the report date.",
          "items": {
            "$ref": "CustomFields"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "servicePlan": {
          "description": "The list of service plans associated with the device/account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsUsed": {
          "description": "The number of SMS messages that were sent or received on the report date.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "description": "The source of the information for the reported usage.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timestamp": {
          "description": "The date of the recorded usage.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ActivateDeviceProfileRequest": {
      "id": "ActivateDeviceProfileRequest",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdnZipCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceList": {
      "id": "DeviceList",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "DeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RequestResponse": {
      "id": "RequestResponse",
      "required": [],
      "properties": {
        "requestId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "RestErrorResponse": {
      "id": "RestErrorResponse",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ProfileRequest": {
      "id": "ProfileRequest",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "carrierName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdnZipCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "primaryPlaceOfUse": {
          "description": "",
          "items": {
            "$ref": "PrimaryPlaceOfUse"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "smsrOid": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "The name of the pool of IP addresses assigned to the profile.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "addressquery": {
      "id": "addressquery",
      "required": [],
      "properties": {
        "address": {
          "description": "",
          "items": {
            "$ref": "Address"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "customernamequery": {
      "id": "customernamequery",
      "required": [],
      "properties": {
        "customerName": {
          "description": "",
          "items": {
            "$ref": "CustomerName"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeactivateDeviceProfileRequest": {
      "id": "DeactivateDeviceProfileRequest",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeactivateDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reasonCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "etfWaiver": {
          "description": "",
          "defaultValue": "true",
          "uniqueItems": false,
          "type": "boolean"
        },
        "checkFallbackProfile": {
          "description": "",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "DeactivateDeviceList": {
      "id": "DeactivateDeviceList",
      "required": [],
      "properties": {
        "ids": {
          "description": "",
          "items": {
            "$ref": "Id"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "PropertyDeviceId": {
      "id": "PropertyDeviceId",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SetFallbackAttributeRequest": {
      "id": "SetFallbackAttributeRequest",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "NotificationReportRequest": {
      "id": "NotificationReportRequest",
      "required": [
        "accountName",
        "requestType",
        "devices",
        "monitorExpirationTime"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "requestType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "monitorExpirationTime": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "StopMonitorRequest": {
      "id": "StopMonitorRequest",
      "required": [
        "accountName",
        "monitorIds"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "monitorIds": {
          "description": "",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceUploadRequest": {
      "id": "DeviceUploadRequest",
      "required": [
        "accountName",
        "devices",
        "emailAddress",
        "deviceSku",
        "uploadType"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "emailAddress": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceSku": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "BillingCycle": {
      "id": "BillingCycle",
      "required": [],
      "properties": {
        "year": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "month": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "billedusageListRequest": {
      "id": "billedusageListRequest",
      "description": "Information required to associate a usage segmentation label with a device to retrieve billing.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "labels": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "LabelsList"
        },
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "billingCycle": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "BillingCycle"
        }
      }
    },
    "LabelsList": {
      "id": "LabelsList",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "DeviceLabels"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceLabels": {
      "id": "DeviceLabels",
      "description": "A label for a single device.",
      "required": [],
      "properties": {
        "name": {
          "description": "The label you want to associate with the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "The value of label",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ProfileChangeStateRequest": {
      "id": "ProfileChangeStateRequest",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsrOid": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AccountLabels": {
      "id": "AccountLabels",
      "description": "Maximum of 2,000 objects are allowed in the array.",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "label": {
          "description": "",
          "items": {
            "$ref": "DeviceLabels"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AssociateLabelRequest": {
      "id": "AssociateLabelRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "labels": {
          "description": "Maximum of 2,000 objects are allowed in the array.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountLabels"
        }
      }
    },
    "UploadsActivatesDeviceRequest": {
      "id": "UploadsActivatesDeviceRequest",
      "description": "The request body identifies the devices to upload.",
      "required": [
        "accountName",
        "emailAddress",
        "deviceSku",
        "uploadType",
        "servicePlan",
        "mdnZipCode",
        "devices"
      ],
      "properties": {
        "accountName": {
          "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "emailAddress": {
          "description": "The email address that the report should be sent to when the upload is complete.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceSku": {
          "description": "The stock keeping unit that identifies the type of devices in the upload and activation.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadType": {
          "description": "The format of the device identifiers in the upload and activation.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "The service plan code that you want to assign to all specified devices.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierIpPoolName": {
          "description": "The pool from which your device IP addresses is derived.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdnZipCode": {
          "description": "The Zip code of the location where the line of service is primarily used, or a Zip code that you have been told to use with these devices.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "The devices to upload, specified by device IDs in a format matching uploadType.",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "CheckOrderStatusRequest": {
      "id": "CheckOrderStatusRequest",
      "description": "The request body identifies the devices to upload.",
      "required": [
        "accountName",
        "devices"
      ],
      "properties": {
        "accountName": {
          "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "orderRequestId": {
          "description": "The request id from the activation order.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "The devices to upload, specified by device IDs in a format matching uploadType.",
          "items": {
            "$ref": "DeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Id": {
      "id": "Id",
      "required": [],
      "properties": {
        "id": {
          "description": "The value of the device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PrimaryPlaceOfUse": {
      "id": "PrimaryPlaceOfUse",
      "required": [],
      "properties": {
        "customerName": {
          "description": "",
          "items": {
            "$ref": "CustomerName"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "address": {
          "description": "",
          "items": {
            "$ref": "Address"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceLocationCallback": {
      "id": "DeviceLocationCallback",
      "required": [
        "name",
        "url"
      ],
      "properties": {
        "name": {
          "description": "The name of the callback service.",
          "defaultValue": "",
          "enum": [
            "Location",
            "DeviceLocation"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "url": {
          "description": "The location of your callback listener.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CallbackRegistrationResult": {
      "id": "CallbackRegistrationResult",
      "required": [],
      "properties": {
        "account": {
          "description": "The name of the account that registered the callback URL.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The name of the callback service.",
          "defaultValue": "",
          "enum": [
            "Location",
            "DeviceLocation"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ConsentDeleteRequest": {
      "id": "ConsentDeleteRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "Device ID list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ConsentRequest": {
      "id": "ConsentRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "allDevice": {
          "description": "Exclude all devices or not.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "type": {
          "description": "The change to make: append or replace.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "exclusion": {
          "description": "Device ID list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DevicesConsentResult": {
      "id": "DevicesConsentResult",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "allDevice": {
          "description": "Exclude all devices or not?",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "hasMoreData": {
          "description": "Are there more devices to retrieve or not?",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "totalCount": {
          "description": "Total number of excluded devices in the account.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "Last update time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "exclusion": {
          "description": "Device ID list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceInfo": {
      "id": "DeviceInfo",
      "description": "The devices that you want to locate. The array cannot contain more than 20 devices.",
      "required": [
        "id",
        "kind",
        "mdn"
      ],
      "properties": {
        "id": {
          "description": "Device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "Device identifier kind.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdn": {
          "description": "Device MDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SynchronousLocationRequestResult": {
      "id": "SynchronousLocationRequestResult",
      "required": [
        "txid",
        "status"
      ],
      "properties": {
        "txid": {
          "description": "The transaction ID of the report.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Status of the report.",
          "defaultValue": "",
          "enum": [
            "QUEUED",
            "INPROGRESS",
            "COMPLETED"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "LocationRequest": {
      "id": "LocationRequest",
      "description": "The body contains the the account name and list of devices that you want to locate, plus other options.",
      "required": [
        "accountName",
        "accuracyMode",
        "cacheMode",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accuracyMode": {
          "description": "Accurary, currently only 0-coarse supported.",
          "defaultValue": "",
          "enum": [
            "0"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "cacheMode": {
          "description": "Location cache mode.",
          "defaultValue": "",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "Device list.",
          "items": {
            "$ref": "DeviceInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "Device location information.",
      "required": [],
      "properties": {
        "msid": {
          "description": "MDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "pd": {
          "description": "Position data.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "PositionData"
        },
        "error": {
          "description": "Position error.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "PositionError"
        }
      }
    },
    "LocationReport": {
      "id": "LocationReport",
      "description": "Location information for up to 1,000 devices.",
      "required": [],
      "properties": {
        "devLocationList": {
          "description": "Device location information.",
          "items": {
            "$ref": "Location"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "hasMoreData": {
          "description": "True if there are more device locations to retrieve.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "startIndex": {
          "description": "The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices to be returned (hasMoreData=true), set startIndex=1000 for the second request, 2000 for the third request, etc.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "totalCount": {
          "description": "The total number of devices in the original request and in the report.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "txid": {
          "description": "The transaction ID of the report.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AsynchronousLocationRequestResult": {
      "id": "AsynchronousLocationRequestResult",
      "required": [],
      "properties": {
        "txid": {
          "description": "The transaction ID of the report.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Status of the report.",
          "defaultValue": "",
          "enum": [
            "QUEUED",
            "INPROGRESS",
            "COMPLETED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "estimatedDuration": {
          "description": "Estimated number of minutes required to complete the report.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "LocationReportStatus": {
      "id": "LocationReportStatus",
      "description": "Status of the report.",
      "required": [],
      "properties": {
        "txid": {
          "description": "The transaction ID of the report.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Status of the report.",
          "defaultValue": "",
          "enum": [
            "QUEUED",
            "INPROGRESS",
            "COMPLETED"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PositionData": {
      "id": "PositionData",
      "description": "Position data.",
      "required": [],
      "properties": {
        "time": {
          "description": "Time location obtained.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "utcoffset": {
          "description": "UTC offset of time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "x": {
          "description": "X coordinate of location.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "y": {
          "description": "Y coordinate of location.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "radius": {
          "description": "Radius of the location in meters.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "qos": {
          "description": "Whether requested accurary is met or not.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "PositionError": {
      "id": "PositionError",
      "description": "Position error.",
      "required": [],
      "properties": {
        "time": {
          "description": "Time location obtained.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "utcoffset": {
          "description": "UTC offset of time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Error type returned from location server.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "info": {
          "description": "Additional information about the error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceLocationSubscription": {
      "id": "DeviceLocationSubscription",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locType": {
          "description": "Location service license type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "maxAllowance": {
          "description": "The number of billable location requests allowed per billing cycle.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "purchaseTime": {
          "description": "Location service purchase time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TransactionID": {
      "id": "TransactionID",
      "description": "The transaction ID of the request that you want to cancel, from the POST /devicelocations synchronus response.",
      "required": [],
      "properties": {
        "txid": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "BillUsageRequest": {
      "id": "BillUsageRequest",
      "description": "Bill usage request.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Start date to search for billable usage, mm-dd-yyyy.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endDate": {
          "description": "End date to search for billable usage, mm-dd-yyyy.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "usageForAllAccounts": {
          "description": "Request usage for single or multiple accounts.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "BillableUsageReport": {
      "id": "BillableUsageReport",
      "description": "Bill usage report.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "usageForAllAccounts": {
          "description": "The usage is for a single or multiple accounts.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "skuName": {
          "description": "SKU Name of the service subscription.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "transactionsAllowed": {
          "description": "The number of location requests included with the subscription type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "totalTransactionCount": {
          "description": "The total number of billable device location requests during the reporting period from all included accounts.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "PrimaryAccount": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ServiceUsage"
        },
        "ManagedAccounts": {
          "description": "Zero or more managed accounts.",
          "items": {
            "$ref": "ServiceUsage"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ServiceUsage": {
      "id": "ServiceUsage",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "transactionsCount": {
          "description": "Total requests for the account during the reporting period.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceLocationSuccessResult": {
      "id": "DeviceLocationSuccessResult",
      "description": "Whether the device location request was successful or not.",
      "required": [],
      "properties": {
        "success": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "DeviceLocationResult": {
      "id": "DeviceLocationResult",
      "description": "Will be empty if there was no error.",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UsageTriggerAddRequest": {
      "id": "UsageTriggerAddRequest",
      "required": [
        "accountName",
        "serviceName",
        "thresholdValue"
      ],
      "properties": {
        "triggerName": {
          "description": "Usage trigger name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "Service name",
          "defaultValue": "Location",
          "enum": [
            "Location",
            "fota"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "thresholdValue": {
          "description": "The percent of subscribed usage required to activate the trigger, such as 90 or 100.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "allowExcess": {
          "description": "Allow additional requests after thresholdValue is reached. (currently not functional)",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "sendSmsNotification": {
          "description": "Send SMS (text) alerts when the thresholdValue is reached.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsPhoneNumbers": {
          "description": "Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or parentheses, etc.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sendEmailNotification": {
          "description": "Send email alerts when the thresholdValue is reached.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "emailAddresses": {
          "description": "Comma-separated list of email addresses to send alerts to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UsageTriggerResponse": {
      "id": "UsageTriggerResponse",
      "required": [
        "triggerId",
        "triggerName",
        "accountName",
        "serviceName",
        "thresholdValue",
        "allowExcess",
        "sendSmsNotification",
        "smsPhoneNumbers",
        "sendEmailNotification",
        "emailAddresses",
        "createDate",
        "updateDate"
      ],
      "properties": {
        "triggerId": {
          "description": "Unique usage triggerId",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "Usage trigger name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "Service name",
          "defaultValue": "Location",
          "enum": [
            "Location",
            "fota"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "thresholdValue": {
          "description": "Percent of subscription at which trigger will send an alert",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "allowExcess": {
          "description": "allowExcess determines whether to restrict usage after exceeds limits",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "sendSmsNotification": {
          "description": "Send SMS (text) alerts when the thresholdValue is reached.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsPhoneNumbers": {
          "description": "comma seperated value of list of Phone numbers for SMS notifications",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sendEmailNotification": {
          "description": "Send email alerts when the thresholdValue is reached.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "emailAddresses": {
          "description": "comma seperated value of list of Email addresses for Email notifications",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createDate": {
          "description": "UTC Date when the usage trigger was created",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "updateDate": {
          "description": "UTC Date when the usage trigger was last updated",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UsageTriggerUpdateRequest": {
      "id": "UsageTriggerUpdateRequest",
      "required": [
        "accountName"
      ],
      "properties": {
        "triggerName": {
          "description": "Usage trigger name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "thresholdValue": {
          "description": "The percent of subscribed usage required to activate the trigger, such as 90 or 100.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsPhoneNumbers": {
          "description": "Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or parentheses, etc.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "emailAddresses": {
          "description": "Comma-separated list of email addresses to send alerts to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ManagedAccountsAddRequest": {
      "id": "ManagedAccountsAddRequest",
      "required": [
        "accountName",
        "serviceName",
        "type",
        "managedAccList"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "Service name",
          "defaultValue": "Location",
          "enum": [
            "Location",
            "fota"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "SKU name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "managedAccList": {
          "description": "managed account list",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ManagedAccountsAddResponse": {
      "id": "ManagedAccountsAddResponse",
      "required": [],
      "properties": {
        "TxId": {
          "description": "Transaction identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "statusList": {
          "description": "",
          "items": {
            "$ref": "StatusList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ManagedAccountsProvisionRequest": {
      "id": "ManagedAccountsProvisionRequest",
      "required": [
        "accountName",
        "paccountName",
        "serviceName",
        "type",
        "txid"
      ],
      "properties": {
        "accountName": {
          "description": "Managed account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "paccountName": {
          "description": "Primary Account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "Service name",
          "defaultValue": "Location",
          "enum": [
            "Location",
            "fota"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "SKU name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "txid": {
          "description": "Transaction identifier returned by add request",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ManagedAccountsProvisionResponse": {
      "id": "ManagedAccountsProvisionResponse",
      "required": [],
      "properties": {
        "txid": {
          "description": "Transaction identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "paccountName": {
          "description": "Primary Account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "Service name",
          "defaultValue": "Location",
          "enum": [
            "Location",
            "fota"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Provision status. Success or Fail",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "Detailed reason",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ManagedAccountCancelRequest": {
      "id": "ManagedAccountCancelRequest",
      "required": [
        "accountName",
        "paccountName",
        "serviceName",
        "type",
        "txid"
      ],
      "properties": {
        "accountName": {
          "description": "Managed account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "paccountName": {
          "description": "Primary Account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "Service name",
          "defaultValue": "Location",
          "enum": [
            "Location",
            "fota"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "SKU name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "txid": {
          "description": "Transaction identifier returned by provision request",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ManagedAccountCancelResponse": {
      "id": "ManagedAccountCancelResponse",
      "required": [
        "txid",
        "accountName",
        "paccountName",
        "serviceName",
        "status",
        "reason"
      ],
      "properties": {
        "txid": {
          "description": "Transaction identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Managed account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "paccountName": {
          "description": "Primary account identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "Service name",
          "defaultValue": "Location",
          "enum": [
            "Location",
            "fota"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Deactivate/cancel status, Success or Fail",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "Detailed reason",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ManagedAccountsGetAllResponse": {
      "id": "ManagedAccountsGetAllResponse",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account Name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "ManagedAccAddedList": {
          "description": "",
          "items": {
            "$ref": "ManagedAccAddedList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "managedAccProvisionedList": {
          "description": "",
          "items": {
            "$ref": "ManagedAccProvisionedList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ManagedAccAddedList": {
      "id": "ManagedAccAddedList",
      "required": [],
      "properties": {
        "id": {
          "description": "Account name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "txid": {
          "description": "Transaction identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ManagedAccProvisionedList": {
      "id": "ManagedAccProvisionedList",
      "required": [],
      "properties": {
        "id": {
          "description": "Account name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "txid": {
          "description": "Transaction identifier",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "StatusList": {
      "id": "StatusList",
      "required": [],
      "properties": {
        "id": {
          "description": "Account name",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Success or Fail",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "detailed reason",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "RegisteredCallbacks": {
      "id": "RegisteredCallbacks",
      "description": "List of registered callback endpoints.",
      "required": [],
      "properties": {
        "aname": {
          "description": "The name of the billing account for which callback messages will be sent.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL. This will be 'Fota' for the Software Management Services callback.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "url": {
          "description": "The address to which callback messages will be sent.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "username": {
          "description": "The user name that ThingSpace will return in the callback messages.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "password": {
          "description": "The password that ThingSpace will return in the callback messages.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FotaV1CallbackRegistrationRequest": {
      "id": "FotaV1CallbackRegistrationRequest",
      "description": "Callback endpoint information.",
      "required": [
        "name",
        "url"
      ],
      "properties": {
        "name": {
          "description": "The name of the callback service that you want to subscribe to, which must be 'Fota' for Software Management Services callbacks.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "url": {
          "description": "The address on your server where you have enabled a listening service for Software Management Services callback messages.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "username": {
          "description": "The user name that ThingSpace should return in the callback messages.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "password": {
          "description": "The password that ThingSpace should return in the callback messages.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FotaV1CallbackRegistrationResult": {
      "id": "FotaV1CallbackRegistrationResult",
      "description": "Registered callback account name and service name.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL. This will be 'Fota' for the Software Management Services callback.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V1ListOfLicensesToRemoveRequest": {
      "id": "V1ListOfLicensesToRemoveRequest",
      "description": "List of devices to removes.",
      "required": [
        "deviceList"
      ],
      "properties": {
        "type": {
          "description": "Set to 'append' to append the devices in the current request to the existing list. If there is no existing list then it will be created with only these devices. Leave this parameter out when you want to replace the existing list with the devices in the current request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V1ListOfLicensesToRemoveResult": {
      "id": "V1ListOfLicensesToRemoveResult",
      "description": "List of licenses assigned.",
      "required": [],
      "properties": {
        "count": {
          "description": "The total number of devices on the cancellation candidate list.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V1ListOfLicensesToRemove": {
      "id": "V1ListOfLicensesToRemove",
      "description": "List of cancellation candidate devices.",
      "required": [],
      "properties": {
        "count": {
          "description": "The total number of devices on the list.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "updateTime": {
          "description": "The date and time that the list was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceListQueryResult": {
      "id": "DeviceListQueryResult",
      "description": "List of devices.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        },
        "deviceList": {
          "description": "The list of devices in the account.",
          "items": {
            "$ref": "DeviceListQueryItem"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceListQueryItem": {
      "id": "DeviceListQueryItem",
      "description": "The list of devices in the account.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdn": {
          "description": "The MDN (phone number) of the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "The device model name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "The device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmware": {
          "description": "The name of the firmware image currently installed on the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fotaEligible": {
          "description": "True if the device firmware can be upgraded over the air using the Software Management Services API.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "licenseAssigned": {
          "description": "True if an MRC license has been assigned to this device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "upgradeTime": {
          "description": "The date and time that the device firmware was last upgraded. If a device has never been upgraded, the upgradeTime will be 01/01/1900 0:0:0.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceUpgradeHistory": {
      "id": "DeviceUpgradeHistory",
      "description": "Firmware upgrade information.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "The name (number) of the billing account that the device belongs to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareFrom": {
          "description": "The firmware version that was on the device before the upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "The name of the firmware version that was on the device after the upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "The date of the upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "upgradeStartTime": {
          "description": "The date and time that the upgrade actually started for this device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the upgrade for this device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "More information about the status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FotaV1Result": {
      "id": "FotaV1Result",
      "description": "Response in case of any errors.",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "description": "Error response code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "Description of the error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Firmware": {
      "id": "Firmware",
      "description": "Firmware information.",
      "required": [],
      "properties": {
        "firmwareName": {
          "description": "The name of the firmware image, provided by the device manufacturer.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "participantName": {
          "description": "Internal reference; can be ignored.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "launchDate": {
          "description": "The release date of the firmware image.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "releaseNote": {
          "description": "Additional information about the release.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "The device model that the firmware applies to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "The device make that the firmware applies to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fromVersion": {
          "description": "The firmware version that must currently be on the device to upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "toVersion": {
          "description": "The firmware version that will be on the device after an upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FirmwareUpgradeChangeRequest": {
      "id": "FirmwareUpgradeChangeRequest",
      "description": "List of devices to add or remove.",
      "required": [
        "type",
        "deviceList"
      ],
      "properties": {
        "type": {
          "description": "Possible values are `append` or `remove`",
          "defaultValue": "",
          "enum": [
            "append",
            "remove"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FirmwareUpgradeChangeResult": {
      "id": "FirmwareUpgradeChangeResult",
      "description": "Upgrade information.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for this upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.",
          "items": {
            "$ref": "V1DeviceListItem"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V1DeviceListItem": {
      "id": "V1DeviceListItem",
      "description": "A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Whether the device was successfully added or removed from the campaign.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "Reason": {
          "description": "Additional details about the status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FirmwareUpgradeRequest": {
      "id": "FirmwareUpgradeRequest",
      "description": "Details of the firmware upgrade request.",
      "required": [
        "accountName",
        "firmwareName",
        "firmwareTo",
        "startDate",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareName": {
          "description": "The name of the firmware image that will be used for the upgrade, from a GET /firmware response.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "The date that the upgrade should begin.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FirmwareUpgrade": {
      "id": "FirmwareUpgrade",
      "description": "Array of upgrade objects with the specified status.",
      "required": [],
      "properties": {
        "id": {
          "description": "The unique identifier for this upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareName": {
          "description": "The name of the firmware image that will be used for the upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "The name of the firmware version that will be on the devices after a successful upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "The intended start date for the upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "The current status of the upgrade.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
          "items": {
            "$ref": "FirmwareUpgradeDeviceListItem"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FirmwareUpgradeDeviceListItem": {
      "id": "FirmwareUpgradeDeviceListItem",
      "description": "A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "The status of the upgrade for this device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resultReason": {
          "description": "Additional details about the status. Not included when status='Request Pending.'",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AccountLicenseInfo": {
      "id": "AccountLicenseInfo",
      "description": "Account license information.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "totalLicenses": {
          "description": "Number of monthly licenses in an MRC subscription.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "assignedLicenses": {
          "description": "Number of licenses currently assigned to devices.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "The list of devices that have licenses assigned, including the date and time of when each license was assigned.",
          "items": {
            "$ref": "AccountLicenseDeviceListItem"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "AccountLicenseDeviceListItem": {
      "id": "AccountLicenseDeviceListItem",
      "description": "The list of devices that have licenses assigned, including the date and time of when each license was assigned.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "assignmentTime": {
          "description": "Timestamp of when a license was assigned to the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "V1LicensesAssignedRemovedRequest": {
      "id": "V1LicensesAssignedRemovedRequest",
      "description": "IMEIs of the devices to assign licenses to.",
      "required": [
        "deviceList"
      ],
      "properties": {
        "deviceList": {
          "description": "The IMEIs of the devices.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V1LicensesAssignedRemovedResult": {
      "id": "V1LicensesAssignedRemovedResult",
      "description": "License assignment or removal confirmation.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "licCount": {
          "description": "Total number of monthly licenses in an MRC subscription.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licUsedCount": {
          "description": "Number of licenses assigned to devices after the request completed.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "A JSON object for each device that was in the request.",
          "items": {
            "$ref": "V1DeviceListItem"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FotaV1SuccessResult": {
      "id": "FotaV1SuccessResult",
      "description": "A response to a successful request contains a single Boolean value.",
      "required": [],
      "properties": {
        "success": {
          "description": "True is returned in case of success.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V1AccountSubscription": {
      "id": "V1AccountSubscription",
      "description": "Account subscription information.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "purchaseType": {
          "description": "Subscription models used by the account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "licenseCount": {
          "description": "Number of monthly licenses in an MRC subscription.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licenseUsedCount": {
          "description": "Number of licenses currently assigned to devices.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "The date and time of when the subscription was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UpgradeListQueryResult": {
      "id": "UpgradeListQueryResult",
      "description": "Upgrade information.",
      "required": [],
      "properties": {
        "hasMoreFlag": {
          "description": "True if there are more devices to retrieve.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenUpgradeId": {
          "description": "If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "reportList": {
          "description": "Array of upgrade objects with the specified status.",
          "items": {
            "$ref": "FirmwareUpgrade"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FotaV2Subscription": {
      "id": "FotaV2Subscription",
      "description": "FOTA Subscription.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "purchaseType": {
          "description": "Subscription models used by the account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "licenseCount": {
          "description": "Number of monthly licenses in an MRC subscription.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licenseUsedCount": {
          "description": "Number of licenses currently assigned to devices.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "The date and time of when the subscription was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2LicenseSummary": {
      "id": "V2LicenseSummary",
      "description": "Summary of license assignment.",
      "required": [
        "accountName",
        "assignedLicenses",
        "hasMoreData",
        "maxPageSize"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "totalLicense": {
          "description": "Total FOTA license count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "assignedLicenses": {
          "description": "Assigned FOTA license count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "Last seen device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "$ref": "V2LicenseDevice"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2LicenseDevice": {
      "id": "V2LicenseDevice",
      "description": "Device IMEI list.",
      "required": [
        "deviceId"
      ],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "assignmentTime": {
          "description": "License assignment time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2LicensesAssignedRemovedResult": {
      "id": "V2LicensesAssignedRemovedResult",
      "description": "License assignment or removal confirmation.",
      "required": [
        "accountName",
        "licTotalCount",
        "licUsedCount",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "licTotalCount": {
          "description": "Total license count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licUsedCount": {
          "description": "Assigned license count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "items": {
            "$ref": "V2DeviceStatus"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2LicenseIMEI": {
      "id": "V2LicenseIMEI",
      "description": "IMEIs of the devices to assign or remove licenses.",
      "required": [
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2ListOfLicensesToRemoveRequest": {
      "id": "V2ListOfLicensesToRemoveRequest",
      "description": "License cancellation candidate devices.",
      "required": [
        "deviceList"
      ],
      "properties": {
        "type": {
          "description": "List creation option.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "count": {
          "description": "The number of devices.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2ListOfLicensesToRemoveResult": {
      "id": "V2ListOfLicensesToRemoveResult",
      "description": "List of created license cancellation devices.",
      "required": [
        "count",
        "deviceList"
      ],
      "properties": {
        "count": {
          "description": "The number of devices.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2ListOfLicensesToRemove": {
      "id": "V2ListOfLicensesToRemove",
      "description": "A list of license cancellation candidate devices.",
      "required": [
        "count",
        "hasMoreData",
        "updateTime",
        "deviceList"
      ],
      "properties": {
        "count": {
          "description": "Cancellation candidate devices count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "Flag to indicat more devices.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "updateTime": {
          "description": "Last update time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "CampaignSoftwareUpgrade": {
      "id": "CampaignSoftwareUpgrade",
      "description": "Software upgrade information.",
      "required": [
        "softwareName",
        "softwareFrom",
        "softwareTo",
        "distributionType",
        "startDate",
        "endDate",
        "deviceList"
      ],
      "properties": {
        "campaignName": {
          "description": "Campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareName": {
          "description": "Software name to upgrade to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "OMA or HTTP.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "downloadAfterDate": {
          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "items": {
            "$ref": "V2TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "installAfterDate": {
          "description": "Client will install package after date. If null, client will install as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "items": {
            "$ref": "V2TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "CampaignSoftware": {
      "id": "CampaignSoftware",
      "description": "Software upgrade information.",
      "required": [
        "id",
        "accountName",
        "softwareName",
        "distributionType",
        "make",
        "model",
        "softwareFrom",
        "softwareTo",
        "startDate",
        "endDate",
        "status"
      ],
      "properties": {
        "id": {
          "description": "Upgrade identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Applicable make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Applicable model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "downloadAfterDate": {
          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "items": {
            "$ref": "V2TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "installAfterDate": {
          "description": "Client will install package after date. If null, client will install as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "items": {
            "$ref": "V2TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "status": {
          "description": "Software upgrade status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2ChangeCampaignDatesRequest": {
      "id": "V2ChangeCampaignDatesRequest",
      "description": "New dates and time windows.",
      "required": [
        "startDate",
        "endDate"
      ],
      "properties": {
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "downloadAfterDate": {
          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows. Removing of existing windows is not allowed.",
          "items": {
            "$ref": "V2TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "installAfterDate": {
          "description": "Client will install package after date. If null, client will install as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows. Removing of existing windows is not allowed.",
          "items": {
            "$ref": "V2TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AddOrRemoveDeviceRequest": {
      "id": "V2AddOrRemoveDeviceRequest",
      "description": "Add or remove device to existing software upgrade information.",
      "required": [
        "Type",
        "deviceList"
      ],
      "properties": {
        "Type": {
          "description": "Operation either 'append' or 'remove'.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AddOrRemoveDeviceResult": {
      "id": "V2AddOrRemoveDeviceResult",
      "description": "Add or remove devices from the existing software upgrade information.",
      "required": [
        "accountName",
        "campaignId",
        "requestId"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignId": {
          "description": "Campaign identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "requestId": {
          "description": "Request identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FotaV2CallbackRegistrationRequest": {
      "id": "FotaV2CallbackRegistrationRequest",
      "description": "Callback URL registration.",
      "required": [],
      "properties": {
        "url": {
          "description": "Callback URL for an subscribed service.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FotaV2CallbackRegistrationResult": {
      "id": "FotaV2CallbackRegistrationResult",
      "description": "Callback listener URL.",
      "required": [],
      "properties": {
        "url": {
          "description": "Callback URL.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CallbackSummary": {
      "id": "CallbackSummary",
      "description": "Registered callback information.",
      "required": [],
      "properties": {
        "url": {
          "description": "Callback URL for an subscribed service.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SoftwarePackage": {
      "id": "SoftwarePackage",
      "description": "Software package information.",
      "required": [
        "softwareName",
        "launchDate",
        "model",
        "make",
        "distributionType",
        "devicePlatformId"
      ],
      "properties": {
        "softwareName": {
          "description": "Software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "launchDate": {
          "description": "Software launch date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "releaseNote": {
          "description": "Software release note reserved for future use.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Software applicable device model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Software applicable device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devicePlatformId": {
          "description": "The platform (Android, iOS, etc.) that the software can be applied to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceSoftwareUpgrade": {
      "id": "DeviceSoftwareUpgrade",
      "description": "Array of software upgrade objects with the specified status.",
      "required": [
        "deviceId",
        "id",
        "accountName",
        "startDate",
        "status",
        "reason"
      ],
      "properties": {
        "deviceId": {
          "description": "Device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Upgrade identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Software upgrade start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Software upgrade status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "Software upgrade result reason.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2CampaignHistory": {
      "id": "V2CampaignHistory",
      "description": "Campaign history details.",
      "required": [
        "hasMoreData",
        "campaignList"
      ],
      "properties": {
        "hasMoreData": {
          "description": "Has more report flag.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenCampaignId": {
          "description": "Campaign identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignList": {
          "description": "Software upgrade list.",
          "items": {
            "$ref": "V2CampaignMetaInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2CampaignMetaInfo": {
      "id": "V2CampaignMetaInfo",
      "description": "Campaign and campaign details.",
      "required": [
        "accountName",
        "id",
        "softwareName",
        "distributionType",
        "softwareFrom",
        "softwareTo",
        "make",
        "model",
        "startDate",
        "endDate",
        "status"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Campaign identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Applicable make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Applicable model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "downloadAfterDate": {
          "description": "Specifies starting date client should download package. If null, client will download as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "items": {
            "$ref": "V2TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "installAfterDate": {
          "description": "Client will install package after date. If null, client will install as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "items": {
            "$ref": "V2TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "status": {
          "description": "Software upgrade status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2CampaignDevice": {
      "id": "V2CampaignDevice",
      "description": "List of devices in a campaign.",
      "required": [
        "hasMoreData",
        "maxPageSize",
        "deviceList"
      ],
      "properties": {
        "totalDevice": {
          "description": "Total device count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "Has more report flag.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "Device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "items": {
            "$ref": "V2DeviceStatus"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountDeviceList": {
      "id": "V2AccountDeviceList",
      "description": "List of device information for an account.",
      "required": [
        "accountName",
        "hasMoreData",
        "maxPageSize",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "hasMoreData": {
          "description": "Has more device flag?",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "Last seen device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Account device list.",
          "items": {
            "$ref": "V2AccountDevice"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountDevice": {
      "id": "V2AccountDevice",
      "description": "Account device information.",
      "required": [
        "deviceId",
        "mdn",
        "model",
        "make",
        "fotaEligible",
        "appFotaEligible",
        "licenseAssigned",
        "distributionType",
        "softwareList"
      ],
      "properties": {
        "deviceId": {
          "description": "Device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdn": {
          "description": "MDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Device model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fotaEligible": {
          "description": "Device FOTA capable.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "appFotaEligible": {
          "description": "Device application FOTA capable.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "licenseAssigned": {
          "description": "License assigned device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareList": {
          "description": "List of sofware.",
          "items": {
            "$ref": "V2SoftwareInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "createTime": {
          "description": "The date and time of when the device is created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "upgradeTime": {
          "description": "The date and time of when the device firmware or software is upgraded.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "updateTime": {
          "description": "The date and time of when the device is updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "refreshTime": {
          "description": "The date and time of when the device is refreshed.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2SoftwareInfo": {
      "id": "V2SoftwareInfo",
      "description": "Software information.",
      "required": [
        "name",
        "version",
        "upgradeTime"
      ],
      "properties": {
        "name": {
          "description": "Software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "version": {
          "description": "Software version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "upgradeTime": {
          "description": "Upgrade time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2TimeWindow": {
      "id": "V2TimeWindow",
      "description": "Allowed start and end time windows.",
      "required": [
        "startTime",
        "endTime"
      ],
      "properties": {
        "startTime": {
          "description": "Start hour in range [0..23], current hour >= startTime.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "endTime": {
          "description": "End hour in range [1..24], current hour < endTime.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DeviceLog": {
      "id": "DeviceLog",
      "description": "Device logging information.",
      "required": [
        "deviceId",
        "logTime",
        "logType",
        "eventLog",
        "binaryLogFileBase64",
        "binaryLogFilename"
      ],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "logTime": {
          "description": "Time of log.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "logType": {
          "description": "Log type (one of SoftwareUpdate, Event, UserNotification, AgentService, Wireless, WirelessWeb, MobileBroadbandModem, WindowsMDM).",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "eventLog": {
          "description": "Event log.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "binaryLogFileBase64": {
          "description": "Base64-encoded contents of binary log file.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "binaryLogFilename": {
          "description": "File name of binary log file.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2DeviceStatus": {
      "id": "V2DeviceStatus",
      "description": "Device with id in IMEI.",
      "required": [
        "deviceId",
        "status"
      ],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Success or failure.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resultReason": {
          "description": "Result reason.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceLoggingRequest": {
      "id": "DeviceLoggingRequest",
      "description": "Device logging information.",
      "required": [
        "deviceIds"
      ],
      "properties": {
        "deviceIds": {
          "description": "List of device IMEI identifiers.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceLoggingStatus": {
      "id": "DeviceLoggingStatus",
      "description": "Device logging status information.",
      "required": [
        "deviceId",
        "expiryDate"
      ],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "expiryDate": {
          "description": "The date when device logging expires.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "CheckInHistoryItem": {
      "id": "CheckInHistoryItem",
      "description": "Check-in history for a device.",
      "required": [
        "deviceId",
        "clientType",
        "result",
        "failureType",
        "timeCompleted"
      ],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "clientType": {
          "description": "Type of client.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "result": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "failureType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timeCompleted": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FotaV2SuccessResult": {
      "id": "FotaV2SuccessResult",
      "description": "Response to a successful request.",
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "FotaV2Result": {
      "id": "FotaV2Result",
      "description": "Response for error cases.",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "description": "Code of the error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "Details of the error.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UploadConfigurationFilesResponse": {
      "id": "UploadConfigurationFilesResponse",
      "required": [],
      "properties": {
        "fileName": {
          "description": "The name of the file you are upgrading to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileVersion": {
          "description": "The version of the file you are upgrading to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "launchDate": {
          "description": "Software launch date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "releaseNote": {
          "description": "Software release note.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Software applicable device model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Software applicable device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "LWM2M, OMD-DM or HTTP.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devicePlatformId": {
          "description": "The platform (Android, iOS, etc.) that the software can be applied to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "localTargetPath": {
          "description": "Local target path on the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "RetrievesAvailableFilesResponseList": {
      "id": "RetrievesAvailableFilesResponseList",
      "required": [],
      "properties": {
        "AvailableFilesResponse": {
          "description": "",
          "items": {
            "$ref": "RetrievesAvailableFilesResponse"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RetrievesAvailableFilesResponse": {
      "id": "RetrievesAvailableFilesResponse",
      "required": [],
      "properties": {
        "fileName": {
          "description": "ThingSpace-generated name of the file. You will use this name when listing or scheduling campaigns for the file.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileVersion": {
          "description": "Version of the file.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "releaseNote": {
          "description": "Software release note.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "The software-applicable device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "The software-applicable device model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "localTargetPath": {
          "description": "Local target path on the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "Valid values",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devicePlatformId": {
          "description": "The platform (Android, iOS, etc.,) that the software can be applied to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UploadAndScheduleFileRequest": {
      "id": "UploadAndScheduleFileRequest",
      "required": [],
      "properties": {
        "campaignName": {
          "description": "The campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileName": {
          "description": "The name of the file you are upgrading to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileVersion": {
          "description": "The version of the file you are upgrading to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "Valid values",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "items": {
            "$ref": "downloadTimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "installAfterDate": {
          "description": "The date after which you install the package. If null, install as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "items": {
            "$ref": "downloadTimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "downloadTimeWindow": {
      "id": "downloadTimeWindow",
      "required": [],
      "properties": {
        "startTime": {
          "description": "Device IMEI list.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endTime": {
          "description": "Device IMEI list.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UploadAndScheduleFileResponse": {
      "id": "UploadAndScheduleFileResponse",
      "required": [],
      "properties": {
        "id": {
          "description": "Updgrade identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account identifer.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignName": {
          "description": "The campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileName": {
          "description": "The name of the file you are upgrading to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileVersion": {
          "description": "The version of the file you are upgrading to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "Valid values",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Applicable make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Applicable model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "items": {
            "$ref": "downloadTimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "installAfterDate": {
          "description": "The date after which you install the package. If null, install as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "items": {
            "$ref": "downloadTimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "status": {
          "description": "Software update status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SchedulesSoftwareUpgradeRequest": {
      "id": "SchedulesSoftwareUpgradeRequest",
      "required": [],
      "properties": {
        "campaignName": {
          "description": "The campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareName": {
          "description": "Software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareFrom": {
          "description": "Old software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareTo": {
          "description": "New software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "distributionType": {
          "description": "Valid values",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "downloadAfterDate": {
          "description": "Specifies the starting date the client should download the package. If null, client downloads as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "downloadTimeWindowList": {
          "description": "List of allowed download time windows.",
          "items": {
            "$ref": "downloadTimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "installAfterDate": {
          "description": "The date after which you install the package. If null, install as soon as possible.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "installTimeWindowList": {
          "description": "List of allowed install time windows.",
          "items": {
            "$ref": "downloadTimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3DeviceListItem": {
      "id": "V3DeviceListItem",
      "description": "Device changed.",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Success or failure.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "Reason": {
          "description": "Result reason.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V3AddOrRemoveDeviceRequest": {
      "id": "V3AddOrRemoveDeviceRequest",
      "description": "Devices to add or remove from existing software upgrade information.",
      "required": [
        "Type",
        "deviceList"
      ],
      "properties": {
        "Type": {
          "description": "Operation either 'append' or 'remove'",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3AddOrRemoveDeviceResult": {
      "id": "V3AddOrRemoveDeviceResult",
      "description": "Add or remove devices to existing upgrade information.",
      "required": [
        "accountName",
        "campaignId",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignId": {
          "description": "Campaign identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "Array of devices changed.",
          "items": {
            "$ref": "V3DeviceListItem"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3ChangeCampaignDatesRequest": {
      "id": "V3ChangeCampaignDatesRequest",
      "description": "Campaign dates and time windows.",
      "required": [
        "startDate",
        "endDate"
      ],
      "properties": {
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "items": {
            "$ref": "V3TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3TimeWindow": {
      "id": "V3TimeWindow",
      "description": "Time window.",
      "required": [
        "startTime",
        "endTime"
      ],
      "properties": {
        "startTime": {
          "description": "Start hour in range [0..23], current hour >= startTime.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "endTime": {
          "description": "End hour in range [1..24], current hour < endTime.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FotaV3Subscription": {
      "id": "FotaV3Subscription",
      "description": "Information for licenses applied to devices.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "purchaseType": {
          "description": "Subscription models used by the account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "licenseCount": {
          "description": "Number of monthly licenses in an MRC subscription.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licenseUsedCount": {
          "description": "Number of licenses currently assigned to devices.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "The date and time of when the subscription was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V3LicenseSummary": {
      "id": "V3LicenseSummary",
      "description": "Information for FOTA licenses assigned to devices.",
      "required": [
        "accountName",
        "assignedLicenses",
        "hasMoreData",
        "maxPageSize"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "totalLicenses": {
          "description": "Total FOTA license count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "assignedLicenses": {
          "description": "Assigned FOTA license count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "True if there are more devices to retrieve.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "Last seen device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "$ref": "V3LicenseDevice"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3LicenseDevice": {
      "id": "V3LicenseDevice",
      "description": "Device IMEI.",
      "required": [
        "deviceId"
      ],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "assignmentTime": {
          "description": "License assignment time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V3LicenseAssignedRemovedResult": {
      "id": "V3LicenseAssignedRemovedResult",
      "description": "License assignment/removal response.",
      "required": [
        "accountName",
        "licCount",
        "licUsedCount",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "licCount": {
          "description": "Total license count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licUsedCount": {
          "description": "Assigned license count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "items": {
            "$ref": "V3DeviceStatus"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3LicenseIMEI": {
      "id": "V3LicenseIMEI",
      "description": "List of devices.",
      "required": [
        "deviceList"
      ],
      "properties": {
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "CampaignFirmwareUpgrade": {
      "id": "CampaignFirmwareUpgrade",
      "description": "Firmware upgrade for devices.",
      "required": [
        "firmwareName",
        "firmwareFrom",
        "firmwareTo",
        "protocol",
        "startDate",
        "endDate",
        "deviceList"
      ],
      "properties": {
        "campaignName": {
          "description": "Campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareName": {
          "description": "Firmware name to upgrade to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "New firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "protocol": {
          "description": "Valid values include: LWM2M, OMA and HTTP.",
          "defaultValue": "LWM2M",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "items": {
            "$ref": "V3TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FirmwareCampaign": {
      "id": "FirmwareCampaign",
      "description": "Firmware upgrade information.",
      "required": [
        "id",
        "accountName",
        "firmwareFrom",
        "firmwareTo",
        "protocol",
        "make",
        "model",
        "startDate",
        "endDate",
        "status"
      ],
      "properties": {
        "id": {
          "description": "Upgrade identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareName": {
          "description": "Firmware name (for firmware upgrade only).",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version (for firmware upgrade only).",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "New firmware version (for firmware upgrade only).",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "protocol": {
          "description": "Available values: LWM2M.",
          "defaultValue": "LWM2M",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "items": {
            "$ref": "V3TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "status": {
          "description": "Campaign status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceFirmwareUpgrade": {
      "id": "DeviceFirmwareUpgrade",
      "description": "Firmware upgrades information.",
      "required": [
        "deviceId",
        "campaignId",
        "accountName",
        "startDate",
        "status",
        "reason"
      ],
      "properties": {
        "deviceId": {
          "description": "Device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignId": {
          "description": "Campaign identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareName": {
          "description": "Firmware name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "New firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Firmware upgrade start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Firmware upgrade status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "Software upgrade result reason.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reportUpdatedTime": {
          "description": "Report updated time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceIMEI": {
      "id": "DeviceIMEI",
      "description": "Device IMEI list.",
      "required": [
        "deviceList"
      ],
      "properties": {
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FirmwareIMEI": {
      "id": "FirmwareIMEI",
      "description": "A list of IMEIs for devices to be synchronized between ThingSpace and the FOTA server.",
      "required": [
        "deviceList"
      ],
      "properties": {
        "deviceList": {
          "description": "Device IMEI list.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceFirmwareList": {
      "id": "DeviceFirmwareList",
      "description": "Device Firmware Information.",
      "required": [
        "accountName"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceFirmwarVersionList": {
          "description": "List of device & firmware.",
          "items": {
            "$ref": "DeviceFirmwareVersion"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceFirmwareVersion": {
      "id": "DeviceFirmwareVersion",
      "description": "Device and firmware information.",
      "required": [
        "deviceId",
        "firmwareVersion"
      ],
      "properties": {
        "status": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reason": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareVersion": {
          "description": "Device Firmware Version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareVersionUpdateTime": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "V3CampaignHistory": {
      "id": "V3CampaignHistory",
      "description": "Campaign history.",
      "required": [
        "hasMoreData",
        "campaignList"
      ],
      "properties": {
        "hasMoreData": {
          "description": "Has more report flag?",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenCampaignId": {
          "description": "Campaign identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignList": {
          "description": "Firmware upgrade list.",
          "items": {
            "$ref": "V3CampaignMetaInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3CampaignMetaInfo": {
      "id": "V3CampaignMetaInfo",
      "description": "Campaign and campaign details.",
      "required": [
        "accountName",
        "id",
        "make",
        "model",
        "startDate",
        "endDate",
        "status"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Campaign identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareName": {
          "description": "Firmware name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "New software version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "protocol": {
          "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM.",
          "defaultValue": "LWM2M",
          "enum": [
            "LWM2M",
            "OMD-DM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Device model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "items": {
            "$ref": "V3TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "status": {
          "description": "Firmware upgrade status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceListResult": {
      "id": "DeviceListResult",
      "description": "Device list information.",
      "required": [
        "accountName",
        "deviceCount",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceCount": {
          "description": "Total device count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "items": {
            "$ref": "V3Device"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3Device": {
      "id": "V3Device",
      "description": "Device information.",
      "required": [
        "deviceId"
      ],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "requestStatus": {
          "description": "Success or failure.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resultReason": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdn": {
          "description": "MDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Device model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmware": {
          "description": "Device firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fotaEligible": {
          "description": "Value=true if the device software can be upgraded over the air using the Software Management Services API.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "status": {
          "description": "Device status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "licenseAssigned": {
          "description": "License assigned device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "protocol": {
          "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareList": {
          "description": "List of sofware.",
          "items": {
            "$ref": "V3SoftwareInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "fileList": {
          "description": "List of files.",
          "items": {
            "$ref": "V3SoftwareInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "createTime": {
          "description": "The date and time of when the device is created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "statusTime": {
          "description": "The date and time of when the device firmware or software is updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "updateTime": {
          "description": "The date and time of when the device is updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "refreshTime": {
          "description": "The date and time of when the device is refreshed.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastConnectionTime": {
          "description": "The date and time of when the device reachability is checked.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeviceFirmwareVersionUpdateResult": {
      "id": "DeviceFirmwareVersionUpdateResult",
      "description": "Device firmware version update response.",
      "required": [
        "accountName",
        "requestId"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "requestId": {
          "description": "Request identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Campaign": {
      "id": "Campaign",
      "description": "Firmware upgrade information.",
      "required": [
        "id",
        "accountName",
        "protocol",
        "make",
        "model",
        "startDate",
        "endDate",
        "status"
      ],
      "properties": {
        "id": {
          "description": "Upgrade identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "campaignName": {
          "description": "Campaign name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareName": {
          "description": "Name of firmware.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Old firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "New firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "protocol": {
          "description": "The protocol of the firmware distribution. Default: LWM2M.",
          "defaultValue": "LWM2M",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Applicable make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Applicable model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Campaign start date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "Campaign end date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "campaignTimeWindowList": {
          "description": "List of allowed campaign time windows.",
          "items": {
            "$ref": "V3TimeWindow"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "status": {
          "description": "Firmware upgrade status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FotaV3CallbackRegistrationRequest": {
      "id": "FotaV3CallbackRegistrationRequest",
      "description": "Callback URL where the listening service is running.",
      "required": [],
      "properties": {
        "url": {
          "description": "Callback URL for an subscribed service.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FotaV3CallbackRegistrationResult": {
      "id": "FotaV3CallbackRegistrationResult",
      "description": "Callback registration information.",
      "required": [],
      "properties": {
        "url": {
          "description": "Callback URL.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FotaV3CallbackSummary": {
      "id": "FotaV3CallbackSummary",
      "description": "Callback registration information.",
      "required": [],
      "properties": {
        "url": {
          "description": "Callback URL for an subscribed service.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FirmwarePackage": {
      "id": "FirmwarePackage",
      "description": "Available firmware.",
      "required": [
        "firmwareName",
        "firmwareFrom",
        "firmwareTo",
        "launchDate",
        "releaseNote",
        "model",
        "make",
        "protocol"
      ],
      "properties": {
        "firmwareName": {
          "description": "Firmware name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareFrom": {
          "description": "Firmware from version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmwareTo": {
          "description": "Firmware to version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "launchDate": {
          "description": "Firmware launch date.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "releaseNote": {
          "description": "Firmware release note.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Firmware applicable device model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Firmware applicable device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "protocol": {
          "description": "Firmware protocol. Valid values include: LWM2M, OMD-DM.",
          "defaultValue": "LWM2M",
          "enum": [
            "LWM2M",
            "OMD-DM"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V3CampaignDevice": {
      "id": "V3CampaignDevice",
      "description": "Campaign history.",
      "required": [
        "hasMoreData",
        "maxPageSize",
        "deviceList"
      ],
      "properties": {
        "totalDevice": {
          "description": "Total device count.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hasMoreData": {
          "description": "Has more report flag.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "Device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "List of devices with id in IMEI.",
          "items": {
            "$ref": "V3DeviceStatus"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3AccountDeviceList": {
      "id": "V3AccountDeviceList",
      "description": "Array of devices.",
      "required": [
        "accountName",
        "hasMoreData",
        "maxPageSize",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "hasMoreData": {
          "description": "Has more device flag?",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lastSeenDeviceId": {
          "description": "Last seen device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "maxPageSize": {
          "description": "Maximum page size.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deviceList": {
          "description": "Account device list.",
          "items": {
            "$ref": "V3AccountDevice"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V3AccountDevice": {
      "id": "V3AccountDevice",
      "description": "Device information.",
      "required": [
        "deviceId",
        "mdn",
        "model",
        "make",
        "firmware",
        "fotaEligible",
        "status",
        "licenseAssigned",
        "protocol",
        "softwareList"
      ],
      "properties": {
        "deviceId": {
          "description": "Device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdn": {
          "description": "MDN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "model": {
          "description": "Device model.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "make": {
          "description": "Device make.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firmware": {
          "description": "Device firmware version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fotaEligible": {
          "description": "Value=true if the device software can be upgraded over the air using the Software Management Services API.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "status": {
          "description": "Device status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "licenseAssigned": {
          "description": "License assigned device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "protocol": {
          "description": "Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "softwareList": {
          "description": "List of sofware.",
          "items": {
            "$ref": "V3SoftwareInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "fileList": {
          "description": "List of files.",
          "items": {
            "$ref": "V3SoftwareInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "createTime": {
          "description": "The date and time of when the device is created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "upgradeTime": {
          "description": "The date and time of when the device firmware or software is updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "updateTime": {
          "description": "The date and time of when the device is updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "refreshTime": {
          "description": "The date and time of when the device is refreshed.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V3SoftwareInfo": {
      "id": "V3SoftwareInfo",
      "description": "Software information.",
      "required": [
        "name",
        "version",
        "upgradeTime"
      ],
      "properties": {
        "name": {
          "description": "Software name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "version": {
          "description": "Software version.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "upgradeTime": {
          "description": "Upgrade time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V3DeviceStatus": {
      "id": "V3DeviceStatus",
      "description": "Device status.",
      "required": [
        "deviceId",
        "status"
      ],
      "properties": {
        "deviceId": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Success or failure.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resultReason": {
          "description": "Result reason.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "updatedTime": {
          "description": "Updated Time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "recentAttemptTime": {
          "description": "The most recent attempt time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "nextAttemptTime": {
          "description": "Next attempt time.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FotaV3SuccessResult": {
      "id": "FotaV3SuccessResult",
      "description": "Cancelation status.",
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "description": "True or false.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "FotaV3Result": {
      "id": "FotaV3Result",
      "description": "Error response.",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "description": "Error code string.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message string.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AssignLicenseRequest": {
      "id": "AssignLicenseRequest",
      "description": "Request to assign license.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.This parameter is required only if the UWS account used for the current API session has access to multiple accounts. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "A list of 4G devices.",
          "items": {
            "$ref": "LicenseDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU). Valid skuNumbers for license types: “SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SecuritySubscription": {
      "id": "SecuritySubscription",
      "description": "Subscription of the device.",
      "required": [],
      "properties": {
        "extendedAttributes": {
          "description": "Attributes of the subscription.",
          "items": {
            "$ref": "ExtendedAttributes"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "licenseAssigned": {
          "description": "The total number of licenses for this license type that are assigned to device SIMs.",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "10",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licenseAvailable": {
          "description": "The total number of licenses for this license type that are available to assign to device SIMs.",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "10",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licensePurchased": {
          "description": "The total number of licenses purchased for the license type.",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "10",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "licenseType": {
          "description": "The license type associated with the skuNumber.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "skuNumber": {
          "description": "The skuNumber that identifies the license type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ExtendedAttributes": {
      "id": "ExtendedAttributes",
      "description": "Additional properties associated with data.",
      "required": [],
      "properties": {
        "key": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SecuritySubscriptionRequest": {
      "id": "SecuritySubscriptionRequest",
      "description": "Request for a subscription.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "skuNumber": {
          "description": "The Stock Keeping Unit (SKU). Valid skuNumbers for SIM-Secure for IoT are:SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.*“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SecuritySubscriptionResult": {
      "id": "SecuritySubscriptionResult",
      "description": "Response for a subscription request.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "subscriptionList": {
          "description": "The list of SKU numbers and counts for each license type specified in the request.",
          "items": {
            "$ref": "SecuritySubscription"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "LicenseDeviceList": {
      "id": "LicenseDeviceList",
      "description": "List of all devices.",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "For 4G devices, IMEI (decimal, up to 15 digits).",
          "items": {
            "$ref": "LicenseDeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "ipAddress": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "LicenseDeviceId": {
      "id": "LicenseDeviceId",
      "description": "Id of the devices.",
      "required": [],
      "properties": {
        "id": {
          "description": "For 4G devices, IMEI (decimal, up to 15 digits) for unassign and ICCID (decimal, up to 20 digits) for assign.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "For 4G devices, ICCID (decimal, up to 20 digits) for unassign and IMEI (decimal, up to 15 digits) for assign.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SecuritySuccessResult": {
      "id": "SecuritySuccessResult",
      "description": "Success response.",
      "required": [],
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback message.The ThingSpace Platform sends a separate callback message for each device that matches the request criteria, indicating whether the operation succeeded for that device and containing any requested information. All callback messages will have the same requestId.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SecurityResult": {
      "id": "SecurityResult",
      "description": "Error response.",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorUrl": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "QueryMECPerformanceMetricsRequest": {
      "id": "QueryMECPerformanceMetricsRequest",
      "description": "MEC performance metrics request.",
      "required": [
        "IMEI",
        "MSISDN"
      ],
      "properties": {
        "IMEI": {
          "description": "The 15-digit International Mobile Equipment Identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "MSISDN": {
          "description": "The 12-digit Mobile Station International Subscriber Directory Number.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MECPerformanceMetrics": {
      "id": "MECPerformanceMetrics",
      "description": "Response to query the most recent data for Key Performance Indicators (KPIs) like network availability, MEC hostnames and more.",
      "required": [],
      "properties": {
        "QueryStatus": {
          "description": "Success or Failed.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "Start": {
          "description": "Timestamp of the query's start, format:mm/dd/yyyy,hr:min:sec.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "End": {
          "description": "Timestamp of the query's end , format:mm/dd/yyyy, hr:min:sec.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "QueryResult": {
          "description": "MEC performance query result.",
          "items": {
            "$ref": "MECPerformanceQueryResult"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "MECPerformanceQueryResult": {
      "id": "MECPerformanceQueryResult",
      "description": "Result of the query for obtaining MEC performance metrics.",
      "required": [],
      "properties": {
        "name": {
          "description": "Name of the parameter.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "Parameter values.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "EdgePerformanceResult": {
      "id": "EdgePerformanceResult",
      "description": "Types of errors in response.",
      "required": [],
      "properties": {
        "status": {
          "description": "HTTP status code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error details.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DiagnosticsSubscription": {
      "id": "DiagnosticsSubscription",
      "description": "Status of the diagnostic services subscription.",
      "required": [
        "accountName",
        "createdOn",
        "lastUpdated",
        "totalAllowed",
        "totalUsed",
        "skuName"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\". An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdOn": {
          "description": "The date and time of when the subscription was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "lastUpdated": {
          "description": "The date and time of when the subscription was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "totalAllowed": {
          "description": "Number of licenses currently assigned to devices.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "totalUsed": {
          "description": "Number of licenses currently used by the devices.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "skuName": {
          "description": "Name of the SKU for the account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ObservationRequest": {
      "id": "ObservationRequest",
      "description": "Used to define callbacks including the device identity, the attribute names, corresponding attribute values and the date/timestamp of when the observation was made.",
      "required": [
        "accountName",
        "devices",
        "attributes"
      ],
      "properties": {
        "accountName": {
          "description": "Account identifier in \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "List of devices.",
          "items": {
            "$ref": "Device"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "attributes": {
          "description": "Attributes are streaming RF parameters that you want to observe.",
          "items": {
            "$ref": "ObservationRequestAttribute"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "frequency": {
          "description": "Describes value and unit of time.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "NumericalData"
        },
        "duration": {
          "description": "Describes value and unit of time.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "NumericalData"
        }
      }
    },
    "ObservationRequestAttribute": {
      "id": "ObservationRequestAttribute",
      "description": "Streaming RF parameter that you want to observe.",
      "required": [],
      "properties": {
        "name": {
          "description": "Attribute identifier.",
          "defaultValue": "",
          "enum": [
            "NETWORK_BEARER",
            "RADIO_SIGNAL_STRENGTH",
            "LINK_QUALITY",
            "CELL_ID",
            "MANUFACTURER"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DiagnosticsObservationResult": {
      "id": "DiagnosticsObservationResult",
      "description": "A success response containing the current status of the request.",
      "required": [
        "transactionID",
        "status",
        "createdOn"
      ],
      "properties": {
        "transactionID": {
          "description": "Transaction identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "Status of the request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdOn": {
          "description": "The date and time of when this request was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HistoryAttributeValue": {
      "id": "HistoryAttributeValue",
      "description": "Streaming RF parameter for which you want to retrieve history data.",
      "required": [],
      "properties": {
        "name": {
          "description": "Attribute identifier.",
          "defaultValue": "",
          "enum": [
            "NETWORK_BEARER",
            "RADIO_SIGNAL_STRENGTH",
            "LINK_QUALITY",
            "CELL_ID",
            "MANUFACTURER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "Attribute value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdOn": {
          "description": "Date and time the request was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CallbackRegistrationRequest": {
      "id": "CallbackRegistrationRequest",
      "description": "Specifies the callback service that is being subscribed to and the URL where the listening service is running.",
      "required": [
        "accountName",
        "serviceName",
        "endpoint"
      ],
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent. Format: \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "The URL for your web server.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "httpHeaders": {
          "description": "Your HTTP headers.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "DeviceDiagnosticsCallback": {
      "id": "DeviceDiagnosticsCallback",
      "description": "Callback information of an existing diagnostics subscription.",
      "required": [
        "accountName",
        "serviceName",
        "endpoint",
        "createdOn"
      ],
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent. Format: \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "serviceName": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "The URL for your web server.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdOn": {
          "description": "The date and time of when this request was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "httpHeaders": {
          "description": "Your HTTP headers.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "AttributeSetting": {
      "id": "AttributeSetting",
      "description": "Describes an attribute being observed and the frequency with which the attribute is being observed.",
      "required": [],
      "properties": {
        "name": {
          "description": "Attribute identifier.",
          "defaultValue": "",
          "enum": [
            "NETWORK_BEARER",
            "RADIO_SIGNAL_STRENGTH",
            "LINK_QUALITY",
            "CELL_ID",
            "MANUFACTURER"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "Attribute value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdOn": {
          "description": "Date and time request was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "isObservable": {
          "description": "Is the attribute observable?",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isObserving": {
          "description": "Is the attribute being observed?",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "frequency": {
          "description": "Describes value and unit of time.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "NumericalData"
        }
      }
    },
    "DiagnosticObservationSetting": {
      "id": "DiagnosticObservationSetting",
      "description": "Diagnostic observation settings and attributes for a device.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which callback messages will be sent. Format: \"##########-#####\".",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "device": {
          "description": "Identifies a particular IoT device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Device"
        },
        "attributes": {
          "description": "Streaming RF parameters for which you want to retrieve diagnostic settings.",
          "items": {
            "$ref": "AttributeSetting"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "HistorySearchFilter": {
      "id": "HistorySearchFilter",
      "description": "The selected device and attributes for which a request should retrieve data.",
      "required": [
        "accountName",
        "device"
      ],
      "properties": {
        "accountName": {
          "description": "Account name identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "device": {
          "description": "Identifies a particular IoT device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Device"
        },
        "attributes": {
          "description": "Streaming RF parameters for which you want to retrieve history data.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "HistorySearchFilterAttributes"
        }
      }
    },
    "HistorySearchFilterAttributes": {
      "id": "HistorySearchFilterAttributes",
      "description": "Streaming RF parameters for which you want to retrieve history data.",
      "required": [],
      "properties": {
        "name": {
          "description": "Attribute identifier.",
          "defaultValue": "",
          "enum": [
            "NETWORK_BEARER",
            "RADIO_SIGNAL_STRENGTH",
            "LINK_QUALITY",
            "CELL_ID",
            "MANUFACTURER"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "HistorySearchLimitTime": {
      "id": "HistorySearchLimitTime",
      "description": "The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration.",
      "required": [],
      "properties": {
        "startOn": {
          "description": "The starting date-time for this request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Describes value and unit of time.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "NumericalData"
        }
      }
    },
    "HistorySearchRequest": {
      "id": "HistorySearchRequest",
      "description": "Used to filter data by time period or number of devices.",
      "required": [
        "$filter"
      ],
      "properties": {
        "$filter": {
          "description": "The selected device and attributes for which a request should retrieve data.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "HistorySearchFilter"
        },
        "$limitNumber": {
          "description": "The maximum number of historical attributes to include in the response. If the request matches more than this number of attributes, the response will contain an X-Next value in the header that can be used as the page value in the next request to retrieve the next page of events.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "$limitTime": {
          "description": "The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "HistorySearchLimitTime"
        },
        "$page": {
          "description": "Page number for pagination purposes.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "History": {
      "id": "History",
      "description": "History data for a selected device and its attributes at a specific time.",
      "required": [
        "accountName",
        "device"
      ],
      "properties": {
        "accountName": {
          "description": "The name of the billing account for which you want retrieve history data. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "device": {
          "description": "Identifies a particular IoT device.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Device"
        },
        "attributes": {
          "description": "Streaming RF parameter for which you want to retrieve history data.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "HistoryAttributeValue"
        }
      }
    },
    "Device": {
      "id": "Device",
      "description": "Identifies a particular IoT device.",
      "required": [
        "id",
        "kind"
      ],
      "properties": {
        "id": {
          "description": "Device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "Device kind identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "NumericalData": {
      "id": "NumericalData",
      "description": "Describes value and unit of time.",
      "required": [],
      "properties": {
        "value": {
          "description": "Numerical value.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "unit": {
          "description": "Unit of time.",
          "defaultValue": "",
          "enum": [
            "SECOND",
            "MINUTE",
            "HOUR",
            "DAY"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceDiagnosticsResult": {
      "id": "DeviceDiagnosticsResult",
      "description": "All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "description": "Simple error code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "Detailed error message.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceResetRequest": {
      "id": "DeviceResetRequest",
      "description": "Request body to Performs a device reboot.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of the account. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "action": {
          "description": "The action you want to take on the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "devices": {
          "description": "The devices for which you want to perform a factory reset or reboot.",
          "items": {
            "$ref": "Device"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "GenerateExternalIDResult": {
      "id": "GenerateExternalIDResult",
      "description": "A new external ID.",
      "required": [],
      "properties": {
        "externalid": {
          "description": "Newly created security string.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "GenerateExternalIDRequest": {
      "id": "GenerateExternalIDRequest",
      "description": "Authenticating account ID.",
      "required": [],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        }
      }
    },
    "Subscription": {
      "id": "Subscription",
      "description": "Subscription resource definition.",
      "required": [],
      "properties": {
        "configurationfailures": {
          "description": "The number of streaming failures due to faulty configuration.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "createdon": {
          "description": "The number of streaming failures due to faulty configuration.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "delegateid": {
          "description": "Not currently used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Description of the subscription.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "disabled": {
          "description": "Whether the subscription is currently sending data.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "email": {
          "description": "The address to which any error reports should be delivered.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "filter": {
          "description": "Filter for events.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "ThingSpace unique ID for the subscription that was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "laststreamingstatus": {
          "description": "Possible values: success or fail.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "laststreamingtime": {
          "description": "The date and time that the last stream send was attempted.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastupdated": {
          "description": "The date the resource was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the subscription.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "networkfailures": {
          "description": "The number of failures due to network problems.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "streamfailures": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "streamkind": {
          "description": "The event type that will be sent in the data stream.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "targetid": {
          "description": "Target to be used for dispatching events.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "targettype": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "version": {
          "description": "Version of the underlying schema resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Target": {
      "id": "Target",
      "description": "Target resource definition.",
      "required": [],
      "properties": {
        "address": {
          "description": "The endpoint for data streams.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "addressscheme": {
          "description": "The transport format.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "billingaccountid": {
          "description": "The billing account ID.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdon": {
          "description": "The date the resource was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "externalid": {
          "description": "Security identification string.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "ThingSpace unique ID for the target that was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind. Targets are ts.target.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastupdated": {
          "description": "The date the resource was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the target.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "AWS region value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "version": {
          "description": "Version of the underlying schema resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Description of the target.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "QueryTargetRequest": {
      "id": "QueryTargetRequest",
      "description": "Search for targets by property values.",
      "required": [],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "$selection": {
          "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resourceidentifier": {
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourceIdentifier"
        }
      }
    },
    "AccountIdentifier": {
      "id": "AccountIdentifier",
      "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
      "required": [],
      "properties": {
        "billingaccountid": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeleteTargetRequest": {
      "id": "DeleteTargetRequest",
      "description": "Target to delete.",
      "required": [],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "resourceidentifier": {
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourceIdentifier"
        }
      }
    },
    "ResourceIdentifier": {
      "id": "ResourceIdentifier",
      "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
      "required": [],
      "properties": {
        "id": {
          "description": "Target ID.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "imei": {
          "description": "Device IMEI.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CreateTargetRequest": {
      "id": "CreateTargetRequest",
      "description": "Details of the target that you want to create.",
      "required": [],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "billingaccountid": {
          "description": "The ID of the authenticating billing account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind. Targets are ts.target.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "The endpoint for notifications or data streams. The format depends on the selected `addressscheme`.<br />`streamrest` requires a `host:port` value <br />`streamawsiot` requres a valid ARN.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "addressscheme": {
          "description": "The transport format. Valid values are: <br />streamawsiot - streamed data to an AWS account <br />streamrest - streamed REST data to a defined endpoint.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fields": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "CreateTargetRequestFields"
        },
        "description": {
          "description": "Descriptive information about the target.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "externalid": {
          "description": "Security identification string created by a POST /targets/actions/newextid request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the target.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "region": {
          "description": "AWS region value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key1": {
          "description": "OAuth 2.0 bearer token.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "oauth": {
          "description": "OAuth 2 token and refresh token for TS to stream events to Target.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "TargetAuthentication"
        }
      }
    },
    "TargetAuthentication": {
      "id": "TargetAuthentication",
      "description": "OAuth 2 token and refresh token for TS to stream events to Target.",
      "required": [],
      "properties": {
        "body": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "TargetAuthenticationBody"
        },
        "version": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TargetAuthenticationBody": {
      "id": "TargetAuthenticationBody",
      "required": [],
      "properties": {
        "grant_type": {
          "description": "Authentication grant type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "refresh_token": {
          "description": "Refresh token.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "scope": {
          "description": "Authentication scopes.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "headers": {
          "description": "Authentication headers.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "TargetAuthenticationBodyHeaders"
        },
        "host": {
          "description": "Host information.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "TargetAuthenticationBodyHost"
        }
      }
    },
    "TargetAuthenticationBodyHost": {
      "id": "TargetAuthenticationBodyHost",
      "description": "Host information.",
      "required": [],
      "properties": {
        "hostandpath": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TargetAuthenticationBodyHeaders": {
      "id": "TargetAuthenticationBodyHeaders",
      "description": "Authentication headers.",
      "required": [],
      "properties": {
        "Authorization": {
          "description": "Authorization header.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "Content-Type": {
          "description": "Content-Type header.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CreateTargetRequestFields": {
      "id": "CreateTargetRequestFields",
      "required": [],
      "properties": {
        "httpheaders": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "FieldsHttpHeaders"
        },
        "devicetypes": {
          "description": "List of device types.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "FieldsHttpHeaders": {
      "id": "FieldsHttpHeaders",
      "required": [],
      "properties": {
        "Authorization": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CreateSubscriptionRequest": {
      "id": "CreateSubscriptionRequest",
      "description": "The details of the subscription that you want to create.",
      "required": [],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "description": {
          "description": "Descriptive information about the subscription.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "disabled": {
          "description": "Enable or disable the subscription. A disabled subscription will not send any data.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "email": {
          "description": "The address to which any error reports should be delivered.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "filter": {
          "description": "String containing a $filter object with a property and value to filter out non-matching events.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "billingaccountid": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "streamkind": {
          "description": "The type of event data to send via this subscription. This will be `ts.event` in most cases. Other event types are `ts.event.diagnostics` for device diagnostic data, `ts.event.configuration` for device configuration events, or `ts.event.security`. Note that the device ThingSpace client must support sending specific event types for anything other than `ts.event`.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "targetid": {
          "description": "The ID of the target resource to be used when dispatching events. The corresponding target should have a “stream” addressscheme.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Name of the subscription.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "allowaggregation": {
          "description": "Setting this value to `false` prevents the data returned from being aggregated and makes the data easier to parse.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "QuerySubscriptionRequest": {
      "id": "QuerySubscriptionRequest",
      "description": "Fields and values to match.",
      "required": [],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "$selection": {
          "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resourceidentifier": {
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourceIdentifier"
        }
      }
    },
    "DeleteSubscriptionRequest": {
      "id": "DeleteSubscriptionRequest",
      "description": "The subscription to delete.",
      "required": [],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "resourceidentifier": {
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourceIdentifier"
        }
      }
    },
    "ChangeConfigurationRequest": {
      "id": "ChangeConfigurationRequest",
      "description": "The request body identifies the device and the values to set.",
      "required": [],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "resourceidentifier": {
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourceIdentifier"
        },
        "configuration": {
          "description": "List of the field names and values to set.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "configuration"
        }
      }
    },
    "configuration": {
      "id": "configuration",
      "description": "List of the field names and values to set.",
      "required": [],
      "properties": {
        "frequency": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangeConfigurationResponse": {
      "id": "ChangeConfigurationResponse",
      "description": "Change Configuration resource definition.",
      "required": [],
      "properties": {
        "action": {
          "description": "The action requested in this event; “change” for device configuration changes.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdon": {
          "description": "The date and time of the change request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceid": {
          "description": "The device’s ThingSpace UUID.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fields": {
          "description": "List of fields affected by the event.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Fields"
        },
        "foreignid": {
          "description": "foreign id",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "The unique ID of this ts.event.configuration event.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "The kind of the ThingSpace resource that is being reported",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastupdated": {
          "description": "The date and time that the event was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The name of the event; “SetConfigurationReq” for device configuration changes.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "The current status of the request. The value will be “pending” until the device wakes up and ThingSpace can send the request to the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "transactionid": {
          "description": "transaction id",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "version": {
          "description": "version",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FindDeviceByPropertyResponse": {
      "id": "FindDeviceByPropertyResponse",
      "description": "Change Configuration resource definition.",
      "required": [],
      "properties": {
        "billingaccountid": {
          "description": "Billing account ID of the resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdon": {
          "description": "The date the resource was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "eventretention": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "iccid": {
          "description": "Cellular SIM card identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "ThingSpace unique ID for the device that was added.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "imei": {
          "description": "4G hardware device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastupdated": {
          "description": "The date the resource was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "providerid": {
          "description": "The device’s service provider.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "refid": {
          "description": "The value of the refidtype identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "refidtype": {
          "description": "The device identifier type used to refer to this device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "Service state of the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "version": {
          "description": "Version of the underlying schema resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FindDeviceByPropertyResponseList": {
      "id": "FindDeviceByPropertyResponseList",
      "description": "A success response includes an array of all matching devices. Each device includes the full device resource definition.",
      "required": [],
      "properties": {
        "DeviceProperty": {
          "description": "",
          "items": {
            "$ref": "FindDeviceByPropertyResponse"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "SearchDeviceByPropertyResponseList": {
      "id": "SearchDeviceByPropertyResponseList",
      "description": "A success response includes an array of all matching devices.",
      "required": [],
      "properties": {
        "DeviceProperty": {
          "description": "",
          "items": {
            "$ref": "SearchDeviceByPropertyResponse"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "SearchDeviceByPropertyResponse": {
      "id": "SearchDeviceByPropertyResponse",
      "description": "The device identifier and fields to match in the search.",
      "required": [],
      "properties": {
        "billingaccountid": {
          "description": "Billing account ID of the resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdon": {
          "description": "The date the resource was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "eventretention": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fields": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Fields1"
        },
        "iccid": {
          "description": "Cellular SIM card identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "ThingSpace unique ID for the device that was added.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "imei": {
          "description": "4G hardware device identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "Identifies the resource kind.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastupdated": {
          "description": "The date the resource was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "providerid": {
          "description": "The device’s service provider.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "refid": {
          "description": "The value of the refidtype identifier.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "refidtype": {
          "description": "The device identifier type used to refer to this device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "Service state of the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "version": {
          "description": "Version of the underlying schema resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SearchDeviceByPropertyFields": {
      "id": "SearchDeviceByPropertyFields",
      "description": "List of device sensors and their most recently reported values.",
      "required": [],
      "properties": {
        "acceleration": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "acceleration"
        },
        "battery": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "humidity": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "light": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "pressure": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "signalStrength": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "temperature": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "DevicePropertylocation": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DevicePropertylocation"
        }
      }
    },
    "DevicePropertylocation": {
      "id": "DevicePropertylocation",
      "required": [],
      "properties": {
        "latitude": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "longitude": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "acceleration": {
      "id": "acceleration",
      "required": [],
      "properties": {
        "x": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "y": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "z": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SearchDeviceEventHistoryRequest": {
      "id": "SearchDeviceEventHistoryRequest",
      "description": "Search Device By Property resource definition.",
      "required": [
        "accountidentifier",
        "resourceidentifier"
      ],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "$selection": {
          "description": "A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resourceidentifier": {
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourceIdentifier"
        },
        "$limitnumber": {
          "description": "The maximum number of events to include in the response.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "$page": {
          "description": "The maximum number of events to include in the response.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SearchDeviceEventHistoryResponseList": {
      "id": "SearchDeviceEventHistoryResponseList",
      "description": "A success response includes an array of all matching events.",
      "required": [],
      "properties": {
        "SearchDeviceEventHistory": {
          "description": "",
          "items": {
            "$ref": "SearchDeviceResponse"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "SearchDeviceResponse": {
      "id": "SearchDeviceResponse",
      "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
      "required": [],
      "properties": {
        "action": {
          "description": "The action requested in this event; “change” for device configuration changes.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdon": {
          "description": "The date and time of the change request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceid": {
          "description": "The device’s ThingSpace UUID.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fields": {
          "description": "List of fields affected by the event.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Fields2"
        },
        "id": {
          "description": "The unique ID of this ts.event.configuration event.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "The kind of the ThingSpace resource that is being reported; “ts.event.configuration” for device configuration changes.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastupdated": {
          "description": "The date and time that the event was last updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The name of the event",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "The current status of the request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "tagids": {
          "description": "UUIDs of tag resources that are applied to this device.",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "transactionid": {
          "description": "transaction id",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "version": {
          "description": "The version of the resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionid": {
          "description": "The version of the resource.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SearchSensorHistoryRequest": {
      "id": "SearchSensorHistoryRequest",
      "description": "Search Device By Property resource definition.",
      "required": [
        "accountidentifier",
        "resourceidentifier"
      ],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "resourceidentifier": {
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourceIdentifier"
        },
        "$limitnumber": {
          "description": "The maximum number of events to include in the response.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "$page": {
          "description": "The maximum number of events to include in the response.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SearchSensorHistoryResponseList": {
      "id": "SearchSensorHistoryResponseList",
      "description": "A success response includes an array of all matching events.",
      "required": [],
      "properties": {
        "SearchSensorHistory": {
          "description": "",
          "items": {
            "$ref": "SearchDeviceResponse"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RemoveDeviceRequest": {
      "id": "RemoveDeviceRequest",
      "description": "The request body identifies the device to delete.",
      "required": [
        "accountidentifier",
        "resourceidentifier"
      ],
      "properties": {
        "accountidentifier": {
          "description": "The ID of the authenticating billing account, in the format `{\"billingaccountid\":\"1234567890-12345\"}`.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AccountIdentifier"
        },
        "resourceidentifier": {
          "description": "The ID of the target to delete, in the format {\"id\": \"dd1682d3-2d80-cefc-f3ee-25154800beff\"}.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ResourceIdentifier"
        }
      }
    },
    "CreateIoTApplicationRequest": {
      "id": "CreateIoTApplicationRequest",
      "description": "The request body must include the UUID of the subscription that you want to update plus any properties that you want to change.",
      "required": [],
      "properties": {
        "appName": {
          "description": "A user defined name for the application being deployed in Azure IoT Central.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "billingAccountID": {
          "description": "The ThingSpace ID of the authenticating billing account",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "clientID": {
          "description": "The Azure ClientID of the associated Azure target account",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "clientSecret": {
          "description": "The Azure Client Secret of the associated Azure target account",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "emailIDs": {
          "description": "The “email IDs” to be added to/sent to with this API.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resourcegroup": {
          "description": "The Azure Resource group of the associated Azure target account",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sampleIOTcApp": {
          "description": "This is the reference Azure IoT Central application developed by Verizon.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "subscriptionID": {
          "description": "The Azure Subscription ID of the associated Azure target account",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "tenantID": {
          "description": "The Azure Tenant ID of the associated Azure target account",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CreateIoTApplicationResponse": {
      "id": "CreateIoTApplicationResponse",
      "description": "A success response includes an array of all matching events. Each event includes the full event resource definition.",
      "required": [],
      "properties": {
        "appName": {
          "description": "An application will be created under the user's Azure subscription with this name and of type IOT central.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sharedSecret": {
          "description": "Part of the user credentials (from Azure) the user needs to use for calling further TS Core APIs for setting up Azure cloud connector.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "url": {
          "description": "An IOT central endpoint the user can use to see the data that is being streamed.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fields": {
      "id": "Fields",
      "description": "List of fields affected by the event.",
      "required": [],
      "properties": {
        "configuration": {
          "description": "List of the field names and values to set.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "configuration"
        }
      }
    },
    "Fields1": {
      "id": "Fields1",
      "required": [],
      "properties": {
        "item": {
          "description": "List of device sensors and their most recently reported values.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "SearchDeviceByPropertyFields"
        }
      }
    },
    "Fields2": {
      "id": "Fields2",
      "description": "List of fields affected by the event.",
      "required": [],
      "properties": {
        "temperature": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "BullseyeServiceResult": {
      "id": "BullseyeServiceResult",
      "description": "Status of Hyper Precise Location on the device.",
      "required": [],
      "properties": {
        "accountNumber": {
          "description": "The account the device belongs to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "List of devices.",
          "items": {
            "$ref": "DeviceServiceInformation"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "responseType": {
          "description": "ResponseCode and/or a message indicating success or failure of the request.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ApiResponseCode"
        }
      }
    },
    "DeviceServiceInformation": {
      "id": "DeviceServiceInformation",
      "description": "Device service information.",
      "required": [
        "imei",
        "BullseyeEnable"
      ],
      "properties": {
        "responseType": {
          "description": "ResponseCode and/or a message indicating success or failure of the request.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ApiResponseCode"
        },
        "imei": {
          "description": "The International Mobile Equipment Identifier of the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "BullseyeEnable": {
          "description": "Shows if Hyper Precise is enabled (true) or disabled (false).",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "BullseyeServiceRequest": {
      "id": "BullseyeServiceRequest",
      "description": "Account number and list of devices.",
      "required": [
        "deviceList",
        "accountNumber"
      ],
      "properties": {
        "deviceList": {
          "description": "A list of devices.",
          "items": {
            "$ref": "DeviceServiceRequest"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountNumber": {
          "description": "A unique identifier for an account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceServiceRequest": {
      "id": "DeviceServiceRequest",
      "description": "Device information.",
      "required": [
        "imei",
        "BullseyeEnable"
      ],
      "properties": {
        "imei": {
          "description": "International Mobile Equipment Identifier. The unique ID of a device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "BullseyeEnable": {
          "description": "Set to Enable (true) or Disable (false).",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "HyperPreciseLocationResult": {
      "id": "HyperPreciseLocationResult",
      "description": "Error response.",
      "required": [],
      "properties": {
        "responseCode": {
          "description": "Error Code.",
          "defaultValue": "",
          "enum": [
            "INVALID_ACCESS",
            "INVALID_PARAMETER",
            "INTERNAL_ERROR",
            "SUCCESS"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fault": {
          "description": "Fault occurred while responding.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "HyperPreciseLocationFault"
        },
        "example": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "HyperPreciseLocationFault": {
      "id": "HyperPreciseLocationFault",
      "description": "Fault occurred while responding.",
      "required": [],
      "properties": {
        "code": {
          "description": "Hyper precise location fault code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Hyper precise location fault message.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "Hyper precise location fault description.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ApiResponseCode": {
      "id": "ApiResponseCode",
      "description": "ResponseCode and/or a message indicating success or failure of the request.",
      "required": [
        "responseCode",
        "message"
      ],
      "properties": {
        "responseCode": {
          "description": "Possible response codes.",
          "defaultValue": "",
          "enum": [
            "INVALID_ACCESS",
            "INVALID_PARAMETER",
            "INTERNAL_ERROR",
            "SUCCESS"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "More details about the responseCode received.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AggregateSessionReportRequest": {
      "id": "AggregateSessionReportRequest",
      "description": "Request for getting an aggregated session report.",
      "required": [
        "accountNumber",
        "imei"
      ],
      "properties": {
        "accountNumber": {
          "description": "The unique identifier for the account.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endDate": {
          "description": "End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "imei": {
          "description": "Devices for which return usage info. Could be 0, 1 or more. In case of 0 will return all devices belonging to customer (except of filtered by other parameters).",
          "items": {
            "type": "string"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "deviceGroup": {
          "description": "User defined group name the devices are a member of.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceLabel": {
          "description": "Optional filter parameter.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "dataPlan": {
          "description": "The data plan the devices beign queried belong to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "noSessionFlag": {
          "description": "Optional filter parameter which return only devices with no sessions.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AggregateUsageError": {
      "id": "AggregateUsageError",
      "description": "Error reported by a device.",
      "required": [],
      "properties": {
        "imei": {
          "description": "International Mobile Equipment Identifier. This is the ID of the device reporting errors.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "A general error message.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorResponse": {
          "description": "Error message.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "IErrorMessage"
        }
      }
    },
    "AggregateUsageItem": {
      "id": "AggregateUsageItem",
      "description": "Contains usage information per device.",
      "required": [],
      "properties": {
        "imei": {
          "description": "International Mobile Equipment Identifier. This is the ID of the device reporting usage.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "numberOfSessions": {
          "description": "Number of sessions established by the device reporting usage.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "bytesTransferred": {
          "description": "The amount of data transferred by the device reporting usage, measured in Bytes.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "example": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "IErrorMessage": {
      "id": "IErrorMessage",
      "description": "Error message.",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "Error Code.",
          "defaultValue": "",
          "enum": [
            "INVALID_ACCESS",
            "INVALID_PARAMETER",
            "INTERNAL_ERROR",
            "SUCCESS"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "Details and additional information about the error code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "httpStatusCode": {
          "description": "HTML error code and description.",
          "defaultValue": "",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "detailErrorMessage": {
          "description": "More detail and information about the HTML error code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AggregateSessionReport": {
      "id": "AggregateSessionReport",
      "description": "Session and usage details for up to 10 devices.",
      "required": [
        "txid"
      ],
      "properties": {
        "txid": {
          "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "usage": {
          "description": "Contains usage per device.",
          "items": {
            "$ref": "AggregateUsageItem"
          },
          "defaultValue": "",
          "uniqueItems": true,
          "type": "array"
        },
        "errors": {
          "description": "An object containing any errors reported by the device.",
          "items": {
            "$ref": "AggregateUsageError"
          },
          "defaultValue": "",
          "uniqueItems": true,
          "type": "array"
        }
      }
    },
    "AggregatedReportCallbackResult": {
      "id": "AggregatedReportCallbackResult",
      "description": "Aggregated usage report (Asynchronous).",
      "required": [
        "txid"
      ],
      "properties": {
        "txid": {
          "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all other requests are QUEUED.",
          "defaultValue": "",
          "enum": [
            "QUEUED",
            "COMPLETED"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SessionReportRequest": {
      "id": "SessionReportRequest",
      "description": "Request for obtaining a session report.",
      "required": [
        "accountNumber",
        "imei"
      ],
      "properties": {
        "accountNumber": {
          "description": "Account Number.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "imei": {
          "description": "Device ids.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "startDate": {
          "description": "Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endDate": {
          "description": "End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "durationLow": {
          "description": "The Low value of session duration.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "durationHigh": {
          "description": "The High value of session duration.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DailyUsageItem": {
      "id": "DailyUsageItem",
      "description": "Contains only dates when device had sessions.",
      "required": [],
      "properties": {
        "startTime": {
          "description": "Start date of session. ISO 8601 format.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endTime": {
          "description": "End date of session. ISO 8601 format.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "numBytes": {
          "description": "Amount of data transferred, measured in Bytes.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SessionReport": {
      "id": "SessionReport",
      "description": "Session report for a device.",
      "required": [
        "id",
        "txid"
      ],
      "properties": {
        "sessions": {
          "description": "An object containing the start and end time of the session with the amount of data transferred.",
          "items": {
            "$ref": "DailyUsageItem"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "id": {
          "description": "The 10-digit ID of the device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "txid": {
          "description": "A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "example": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "CallbackCreated": {
      "id": "CallbackCreated",
      "required": [
        "aname",
        "name"
      ],
      "properties": {
        "aname": {
          "description": "The billing account number for which callback messages will be sent.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "url": {
          "description": "The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CallbackRegistered": {
      "id": "CallbackRegistered",
      "description": "Registered callback listener.",
      "required": [
        "accountName",
        "name"
      ],
      "properties": {
        "accountName": {
          "description": "The billing account number for which callback messages will be sent.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "HyperPreciseLocationCallback": {
      "id": "HyperPreciseLocationCallback",
      "description": "Callback registration request.",
      "required": [
        "name",
        "url"
      ],
      "properties": {
        "name": {
          "description": "The name of the callback service that you want to subscribe to.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "url": {
          "description": "The address on your server where you have enabled a listening service for the specific type of callback messages. Specify a URL that is reachable from the Verizon data centers. If your service is running on HTTPS, you should use a one-way authentication certificate with a white-listed IP address.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TriggerType1": {
      "id": "TriggerType1",
      "description": "Trigger details.",
      "required": [],
      "properties": {
        "name": {
          "description": "Trigger name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "anomalyTriggerRequest": {
          "description": "The details of the UsageAnomaly trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AnomalyTriggerRequest"
        },
        "notification": {
          "description": "The notification details of the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Notification"
        }
      }
    },
    "TriggerType2": {
      "id": "TriggerType2",
      "description": "Trigger details.",
      "required": [],
      "properties": {
        "anomalyattributes": {
          "description": "The details of the UsageAnomaly trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "UsageAnomalyAttributes"
        },
        "notification": {
          "description": "The notification details of the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Notification"
        }
      }
    },
    "TriggerType3": {
      "id": "TriggerType3",
      "description": "Trigger details.",
      "required": [],
      "properties": {
        "triggerId": {
          "description": "Trigger ID.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "Trigger name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "anomalyTriggerRequest": {
          "description": "The details of the UsageAnomaly trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AnomalyTriggerRequest"
        },
        "notification": {
          "description": "The notification details of the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Notification"
        }
      }
    },
    "AnomalyTriggerRequest": {
      "id": "AnomalyTriggerRequest",
      "description": "The details of the UsageAnomaly trigger.",
      "required": [],
      "properties": {
        "accountNames": {
          "description": "The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "includeAbnormal": {
          "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeVeryAbnormal": {
          "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeUnderExpectedUsage": {
          "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeOverExpectedUsage": {
          "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "UsageAnomalyAttributes": {
      "id": "UsageAnomalyAttributes",
      "description": "The details of the UsageAnomaly trigger.",
      "required": [],
      "properties": {
        "accountNames": {
          "description": "The Verizon billing account associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceGroup": {
          "description": "The names of device groups associated with the anomaly triggers for this trigger to be active for devices in those groups.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "includeAbnormal": {
          "description": "Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeVeryAbnormal": {
          "description": "Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeUnderExpectedUsage": {
          "description": "Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeOverExpectedUsage": {
          "description": "Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "SMSNumber": {
      "id": "SMSNumber",
      "description": "Notification SMS details.",
      "required": [],
      "properties": {
        "carrier": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "number": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Notification": {
      "id": "Notification",
      "description": "The notification details of the trigger.",
      "required": [],
      "properties": {
        "notificationType": {
          "description": "The type of notification, i.e. 'DailySummary'.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "callback": {
          "description": "Whether or not the notification should be sent via callback.<br />true<br />false.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "emailNotification": {
          "description": "Whether or not the notification should be sent via e-mail.<br />true<br />false.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "notificationGroupName": {
          "description": "Name for the notification group.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "notificationFrequencyFactor": {
          "description": "Frequency factor for notification.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "notificationFrequencyInterval": {
          "description": "Frequency interval for notification.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "externalEmailRecipients": {
          "description": "E-mail address(es) where the notification should be delivered.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsNotification": {
          "description": "SMS notification.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsNumbers": {
          "description": "List of SMS numbers.",
          "items": {
            "$ref": "SMSNumber"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "reminder": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "severity": {
          "description": "Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "UpdateTriggerRequest": {
      "id": "UpdateTriggerRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "active": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "anomalyTriggerRequest": {
          "description": "The details of the UsageAnomaly trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AnomalyTriggerRequest"
        },
        "cycleType": {
          "description": "",
          "defaultValue": "",
          "enum": [
            "cycleone",
            "cycletwo"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "dataTriggerRequest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DataTriggerRequest"
        },
        "groupName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "promoAlertTriggerRequest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "PromoAlertTriggerRequest"
        },
        "sessionTriggerRequest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "SessionTriggerRequest"
        },
        "smsTriggerRequest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "SMSTriggerRequest"
        },
        "triggerCategory": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PromoAlertTriggerRequest": {
      "id": "PromoAlertTriggerRequest",
      "required": [],
      "properties": {
        "dataPercentage50": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dataPercentage75": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dataPercentage90": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "noOfDaysB4PromoExp": {
          "description": "",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "180",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "smsPercentage50": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsPercentage75": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsPercentage90": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "CreateTriggerRequest": {
      "id": "CreateTriggerRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "anomalyTriggerRequest": {
          "description": "The details of the UsageAnomaly trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AnomalyTriggerRequest"
        },
        "dataTriggerRequest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DataTriggerRequest"
        },
        "groupName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sessionTriggerRequest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "SessionTriggerRequest"
        },
        "smsTriggerRequest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "SMSTriggerRequest"
        },
        "triggerCategory": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCycle": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DataTriggerRequest": {
      "id": "DataTriggerRequest",
      "required": [],
      "properties": {
        "comparator": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "threshold": {
          "description": "",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "thresholdUnit": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SessionTriggerRequest": {
      "id": "SessionTriggerRequest",
      "required": [],
      "properties": {
        "comparator": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "threshold": {
          "description": "",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SMSTriggerRequest": {
      "id": "SMSTriggerRequest",
      "required": [],
      "properties": {
        "comparator": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "threshold": {
          "description": "",
          "defaultValue": "",
          "minimum": "0",
          "maximum": "100",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateTriggerRequestOptions": {
      "id": "CreateTriggerRequestOptions",
      "required": [],
      "properties": {
        "name": {
          "description": "Trigger name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "anomalyTriggerRequest": {
          "description": "The details of the UsageAnomaly trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AnomalyTriggerRequest"
        },
        "notification": {
          "description": "The notification details of the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Notification"
        },
        "active": {
          "description": "Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "UpdateTriggerRequestOptions": {
      "id": "UpdateTriggerRequestOptions",
      "required": [],
      "properties": {
        "triggerId": {
          "description": "Trigger ID.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "Trigger name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "anomalyTriggerRequest": {
          "description": "The details of the UsageAnomaly trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "AnomalyTriggerRequest"
        },
        "notification": {
          "description": "The notification details of the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Notification"
        },
        "active": {
          "description": "Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "GetTriggerResponse": {
      "id": "GetTriggerResponse",
      "required": [],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "comparator": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "groupName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "modifiedAt": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "notificationGroupName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "organizationName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "threshold": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "thresholdUnit": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCycle": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "GetTriggerResponseList": {
      "id": "GetTriggerResponseList",
      "required": [],
      "properties": {
        "triggers": {
          "description": "",
          "items": {
            "$ref": "GetTriggerResponse"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ActiveAnomalyIndicator": {
      "id": "ActiveAnomalyIndicator",
      "description": "Whether the anomaly detection is active or not.",
      "required": [],
      "properties": {
        "active": {
          "description": "Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "ActiveTriggerIndicator": {
      "id": "ActiveTriggerIndicator",
      "description": "Whether the trigger is active or not.",
      "required": [],
      "properties": {
        "active": {
          "description": "Indicates if the trigger is active<br />True - trigger is active<br />False - trigger is not active.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "AnomalyTriggerResult": {
      "id": "AnomalyTriggerResult",
      "description": "A result containing a list of anomaly triggers.",
      "required": [],
      "properties": {
        "triggers": {
          "description": "Trigger value chunk details.",
          "items": {
            "$ref": "TriggersListOptions"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "TriggersListOptions": {
      "id": "TriggersListOptions",
      "required": [],
      "properties": {
        "triggerId": {
          "description": "The system assigned name of the trigger being updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "The user defined name of the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "organizationName": {
          "description": "The user assigned name of the organization associated with the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerAttributes": {
          "description": "Additional details and keys for the trigger.",
          "items": {
            "$ref": "TriggerAttributesOptions"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "createdAt": {
          "description": "Timestamp for whe the trigger was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "modifiedAt": {
          "description": "Timestamp for the most recent time the trigger was modified.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "anomalyattributes": {
          "description": "The details of the UsageAnomaly trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "UsageAnomalyAttributes"
        },
        "notification": {
          "description": "The notification details of the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Notification"
        }
      }
    },
    "AnomalyTriggerValue": {
      "id": "AnomalyTriggerValue",
      "description": "Trigger details.",
      "required": [],
      "properties": {
        "triggerId": {
          "description": "The system assigned name of the trigger being updated.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "The user defined name of the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "organizationName": {
          "description": "The user assigned name of the organization associated with the trigger.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerAttributes": {
          "description": "Additional details and keys for the trigger.",
          "items": {
            "$ref": "TriggerAttributesOptions"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "createdAt": {
          "description": "Timestamp for whe the trigger was created.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "modifiedAt": {
          "description": "Timestamp for the most recent time the trigger was modified.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "TriggerAttributesOptions": {
      "id": "TriggerAttributesOptions",
      "required": [],
      "properties": {
        "key": {
          "description": "If present, the NotificationGroupName will be listed here.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "NotificationGroupNameTriggerAttribute": {
      "id": "NotificationGroupNameTriggerAttribute",
      "description": "Notification group name trigger attribute.",
      "required": [],
      "properties": {
        "key": {
          "description": "If present, the NotificationGroupName will be listed here.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ServicePlanTriggerAttribute": {
      "id": "ServicePlanTriggerAttribute",
      "description": "Key service plan trigger attribute.",
      "required": [],
      "properties": {
        "key": {
          "description": "The ServicePlan name will be listed here.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DataPercentage50TriggerAttribute": {
      "id": "DataPercentage50TriggerAttribute",
      "description": "Trigger attribute for when data percentage is over 50% used.",
      "required": [],
      "properties": {
        "key": {
          "description": "Key data percentage 50.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "DataPercentage75TriggerAttribute": {
      "id": "DataPercentage75TriggerAttribute",
      "description": "Trigger attribute for when data percentage is over 75% used.",
      "required": [],
      "properties": {
        "key": {
          "description": "Key data percentage 75.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "DataPercentage75<br />True - Trigger on Data percentage is over 75% used<br />False - Do not trigger when over 75% used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "DataPercentage90TriggerAttribute": {
      "id": "DataPercentage90TriggerAttribute",
      "description": "Trigger attribute for when data percentage is over 90% used.",
      "required": [],
      "properties": {
        "key": {
          "description": "Key data percentage 90.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "DataPercentage90<br />True - Trigger on Data percentage is over 90% used<br />False - Do not trigger when over 90% used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "DataPercentage100TriggerAttribute": {
      "id": "DataPercentage100TriggerAttribute",
      "description": "Trigger attribute for when data percentage is over 100% used.",
      "required": [],
      "properties": {
        "key": {
          "description": "Key data percentage 100.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "DataPercentage100<br />True - Trigger on Data percentage is over 100% used<br />False - Do not trigger when over 100% used.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "AnomalyDetectionSettings": {
      "id": "AnomalyDetectionSettings",
      "description": "Settings for anomaly detection.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "Indicates if the account name used has anomaly detection.<br />Success - The account has anomaly detection.<br />Failure - The account does not have anomaly detection.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sensitivityParameter": {
          "description": "Details for sensitivity parameters.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "SensitivityParameters"
        },
        "status": {
          "description": "Indicates if anomaly detection is active on the account<br />Active - Anomaly detection is active<br />Disabled- Anomaly detection is not active.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AnomalyDetectionRequest": {
      "id": "AnomalyDetectionRequest",
      "description": "Anomaly detection request.",
      "required": [],
      "properties": {
        "accountName": {
          "description": "The name of a billing account. An account name is usually numeric, and must include any leading zeros.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "requestType": {
          "description": "The type of request being made. anomaly is the request to activate anomaly detection.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sensitivityParameter": {
          "description": "Details for sensitivity parameters.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "SensitivityParameters"
        }
      }
    },
    "SensitivityParameters": {
      "id": "SensitivityParameters",
      "description": "Details for sensitivity parameters.",
      "required": [],
      "properties": {
        "abnormalMaxValue": {
          "description": "The maximum value of the threshold in the units being measured.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "enableAbnormal": {
          "description": "If abnormal values are being monitored.<br />true - Monitor for abnormal values<br />false - Do not monitor for abnormal values.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "enableVeryAbnormal": {
          "description": "If very abnormal values are being monitored.<br />true - Monitor for very abnormal values<br />false - Do not monitor for very abnormal values.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "veryAbnormalMaxValue": {
          "description": "The maximum value of the threshold in the units being measured.",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "IntelligenceSuccessResult": {
      "id": "IntelligenceSuccessResult",
      "description": "Success response.",
      "required": [],
      "properties": {
        "status": {
          "description": "Anomaly detection status.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AnomalyDetectionTrigger": {
      "id": "AnomalyDetectionTrigger",
      "description": "Trigger for anomaly detection.",
      "required": [],
      "properties": {
        "triggerId": {
          "description": "Trigger ID to identify the request in a callback.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "IntelligenceResult": {
      "id": "IntelligenceResult",
      "description": "An error occurred.",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "The 3-digit HTML error code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "Error Message.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "GetDeviceExperienceScoreHistoryRequest": {
      "id": "GetDeviceExperienceScoreHistoryRequest",
      "description": "Get device experience score history.",
      "required": [
        "accountName",
        "deviceId"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceId": {
          "description": "Device Id details.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "DeviceIdentifier"
        }
      }
    },
    "GetDeviceExperienceScoreBulkRequest": {
      "id": "GetDeviceExperienceScoreBulkRequest",
      "description": "Get device experience score bulk request.",
      "required": [
        "accountName",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "DeviceIdentifier"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "GetNetworkConditionsRequest": {
      "id": "GetNetworkConditionsRequest",
      "description": "Get network conditions.",
      "required": [
        "accountName",
        "locationType",
        "coordinates"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locationType": {
          "description": "Type of location detail.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "coordinates": {
          "description": "Coordinates information.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Coordinates"
        }
      }
    },
    "GetWirelessCoverageRequest": {
      "id": "GetWirelessCoverageRequest",
      "description": "Get wireless coverage.",
      "required": [
        "accountName",
        "requestType",
        "locationType",
        "locations",
        "networkTypesList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "requestType": {
          "description": "Type of request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locationType": {
          "description": "Type of location detail.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locations": {
          "description": "Location coordinates.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Locationscoord"
        },
        "networkTypesList": {
          "description": "",
          "items": {
            "$ref": "NetworkType"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "GetWirelessCoverageRequestFWA": {
      "id": "GetWirelessCoverageRequestFWA",
      "description": "Get wireless coverage FWA.",
      "required": [
        "accountName",
        "requestType",
        "locationType",
        "locations",
        "networkTypesList"
      ],
      "properties": {
        "accountName": {
          "description": "Account name.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "requestType": {
          "description": "Type of request.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locationType": {
          "description": "Type of location detail.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locations": {
          "description": "Location details.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Locations"
        },
        "networkTypesList": {
          "description": "",
          "items": {
            "$ref": "NetworkType"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Locationscoord": {
      "id": "Locationscoord",
      "description": "Location coordinates.",
      "required": [
        "coordinatesList"
      ],
      "properties": {
        "coordinatesList": {
          "description": "",
          "items": {
            "$ref": "Coordinates"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Locations": {
      "id": "Locations",
      "description": "Location details.",
      "required": [],
      "properties": {
        "addressList": {
          "description": "",
          "items": {
            "$ref": "AddressItem"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "NetworkType": {
      "id": "NetworkType",
      "description": "Network type.",
      "required": [],
      "properties": {
        "networkType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Coordinates": {
      "id": "Coordinates",
      "description": "Coordinates information.",
      "required": [],
      "properties": {
        "latitude": {
          "description": "Latitude value of location.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "longitude": {
          "description": "Longitude value of location.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AddressItem": {
      "id": "AddressItem",
      "description": "Address details.",
      "required": [],
      "properties": {
        "addressLine1": {
          "description": "Street Address.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "addressLine2": {
          "description": "Optional address information.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "Name of the city.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "State code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "country": {
          "description": "Country.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "Five digit zipcode.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip4": {
          "description": "Four digit zip code.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceIdentifier": {
      "id": "DeviceIdentifier",
      "description": "Device Id details.",
      "required": [
        "kind",
        "id"
      ],
      "properties": {
        "kind": {
          "description": "Kind of device.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "Device Identity number.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdn": {
          "description": "Device MDN number.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "WNPRequestResponse": {
      "id": "WNPRequestResponse",
      "description": "Wireless network performance request response.",
      "required": [],
      "properties": {
        "requestId": {
          "description": "Request id.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "WNPRestErrorResponse": {
      "id": "WNPRestErrorResponse",
      "description": "Wireless network performance rest error response.",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "Rest error response.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message details.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "StatusResponse": {
      "id": "StatusResponse",
      "required": [],
      "properties": {
        "requestId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "subrequests": {
          "description": "",
          "items": {
            "$ref": "Subrequest"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Subrequest": {
      "id": "Subrequest",
      "required": [],
      "properties": {
        "ids": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "GIODeviceId"
        },
        "status": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ProvhistoryRequest": {
      "id": "ProvhistoryRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceFilter": {
          "description": "",
          "items": {
            "$ref": "GIODeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "earliest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "latest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetDeviceListWithProfilesRequest": {
      "id": "GetDeviceListWithProfilesRequest",
      "required": [
        "accountName"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "provisioningStatusFilter": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "profileStatusFilter": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierNameFilter": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceFilter": {
          "description": "",
          "items": {
            "$ref": "GIODeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "SMSEventHistoryRequest": {
      "id": "SMSEventHistoryRequest",
      "required": [
        "deviceId"
      ],
      "properties": {
        "deviceId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "GIODeviceId"
        },
        "earliest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "latest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SmsMessagesResponse": {
      "id": "SmsMessagesResponse",
      "required": [],
      "properties": {
        "messages": {
          "description": "",
          "items": {
            "$ref": "GIOSmsMessage"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "hasMoreData": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "GIOSmsMessage": {
      "id": "GIOSmsMessage",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "GIODeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "message": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timestamp": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GIOSMSSendRequest": {
      "id": "GIOSMSSendRequest",
      "required": [
        "deviceIds",
        "smsMessage"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "customFields": {
          "description": "",
          "items": {
            "$ref": "KvPair"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "dataEncoding": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timeToLive": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "GIODeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "smsMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "KvPair": {
      "id": "KvPair",
      "required": [],
      "properties": {
        "key": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SMSOptionsSendRequest": {
      "id": "SMSOptionsSendRequest",
      "required": [],
      "properties": {
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "GIOProfileRequest": {
      "id": "GIOProfileRequest",
      "required": [
        "devices",
        "accountName"
      ],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "GIODeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdnZipCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "GIODeactivateDeviceProfileRequest": {
      "id": "GIODeactivateDeviceProfileRequest",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "GIODeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "etfWaiver": {
          "description": "",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        },
        "reasonCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceProfileRequest": {
      "id": "DeviceProfileRequest",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "GIODeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "GIODeviceId": {
      "id": "GIODeviceId",
      "required": [],
      "properties": {
        "kind": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "GIODeviceList": {
      "id": "GIODeviceList",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "GIODeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "GIORequestResponse": {
      "id": "GIORequestResponse",
      "required": [],
      "properties": {
        "requestId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SuccessResponse": {
      "id": "SuccessResponse",
      "required": [],
      "properties": {
        "success": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "GIORestErrorResponse": {
      "id": "GIORestErrorResponse",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "subscribeRequest": {
      "id": "subscribeRequest",
      "required": [
        "accountName",
        "deviceInfo"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceInfo": {
          "description": "",
          "items": {
            "$ref": "QOSdeviceInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "QOSdeviceId": {
      "id": "QOSdeviceId",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DefaultResponse": {
      "id": "DefaultResponse",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "201success": {
      "id": "201success",
      "required": [],
      "properties": {
        "requestId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FlowInfo": {
      "id": "FlowInfo",
      "required": [],
      "properties": {
        "flowServer": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "flowDevice": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "flowDirection": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "flowProtocol": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "qciOption": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "QOSdeviceInfo": {
      "id": "QOSdeviceInfo",
      "required": [
        "deviceId",
        "flowInfo"
      ],
      "properties": {
        "deviceId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "QOSdeviceId"
        },
        "deviceIPv6Addr": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "flowInfo": {
          "description": "",
          "items": {
            "$ref": "FlowInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ChangePmecDeviceStateActivateRequest": {
      "id": "ChangePmecDeviceStateActivateRequest",
      "required": [
        "accountName",
        "deviceList",
        "activate"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "MECDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "activate": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Activate"
        }
      }
    },
    "MECDeviceList": {
      "id": "MECDeviceList",
      "required": [
        "deviceIds"
      ],
      "properties": {
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "MECDeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "MECDeviceId": {
      "id": "MECDeviceId",
      "required": [
        "id",
        "kind"
      ],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Activate": {
      "id": "Activate",
      "required": [
        "profile"
      ],
      "properties": {
        "profile": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangePmecDeviceStateBulkActivateRequest": {
      "id": "ChangePmecDeviceStateBulkActivateRequest",
      "required": [
        "accountName",
        "deviceList",
        "activate"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "DeviceList1"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "activate": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Activate"
        }
      }
    },
    "DeviceList1": {
      "id": "DeviceList1",
      "required": [
        "deviceIds",
        "ipAddress",
        "apn"
      ],
      "properties": {
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "MECDeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "ipAddress": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "apn": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangePmecDeviceStateBulkDeactivateRequest": {
      "id": "ChangePmecDeviceStateBulkDeactivateRequest",
      "required": [
        "accountName",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "MECDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ChangePmecDeviceStateDeactivateRequest": {
      "id": "ChangePmecDeviceStateDeactivateRequest",
      "required": [
        "accountName",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "MECDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ChangePmecDeviceProfileRequest": {
      "id": "ChangePmecDeviceProfileRequest",
      "required": [
        "accountName",
        "deviceList",
        "newProfile"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "MECDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "newProfile": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangePmecDeviceProfileBulkRequest": {
      "id": "ChangePmecDeviceProfileBulkRequest",
      "required": [
        "accountName",
        "deviceList",
        "newProfile"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "MECDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "newProfile": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangePmecDeviceIPaddressBulkRequest": {
      "id": "ChangePmecDeviceIPaddressBulkRequest",
      "required": [
        "accountName",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "MECDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ChangePmecDeviceIPaddressRequest": {
      "id": "ChangePmecDeviceIPaddressRequest",
      "required": [
        "accountName",
        "deviceList"
      ],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceList": {
          "description": "",
          "items": {
            "$ref": "DeviceList7"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceList7": {
      "id": "DeviceList7",
      "required": [
        "deviceIds",
        "ipAddress"
      ],
      "properties": {
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "MECDeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "ipAddress": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangeMecDeviceStateResponse": {
      "id": "ChangeMecDeviceStateResponse",
      "description": "Response to change mec device state",
      "required": [],
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback service.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangeMecDeviceProfileResponse": {
      "id": "ChangeMecDeviceProfileResponse",
      "description": "Response to change mec device profile",
      "required": [],
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback service.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ChangeMecDeviceIPAddressResponse": {
      "id": "ChangeMecDeviceIPAddressResponse",
      "description": "Response to change mec device ip address.",
      "required": [],
      "properties": {
        "requestId": {
          "description": "A unique string that associates the request with the results that are sent via a callback service.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "GetMECPerformanceConsentResponse": {
      "id": "GetMECPerformanceConsentResponse",
      "description": "MEC Performance Consent Response",
      "required": [],
      "properties": {
        "consent": {
          "description": "MEC Performance Consent Response.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "KPIInfo": {
      "id": "KPIInfo",
      "description": "KPI Info Object",
      "required": [],
      "properties": {
        "name": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "nodeName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "nodeType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "unit": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "category": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timeOfLastUpdate": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "KPIInfoList": {
      "id": "KPIInfoList",
      "required": [],
      "properties": {
        "KpiInfoList": {
          "description": "",
          "items": {
            "$ref": "KPIInfo"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "MECProfileList": {
      "id": "MECProfileList",
      "required": [],
      "properties": {
        "profiles": {
          "description": "",
          "items": {
            "$ref": "MECProfile"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "MECProfile": {
      "id": "MECProfile",
      "required": [],
      "properties": {
        "profileId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "profileName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ResponsetoUsageQuery": {
      "id": "ResponsetoUsageQuery",
      "required": [],
      "properties": {
        "hasmoredata": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "deviceId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "ReadySimDeviceId"
        },
        "usageHistory": {
          "description": "",
          "items": {
            "$ref": "usagehistory"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "RequestBodyforUsage": {
      "id": "RequestBodyforUsage",
      "required": [],
      "properties": {
        "accountId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceId": {
          "description": "",
          "items": {
            "$ref": "ReadySimDeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "startTime": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RequestBodyforUsage1": {
      "id": "RequestBodyforUsage1",
      "required": [],
      "properties": {
        "deviceId": {
          "description": "",
          "items": {
            "$ref": "ReadySimDeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "startTime": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReadySimDeviceId": {
      "id": "ReadySimDeviceId",
      "required": [],
      "properties": {
        "kind": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "id": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "usagehistory": {
      "id": "usagehistory",
      "required": [],
      "properties": {
        "bytesUsed": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "serviceplan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "smsUsed": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "moSMS": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "mtSMS": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "eventDateTime": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TriggerValueResponse": {
      "id": "TriggerValueResponse",
      "required": [],
      "properties": {
        "triggers": {
          "description": "",
          "items": {
            "$ref": "Triggervalues"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Triggervalues": {
      "id": "Triggervalues",
      "required": [],
      "properties": {
        "triggerId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "organizationName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerAttributes": {
          "description": "",
          "items": {
            "$ref": "keyDataPercentage50"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "createdAt": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TriggerValueResponse2": {
      "id": "TriggerValueResponse2",
      "required": [],
      "properties": {
        "triggers": {
          "description": "",
          "items": {
            "$ref": "Triggervalues2"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Triggervalues2": {
      "id": "Triggervalues2",
      "required": [],
      "properties": {
        "triggerId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "organizationName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "promoAlerts": {
          "description": "",
          "items": {
            "$ref": "PromoAlert"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "active": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "modifiedAt": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "requestTrigger": {
      "id": "requestTrigger",
      "required": [],
      "properties": {
        "triggerId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "organizationName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "triggerCategory": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "promoAlerts": {
          "description": "",
          "items": {
            "$ref": "PromoAlert1"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "condition": {
      "id": "condition",
      "required": [],
      "properties": {
        "condition": {
          "description": "",
          "items": {
            "$ref": "keyschunk2"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "keyschunk2": {
      "id": "keyschunk2",
      "required": [],
      "properties": {
        "dataPercentage50": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dataPercentage75": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dataPercentage90": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "dataPercentage100": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsPercentage50": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsPercentage75": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsPercentage90": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "smsPercentage100": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "NoOfDaysB4PromoExp": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "enablePromoExp": {
      "id": "enablePromoExp",
      "required": [],
      "properties": {
        "enablePromoExp": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "filtercriteria": {
      "id": "filtercriteria",
      "required": [],
      "properties": {
        "filterCriteria": {
          "description": "",
          "items": {
            "$ref": "ReadySimServicePlan"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "filtercriteria2": {
      "id": "filtercriteria2",
      "required": [],
      "properties": {
        "filterCriteria": {
          "description": "",
          "items": {
            "type": "object"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "ReadySimServicePlan": {
      "id": "ReadySimServicePlan",
      "required": [],
      "properties": {
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "keyServicePlan": {
      "id": "keyServicePlan",
      "required": [],
      "properties": {
        "key": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "keyDataPercentage50": {
      "id": "keyDataPercentage50",
      "required": [],
      "properties": {
        "key": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "keysmsPercentage50": {
      "id": "keysmsPercentage50",
      "required": [],
      "properties": {
        "key": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "NoOfDaysB4PromoExp": {
      "id": "NoOfDaysB4PromoExp",
      "required": [],
      "properties": {
        "key": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "defaultValue": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EnablePromoExp1": {
      "id": "EnablePromoExp1",
      "required": [],
      "properties": {
        "key": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "usageRequestResponse": {
      "id": "usageRequestResponse",
      "required": [],
      "properties": {
        "requestId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "success": {
      "id": "success",
      "required": [],
      "properties": {
        "status": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ReadySimRestErrorResponse": {
      "id": "ReadySimRestErrorResponse",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "PromoAlert": {
      "id": "PromoAlert",
      "required": [],
      "properties": {
        "filterCriteria": {
          "description": "",
          "items": {
            "$ref": "ReadySimServicePlan"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "condition": {
          "description": "",
          "items": {
            "$ref": "keyschunk2"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "enablePromoExp": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "PromoAlert1": {
      "id": "PromoAlert1",
      "required": [],
      "properties": {
        "filterCriteria": {
          "description": "",
          "items": {
            "type": "object"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "condition": {
          "description": "",
          "items": {
            "$ref": "keyschunk2"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "enablePromoExp": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "status": {
      "id": "status",
      "required": [],
      "properties": {
        "status": {
          "description": "",
          "defaultValue": "",
          "enum": [
            "success",
            "failed"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "eSIMDeviceId": {
      "id": "eSIMDeviceId",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "DeviceId2": {
      "id": "DeviceId2",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "eSIMDeviceList": {
      "id": "eSIMDeviceList",
      "required": [],
      "properties": {
        "deviceIds": {
          "description": "",
          "items": {
            "$ref": "eSIMDeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "DeviceList2": {
      "id": "DeviceList2",
      "required": [],
      "properties": {
        "ids": {
          "description": "",
          "items": {
            "$ref": "eSIMDeviceId"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "eSIMProfileRequest": {
      "id": "eSIMProfileRequest",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "eSIMDeviceList"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "carrierName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "servicePlan": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mdnZipCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ProfileRequest2": {
      "id": "ProfileRequest2",
      "required": [],
      "properties": {
        "devices": {
          "description": "",
          "items": {
            "$ref": "DeviceList2"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "carrierName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "reasonCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "etfWaiver": {
          "description": "",
          "defaultValue": "true",
          "uniqueItems": false,
          "type": "boolean"
        },
        "checkFallbackProfile": {
          "description": "",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "eSIMRequestResponse": {
      "id": "eSIMRequestResponse",
      "required": [],
      "properties": {
        "requestId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "eSIMRestErrorResponse": {
      "id": "eSIMRestErrorResponse",
      "required": [],
      "properties": {
        "errorCode": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "errorMessage": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "eSIMProvhistoryRequest": {
      "id": "eSIMProvhistoryRequest",
      "required": [],
      "properties": {
        "accountName": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "deviceFilter": {
          "description": "",
          "items": {
            "$ref": "DeviceId2"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        },
        "earliest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "latest": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "eSIMStatusResponse": {
      "id": "eSIMStatusResponse",
      "required": [],
      "properties": {
        "requestId": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "subrequests": {
          "description": "",
          "items": {
            "$ref": "eSIMsubrequest"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "eSIMsubrequest": {
      "id": "eSIMsubrequest",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "kind": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "defaultValue": "",
          "enum": [
            "success",
            "failed"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "VendorRegistrationRequest": {
      "id": "VendorRegistrationRequest",
      "description": "Request for /vendors/registration endpoint. It requires the VendorID and ThingSpace Billing Account number to be defined.",
      "required": [
        "VendorID",
        "ThingSpaceBillingAccount"
      ],
      "properties": {
        "VendorID": {
          "description": "The ID the vendor wants it's devices to be registered under. E.g. Verizon, GM, Ford, etc.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "ThingSpaceBillingAccount": {
          "description": "The ThingSpace Billing Account number.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "VendorRegistrationResponse": {
      "id": "VendorRegistrationResponse",
      "description": "Response for /vendors/registration. It provides a response if the vendor wa added to the system or updated with the new data.",
      "required": [
        "ActionType"
      ],
      "properties": {
        "ActionType": {
          "description": "The type of action the vendor registration service took for the request\n\nValues:\n- **Added** - A new vendor was added to the system\n- **Updated** - The existing vendor was updated with the newly provided properties",
          "defaultValue": "",
          "enum": [
            "Added",
            "Updated"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ClientRegistrationRequest": {
      "id": "ClientRegistrationRequest",
      "description": "Request for /clients/registration endpoint. It requires the Client Type, Subtype and Vendor to be defined.",
      "required": [
        "ClientType",
        "ClientSubtype",
        "VendorID"
      ],
      "properties": {
        "ClientType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        },
        "ClientSubtype": {
          "description": "The subtype or subgroup of the client type. This further specifies the client type. For example it will specify if the client is a passenger car or a truck. See the ClientType description for the supported Subtypes for each client type.",
          "defaultValue": "",
          "enum": [
            "PassengerCar",
            "Truck",
            "Bus",
            "EmergencyVehicle",
            "SchoolBus",
            "MaintenanceVehicle",
            "Pedestrian",
            "Bicycle",
            "Scooter",
            "Motorcycle",
            "RoadSideUnit",
            "Camera",
            "Lidar",
            "Radar",
            "InductiveLoop",
            "MagneticSensor",
            "NA"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "VendorID": {
          "description": "The vendor that the client belongs to. E.g. Verizon, GM, Ford, etc.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ClientRegistrationResponse": {
      "id": "ClientRegistrationResponse",
      "description": "Response for /clients/registration. It provides a generated device ID and the certificates needed to connect the IMP Message Exchange.",
      "required": [
        "DeviceID",
        "Certificate"
      ],
      "properties": {
        "DeviceID": {
          "description": "The generated ID for the device. It has to be used as the MQTT Client ID when connecting to the Message Exchange system or when asking for the connection endpoint.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "Certificate": {
          "description": "Structure for the credentials required to connect to the IMP MQTT Message Exchange.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Certificate"
        }
      }
    },
    "ConnectionRequest": {
      "id": "ConnectionRequest",
      "description": "Request for /clients/connection. It requires the device ID acquired in the registration request call; the geolocation of the device at the time of the request; and the network type (Verizon or non-Verizon). The system uses this information to determine with MQTT endpoint the device should use to connect the IMP Message Exchange.",
      "required": [
        "DeviceID",
        "Geolocation",
        "NetworkType"
      ],
      "properties": {
        "DeviceID": {
          "description": "The device ID acquired through the registration API.",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "Geolocation": {
          "description": "Geolocation of the device at the time of the connection request in GPS coordinates.",
          "defaultValue": "",
          "uniqueItems": false,
          "$ref": "Geolocation"
        },
        "NetworkType": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "ConnectionResponse": {
      "id": "ConnectionResponse",
      "description": "response for /clients/connection",
      "required": [
        "MqttURL"
      ],
      "properties": {
        "MqttURL": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Certificate": {
      "id": "Certificate",
      "description": "Structure for the credentials required to connect to the IMP MQTT Message Exchange.",
      "required": [
        "cert.pem",
        "key.pem"
      ],
      "properties": {
        "cert.pem": {
          "description": "The string containing the certificate",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key.pem": {
          "description": "The string containing the private key",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Geolocation": {
      "id": "Geolocation",
      "description": "Geolocation of the device at the time of the connection request in GPS coordinates.",
      "required": [
        "Latitude",
        "Longitude"
      ],
      "properties": {
        "Latitude": {
          "description": "The GPS Latitude value",
          "defaultValue": "",
          "minimum": "-90",
          "maximum": "90",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "Longitude": {
          "description": "The GPS Longitude value",
          "defaultValue": "",
          "minimum": "-180",
          "maximum": "180",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "IMPResponseError": {
      "id": "IMPResponseError",
      "description": "error response structure",
      "required": [
        "error",
        "description"
      ],
      "properties": {
        "error": {
          "description": "The short summary of the error",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "The detailed description of the error",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Polygon": {
      "id": "Polygon",
      "required": [],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "coordinates": {
          "description": "",
          "items": {
            "$ref": "Coordinate"
          },
          "defaultValue": "",
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "MapDataResponseError": {
      "id": "MapDataResponseError",
      "description": "error response structure",
      "required": [
        "error",
        "description"
      ],
      "properties": {
        "error": {
          "description": "The short summary of the error",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "The detailed description of the error",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Coordinate": {
      "id": "Coordinate",
      "required": [],
      "properties": {
        "latitude": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        },
        "longitude": {
          "description": "",
          "defaultValue": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    }
  },
  "authorizations": {
    "VZM2MToken": {
      "passAs": "header",
      "keyname": "VZ-M2M-Token",
      "type": "apiKey"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}