openapi: 3.1.0
info:
  title: Verizon
  description: The Verizon Edge Discovery Service API can direct your application clients to connect to the optimal service endpoints for your Multi-access Edge Computing (MEC) applications for every session. The Edge Discovery Service takes into account the current location of a device, its IP anchor location, current network traffic and other factors to determine which 5G Edge platform a device should connect to.
  contact: {}
  version: '1.3'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://5gedge.verizon.com/api/mec/eds
  variables: {}
- url: https://imp.thingspace.verizon.com
  variables: {}
- url: https://thingspace.verizon.com/api
  variables: {}
- url: https://thingspace.verizon.com/api/ts/v1
  variables: {}
- url: https://thingspace.verizon.com/api/m2m
  variables: {}
- url: https://thingspace.verizon.com/api/loc/v1
  variables: {}
- url: https://thingspace.verizon.com/api/subsc/v1
  variables: {}
- url: https://thingspace.verizon.com/api/fota/v1
  variables: {}
- url: https://thingspace.verizon.com/api/fota/v2
  variables: {}
- url: https://thingspace.verizon.com/api/fota/v3
  variables: {}
- url: https://5gedge.verizon.com/api/mec
  variables: {}
- url: https://thingspace.verizon.com/api/diagnostics/v1
  variables: {}
- url: https://thingspace.verizon.com/api/cc/v1
  variables: {}
- url: https://thingspace.verizon.com/api/hyper-precise/v1
  variables: {}
- url: https://5gedge.verizon.com/api/mec/services
  variables: {}
- url: https://thingspace.verizon.com/api/m2m/v1/devices
  variables: {}
- url: https://staging.5gedge.verizon.com/api/mec/eds
  variables: {}
- url: https://staging.imp.thingspace.verizon.com
  variables: {}
- url: https://staging.thingspace.verizon.com/api
  variables: {}
- url: https://staging.thingspace.verizon.com/api/ts/v1
  variables: {}
- url: https://staging.thingspace.verizon.com/api/m2m
  variables: {}
- url: https://staging.thingspace.verizon.com/api/loc/v1
  variables: {}
- url: https://staging.thingspace.verizon.com/api/subsc/v1
  variables: {}
- url: https://staging.thingspace.verizon.com/api/fota/v1
  variables: {}
- url: https://staging.thingspace.verizon.com/api/fota/v2
  variables: {}
- url: https://staging.thingspace.verizon.com/api/fota/v3
  variables: {}
- url: https://staging.5gedge.verizon.com/api/mec
  variables: {}
- url: https://staging.thingspace.verizon.com/api/diagnostics/v1
  variables: {}
- url: https://staging.thingspace.verizon.com/api/cc/v1
  variables: {}
- url: https://staging.thingspace.verizon.com/api/hyper-precise/v1
  variables: {}
- url: https://staging.5gedge.verizon.com/api/mec/services
  variables: {}
- url: https://staging.thingspace.verizon.com/api/m2m/v1/devices
  variables: {}
- url: https://devmanagement-staging.5gedge.verizon.com:80/mec/eds
  variables: {}
- url: https://devmanagement-staging.imp.thingspace.verizon.com
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com/api
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/ts/v1
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/m2m
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/subsc/v1
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
  variables: {}
- url: https://devmanagement-staging.5gedge.verizon.com:80/mec
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com:80/hyper-precise/v1
  variables: {}
- url: https://devmanagement-staging.5gedge.verizon.com:80/mec/services
  variables: {}
- url: https://devmanagement-staging.thingspace.verizon.com/api/m2m/v1/devices
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.5gedge.verizon.com/api/mec/eds
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.imp.thingspace.verizon.com
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/ts/v1
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/m2m
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/subsc/v1
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.5gedge.verizon.com/api/mec
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/hyper-precise/v1
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.5gedge.verizon.com/api/mec/services
  variables: {}
- url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/m2m/v1/devices
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/mec/eds
  variables: {}
- url: https://mock-staging.thingspace.verizon.com
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/ts/v1
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/m2m
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/loc/v1
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/subsc/v1
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/fota/v1
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/fota/v2
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/fota/v3
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/mec
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/cc/v1
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/hyper-precise/v1
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/mec/services
  variables: {}
- url: https://mock-staging.thingspace.verizon.com/api/m2m/v1/devices
  variables: {}
paths:
  /mecplatforms:
    get:
      tags:
      - 5G Edge Platforms
      summary: ListMECPlatforms
      description: Returns a list of optimal MEC Platforms where you can register your deployed application. **Note:** If a query is sent with all of the parameters, it will fail with a "400" error. You can search based on the following parameter combinations - region plus Service Profile ID and subscriber density (density is optional but recommended), region plus UEIdentity(Including UEIdentity Type) or Service Profile ID plus UEIdentity(Including UEIdentity Type).
      operationId: ListMECPlatforms
      parameters:
      - name: region
        in: query
        description: MEC region name. Current valid values are US_WEST_2 and US_EAST_1.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - US_WEST_2
      - name: serviceProfileId
        in: query
        description: Unique identifier of the service profile.
        style: form
        explode: true
        schema:
          maxLength: 36
          pattern: ^[a-zA-Z0-9!@#$&()\-`.+,/"]{3,36}$
          type: string
      - name: subscriberDensity
        in: query
        description: Minimum number of 4G/5G subscribers per square kilometer.
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
      - name: UEIdentityType
        in: query
        description: Type of User Equipment identifier used in `UEIdentity`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UserEquipmentIdentityType'
          - description: Type of User Equipment identifier used in `UEIdentity`.
            examples:
            - IPAddress
      - name: UEIdentity
        in: query
        description: The identifier value for User Equipment. The type of identifier is defined by the 'UEIdentityType' parameter. The`IPAddress`format can be IPv4 or IPv6.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 2600:1010:b1d0:0000:0000:0000:0000:0012
      responses:
        '200':
          description: MEC platforms matching query parameters.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListMECPlatformsResult'
                - description: Response to return the optimal 5G Edge platforms for deployment based on a region, service profile of the service that you want to deploy or user equipment.
                  examples:
                  - MECPlatforms:
                    - ern: 5x4VBwmfZbzSL3
                      zone: e5oV52kMGjDLhnJSsLJZL
                      region: US_WEST_2
                      status: unknown
                contentMediaType: application/json
              example:
                MECPlatforms:
                - ern: 5x4VBwmfZbzSL3
                  zone: e5oV52kMGjDLhnJSsLJZL
                  region: US_WEST_2
                  status: unknown
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /regions:
    get:
      tags:
      - 5G Edge Platforms
      summary: ListRegions
      description: List the geographical regions available, based on the user's bearer token. **Note:** Country code, Metropolitan area, Area and Zone are future functionality and will currently return a "null" value.
      operationId: ListRegions
      parameters: []
      responses:
        '200':
          description: List of geographical regions.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListRegionsResult'
                - description: Response to return an array of all regions in the Verizon 5G Edge service. You can use the region IDs from the response to find optimal Edge platforms or service endpoints.
                  examples:
                  - regions:
                    - regionId: consectetur
                      name: US_EAST_1
                      countryCode: nr
                      metro: e1D
                      area: IdUESF
                contentMediaType: application/json
              example:
                regions:
                - regionId: consectetur
                  name: US_EAST_1
                  countryCode: nr
                  metro: e1D
                  area: IdUESF
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /serviceendpoints:
    get:
      tags:
      - Service Endpoints
      summary: ListOptimalServiceEndpoints
      description: Returns a list of optimal Service Endpoints that client devices can connect to. **Note:** If a query is sent with all of the parameters, it will fail with a "400" error. You can search based on the following parameter combinations - Region plus Service Endpoints IDs and Subscriber density (density is optional but recommended), Region plus Service Endpoints IDs and UEIdentity(Including UEIdentity Type) and Service Endpoints IDs plus UEIdentity(Including UEIdentity Type).
      operationId: ListOptimalServiceEndpoints
      parameters:
      - name: region
        in: query
        description: MEC region name. Current valid values are US_WEST_2 and US_EAST_1.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - US_WEST_2
      - name: subscriberDensity
        in: query
        description: Minimum number of 4G/5G subscribers per square kilometer.
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
      - name: UEIdentityType
        in: query
        description: Type of User Equipment identifier used in `UEIdentity`.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/UserEquipmentIdentityType'
          - description: Type of User Equipment identifier used in `UEIdentity`.
            examples:
            - IPAddress
      - name: UEIdentity
        in: query
        description: The identifier value for User Equipment. The type of identifier is defined by the 'UEIdentityType' parameter. The`IPAddress`format can be IPv4 or IPv6.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 2600:1010:b1d0:0000:0000:0000:0000:0012
      - name: serviceEndpointsIds
        in: query
        description: A system-defined string identifier representing one or more registered Service Endpoints.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 43f3f7bb-d6c5-4bad-b081-9a3a0df2db98
      responses:
        '200':
          description: An array of optimal Service Endpoint IDs for clients to connect to.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListOptimalServiceEndpointsResult'
                - description: Response on successful retrieval of optimal service endpoints for clients.
                  examples:
                  - serviceEndpoints:
                    - ern: LASVEGAS_NV_WL
                      serviceEndpoint:
                        URI: http://base_path/some_segment/id
                        FQDN: thingtest.verizon.com
                        IPv4Address: 192.168.11.10
                        IPv6Address: 2001:0db8:85a3:0000:0000:8a2e:0370:1234
                        port: 1234
                      applicationServerProviderId: AWS
                      applicationId: IogspaceJan15
                      serviceDescription: ThieIt
                contentMediaType: application/json
              example:
                serviceEndpoints:
                - ern: LASVEGAS_NV_WL
                  serviceEndpoint:
                    URI: http://base_path/some_segment/id
                    FQDN: thingtest.verizon.com
                    IPv4Address: 192.168.11.10
                    IPv6Address: 2001:0db8:85a3:0000:0000:8a2e:0370:1234
                    port: 1234
                  applicationServerProviderId: AWS
                  applicationId: IogspaceJan15
                  serviceDescription: ThieIt
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    post:
      tags:
      - Service Endpoints
      summary: RegisterServiceEndpoints
      description: Register Service Endpoints of a deployed application to specified MEC Platforms.
      operationId: RegisterServiceEndpoints
      parameters: []
      requestBody:
        description: An array of Service Endpoint data for a deployed application. The request body passes all of the needed parameters to create a service endpoint. Parameters will be edited here rather than the **Parameters** section above. The `ern`,`applicationServerProviderId`, `applicationId` and `serviceProfileID` parameters are required. **Note:** Currently, the only valid value for `applicationServerProviderId`is **AWS**. Also, if you do not know one of the optional values (i.e. URI), you can erase the line from the query by back-spacing over it.
        content:
          application/json:
            schema:
              maxItems: 100
              type: array
              items:
                $ref: '#/components/schemas/ResourcesEdgeHostedServiceWithProfileId'
              description: An array of Service Endpoint data for a deployed application. The request body passes all of the needed parameters to create a service endpoint. Parameters will be edited here rather than the **Parameters** section above. The `ern`,`applicationServerProviderId`, `applicationId` and `serviceProfileID` parameters are required. **Note:** Currently, the only valid value for `applicationServerProviderId`is **AWS**. Also, if you do not know one of the optional values (i.e. URI), you can erase the line from the query by back-spacing over it.
              examples:
              - - serviceEndpoint:
                    FQDN: thingtest.verizon.com
                    IPv4Address: 192.168.11.10
                    IPv6Address: 2001:0db8:85a3:0000:0000:8a2e:0370:1234
                    port: 1234
                    URI: http://base_path/some_segment/id
                  applicationId: IogspaceJan15
                  serviceDescription: ThieIt
                  applicationServerProviderId: AWS
                  ern: us-east-1-wl1-atl-wlz-1
                  serviceProfileID: 4054ea9a-593e-4776-b488-697b1bfa4f3b
              contentMediaType: application/json
            example:
            - serviceEndpoint:
                FQDN: thingtest.verizon.com
                IPv4Address: 192.168.11.10
                IPv6Address: 2001:0db8:85a3:0000:0000:8a2e:0370:1234
                port: 1234
                URI: http://base_path/some_segment/id
              applicationId: IogspaceJan15
              serviceDescription: ThieIt
              applicationServerProviderId: AWS
              ern: us-east-1-wl1-atl-wlz-1
              serviceProfileID: 4054ea9a-593e-4776-b488-697b1bfa4f3b
        required: true
      responses:
        '200':
          description: Returns a service endpoints Id.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/RegisterServiceEndpointResult'
                - description: Response to register Service Endpoints of a deployed application to specified Muli-access Edge Compute (MEC) Platforms.
                contentMediaType: application/json
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /serviceendpointsall:
    get:
      tags:
      - Service Endpoints
      summary: ListAllServiceEndpoints
      description: Returns a list of all registered service endpoints.
      operationId: ListAllServiceEndpoints
      parameters: []
      responses:
        '200':
          description: Returns a comma delimited list of all registered service endpoints.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListAllServiceEndpointsResult'
                - description: Response on successful retrieval of all registered service endpoints.
                  examples:
                  - status: success
                    data:
                    - serviceEndpointsId
                contentMediaType: application/json
              example:
                status: success
                data:
                - serviceEndpointsId
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /serviceendpoints/{serviceEndpointsId}:
    get:
      tags:
      - Service Endpoints
      summary: GetServiceEndpoint
      description: Returns endpoint information for all Service Endpoints registered to a specified serviceEndpointId.
      operationId: GetServiceEndpoint
      parameters:
      - name: serviceEndpointsId
        in: path
        description: A system-defined string identifier representing one or more registered Service Endpoints.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 43f3f7bb-d6c5-4bad-b081-9a3a0df2db98
      responses:
        '200':
          description: Registered service endpoint information for a 5G Edge service.
          headers: {}
          content:
            application/json:
              schema:
                maxItems: 100
                type: array
                items:
                  $ref: '#/components/schemas/ResourcesEdgeHostedServiceWithProfileId'
                description: Registered service endpoint information for a 5G Edge service.
                examples:
                - - serviceEndpoint:
                      FQDN: thingtest.verizon.com
                      IPv4Address: 192.168.11.10
                      IPv6Address: 2001:0db8:85a3:0000:0000:8a2e:0370:1234
                      port: 1234
                      URI: http://base_path/some_segment/id
                    applicationId: IogspaceJan15
                    serviceDescription: ThieIt
                    applicationServerProviderId: AWS
                    ern: us-east-1-wl1-atl-wlz-1
                    serviceProfileID: 4054ea9a-593e-4776-b488-697b1bfa4f3b
                contentMediaType: application/json
              example:
              - serviceEndpoint:
                  FQDN: thingtest.verizon.com
                  IPv4Address: 192.168.11.10
                  IPv6Address: 2001:0db8:85a3:0000:0000:8a2e:0370:1234
                  port: 1234
                  URI: http://base_path/some_segment/id
                applicationId: IogspaceJan15
                serviceDescription: ThieIt
                applicationServerProviderId: AWS
                ern: us-east-1-wl1-atl-wlz-1
                serviceProfileID: 4054ea9a-593e-4776-b488-697b1bfa4f3b
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    put:
      tags:
      - Service Endpoints
      summary: UpdateServiceEndpoint
      description: Update registered Service Endpoint information.
      operationId: UpdateServiceEndpoint
      parameters:
      - name: serviceEndpointsId
        in: path
        description: A system-defined string identifier representing one or more registered Service Endpoints.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 43f3f7bb-d6c5-4bad-b081-9a3a0df2db98
      requestBody:
        description: Data needed for Service Endpoint information. The request body passes the rest of the needed parameters to create a service endpoint. Parameters other than `serviceEndpointsId` will be edited here rather than the **Parameters** section above. The `ern`,`applicationServerProviderId` and `applicationId` parameters are required. **Note:** Currently, the only valid value for `applicationServerProviderId`is **AWS**.
        content:
          application/json:
            schema:
              maxItems: 100
              type: array
              items:
                $ref: '#/components/schemas/ResourcesEdgeHostedServiceWithProfileId'
              description: Data needed for Service Endpoint information. The request body passes the rest of the needed parameters to create a service endpoint. Parameters other than `serviceEndpointsId` will be edited here rather than the **Parameters** section above. The `ern`,`applicationServerProviderId` and `applicationId` parameters are required. **Note:** Currently, the only valid value for `applicationServerProviderId`is **AWS**.
              examples:
              - - serviceEndpoint:
                    FQDN: thingtest.verizon.com
                    IPv4Address: 192.168.11.10
                    IPv6Address: 2001:0db8:85a3:0000:0000:8a2e:0370:1234
                    port: 1234
                    URI: http://base_path/some_segment/id
                  applicationId: IogspaceJan15
                  serviceDescription: ThieIt
                  applicationServerProviderId: AWS
                  ern: us-east-1-wl1-atl-wlz-1
                  serviceProfileID: 4054ea9a-593e-4776-b488-697b1bfa4f3b
              contentMediaType: application/json
            example:
            - serviceEndpoint:
                FQDN: thingtest.verizon.com
                IPv4Address: 192.168.11.10
                IPv6Address: 2001:0db8:85a3:0000:0000:8a2e:0370:1234
                port: 1234
                URI: http://base_path/some_segment/id
              applicationId: IogspaceJan15
              serviceDescription: ThieIt
              applicationServerProviderId: AWS
              ern: us-east-1-wl1-atl-wlz-1
              serviceProfileID: 4054ea9a-593e-4776-b488-697b1bfa4f3b
        required: true
      responses:
        '200':
          description: Update registered Service Endpoint information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdateServiceEndpointResult'
                - description: Response to update registered Service Endpoint information.
                  examples:
                  - status: Success
                    message: EdgeAppServices are updated
                contentMediaType: application/json
              example:
                status: Success
                message: EdgeAppServices are updated
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    delete:
      tags:
      - Service Endpoints
      summary: DeregisterServiceEndpoint
      description: Deregister an application's Service Endpoint from the MEC Platform(s).
      operationId: DeregisterServiceEndpoint
      parameters:
      - name: serviceEndpointsId
        in: path
        description: A system-defined string identifier representing one or more registered Service Endpoints.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 43f3f7bb-d6c5-4bad-b081-9a3a0df2db98
      responses:
        '200':
          description: Service endpoint deleted.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeregisterServiceEndpointResult'
                - description: Response to deregister an application's Service Endpoint from one or more Multi-access Edge Compute (MEC) Platforms.
                  examples:
                  - status: Success
                    message: EdgeAppServicesID Deleted
                contentMediaType: application/json
              example:
                status: Success
                message: EdgeAppServicesID Deleted
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /serviceprofiles:
    post:
      tags:
      - Service Profiles
      summary: CreateServiceProfile
      description: Creates a service profile that describes the resource requirements of a service.
      operationId: CreateServiceProfile
      parameters: []
      requestBody:
        description: The request body passes all of the needed parameters to create a service profile. Parameters will be edited here rather than the **Parameters** section above. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Additionally, "GPU" is future functionality and the values are not captured.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ResourcesServiceProfile'
              - description: The request body passes all of the needed parameters to create a service profile. Parameters will be edited here rather than the **Parameters** section above. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Additionally, "GPU" is future functionality and the values are not captured.
                examples:
                - clientType: V2X
                  ecspFilter: Verizon
                  clientSchedule: time windows
                  clientServiceArea: BAY AREA
                  networkResources:
                    minBandwidthKbits: 1
                    serviceContinuitySupport: true
                    maxRequestRate: 15
                    maxLatencyMs: 20
                    minAvailability: 1
                  computeResources:
                    GPU:
                      minCoreClockMHz: 1
                      minMemoryClockMHz: 35740
                      minBandwidthGBs: 588
                      minTFLOPS: 33
                    minRAMGB: 1
                    minStorageGB: 1
              contentMediaType: application/json
            example:
              clientType: V2X
              ecspFilter: Verizon
              clientSchedule: time windows
              clientServiceArea: BAY AREA
              networkResources:
                minBandwidthKbits: 1
                serviceContinuitySupport: true
                maxRequestRate: 15
                maxLatencyMs: 20
                minAvailability: 1
              computeResources:
                GPU:
                  minCoreClockMHz: 1
                  minMemoryClockMHz: 35740
                  minBandwidthGBs: 588
                  minTFLOPS: 33
                minRAMGB: 1
                minStorageGB: 1
        required: true
      responses:
        '200':
          description: Service profile ID.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreateServiceProfileResult'
                - description: A successful request returns a serviceProfileId that you can use in subsequent requests.
                contentMediaType: application/json
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    get:
      tags:
      - Service Profiles
      summary: ListServiceProfiles
      description: List all service profiles registered under your API key.
      operationId: ListServiceProfiles
      parameters: []
      responses:
        '200':
          description: A comma delimited list of all the service profiles registered under your API key.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ListServiceProfilesResult'
                - description: Response on successful retrieval of service profiles.
                  examples:
                  - status: Success
                    data:
                    - serviceProfileId
                contentMediaType: application/json
              example:
                status: Success
                data:
                - serviceProfileId
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /serviceprofiles/{serviceProfileId}:
    get:
      tags:
      - Service Profiles
      summary: GetServiceProfile
      description: Returns a specified service profile.
      operationId: GetServiceProfile
      parameters:
      - name: serviceProfileId
        in: path
        description: ''
        required: true
        style: simple
        schema:
          maxLength: 36
          pattern: ^[a-zA-Z0-9!@#$&()\-`.+,/"]{3,36}$
          type: string
      responses:
        '200':
          description: Requested service profile.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ResourcesServiceProfileWithId'
                - description: Information about the resource requirements and service characteristics of an edge application. Includes serviceProfileId. Used when retrieving a service profile.
                  examples:
                  - serviceProfileId: 4054ea9a-593e-4776-b488-697b1bfa4f3b
                    ecspFilter: Verizon
                    clientSchedule: time windows
                    clientServiceArea: BAY AREA
                    clientType: V2X
                    networkResources:
                      minBandwidthKbits: 1
                      serviceContinuitySupport: true
                      maxRequestRate: 15
                      maxLatencyMs: 20
                      minAvailability: 1
                    computeResources:
                      GPU:
                        minCoreClockMHz: 1
                        minMemoryClockMHz: 35740
                        minBandwidthGBs: 588
                        minTFLOPS: 33
                      minRAMGB: 1
                      minStorageGB: 1
                contentMediaType: application/json
              example:
                serviceProfileId: 4054ea9a-593e-4776-b488-697b1bfa4f3b
                ecspFilter: Verizon
                clientSchedule: time windows
                clientServiceArea: BAY AREA
                clientType: V2X
                networkResources:
                  minBandwidthKbits: 1
                  serviceContinuitySupport: true
                  maxRequestRate: 15
                  maxLatencyMs: 20
                  minAvailability: 1
                computeResources:
                  GPU:
                    minCoreClockMHz: 1
                    minMemoryClockMHz: 35740
                    minBandwidthGBs: 588
                    minTFLOPS: 33
                  minRAMGB: 1
                  minStorageGB: 1
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    put:
      tags:
      - Service Profiles
      summary: UpdateServiceProfile
      description: Update the definition of a Service Profile.
      operationId: UpdateServiceProfile
      parameters:
      - name: serviceProfileId
        in: path
        description: ''
        required: true
        style: simple
        schema:
          maxLength: 36
          pattern: ^[a-zA-Z0-9!@#$&()\-`.+,/"]{3,36}$
          type: string
      requestBody:
        description: The request body passes the rest of the needed parameters to create a service profile. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Additionally, "GPU" is future functionality and the values are not captured. Default values to use are shown.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ResourcesServiceProfile'
              - description: The request body passes the rest of the needed parameters to create a service profile. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Additionally, "GPU" is future functionality and the values are not captured. Default values to use are shown.
                examples:
                - clientType: V2X
                  ecspFilter: Verizon
                  clientSchedule: time windows
                  clientServiceArea: BAY AREA
                  networkResources:
                    minBandwidthKbits: 1
                    serviceContinuitySupport: true
                    maxRequestRate: 15
                    maxLatencyMs: 20
                    minAvailability: 1
                  computeResources:
                    GPU:
                      minCoreClockMHz: 1
                    minRAMGB: 1
                    minStorageGB: 1
              contentMediaType: application/json
            example:
              clientType: V2X
              ecspFilter: Verizon
              clientSchedule: time windows
              clientServiceArea: BAY AREA
              networkResources:
                minBandwidthKbits: 1
                serviceContinuitySupport: true
                maxRequestRate: 15
                maxLatencyMs: 20
                minAvailability: 1
              computeResources:
                GPU:
                  minCoreClockMHz: 1
                minRAMGB: 1
                minStorageGB: 1
        required: true
      responses:
        '200':
          description: Update a service profile.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpdateServiceProfileResult'
                - description: Response on successful update of service profile.
                  examples:
                  - status: Success
                    message: Service Profile Updated
                contentMediaType: application/json
              example:
                status: Success
                message: Service Profile Updated
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    delete:
      tags:
      - Service Profiles
      summary: DeleteServiceProfile
      description: Delete Service Profile based on unique service profile ID.
      operationId: DeleteServiceProfile
      parameters:
      - name: serviceProfileId
        in: path
        description: ''
        required: true
        style: simple
        schema:
          maxLength: 36
          pattern: ^[a-zA-Z0-9!@#$&()\-`.+,/"]{3,36}$
          type: string
      responses:
        '200':
          description: Delete a service profile.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeleteServiceProfileResult'
                - description: Response on successful deletion of service profile.
                  examples:
                  - status: Success
                    message: Service Profile Deleted
                contentMediaType: application/json
              example:
                status: Success
                message: Service Profile Deleted
        '400':
          description: HTTP 400 Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        '401':
          description: HTTP 401 Unauthorized.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
        default:
          description: HTTP 500 Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgeDiscoveryResult'
                - description: Base type for all errors.
                contentMediaType: application/json
      deprecated: false
    parameters: []
  /m2m/v1/devices/actions/activate:
    post:
      tags:
      - Device Management
      summary: ActivateServiceForDevices
      description: If the devices do not already exist in the account, this API resource adds them before activation.
      operationId: ActivateServiceForDevices
      parameters: []
      requestBody:
        description: Request for activating a service on devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CarrierActivateRequest'
              - description: Request for activating a service on devices.
                examples:
                - devices:
                  - deviceIds:
                    - kind: imei
                      id: '990013907835573'
                    - kind: iccid
                      id: '89141390780800784259'
                  - deviceIds:
                    - kind: imei
                      id: '990013907884259'
                    - kind: iccid
                      id: '89141390780800735573'
                  accountName: 0868924207-00001
                  servicePlan: m2m_4G
                  mdnZipCode: '98801'
                  customFields:
                  - key: CustomField2
                    value: SuperVend
                  groupName: 4G West
                  primaryPlaceOfUse:
                    customerName:
                      title: President
                      firstName: Zaffod
                      lastName: Beeblebrox
                    address:
                      addressLine1: 1600 Pennsylvania Ave NW
                      city: Washington
                      state: DC
                      zip: '20500'
                      country: USA
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: imei
                  id: '990013907835573'
                - kind: iccid
                  id: '89141390780800784259'
              - deviceIds:
                - kind: imei
                  id: '990013907884259'
                - kind: iccid
                  id: '89141390780800735573'
              accountName: 0868924207-00001
              servicePlan: m2m_4G
              mdnZipCode: '98801'
              customFields:
              - key: CustomField2
                value: SuperVend
              groupName: 4G West
              primaryPlaceOfUse:
                customerName:
                  title: President
                  firstName: Zaffod
                  lastName: Beeblebrox
                address:
                  addressLine1: 1600 Pennsylvania Ave NW
                  city: Washington
                  state: DC
                  zip: '20500'
                  country: USA
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/add:
    post:
      tags:
      - Device Management
      summary: AddDevices
      description: Use this API if you want to manage some device settings before you are ready to activate service for the devices.
      operationId: AddDevices
      parameters: []
      requestBody:
        description: Devices to add.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AddDevicesRequest'
              - description: Devices to add.
                examples:
                - accountName: 0868924207-00001
                  customFields:
                  - key: CustomField2
                    value: SuperVend
                  devicesToAdd:
                  - deviceIds:
                    - kind: imei
                      id: '990013907835573'
                    - kind: iccid
                      id: '89141390780800784259'
                  - deviceIds:
                    - kind: imei
                      id: '990013907884259'
                    - kind: iccid
                      id: '89141390780800735573'
                  groupName: West Region
                  state: preactive
              contentMediaType: application/json
            example:
              accountName: 0868924207-00001
              customFields:
              - key: CustomField2
                value: SuperVend
              devicesToAdd:
              - deviceIds:
                - kind: imei
                  id: '990013907835573'
                - kind: iccid
                  id: '89141390780800784259'
              - deviceIds:
                - kind: imei
                  id: '990013907884259'
                - kind: iccid
                  id: '89141390780800735573'
              groupName: West Region
              state: preactive
        required: true
      responses:
        '200':
          description: For each device in the request, contains device identifiers and a success or failure response.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddDevicesResult'
                description: Status of request to add each device.
                examples:
                - - deviceIds:
                    - id: '89148000000800784259'
                      kind: iccid
                    response: Success
                contentMediaType: application/json
              example:
              - deviceIds:
                - id: '89148000000800784259'
                  kind: iccid
                response: Success
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/contactinfo:
    put:
      tags:
      - Device Management
      summary: UpdateDevicesContactInformation
      description: Sends a CarrierService callback message for each device in the request when the contact information has been changed, or if there was a problem and the change could not be completed.
      operationId: UpdateDevicesContactInformation
      parameters: []
      requestBody:
        description: Request to update contact information for devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ContactInfoUpdateRequest'
              - description: Request to update contact information for devices.
                examples:
                - devices:
                  - deviceIds:
                    - kind: ESN
                      id: '19110173057'
                    - kind: ESN
                      id: '19110173057'
                  accountName: 0212345678-00001
                  primaryPlaceOfUse:
                    address:
                      addressLine1: 9868 Scranton Rd
                      addressLine2: Suite A
                      city: San Diego
                      state: CA
                      country: USA
                      zip: '92121'
                      zip4: '0001'
                      phone: '1234567890'
                      phoneType: H
                      emailAddress: zaffod@theinternet.com
                    customerName:
                      firstName: Zaffod
                      lastName: Beeblebrox
                      middleName: P
                      title: President
                      suffix: I
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: ESN
                  id: '19110173057'
                - kind: ESN
                  id: '19110173057'
              accountName: 0212345678-00001
              primaryPlaceOfUse:
                address:
                  addressLine1: 9868 Scranton Rd
                  addressLine2: Suite A
                  city: San Diego
                  state: CA
                  country: USA
                  zip: '92121'
                  zip4: '0001'
                  phone: '1234567890'
                  phoneType: H
                  emailAddress: zaffod@theinternet.com
                customerName:
                  firstName: Zaffod
                  lastName: Beeblebrox
                  middleName: P
                  title: President
                  suffix: I
        required: true
      responses:
        '200':
          description: Request ID returned in a success response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 24da9f9a-d110-4a54-86b4-93fb76aab83c
                contentMediaType: application/json
              example:
                requestId: 24da9f9a-d110-4a54-86b4-93fb76aab83c
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/customFields:
    put:
      tags:
      - Device Management
      summary: UpdateDevicesCustomFields
      description: Sends a CarrierService callback message for each device in the request when the custom fields have been changed, or if there was a problem and the change could not be completed.
      operationId: UpdateDevicesCustomFields
      parameters: []
      requestBody:
        description: Request to update custom field of devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CustomFieldsUpdateRequest'
              - description: Request to update custom field of devices.
                examples:
                - devices:
                  - deviceIds:
                    - id: '89148000000800139708'
                      kind: iccid
                  customFieldsToUpdate:
                  - key: CustomField1
                    value: West Region
                  - key: CustomField2
                    value: Distribution
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - id: '89148000000800139708'
                  kind: iccid
              customFieldsToUpdate:
              - key: CustomField1
                value: West Region
              - key: CustomField2
                value: Distribution
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/deactivate:
    post:
      tags:
      - Device Management
      summary: DeactivateServiceForDevices
      description: Deactivating service for a device may result in an early termination fee (ETF) being charged to the account, depending on the terms of the contract with Verizon. If your contract allows ETF waivers and if you want to use one for a particular deactivation, set the etfWaiver value to True.
      operationId: DeactivateServiceForDevices
      parameters: []
      requestBody:
        description: Request to deactivate service for one or more devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CarrierDeactivateRequest'
              - description: Request to deactivate service for one or more devices.
                examples:
                - devices:
                  - deviceIds:
                    - id: 20-digit ICCID
                      kind: iccid
                  reasonCode: FF
                  etfWaiver: true
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - id: 20-digit ICCID
                  kind: iccid
              reasonCode: FF
              etfWaiver: true
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/delete:
    post:
      tags:
      - Device Management
      summary: DeleteDeactivatedDevices
      description: Use this API to remove unneeded devices from an account.
      operationId: DeleteDeactivatedDevices
      parameters: []
      requestBody:
        description: Devices to delete.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeleteDevicesRequest'
              - description: Devices to delete.
                examples:
                - devicesToDelete:
                  - deviceIds:
                    - id: '09005470263'
                      kind: esn
                  - deviceIds:
                    - id: '85000022411113460014'
                      kind: iccid
                  - deviceIds:
                    - id: '85000022412313460016'
                      kind: iccid
              contentMediaType: application/json
            example:
              devicesToDelete:
              - deviceIds:
                - id: '09005470263'
                  kind: esn
              - deviceIds:
                - id: '85000022411113460014'
                  kind: iccid
              - deviceIds:
                - id: '85000022412313460016'
                  kind: iccid
        required: true
      responses:
        '200':
          description: For each device in the request, contains device identifiers and a success or failure response.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeleteDevicesResult'
                description: Status of devices removal.
                examples:
                - - deviceIds:
                      id: '09005470263'
                      kind: esn
                    status: Success
                  - deviceIds:
                      id: '85000022411113460014'
                      kind: iccid
                    status: Success
                  - deviceIds:
                    - id: '85000022412313460016'
                      kind: iccid
                    - id: '09005470263'
                      kind: esn
                    status: Failed
                    message: The device is not in deactive state.
                contentMediaType: application/json
              example:
              - deviceIds:
                  id: '09005470263'
                  kind: esn
                status: Success
              - deviceIds:
                  id: '85000022411113460014'
                  kind: iccid
                status: Success
              - deviceIds:
                - id: '85000022412313460016'
                  kind: iccid
                - id: '09005470263'
                  kind: esn
                status: Failed
                message: The device is not in deactive state.
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/list:
    post:
      tags:
      - Device Management
      summary: ListDevicesInformation
      description: Returns information about a single device or information about all devices that match the given parameters. Returned information includes device provisioning state, service plan, MDN, MIN, and IP address.
      operationId: ListDevicesInformation
      parameters: []
      requestBody:
        description: Device information query.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AccountDeviceListRequest'
              - description: Device information query.
                examples:
                - '{"deviceId":{"id":"20-digit ICCID","kind":"iccid"}}'
                - '{"accountName":"0786890242-00001","filter":{"deviceIdentifierFilters":[{"kind":"iccid","contains":"4259"}]}}'
                - '{"accountName":"0786890242-00001","filter":{"deviceIdentifierFilters":[{"kind":"iccid","contains":"4259"}]}}'
              contentMediaType: application/json
            examples:
              single-device:
                value:
                  deviceId:
                    id: 20-digit ICCID
                    kind: iccid
              devices-containing-specified-string:
                value:
                  accountName: 0786890242-00001
                  filter:
                    deviceIdentifierFilters:
                    - kind: iccid
                      contains: '4259'
              specific-service-plan-and-sort-devices:
                value:
                  accountName: 0786890242-00001
                  filter:
                    deviceIdentifierFilters:
                    - kind: iccid
                      contains: '4259'
        required: true
      responses:
        '200':
          description: List of devices that match the request parameters, ordered by device creation date, oldest first.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccountDeviceListResult'
                - description: Response for a request to list down account devices.
                  examples:
                  - hasMoreData: false
                    devices:
                    - accountName: 0000123456-00001
                      billingCycleEndDate: 2020-05-09T20:00:00-04:00
                      carrierInformations:
                      - carrierName: Verizon Wireless
                        servicePlan: m2m4G
                        state: active
                      connected: false
                      createdAt: 2019-08-07T10:42:15-04:00
                      deviceIds:
                      - id: 10-digit MDN
                        kind: mdn
                      - id: 15-digit IMEI
                        kind: imei
                      groupNames:
                      - southwest
                      ipAddress: 0.0.0.0
                      lastActivationBy: Joe Q Public
                      lastActivationDate: 2019-08-07T10:42:34-04:00
                      lastConnectionDate: 2020-03-12T04:23:37-04:00
                contentMediaType: application/json
              example:
                hasMoreData: false
                devices:
                - accountName: 0000123456-00001
                  billingCycleEndDate: 2020-05-09T20:00:00-04:00
                  carrierInformations:
                  - carrierName: Verizon Wireless
                    servicePlan: m2m4G
                    state: active
                  connected: false
                  createdAt: 2019-08-07T10:42:15-04:00
                  deviceIds:
                  - id: 10-digit MDN
                    kind: mdn
                  - id: 15-digit IMEI
                    kind: imei
                  groupNames:
                  - southwest
                  ipAddress: 0.0.0.0
                  lastActivationBy: Joe Q Public
                  lastActivationDate: 2019-08-07T10:42:34-04:00
                  lastConnectionDate: 2020-03-12T04:23:37-04:00
        '202':
          description: List of devices that match the request parameters, ordered by device creation date, oldest first. Additional devices remain.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccountDeviceListResult'
                - description: Response for a request to list down account devices.
                  examples:
                  - hasMoreData: false
                    devices:
                    - accountName: 0000123456-00001
                      billingCycleEndDate: 2020-05-09T20:00:00-04:00
                      carrierInformations:
                      - carrierName: Verizon Wireless
                        servicePlan: m2m4G
                        state: active
                      connected: false
                      createdAt: 2019-08-07T10:42:15-04:00
                      deviceIds:
                      - id: 10-digit MDN
                        kind: mdn
                      - id: 15-digit IMEI
                        kind: imei
                      groupNames:
                      - southwest
                      ipAddress: 0.0.0.0
                      lastActivationBy: Joe Q Public
                      lastActivationDate: 2019-08-07T10:42:34-04:00
                      lastConnectionDate: 2020-03-12T04:23:37-04:00
                contentMediaType: application/json
              example:
                hasMoreData: false
                devices:
                - accountName: 0000123456-00001
                  billingCycleEndDate: 2020-05-09T20:00:00-04:00
                  carrierInformations:
                  - carrierName: Verizon Wireless
                    servicePlan: m2m4G
                    state: active
                  connected: false
                  createdAt: 2019-08-07T10:42:15-04:00
                  deviceIds:
                  - id: 10-digit MDN
                    kind: mdn
                  - id: 15-digit IMEI
                    kind: imei
                  groupNames:
                  - southwest
                  ipAddress: 0.0.0.0
                  lastActivationBy: Joe Q Public
                  lastActivationDate: 2019-08-07T10:42:34-04:00
                  lastConnectionDate: 2020-03-12T04:23:37-04:00
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/list/imeiiccidmismatch:
    post:
      tags:
      - Device Management
      summary: ListDevicesWithImeiIccidMismatch
      description: Returns a list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.
      operationId: ListDevicesWithImeiIccidMismatch
      parameters: []
      requestBody:
        description: Request to list devices with mismatched IMEIs and ICCIDs.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceMismatchListRequest'
              - description: Request to list devices with mismatched IMEIs and ICCIDs.
                examples:
                - accountName: 0342077109-00001
                  devices:
                  - deviceIds:
                    - kind: ICCID
                      id: '8914800000080078'
                    - kind: MDN
                      id: '5096300587'
                  filter:
                    earliest: 2020-05-01T15:00:00-08:00Z
                    latest: 2020-07-30T15:00:00-08:00Z
              contentMediaType: application/json
            example:
              accountName: 0342077109-00001
              devices:
              - deviceIds:
                - kind: ICCID
                  id: '8914800000080078'
                - kind: MDN
                  id: '5096300587'
              filter:
                earliest: 2020-05-01T15:00:00-08:00Z
                latest: 2020-07-30T15:00:00-08:00Z
        required: true
      responses:
        '200':
          description: List of devices that have mismatched IMEIs and ICCIDs.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceMismatchListResult'
                - description: Response to list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.
                  examples:
                  - devices:
                    - accountName: 0212398765-00001
                      mdn: '5096300587'
                      activationDate: 2011-01-21T10:55:27-08:00
                      iccid: '89148000000800784259'
                      preImei: '990003420535573'
                      postImei: '987603420573553'
                      simOtaDate: 2017-12-01T16:00:00-08:00
                contentMediaType: application/json
              example:
                devices:
                - accountName: 0212398765-00001
                  mdn: '5096300587'
                  activationDate: 2011-01-21T10:55:27-08:00
                  iccid: '89148000000800784259'
                  preImei: '990003420535573'
                  postImei: '987603420573553'
                  simOtaDate: 2017-12-01T16:00:00-08:00
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/move:
    put:
      tags:
      - Device Management
      summary: MoveDevicesWithinAccountsOfProfile
      description: Move active devices from one billing account to another within a customer profile.
      operationId: MoveDevicesWithinAccountsOfProfile
      parameters: []
      requestBody:
        description: Request to move devices between accounts.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/MoveDeviceRequest'
              - description: Request to move devices between accounts.
                examples:
                - '{"devices":[{"deviceIds":[{"kind":"ESN","id":"19110173057"}]}],"accountName":"0212345678-00001","servicePlan":"M2M5GB"}'
                - '{"filter":{"groupName":"Short-Haul Trucks","customFields":[{"key":"CustomField1","value":"East Region Trucks"}]},"accountName":"0212345678-00001","servicePlan":"M2M5GB"}'
              contentMediaType: application/json
            examples:
              single-device:
                value:
                  devices:
                  - deviceIds:
                    - kind: ESN
                      id: '19110173057'
                  accountName: 0212345678-00001
                  servicePlan: M2M5GB
              devices-with-custom-field:
                value:
                  filter:
                    groupName: Short-Haul Trucks
                    customFields:
                    - key: CustomField1
                      value: East Region Trucks
                  accountName: 0212345678-00001
                  servicePlan: M2M5GB
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: ec682a8b-e288-4806-934d-24e7a59ed889
                contentMediaType: application/json
              example:
                requestId: ec682a8b-e288-4806-934d-24e7a59ed889
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/gotostate:
    put:
      tags:
      - Device Management
      summary: UpdateDevicesState
      description: Changes the provisioning state of one or more devices to a specified customer-defined service and state.
      operationId: UpdateDevicesState
      parameters: []
      requestBody:
        description: Request to change device state to one defined by the user.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GoToStateRequest'
              - description: Request to change device state to one defined by the user.
                examples:
                - devices:
                  - deviceIds:
                    - kind: imei
                      id: '990013907835573'
                    - kind: iccid
                      id: '89141390780800784259'
                  - deviceIds:
                    - kind: imei
                      id: '990013907884259'
                    - kind: iccid
                      id: '89141390780800735573'
                  serviceName: My Service
                  stateName: My State
                  servicePlan: '87641'
                  mdnZipCode: '94203'
                  groupName: 4G West
                  publicIpRestriction: unrestricted
                  primaryPlaceOfUse:
                    customerName:
                      title: President
                      firstName: Zaffod
                      lastName: Beeblebrox
                    address:
                      addressLine1: 1600 Pennsylvania Ave NW
                      city: Washington
                      state: DC
                      zip: '20500'
                      country: USA
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: imei
                  id: '990013907835573'
                - kind: iccid
                  id: '89141390780800784259'
              - deviceIds:
                - kind: imei
                  id: '990013907884259'
                - kind: iccid
                  id: '89141390780800735573'
              serviceName: My Service
              stateName: My State
              servicePlan: '87641'
              mdnZipCode: '94203'
              groupName: 4G West
              publicIpRestriction: unrestricted
              primaryPlaceOfUse:
                customerName:
                  title: President
                  firstName: Zaffod
                  lastName: Beeblebrox
                address:
                  addressLine1: 1600 Pennsylvania Ave NW
                  city: Washington
                  state: DC
                  zip: '20500'
                  country: USA
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/plan:
    put:
      tags:
      - Device Management
      summary: ChangeDevicesServicePlan
      description: Changes the service plan for one or more devices.
      operationId: ChangeDevicesServicePlan
      parameters: []
      requestBody:
        description: Request to change device service plan.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ServicePlanUpdateRequest'
              - description: Request to change device service plan.
                examples:
                - devices:
                  - deviceIds:
                    - id: A100003685E561
                      kind: meid
                  servicePlan: new_service_plan_code
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - id: A100003685E561
                  kind: meid
              servicePlan: new_service_plan_code
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: c8de7c1d-59b9-4cf3-b969-db76cb2ce509
                contentMediaType: application/json
              example:
                requestId: c8de7c1d-59b9-4cf3-b969-db76cb2ce509
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/suspend:
    post:
      tags:
      - Device Management
      summary: SuspendServiceForDevices
      description: Suspends service for one or more devices.
      operationId: SuspendServiceForDevices
      parameters: []
      requestBody:
        description: Request to suspend service for one or more devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CarrierActionsRequest'
              - description: Request to suspend service for one or more devices.
                examples:
                - devices:
                  - deviceIds:
                    - id: '89148000000800139708'
                      kind: iccid
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - id: '89148000000800139708'
                  kind: iccid
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/restore:
    post:
      tags:
      - Device Management
      summary: RestoreServiceForSuspendedDevices
      description: Restores service to one or more suspended devices.
      operationId: RestoreServiceForSuspendedDevices
      parameters: []
      requestBody:
        description: Request to restore services of one or more suspended devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CarrierActionsRequest'
              - description: Request to restore services of one or more suspended devices.
                examples:
                - devices:
                  - deviceIds:
                    - id: '89148000000800139708'
                      kind: iccid
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - id: '89148000000800139708'
                  kind: iccid
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/availability/actions/list:
    post:
      tags:
      - Device Management
      summary: CheckDevicesAvailabilityForActivation
      description: Checks whether specified devices are registered by the manufacturer with the Verizon network and are available to be activated.
      operationId: CheckDevicesAvailabilityForActivation
      parameters: []
      requestBody:
        description: Request to check if devices can be activated or not.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceActivationRequest'
              - description: Request to check if devices can be activated or not.
                examples:
                - accountName: 0212345678-00001
                  devices:
                  - deviceIds:
                    - kind: meid
                      id: A100008385E561
              contentMediaType: application/json
            example:
              accountName: 0212345678-00001
              devices:
              - deviceIds:
                - kind: meid
                  id: A100008385E561
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/connections/actions/listHistory:
    post:
      tags:
      - Device Management
      summary: RetrieveDeviceConnectionHistory
      description: Each response includes a maximum of 500 records. To obtain more records, you can call the API multiple times, adjusting the earliest value each time to start where the previous request finished.
      operationId: RetrieveDeviceConnectionHistory
      parameters: []
      requestBody:
        description: Query to retrieve device connection history.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceConnectionListRequest'
              - description: Query to retrieve device connection history.
                examples:
                - deviceId:
                    id: '89141390780800784259'
                    kind: iccid
                  earliest: 2015-09-16T00:00:01Z
                  latest: 2010-09-18T00:00:01Z
              contentMediaType: application/json
            example:
              deviceId:
                id: '89141390780800784259'
                kind: iccid
              earliest: 2015-09-16T00:00:01Z
              latest: 2010-09-18T00:00:01Z
        required: true
      responses:
        '200':
          description: List of device connection events, sorted by the occurredAt timestamp, oldest first.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectionHistoryResult'
                - description: Response containing the connection history. It is a list of Network Connection Events for a device.
                  examples:
                  - connectionHistory:
                    - connectionEventAttributes:
                      - key: BytesUsed
                        value: '0'
                      - key: Event
                        value: Start
                      extendedAttributes: []
                      occurredAt: 2015-12-17T14:12:36-05:00
                    - connectionEventAttributes:
                      - key: BytesUsed
                        value: '419863234'
                      - key: Event
                        value: Stop
                      - key: Msisdn
                        value: '15086303371'
                      extendedAttributes: []
                      occurredAt: 2015-12-19T01:20:00-05:00
                    hasMoreData: false
                contentMediaType: application/json
              example:
                connectionHistory:
                - connectionEventAttributes:
                  - key: BytesUsed
                    value: '0'
                  - key: Event
                    value: Start
                  extendedAttributes: []
                  occurredAt: 2015-12-17T14:12:36-05:00
                - connectionEventAttributes:
                  - key: BytesUsed
                    value: '419863234'
                  - key: Event
                    value: Stop
                  - key: Msisdn
                    value: '15086303371'
                  extendedAttributes: []
                  occurredAt: 2015-12-19T01:20:00-05:00
                hasMoreData: false
        '202':
          description: List of device connection events, sorted by the occurredAt timestamp, oldest first. Additional events remain.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectionHistoryResult'
                - description: Response containing the connection history. It is a list of Network Connection Events for a device.
                  examples:
                  - connectionHistory:
                    - connectionEventAttributes:
                      - key: BytesUsed
                        value: '0'
                      - key: Event
                        value: Start
                      extendedAttributes: []
                      occurredAt: 2015-12-17T14:12:36-05:00
                    - connectionEventAttributes:
                      - key: BytesUsed
                        value: '419863234'
                      - key: Event
                        value: Stop
                      - key: Msisdn
                        value: '15086303371'
                      extendedAttributes: []
                      occurredAt: 2015-12-19T01:20:00-05:00
                    hasMoreData: false
                contentMediaType: application/json
              example:
                connectionHistory:
                - connectionEventAttributes:
                  - key: BytesUsed
                    value: '0'
                  - key: Event
                    value: Start
                  extendedAttributes: []
                  occurredAt: 2015-12-17T14:12:36-05:00
                - connectionEventAttributes:
                  - key: BytesUsed
                    value: '419863234'
                  - key: Event
                    value: Stop
                  - key: Msisdn
                    value: '15086303371'
                  extendedAttributes: []
                  occurredAt: 2015-12-19T01:20:00-05:00
                hasMoreData: false
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/costCenter:
    put:
      tags:
      - Device Management
      summary: UpdateDevicesCostCenterCode
      description: Changes or removes the CostCenterCode value or customer name and address (Primary Place of Use) for one or more devices.
      operationId: UpdateDevicesCostCenterCode
      parameters: []
      requestBody:
        description: Request to update cost center code value for one or more devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceCostCenterRequest'
              - description: Request to update cost center code value for one or more devices.
                examples:
                - costCenter: cc12345
                  devices:
                  - deviceIds:
                    - id: '89148000000800139708'
                      kind: iccid
              contentMediaType: application/json
            example:
              costCenter: cc12345
              devices:
              - deviceIds:
                - id: '89148000000800139708'
                  kind: iccid
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/extendeddiagnostics/actions/list:
    post:
      tags:
      - Device Management
      summary: GetDeviceExtendedDiagnosticInformation
      description: Returns extended diagnostic information about a specified device, including connectivity, provisioning, billing and location status.
      operationId: GetDeviceExtendedDiagnosticInformation
      parameters: []
      requestBody:
        description: Request to query extended diagnostics information for a device.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceExtendedDiagnosticsRequest'
              - description: Request to query extended diagnostics information for a device.
                examples:
                - accountName: 1223334444-00001
                  deviceList:
                  - id: 10-digit MDN
                    kind: mdn
              contentMediaType: application/json
            example:
              accountName: 1223334444-00001
              deviceList:
              - id: 10-digit MDN
                kind: mdn
        required: true
      responses:
        '200':
          description: Device diagnostic information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceExtendedDiagnosticsResult'
                - description: Result for a request to obtain device extended diagnostics.
                  examples:
                  - categories:
                    - categoryName: Connectivity
                      extendedAttributes:
                      - key: Connected
                        value: 'false'
                contentMediaType: application/json
              example:
                categories:
                - categoryName: Connectivity
                  extendedAttributes:
                  - key: Connected
                    value: 'false'
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/history/actions/list:
    post:
      tags:
      - Device Management
      summary: ListDevicesProvisioningHistory
      description: Returns the provisioning history of a specified device during a specified time period.
      operationId: ListDevicesProvisioningHistory
      parameters: []
      requestBody:
        description: Query to obtain device provisioning history.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceProvisioningHistoryListRequest'
              - description: Query to obtain device provisioning history.
                examples:
                - deviceId:
                    id: '89141390780800784259'
                    kind: iccid
                  earliest: 2015-09-16T00:00:01Z
                  latest: 2015-09-18T00:00:01Z
              contentMediaType: application/json
            example:
              deviceId:
                id: '89141390780800784259'
                kind: iccid
              earliest: 2015-09-16T00:00:01Z
              latest: 2015-09-18T00:00:01Z
        required: true
      responses:
        '200':
          description: List of Device Provision History events, sorted by the timestamp, oldest first.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProvisioningHistoryListResult'
                description: List the Provisioning History responses for a device.
                examples:
                - - provisioningHistory:
                    - occurredAt: 2015-12-17T13:56:13-05:00
                      status: Success
                      eventBy: Harry Potter
                      eventType: Activation Confirmed
                      servicePlan: Tablet5GB
                      mdn: ''
                      msisdn: '15086303371'
                      extendedAttributes: []
                    hasMoreData: false
                contentMediaType: application/json
              example:
              - provisioningHistory:
                - occurredAt: 2015-12-17T13:56:13-05:00
                  status: Success
                  eventBy: Harry Potter
                  eventType: Activation Confirmed
                  servicePlan: Tablet5GB
                  mdn: ''
                  msisdn: '15086303371'
                  extendedAttributes: []
                hasMoreData: false
        '202':
          description: List of Device Provision History events, sorted by the timestamp, oldest first. Additional events remain.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceProvisioningHistoryListResult'
                description: List the Provisioning History responses for a device.
                examples:
                - - provisioningHistory:
                    - occurredAt: 2015-12-17T13:56:13-05:00
                      status: Success
                      eventBy: Harry Potter
                      eventType: Activation Confirmed
                      servicePlan: Tablet5GB
                      mdn: ''
                      msisdn: '15086303371'
                      extendedAttributes: []
                    hasMoreData: false
                contentMediaType: application/json
              example:
              - provisioningHistory:
                - occurredAt: 2015-12-17T13:56:13-05:00
                  status: Success
                  eventBy: Harry Potter
                  eventType: Activation Confirmed
                  servicePlan: Tablet5GB
                  mdn: ''
                  msisdn: '15086303371'
                  extendedAttributes: []
                hasMoreData: false
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/prl/actions/list:
    post:
      tags:
      - Device Management
      summary: ListCurrentDevicesPRLVersion
      description: 4G and GSM devices do not have a PRL.
      operationId: ListCurrentDevicesPRLVersion
      parameters: []
      requestBody:
        description: Request to query device PRL.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DevicePrlListRequest'
              - description: Request to query device PRL.
                examples:
                - groupName: West Region
                  accountName: 101234-0001
                  servicePlan: 3G 2MB
              contentMediaType: application/json
            example:
              groupName: West Region
              accountName: 101234-0001
              servicePlan: 3G 2MB
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/suspension/status:
    post:
      tags:
      - Device Management
      summary: GetDeviceServiceSuspensionStatus
      description: Returns DeviceSuspensionStatus callback messages containing the current device state and information on how many days a device has been suspended and can continue to be suspended.
      operationId: GetDeviceServiceSuspensionStatus
      parameters: []
      requestBody:
        description: Request to obtain service suspenstion status for a device.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceSuspensionStatusRequest'
              - description: Request to obtain service suspenstion status for a device.
                examples:
                - filter:
                    groupName: suspended devices
                  accountName: 1223334444-00001
              contentMediaType: application/json
            example:
              filter:
                groupName: suspended devices
              accountName: 1223334444-00001
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 904dcdc6-a590-45e4-ac76-403306f6d883
                contentMediaType: application/json
              example:
                requestId: 904dcdc6-a590-45e4-ac76-403306f6d883
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/usage/actions/list:
    post:
      tags:
      - Device Management
      summary: ListDevicesUsageHistory
      description: Returns the network data usage history of a device during a specified time period.
      operationId: ListDevicesUsageHistory
      parameters: []
      requestBody:
        description: Request to obtain usage history for a specific device.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceUsageListRequest'
              - description: Request to obtain usage history for a specific device.
                examples:
                - earliest: 2018-03-20T00:00:01Z
                  latest: 2020-12-31T00:00:01Z
              contentMediaType: application/json
            example:
              earliest: 2018-03-20T00:00:01Z
              latest: 2020-12-31T00:00:01Z
        required: true
      responses:
        '200':
          description: List of device usage events, sorted by the timestamp, oldest first.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceUsageListResult'
                - description: Response to return the daily network data usage of a single device during a specified time period.
                  examples:
                  - hasMoreData: false
                    usageHistory:
                    - bytesUsed: 4096
                      extendedAttributes:
                      - key: MoSms
                        value: '0'
                      smsUsed: 0
                      source: Raw Usage
                      timestamp: 2020-12-01T00:00:00Z
                contentMediaType: application/json
              example:
                hasMoreData: false
                usageHistory:
                - bytesUsed: 4096
                  extendedAttributes:
                  - key: MoSms
                    value: '0'
                  smsUsed: 0
                  source: Raw Usage
                  timestamp: 2020-12-01T00:00:00Z
        '202':
          description: List of device usage events, sorted by the timestamp, oldest first. Additional events remain.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceUsageListResult'
                - description: Response to return the daily network data usage of a single device during a specified time period.
                  examples:
                  - hasMoreData: false
                    usageHistory:
                    - bytesUsed: 4096
                      extendedAttributes:
                      - key: MoSms
                        value: '0'
                      smsUsed: 0
                      source: Raw Usage
                      timestamp: 2020-12-01T00:00:00Z
                contentMediaType: application/json
              example:
                hasMoreData: false
                usageHistory:
                - bytesUsed: 4096
                  extendedAttributes:
                  - key: MoSms
                    value: '0'
                  smsUsed: 0
                  source: Raw Usage
                  timestamp: 2020-12-01T00:00:00Z
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/usage/actions/list/aggregate:
    post:
      tags:
      - Device Management
      summary: RetrieveAggregateDeviceUsageHistory
      description: The information is returned in a callback response, so you must register a URL for DeviceUsage callback messages using the POST /callbacks API.
      operationId: RetrieveAggregateDeviceUsageHistory
      parameters: []
      requestBody:
        description: A request to retrieve aggregated device usage history information.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceAggregateUsageListRequest'
              - description: A request to retrieve aggregated device usage history information.
                examples:
                - '{"deviceIds":[{"id":"84258000000891490087","kind":"ICCID"}],"accountName":"9992330389-00001","endTime":"2021-08-30T00:00:00-06:00","startTime":"2021-08-01T00:00:00-06:00"}'
                - '{"accountName":"9992330389-00001","endTime":"2021-08-31T23:59:59+00:00","startTime":"2021-08-01T00:00:01+00:00"}'
                - '{"groupName":"SMS","accountName":"9992330389-00001","endTime":"2021-08-30T00:00:00-06:00","startTime":"2021-08-01T00:00:00-06:00"}'
              contentMediaType: application/json
            examples:
              one-device:
                value:
                  deviceIds:
                  - id: '84258000000891490087'
                    kind: ICCID
                  accountName: 9992330389-00001
                  endTime: 2021-08-30T00:00:00-06:00
                  startTime: 2021-08-01T00:00:00-06:00
              all-devices:
                value:
                  accountName: 9992330389-00001
                  endTime: 2021-08-31T23:59:59+00:00
                  startTime: 2021-08-01T00:00:01+00:00
              using-group-name:
                value:
                  groupName: SMS
                  accountName: 9992330389-00001
                  endTime: 2021-08-30T00:00:00-06:00
                  startTime: 2021-08-01T00:00:00-06:00
        required: true
      responses:
        '200':
          description: A unique string that associates the request with the results that are sent via a callback service.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 1631e200-7398-4609-b1f8-398341229176
                contentMediaType: application/json
              example:
                requestId: 1631e200-7398-4609-b1f8-398341229176
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/{serviceType}/actions/deviceId:
    put:
      tags:
      - Device Management
      summary: UpdateDeviceId
      description: Changes the identifier of a 3G or 4G device to match hardware changes made for a line of service. Use this request to transfer the line of service and the MDN to new hardware, or to change the MDN.
      operationId: UpdateDeviceId
      parameters:
      - name: serviceType
        in: path
        description: Identifier type.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Request to update device id.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ChangeDeviceIdRequest'
              - description: Request to update device id.
                examples:
                - '{"deviceIds":[{"id":"42590078891480000008","kind":"iccid"}],"deviceIdsTo":[{"id":"89148000000842590078","kind":"iccid"}],"change4gOption":"ChangeICCID","zipCode":"98802","servicePlan":"4G 2GB"}'
                - '{"deviceIds":[{"id":"42590078891480000008","kind":"iccid"}],"change4gOption":"ChangeMSISDN","assignNonGeoMdn":false,"npaNxx":"509393","servicePlan":"M2M2GB"}'
              contentMediaType: application/json
            examples:
              new-sim:
                value:
                  deviceIds:
                  - id: '42590078891480000008'
                    kind: iccid
                  deviceIdsTo:
                  - id: '89148000000842590078'
                    kind: iccid
                  change4gOption: ChangeICCID
                  zipCode: '98802'
                  servicePlan: 4G 2GB
              new-number:
                value:
                  deviceIds:
                  - id: '42590078891480000008'
                    kind: iccid
                  change4gOption: ChangeMSISDN
                  assignNonGeoMdn: false
                  npaNxx: '509393'
                  servicePlan: M2M2GB
        required: true
      responses:
        '200':
          description: A unique string that associates the request with the results that are sent via a callback service.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: a28892ea-6503-4aa7-bfa2-4cd45d42f61b
                contentMediaType: application/json
              example:
                requestId: a28892ea-6503-4aa7-bfa2-4cd45d42f61b
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/upload:
    post:
      tags:
      - Device Management
      summary: DeviceUpload
      description: This corresponds to the M2M-MC SOAP interface, ```DeviceUploadService```.
      operationId: DeviceUpload
      parameters: []
      requestBody:
        description: Device Upload Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceUploadRequest'
              - description: Device Upload Query
                examples:
                - accountName: 1223334444-00001
                  emailAddress: bob@mycompany.com
                  deviceSku: VZW123456
                  uploadType: IMEI
                  devices:
                  - deviceIds:
                    - kind: imei
                      id: 15-digit IMEI
                  - deviceIds:
                    - kind: imei
                      id: 15-digit IMEI
              contentMediaType: application/json
            example:
              accountName: 1223334444-00001
              emailAddress: bob@mycompany.com
              deviceSku: VZW123456
              uploadType: IMEI
              devices:
              - deviceIds:
                - kind: imei
                  id: 15-digit IMEI
              - deviceIds:
                - kind: imei
                  id: 15-digit IMEI
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Error Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/usage/actions/billedusage/list:
    post:
      tags:
      - Device Management
      summary: BilledUsageInfo
      description: Gets billed usage for for either multiple devices or an entire billing account.
      operationId: BilledUsageInfo
      parameters: []
      requestBody:
        description: Request to list devices with mismatched IMEIs and ICCIDs.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/billedusageListRequest'
              - description: Request to list devices with mismatched IMEIs and ICCIDs.
                examples:
                - accountName: 0342077109-00001
                  devices:
                  - deviceIds:
                    - kind: iccid
                      id: '8914800000080078'
                    - kind: eid
                      id: '5096300587'
              contentMediaType: application/json
            example:
              accountName: 0342077109-00001
              devices:
              - deviceIds:
                - kind: iccid
                  id: '8914800000080078'
                - kind: eid
                  id: '5096300587'
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/usagesegmentationlabels:
    post:
      tags:
      - Device Management
      summary: UsageSegmentationLabelAssociation
      description: Allows you to associate your own usage segmentation label with a device.
      operationId: UsageSegmentationLabelAssociation
      parameters: []
      requestBody:
        description: Request to associate a label to a device.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AssociateLabelRequest'
              - description: Request to associate a label to a device.
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: ec682a8b-e288-4806-934d-24e7a59ed889
                contentMediaType: application/json
              example:
                requestId: ec682a8b-e288-4806-934d-24e7a59ed889
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    delete:
      tags:
      - Device Management
      summary: UsageSegmentationLabelDeletion
      description: Allow customers to remove the associated label from a device.
      operationId: UsageSegmentationLabelDeletion
      parameters:
      - name: accountName
        in: query
        description: The numeric name of the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: LabelList
        in: query
        description: A list of the Label IDs to remove from the exclusion list.
        required: true
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/LabelsList'
          - description: A list of the Label IDs to remove from the exclusion list.
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: ec682a8b-e288-4806-934d-24e7a59ed889
                contentMediaType: application/json
              example:
                requestId: ec682a8b-e288-4806-934d-24e7a59ed889
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/uploadactivate:
    post:
      tags:
      - Device Management
      summary: ActivationOrderStatus
      description: Uploads and activates device identifiers and SKUs for new devices from OEMs to Verizon.
      operationId: ActivationOrderStatus
      parameters: []
      requestBody:
        description: Request to Uploads and activates device.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UploadsActivatesDeviceRequest'
              - description: Request to Uploads and activates device.
                examples:
                - accountName: 1223334444-00001
                  emailAddress: bob@mycompany.com
                  deviceSku: VZW123456
                  uploadType: IMEI ICCID Pair
                  servicePlan: 15MBShr
                  carrierIpPoolName: ''
                  mdnZipCode: '92222'
                  devices:
                  - deviceIds:
                    - kind: imei
                      id: '990013907835573'
                    - kind: iccid
                      id: '89141390780800784259'
              contentMediaType: application/json
            example:
              accountName: 1223334444-00001
              emailAddress: bob@mycompany.com
              deviceSku: VZW123456
              uploadType: IMEI ICCID Pair
              servicePlan: 15MBShr
              carrierIpPoolName: ''
              mdnZipCode: '92222'
              devices:
              - deviceIds:
                - kind: imei
                  id: '990013907835573'
                - kind: iccid
                  id: '89141390780800784259'
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: ec682a8b-e288-4806-934d-24e7a59ed889
                contentMediaType: application/json
              example:
                requestId: ec682a8b-e288-4806-934d-24e7a59ed889
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/requests/status:
    post:
      tags:
      - Device Management
      summary: UploadDeviceIdentifier
      description: Checks the status of an activation order and lists where the order is in the provisioning process.
      operationId: UploadDeviceIdentifier
      parameters: []
      requestBody:
        description: The request body identifies the device and reporting period that you want included in the report.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CheckOrderStatusRequest'
              - description: The request body identifies the device and reporting period that you want included in the report.
                examples:
                - accountName: '4Gpublicaccount '
                  orderRequestId: ' f55fea16-3664-4a32-ae9d-c0cbe3eedf1d '
                  devices:
                  - deviceIds:
                    - id: '20112019672551234613'
                      kind: iccid
              contentMediaType: application/json
            example:
              accountName: '4Gpublicaccount '
              orderRequestId: ' f55fea16-3664-4a32-ae9d-c0cbe3eedf1d '
              devices:
              - deviceIds:
                - id: '20112019672551234613'
                  kind: iccid
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
                contentMediaType: application/json
              example:
                requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/accounts/{aname}:
    get:
      tags:
      - Accounts
      summary: GetAccountInformation
      description: Returns information about a specified account.
      operationId: GetAccountInformation
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - Chintan_CPNStaticBulk
      responses:
        '200':
          description: The account information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Account'
                - description: Returns information about a specified account.
                  examples:
                  - accountName: Chintan_CPNStaticBulk
                    accountNumber: 1234567890-77777
                    organizationName: ChintanCPNBulk
                    isProvisioningAllowed: true
                    carriers:
                    - Verizon Wireless
                    features:
                    - Static IP
                    - Dynamic IP
                    - Customer PN
                    iPPools:
                    - poolName: ACMESTATIC001
                      poolType: Static IP
                      isDefaultPool: true
                    - poolName: ACMEDYNAMIC001
                      poolType: Dynamic IP
                      isDefaultPool: false
                    servicePlans:
                    - name: ''
                      code: '92876'
                      sizeKb: 1
                      carrierServicePlanCode: ''
                      extendedAttributes: []
                    - name: ''
                      code: '92876'
                      sizeKb: 1
                      carrierServicePlanCode: ''
                      extendedAttributes: []
                contentMediaType: application/json
              example:
                accountName: Chintan_CPNStaticBulk
                accountNumber: 1234567890-77777
                organizationName: ChintanCPNBulk
                isProvisioningAllowed: true
                carriers:
                - Verizon Wireless
                features:
                - Static IP
                - Dynamic IP
                - Customer PN
                iPPools:
                - poolName: ACMESTATIC001
                  poolType: Static IP
                  isDefaultPool: true
                - poolName: ACMEDYNAMIC001
                  poolType: Dynamic IP
                  isDefaultPool: false
                servicePlans:
                - name: ''
                  code: '92876'
                  sizeKb: 1
                  carrierServicePlanCode: ''
                  extendedAttributes: []
                - name: ''
                  code: '92876'
                  sizeKb: 1
                  carrierServicePlanCode: ''
                  extendedAttributes: []
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/accounts/{aname}/statesandservices:
    get:
      tags:
      - Accounts
      summary: ListAccountStatesAndServices
      description: Returns a list and details of all custom services and states defined for a specified account.
      operationId: ListAccountStatesAndServices
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      responses:
        '200':
          description: The account's engagements, services, and states.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccountStatesAndServices'
                - description: Returns a list and details of all custom services and states defined for a specified account.
                  examples:
                  - engagement:
                    - engagementId: '1234'
                      chargingGroup: Engagement1234
                      services:
                      - name: Svc1
                        description: Usage Segmentation - Main Line.
                        states:
                        - name: Svc1 Activate
                          workflowSequenceNumber: 1
                          servicePlans:
                          - 4523aef7250f67205fd5
                          - 4d4090c0f2d48814c94d
                        - name: Svc1 No Telematics
                          workflowSequenceNumber: 3
                          servicePlans:
                          - 4523aef7250f67205fd5
                          - 4d4090c0f2d48814c94d
                        - name: Svc1 Deactivate
                          workflowSequenceNumber: 2
                          servicePlans:
                          - 4523aef7250f67205fd5
                          - 4d4090c0f2d48814c94d
                      - name: WIFI
                        description: Usage Segmentation - WiFi.
                        states:
                        - name: WIFI Redirect
                          workflowSequenceNumber: 2
                          servicePlans:
                          - 4d4090c0f2d48814c94d
                        - name: WIFI Trial
                          workflowSequenceNumber: 4
                          servicePlans:
                          - 4d4090c0f2d48814c94d
                        - name: WIFI Goodwill
                          workflowSequenceNumber: 6
                          servicePlans:
                          - 4d4090c0f2d48814c94d
                        - name: WIFI Disable
                          workflowSequenceNumber: 3
                          servicePlans:
                          - 4d4090c0f2d48814c94d
                contentMediaType: application/json
              example:
                engagement:
                - engagementId: '1234'
                  chargingGroup: Engagement1234
                  services:
                  - name: Svc1
                    description: Usage Segmentation - Main Line.
                    states:
                    - name: Svc1 Activate
                      workflowSequenceNumber: 1
                      servicePlans:
                      - 4523aef7250f67205fd5
                      - 4d4090c0f2d48814c94d
                    - name: Svc1 No Telematics
                      workflowSequenceNumber: 3
                      servicePlans:
                      - 4523aef7250f67205fd5
                      - 4d4090c0f2d48814c94d
                    - name: Svc1 Deactivate
                      workflowSequenceNumber: 2
                      servicePlans:
                      - 4523aef7250f67205fd5
                      - 4d4090c0f2d48814c94d
                  - name: WIFI
                    description: Usage Segmentation - WiFi.
                    states:
                    - name: WIFI Redirect
                      workflowSequenceNumber: 2
                      servicePlans:
                      - 4d4090c0f2d48814c94d
                    - name: WIFI Trial
                      workflowSequenceNumber: 4
                      servicePlans:
                      - 4d4090c0f2d48814c94d
                    - name: WIFI Goodwill
                      workflowSequenceNumber: 6
                      servicePlans:
                      - 4d4090c0f2d48814c94d
                    - name: WIFI Disable
                      workflowSequenceNumber: 3
                      servicePlans:
                      - 4d4090c0f2d48814c94d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/leads/{aname}:
    get:
      tags:
      - Accounts
      summary: ListAccountLeads
      description: When HTTP status is 202, a URL will be returned in the Location header of the form /leads/{aname}?next={token}. This URL can be used to request the next set of leads.
      operationId: ListAccountLeads
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: next
        in: query
        description: Continue the previous query from the pageUrl in Location Header.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int64
      responses:
        '200':
          description: The list of leads associated with the account.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccountLeadsResult'
                - description: Returns information for all leads associated with an account.
                  examples:
                  - leads:
                    - leadId: L-10001
                      leadState: Qualified
                      address:
                        addressLine1: 1600 Pennsylvania Avenue
                        addressLine2: ''
                        city: Washington
                        state: DC
                        zip: '20500'
                        country: USA
                    hasMoreData: false
                contentMediaType: application/json
              example:
                leads:
                - leadId: L-10001
                  leadState: Qualified
                  address:
                    addressLine1: 1600 Pennsylvania Avenue
                    addressLine2: ''
                    city: Washington
                    state: DC
                    zip: '20500'
                    country: USA
                hasMoreData: false
        '202':
          description: The list of leads associated with the account, additional leads remain.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccountLeadsResult'
                - description: Returns information for all leads associated with an account.
                  examples:
                  - leads:
                    - leadId: L-10001
                      leadState: Qualified
                      address:
                        addressLine1: 1600 Pennsylvania Avenue
                        addressLine2: ''
                        city: Washington
                        state: DC
                        zip: '20500'
                        country: USA
                    hasMoreData: false
                contentMediaType: application/json
              example:
                leads:
                - leadId: L-10001
                  leadState: Qualified
                  address:
                    addressLine1: 1600 Pennsylvania Avenue
                    addressLine2: ''
                    city: Washington
                    state: DC
                    zip: '20500'
                    country: USA
                hasMoreData: false
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/groups:
    post:
      tags:
      - Device Groups
      summary: CreateDeviceGroup
      description: Create a new device group and optionally add devices to the group. Device groups can make it easier to manage similar devices and to get reports on their usage.
      operationId: CreateDeviceGroup
      parameters: []
      requestBody:
        description: A request to create a new device group.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateDeviceGroupRequest'
              - description: A request to create a new device group.
                examples:
                - accountName: 0000123456-00001
                  groupName: group name
                  groupDescription: descriptive string
                  devicesToAdd:
                  - kind: imei
                    id: 15-digit IMEI
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              groupName: group name
              groupDescription: descriptive string
              devicesToAdd:
              - kind: imei
                id: 15-digit IMEI
        required: true
      responses:
        '200':
          description: Successful response, Creates a new device group.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementSuccessResult'
                - description: Response to successful request.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/groups/{aname}:
    get:
      tags:
      - Device Groups
      summary: ListDeviceGroups
      description: Returns a list of all device groups in a specified account.
      operationId: ListDeviceGroups
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      responses:
        '200':
          description: The list of device groups in the account.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceGroup'
                description: Device group.
                examples:
                - - name: Unassigned Devices
                    description: All devices that are not in another device group.
                    isDefaultGroup: true
                    extendedAttributes: []
                  - name: West Coast Devices
                    description: ''
                    isDefaultGroup: false
                    extendedAttributes: []
                contentMediaType: application/json
              example:
              - name: Unassigned Devices
                description: All devices that are not in another device group.
                isDefaultGroup: true
                extendedAttributes: []
              - name: West Coast Devices
                description: ''
                isDefaultGroup: false
                extendedAttributes: []
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/groups/{aname}/name/{gname}:
    get:
      tags:
      - Device Groups
      summary: GetDeviceGroupInformation
      description: When HTTP status is 202, a URL will be returned in the Location header of the form /groups/{aname}/name/{gname}/?next={token}. This URL can be used to request the next set of groups.
      operationId: GetDeviceGroupInformation
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: gname
        in: path
        description: Group name.
        required: true
        style: simple
        schema:
          type: string
      - name: next
        in: query
        description: Continue the previous query from the pageUrl pagetoken.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int64
      responses:
        '200':
          description: Successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceGroupDevicesData'
                - description: Returns the name, description, and list of devices in a device group.
                  examples:
                  - name: Nebraska Trucks
                    description: All service trucks in Nebraska.
                    hasMoreData: false
                    devices:
                    - deviceIds:
                      - id: '12345'
                        kind: meid
                      - id: '54321'
                        kind: mdn
                contentMediaType: application/json
              example:
                name: Nebraska Trucks
                description: All service trucks in Nebraska.
                hasMoreData: false
                devices:
                - deviceIds:
                  - id: '12345'
                    kind: meid
                  - id: '54321'
                    kind: mdn
        '202':
          description: Successful response, additional groups remain.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceGroupDevicesData'
                - description: Returns the name, description, and list of devices in a device group.
                  examples:
                  - name: Nebraska Trucks
                    description: All service trucks in Nebraska.
                    hasMoreData: false
                    devices:
                    - deviceIds:
                      - id: '12345'
                        kind: meid
                      - id: '54321'
                        kind: mdn
                contentMediaType: application/json
              example:
                name: Nebraska Trucks
                description: All service trucks in Nebraska.
                hasMoreData: false
                devices:
                - deviceIds:
                  - id: '12345'
                    kind: meid
                  - id: '54321'
                    kind: mdn
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    put:
      tags:
      - Device Groups
      summary: UpdateDeviceGroup
      description: Make changes to a device group, including changing the name and description, and adding or removing devices.
      operationId: UpdateDeviceGroup
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: gname
        in: path
        description: Group name.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: Request to update device group.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceGroupUpdateRequest'
              - description: Request to update device group.
                examples:
                - newGroupName: Western region tanks
                  newGroupDescription: All western region tank level monitors.
                  devicesToAdd:
                  - kind: imei
                    id: '990003420535537'
              contentMediaType: application/json
            example:
              newGroupName: Western region tanks
              newGroupDescription: All western region tank level monitors.
              devicesToAdd:
              - kind: imei
                id: '990003420535537'
        required: true
      responses:
        '200':
          description: Successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementSuccessResult'
                - description: Response to successful request.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    delete:
      tags:
      - Device Groups
      summary: DeleteDeviceGroup
      description: Deletes a device group from the account. Devices in the group are moved to the default device group and are not deleted from the account.
      operationId: DeleteDeviceGroup
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: gname
        in: path
        description: Group name.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementSuccessResult'
                - description: Response to successful request.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/sms:
    post:
      tags:
      - SMS
      summary: SendSMSToDevice
      description: The messages are queued on the ThingSpace Platform and sent as soon as possible, but they may be delayed due to traffic and routing considerations.
      operationId: SendSMSToDevice
      parameters: []
      requestBody:
        description: Request to send SMS.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SMSSendRequest'
              - description: Request to send SMS.
                examples:
                - servicePlan: T Plan 2
                  smsMessage: The rain in Spain stays mainly in the plain.
              contentMediaType: application/json
            example:
              servicePlan: T Plan 2
              smsMessage: The rain in Spain stays mainly in the plain.
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/sms/{aname}/history:
    get:
      tags:
      - SMS
      summary: ListDevicesSMSMessages
      description: When HTTP status is 202, a URL will be returned in the Location header of the form /sms/{aname}/history?next={token}. This URL can be used to request the next set of messages.
      operationId: ListDevicesSMSMessages
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: next
        in: query
        description: Continue the previous query from the URL in Location Header.
        style: form
        explode: true
        schema:
          type: integer
          contentEncoding: int64
      responses:
        '200':
          description: Successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SMSMessagesQueryResult'
                - description: Response to SMS messages sent by all M2M devices associated with a billing account.
                  examples:
                  - messages:
                    - deviceIds:
                      - id: '09623489171'
                        kind: esn
                      message: testmessage1
                      timestamp: 2016-01-01T12:29:49-08:00
                    - deviceIds:
                      - id: '09623489171'
                        kind: esn
                      message: testmessage2
                      timestamp: 2016-01-01T12:31:02-08:00
                    hasMoreData: false
                contentMediaType: application/json
              example:
                messages:
                - deviceIds:
                  - id: '09623489171'
                    kind: esn
                  message: testmessage1
                  timestamp: 2016-01-01T12:29:49-08:00
                - deviceIds:
                  - id: '09623489171'
                    kind: esn
                  message: testmessage2
                  timestamp: 2016-01-01T12:31:02-08:00
                hasMoreData: false
        '202':
          description: Successful response, additional SMS messages remain.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SMSMessagesQueryResult'
                - description: Response to SMS messages sent by all M2M devices associated with a billing account.
                  examples:
                  - messages:
                    - deviceIds:
                      - id: '09623489171'
                        kind: esn
                      message: testmessage1
                      timestamp: 2016-01-01T12:29:49-08:00
                    - deviceIds:
                      - id: '09623489171'
                        kind: esn
                      message: testmessage2
                      timestamp: 2016-01-01T12:31:02-08:00
                    hasMoreData: false
                contentMediaType: application/json
              example:
                messages:
                - deviceIds:
                  - id: '09623489171'
                    kind: esn
                  message: testmessage1
                  timestamp: 2016-01-01T12:29:49-08:00
                - deviceIds:
                  - id: '09623489171'
                    kind: esn
                  message: testmessage2
                  timestamp: 2016-01-01T12:31:02-08:00
                hasMoreData: false
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/sms/{aname}/startCallbacks:
    put:
      tags:
      - SMS
      summary: StartQueuedSMSDelivery
      description: Tells the ThingSpace Platform to start sending mobile-originated SMS messages through the EnhancedConnectivityService callback service. SMS messages from devices are queued until they are retrieved by your application, either by callback or synchronously with GET /sms/{accountName}/history.
      operationId: StartQueuedSMSDelivery
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      responses:
        '200':
          description: Successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementSuccessResult'
                - description: Response to successful request.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/session/login:
    post:
      tags:
      - Session Management
      summary: StartConnectivityManagementSession
      description: Initiates a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.
      operationId: StartConnectivityManagementSession
      parameters: []
      requestBody:
        description: Request to initiate a session.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LogInRequest'
              - description: Request to initiate a session.
                examples:
                - username: zbeeblebrox
                  password: IMgr8
              contentMediaType: application/json
            example:
              username: zbeeblebrox
              password: IMgr8
        required: false
      responses:
        '200':
          description: VZ-M2M session token.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/LogInResult'
                - description: Response to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.
                  examples:
                  - sessionToken: bcce3ea6-fe4f-4952-bacf-eadd80718e83
                contentMediaType: application/json
              example:
                sessionToken: bcce3ea6-fe4f-4952-bacf-eadd80718e83
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/session/logout:
    post:
      tags:
      - Session Management
      summary: EndConnectivityManagementSession
      description: Ends a Connectivity Management session.
      operationId: EndConnectivityManagementSession
      parameters: []
      responses:
        '200':
          description: VZ-M2M session token.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/LogOutRequest'
                - description: Request to end a Connectivity Management session.
                  examples:
                  - sessionToken: bcce3ea6-fe4f-4952-bacf-eadd80718e83
                contentMediaType: application/json
              example:
                sessionToken: bcce3ea6-fe4f-4952-bacf-eadd80718e83
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/session/password/actions/reset:
    put:
      tags:
      - Session Management
      summary: ResetConnectivityManagementPassword
      description: The new password is effective immediately. Passwords do not expire, but Verizon recommends changing your password every 90 days.
      operationId: ResetConnectivityManagementPassword
      parameters: []
      requestBody:
        description: Request with current password that needs to be reset.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SessionResetPasswordRequest'
              - description: Request with current password that needs to be reset.
                examples:
                - oldPassword: grflbk
              contentMediaType: application/json
            example:
              oldPassword: grflbk
        required: true
      responses:
        '200':
          description: Returns a new, randomly generated password for the current username.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SessionResetPasswordResult'
                - description: Response to a new, randomly generated password for the current username.
                  examples:
                  - newPassword: Wh0a1545a84d
                contentMediaType: application/json
              example:
                newPassword: Wh0a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/callbacks/{aname}:
    get:
      tags:
      - Connectivity Callbacks
      summary: ListRegisteredCallbacks
      description: Returns the name and endpoint URL of the callback listening services registered for a given account.
      operationId: ListRegisteredCallbacks
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      responses:
        '200':
          description: A list of callback listeners.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectivityManagementCallback'
                description: ''
                examples:
                - - accountName: 0252012345-00001
                    serviceName: CarrierService
                    url: http://10.120.102.147:50569/CallbackListener/Carrier.asmx
                  - accountName: 0252012345-00001
                    password: drowssap
                    serviceName: DeviceUsage
                    url: http://10.120.102.147:50569/CallbackListener/Usage.asmx
                    username: zaffod
                contentMediaType: application/json
              example:
              - accountName: 0252012345-00001
                serviceName: CarrierService
                url: http://10.120.102.147:50569/CallbackListener/Carrier.asmx
              - accountName: 0252012345-00001
                password: drowssap
                serviceName: DeviceUsage
                url: http://10.120.102.147:50569/CallbackListener/Usage.asmx
                username: zaffod
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    post:
      tags:
      - Connectivity Callbacks
      summary: RegisterCallback
      description: You are responsible for creating and running a listening process on your server at that URL.
      operationId: RegisterCallback
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - TestAccount-2
      requestBody:
        description: Request to register a callback.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisterCallbackRequest'
              - description: Request to register a callback.
                examples:
                - name: CarrierService
                  url: https://mock.thingspace.verizon.com/webhook
              contentMediaType: application/json
            example:
              name: CarrierService
              url: https://mock.thingspace.verizon.com/webhook
        required: true
      responses:
        '200':
          description: A success response for registering a callback.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CallbackActionResult'
                - description: Response to a callback action.
                  examples:
                  - accountName: 122333444-00002
                    serviceName: CarrierService
                contentMediaType: application/json
              example:
                accountName: 122333444-00002
                serviceName: CarrierService
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/callbacks/{aname}/name/{sname}:
    delete:
      tags:
      - Connectivity Callbacks
      summary: DeregisterCallback
      description: Stops ThingSpace from sending callback messages for the specified account and service.
      operationId: DeregisterCallback
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 1223334444-00001
      - name: sname
        in: path
        description: Service name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - CarrierService
      responses:
        '200':
          description: Response for a request to deregister a callback.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CallbackActionResult'
                - description: Response to a callback action.
                  examples:
                  - accountName: 1223334444-00001
                    serviceName: CarrierService
                contentMediaType: application/json
              example:
                accountName: 1223334444-00001
                serviceName: CarrierService
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/accounts/{aname}/requests/{requestId}/status:
    get:
      tags:
      - Account Requests
      summary: GetCurrentAsynchronousRequestStatus
      description: Returns the current status of an asynchronous request that was made for a single device.
      operationId: GetCurrentAsynchronousRequestStatus
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: requestId
        in: path
        description: UUID from synchronous response.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 86c83330-4bf5-4235-9c4e-a83f93aeae4c
      responses:
        '200':
          description: The asynchronous request status.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AsynchronousRequestResult'
                - description: A successful request returns the request ID and the current status.
                  examples:
                  - requestId: 86c83330-4bf5-4235-9c4e-a83f93aeae4c
                    status: Success
                contentMediaType: application/json
              example:
                requestId: 86c83330-4bf5-4235-9c4e-a83f93aeae4c
                status: Success
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/plans/{aname}:
    get:
      tags:
      - Service Plans
      summary: ListAccountServicePlans
      description: Returns a list of all data service plans that are associated with a specified billing account. When you send a request to /devices/actions/activate to activate a line of service you must specify the code for one of the service plans associated with your account.
      operationId: ListAccountServicePlans
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      responses:
        '200':
          description: The list of service plans associated with the account.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServicePlan'
                description: List a service plan response.
                examples:
                - - name: 2MSHR5GB
                    code: M2MSHR5GB
                    sizeKb: 0
                    carrierServicePlanCode: '84638'
                  - name: TNTL200TALK
                    code: NTL200TALK
                    sizeKb: 0
                    carrierServicePlanCode: '74644'
                contentMediaType: application/json
              example:
              - name: 2MSHR5GB
                code: M2MSHR5GB
                sizeKb: 0
                carrierServicePlanCode: '84638'
              - name: TNTL200TALK
                code: NTL200TALK
                sizeKb: 0
                carrierServicePlanCode: '74644'
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/diagnostics/basic/devicereachability/status:
    post:
      tags:
      - Device Diagnostics
      summary: DeviceReachabilityStatusUsingPOST
      description: If the devices do not already exist in the account, this API resource adds them before activation.
      operationId: DeviceReachabilityStatusUsingPOST
      parameters: []
      requestBody:
        description: Retrieve Reachability Report Status for a device.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NotificationReportStatusRequest'
              - description: Retrieve Reachability Report Status for a device.
                examples:
                - device:
                    kind: imei
                    id: '990013907835573'
                  accountName: 0868924207-00001
                  servicePlan: m2m_4G
                  mdnZipCode: '98801'
              contentMediaType: application/json
            example:
              device:
                kind: imei
                id: '990013907835573'
              accountName: 0868924207-00001
              servicePlan: m2m_4G
              mdnZipCode: '98801'
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/diagnostics/basic/devicereachability/monitors:
    post:
      tags:
      - Device Diagnostics
      summary: RetrieveActiveMonitorsUsingPOST
      description: Retrieve all the active monitors.
      operationId: RetrieveActiveMonitorsUsingPOST
      parameters: []
      requestBody:
        description: Retrieve Monitor Request.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RetrieveMonitorsRequest'
              - description: Retrieve Monitor Request.
                examples:
                - devices:
                  - deviceIds:
                    - kind: imei
                      id: '990013907835573'
                    - kind: iccid
                      id: '89141390780800784259'
                  - deviceIds:
                    - kind: imei
                      id: '990013907884259'
                    - kind: iccid
                      id: '89141390780800735573'
                  accountName: 0868924207-00001
                  monitorType: monitorType
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: imei
                  id: '990013907835573'
                - kind: iccid
                  id: '89141390780800784259'
              - deviceIds:
                - kind: imei
                  id: '990013907884259'
                - kind: iccid
                  id: '89141390780800735573'
              accountName: 0868924207-00001
              monitorType: monitorType
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/activate_enable:
    post:
      tags:
      - Device Profile Management
      summary: ActivateDeviceThroughProfile
      description: Uses the profile to bring the device under management.
      operationId: ActivateDeviceThroughProfile
      parameters: []
      requestBody:
        description: Device Profile Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ActivateDeviceProfileRequest'
              - description: Device Profile Query
                examples:
                - devices:
                  - deviceIds:
                    - id: 32-digit EID
                      kind: eid
                    - id: 15-digit IMEI
                      kind: imei
                  accountName: 0000123456-00001
                  servicePlan: The service plan name
                  mdnZipCode: five digit zip code
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - id: 32-digit EID
                  kind: eid
                - id: 15-digit IMEI
                  kind: imei
              accountName: 0000123456-00001
              servicePlan: The service plan name
              mdnZipCode: five digit zip code
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/activate:
    post:
      tags:
      - Device Profile Management
      summary: ProfileToActivateDevice
      description: Uses the profile to activate the device.
      operationId: ProfileToActivateDevice
      parameters: []
      requestBody:
        description: Device Profile Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProfileRequest'
              - description: Device Profile Query
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/deactivate:
    post:
      tags:
      - Device Profile Management
      summary: ProfileToDeactivateDevice
      description: Uses the profile to deactivate the device.
      operationId: ProfileToDeactivateDevice
      parameters: []
      requestBody:
        description: Device Profile Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeactivateDeviceProfileRequest'
              - description: Device Profile Query
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/setfallbackattribute:
    post:
      tags:
      - Device Profile Management
      summary: ProfileToSetFallbackAttribute
      description: Allows the profile to set the fallback attribute to the device.
      operationId: ProfileToSetFallbackAttribute
      parameters: []
      requestBody:
        description: Device Profile Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SetFallbackAttributeRequest'
              - description: Device Profile Query
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/diagnostics/basic/devicereachability:
    post:
      tags:
      - Device Monitoring
      summary: DeviceReachability
      description: ''
      operationId: DeviceReachability
      parameters: []
      requestBody:
        description: Create Reachability Report Request
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NotificationReportRequest'
              - description: Create Reachability Report Request
                examples:
                - accountName: 0242072320-00001
                  requestType: REACHABLE_FOR_DATA
                  devices:
                  - deviceIds:
                    - id: '89148000004292933820'
                      kind: iccid
                    - id: '89148000003164287919'
                      kind: iccid
                  monitorExpirationTime: 2019-12-02T15:00:00-08:00Z
              contentMediaType: application/json
            example:
              accountName: 0242072320-00001
              requestType: REACHABLE_FOR_DATA
              devices:
              - deviceIds:
                - id: '89148000004292933820'
                  kind: iccid
                - id: '89148000003164287919'
                  kind: iccid
              monitorExpirationTime: 2019-12-02T15:00:00-08:00Z
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Error Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    delete:
      tags:
      - Device Monitoring
      summary: StopDeviceReachability
      description: ''
      operationId: StopDeviceReachability
      parameters:
      - name: accountName
        in: query
        description: The numeric name of the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0242123520-00001
      - name: monitorIds
        in: query
        description: The array contains the monitorIDs (UUID) for which the monitor is to be deleted.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - 35596ca6-bab4-4333-a914-42b4fc2da54c
            - 35596ca6-bab4-4333-a914-42b4fc2da54b
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Error Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/download_enable:
    post:
      tags:
      - eUICC Device Profile Management
      summary: DownloadLocalProfileToEnable
      description: Downloads an eUICC local profile to devices and enables the profile.
      operationId: DownloadLocalProfileToEnable
      parameters: []
      requestBody:
        description: Device Profile Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProfileChangeStateRequest'
              - description: Device Profile Query
                examples:
                - devices:
                  - deviceIds:
                    - kind: eid
                      id: '678912789123453456784008666456'
                    - kind: iccid
                      id: '78425989148000000840'
                  accountName: 1223334444-00001
                  smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: eid
                  id: '678912789123453456784008666456'
                - kind: iccid
                  id: '78425989148000000840'
              accountName: 1223334444-00001
              smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/download_disable:
    post:
      tags:
      - eUICC Device Profile Management
      summary: DownloadLocalProfileToDisable
      description: Downloads an eUICC local profile to devices and leaves the profile disabled.
      operationId: DownloadLocalProfileToDisable
      parameters: []
      requestBody:
        description: Device Profile Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProfileChangeStateRequest'
              - description: Device Profile Query
                examples:
                - devices:
                  - deviceIds:
                    - kind: eid
                      id: '678912789123453456784008666456'
                    - kind: iccid
                      id: '78425989148000000840'
                  accountName: 1223334444-00001
                  smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: eid
                  id: '678912789123453456784008666456'
                - kind: iccid
                  id: '78425989148000000840'
              accountName: 1223334444-00001
              smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceManagementResult'
                - description: Response to activate service for one or more devices so that they can send and receive data.
                  examples:
                  - requestId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                requestId: 595f5c44-c31c-4552-8670-020a1545a84d
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectivityManagementResult'
                - description: Response to errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/enable:
    post:
      tags:
      - eUICC Device Profile Management
      summary: EnableLocalProfile
      description: Enable a local profile that has been downloaded to eUICC devices.
      operationId: EnableLocalProfile
      parameters: []
      requestBody:
        description: Update state
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProfileChangeStateRequest'
              - description: Update state
                examples:
                - devices:
                  - deviceIds:
                    - kind: eid
                      id: '678912789123453456784008666456'
                    - kind: iccid
                      id: '78425989148000000840'
                  accountName: 1223334444-00001
                  smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: eid
                  id: '678912789123453456784008666456'
                - kind: iccid
                  id: '78425989148000000840'
              accountName: 1223334444-00001
              smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Error Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/disable:
    post:
      tags:
      - eUICC Device Profile Management
      summary: DisableLocalProfile
      description: Disable a local profile on eUICC devices. The default or boot profile will become the enabled profile.
      operationId: DisableLocalProfile
      parameters: []
      requestBody:
        description: Update state
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProfileChangeStateRequest'
              - description: Update state
                examples:
                - devices:
                  - deviceIds:
                    - kind: eid
                      id: '678912789123453456784008666456'
                    - kind: iccid
                      id: '78425989148000000840'
                  accountName: 1223334444-00001
                  smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: eid
                  id: '678912789123453456784008666456'
                - kind: iccid
                  id: '78425989148000000840'
              accountName: 1223334444-00001
              smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Error Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/delete:
    post:
      tags:
      - eUICC Device Profile Management
      summary: DeleteLocalProfile
      description: Delete a local profile from eUICC devices. If the local profile is enabled, it will first be disabled and the boot or default profile will be enabled.
      operationId: DeleteLocalProfile
      parameters: []
      requestBody:
        description: Update state
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProfileChangeStateRequest'
              - description: Update state
                examples:
                - devices:
                  - deviceIds:
                    - kind: eid
                      id: '678912789123453456784008666456'
                    - kind: iccid
                      id: '78425989148000000840'
                  accountName: 1223334444-00001
                  smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
              contentMediaType: application/json
            example:
              devices:
              - deviceIds:
                - kind: eid
                  id: '678912789123453456784008666456'
                - kind: iccid
                  id: '78425989148000000840'
              accountName: 1223334444-00001
              smsrOid: 1.3.6.1.4.1.31746.1.500.200.101.5
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestResponse'
        '400':
          description: Error Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /locations:
    post:
      tags:
      - Devices Locations
      summary: ListDevicesLocationsSynchronous
      description: This locations endpoint retrieves the locations for a list of devices.
      operationId: ListDevicesLocationsSynchronous
      parameters: []
      requestBody:
        description: Request to obtain location of devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LocationRequest'
              - description: Request to obtain location of devices.
                examples:
                - accountName: 1234567890-00001
                  accuracyMode: '0'
                  cacheMode: '1'
                  deviceList:
                  - id: '980003420535573'
                    kind: imei
                    mdn: '7892345678'
                  - id: '375535024300089'
                    kind: imei
                    mdn: '7897654321'
                  - id: A100003861E585
                    kind: meid
                    mdn: '7897650914'
              contentMediaType: application/json
            example:
              accountName: 1234567890-00001
              accuracyMode: '0'
              cacheMode: '1'
              deviceList:
              - id: '980003420535573'
                kind: imei
                mdn: '7892345678'
              - id: '375535024300089'
                kind: imei
                mdn: '7897654321'
              - id: A100003861E585
                kind: meid
                mdn: '7897650914'
        required: true
      responses:
        '200':
          description: List of JSON objects, each containing the position data or an error for a device in the request.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
                description: Location data e.g. the position data for a device or an error in the request.
                examples:
                - - msid: '7892345678'
                    pd:
                      time: '20170520004421'
                      x: '33.45324'
                      y: '-84.59621'
                      radius: '5571'
                      qos: false
                    error: {}
                  - msid: '8583239709'
                    pd:
                      time: '20170525214342'
                      x: '38.8408694'
                      y: '-105.0422583'
                      radius: '3866'
                      qos: false
                    error: {}
                  - msid: '7897654321'
                    pd: {}
                    error:
                      time: '20170525214342'
                      type: POSITION METHOD FAILURE
                      info: Exception code=ABSENT SUBSCRIBER
                contentMediaType: application/json
              example:
              - msid: '7892345678'
                pd:
                  time: '20170520004421'
                  x: '33.45324'
                  y: '-84.59621'
                  radius: '5571'
                  qos: false
                error: {}
              - msid: '8583239709'
                pd:
                  time: '20170525214342'
                  x: '38.8408694'
                  y: '-105.0422583'
                  radius: '3866'
                  qos: false
                error: {}
              - msid: '7897654321'
                pd: {}
                error:
                  time: '20170525214342'
                  type: POSITION METHOD FAILURE
                  info: Exception code=ABSENT SUBSCRIBER
        default:
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /devicelocations:
    post:
      tags:
      - Devices Locations
      summary: ListDevicesLocationsAsynchronous
      description: Requests the current or cached location of up to 10,000 IoT or consumer devices (phones, tablets. etc.). This request returns a synchronous transaction ID, and the location information for each device is returned asynchronously as a DeviceLocation callback message.
      operationId: ListDevicesLocationsAsynchronous
      parameters: []
      requestBody:
        description: An asynchronous request to obtain locations of devices.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/LocationRequest'
              - description: An asynchronous request to obtain locations of devices.
                examples:
                - accountName: 2234434445-32333
                  accuracyMode: '0'
                  cacheMode: '2'
                  deviceList:
                  - id: '354677790348290'
                    kind: imei
                    mdn: '5557337468'
              contentMediaType: '*/*'
            example:
              accountName: 2234434445-32333
              accuracyMode: '0'
              cacheMode: '2'
              deviceList:
              - id: '354677790348290'
                kind: imei
                mdn: '5557337468'
        required: true
      responses:
        '200':
          description: Request accepted; location report in progress
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SynchronousLocationRequestResult'
                - examples:
                  - txid: 4be7c858-0ef9-4b15-a0c1-95061456d835
                    status: QUEUED
                contentMediaType: application/json
              example:
                txid: 4be7c858-0ef9-4b15-a0c1-95061456d835
                status: QUEUED
        default:
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: INVALID_PARAMETER
                    errorMessage: Unregistered account
                contentMediaType: application/json
              example:
                errorCode: INVALID_PARAMETER
                errorMessage: Unregistered account
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /devicelocations/{txid}:
    delete:
      tags:
      - Devices Locations
      summary: CancelDeviceLocationRequest
      description: Cancel a queued or unfinished device location request.
      operationId: CancelDeviceLocationRequest
      parameters:
      - name: accountName
        in: query
        description: Account identifier in "##########-#####".
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 1234567890-00001
      - name: txid
        in: path
        description: Transaction ID of the request to cancel, from the synchronous response to the original request.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
      responses:
        '200':
          description: Request canceled.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TransactionID'
                - description: The transaction ID of the request that you want to cancel, from the POST /devicelocations synchronus response.
                  examples:
                  - txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                contentMediaType: application/json
              example:
                txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
        default:
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /locationreports:
    post:
      tags:
      - Devices Locations
      summary: CreateLocationReport
      description: Request an asynchronous device location report.
      operationId: CreateLocationReport
      parameters: []
      requestBody:
        description: Request for device location report.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/LocationRequest'
              - description: Request for device location report.
                examples:
                - accountName: 1234567890-00001
                  accuracyMode: '0'
                  cacheMode: '1'
                  deviceList:
                  - id: '980003420535573'
                    kind: imei
                    mdn: '7892345678'
                  - id: '375535024300089'
                    kind: imei
                    mdn: '7897654321'
                  - id: A100003861E585
                    kind: meid
                    mdn: '7897650914'
              contentMediaType: '*/*'
            example:
              accountName: 1234567890-00001
              accuracyMode: '0'
              cacheMode: '1'
              deviceList:
              - id: '980003420535573'
                kind: imei
                mdn: '7892345678'
              - id: '375535024300089'
                kind: imei
                mdn: '7897654321'
              - id: A100003861E585
                kind: meid
                mdn: '7897650914'
        required: true
      responses:
        '200':
          description: Request accepted; location report in progress.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AsynchronousLocationRequestResult'
                - examples:
                  - txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                    status: QUEUED
                contentMediaType: application/json
              example:
                txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                status: QUEUED
        default:
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /locationreports/{account}/report/{txid}/index/{startindex}:
    get:
      tags:
      - Devices Locations
      summary: RetrieveLocationReport
      description: Download a completed asynchronous device location report.
      operationId: RetrieveLocationReport
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: txid
        in: path
        description: Transaction ID from POST /locationreports response.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9
      - name: startindex
        in: path
        description: Zero-based number of the first record to return.
        required: true
        style: simple
        schema:
          type: integer
          contentEncoding: int32
          examples:
          - 0
      responses:
        '200':
          description: Location information for up to 1,000 devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/LocationReport'
                - description: Location information for up to 1,000 devices.
                  examples:
                  - startIndex: '0'
                    txid: 2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9
                    totalCount: 3
                    hasMoreData: false
                    devLocationList:
                    - error: {}
                      msid: '7892345678'
                      pd:
                        qos: false
                        radius: '5571'
                        time: '20170520004421'
                        x: '33.45324'
                        y: '-84.59621'
                    - error: {}
                      msid: '8583239709'
                      pd:
                        qos: false
                        radius: '3866'
                        time: '20170525214342'
                        x: '38.8408694'
                        y: '-105.0422583'
                    - error:
                        time: '20170525214342'
                        type: POSITION METHOD FAILURE
                        info: Exception code=ABSENT SUBSCRIBER
                      msid: '7897654321'
                      pd: {}
                contentMediaType: application/json
              example:
                startIndex: '0'
                txid: 2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9
                totalCount: 3
                hasMoreData: false
                devLocationList:
                - error: {}
                  msid: '7892345678'
                  pd:
                    qos: false
                    radius: '5571'
                    time: '20170520004421'
                    x: '33.45324'
                    y: '-84.59621'
                - error: {}
                  msid: '8583239709'
                  pd:
                    qos: false
                    radius: '3866'
                    time: '20170525214342'
                    x: '38.8408694'
                    y: '-105.0422583'
                - error:
                    time: '20170525214342'
                    type: POSITION METHOD FAILURE
                    info: Exception code=ABSENT SUBSCRIBER
                  msid: '7897654321'
                  pd: {}
        default:
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /locationreports/{account}/report/{txid}/status:
    get:
      tags:
      - Devices Locations
      summary: GetLocationReportStatus
      description: Returns the current status of a requested device location report.
      operationId: GetLocationReportStatus
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: txid
        in: path
        description: Transaction ID of the report.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
      responses:
        '200':
          description: Location report status.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/LocationReportStatus'
                - description: Status of the report.
                  examples:
                  - txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                    status: INPROGRESS
                contentMediaType: application/json
              example:
                txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                status: INPROGRESS
        default:
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /locationreports/{account}/report/{txid}:
    delete:
      tags:
      - Devices Locations
      summary: CancelQueuedLocationReportGeneration
      description: Cancel a queued device location report.
      operationId: CancelQueuedLocationReportGeneration
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: txid
        in: path
        description: Transaction ID of the report to cancel.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
      responses:
        '200':
          description: Report generation cancelled.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/TransactionID'
                - description: The transaction ID of the request that you want to cancel, from the POST /devicelocations synchronus response.
                  examples:
                  - txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                contentMediaType: application/json
              example:
                txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
        default:
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /consents:
    post:
      tags:
      - Exclusions
      summary: ExcludeDevices
      description: This consents endpoint sets a new exclusion list.
      operationId: ExcludeDevices
      parameters: []
      requestBody:
        description: Request to update account consent exclusion list.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/ConsentRequest'
              - description: Request to update account consent exclusion list.
              contentMediaType: '*/*'
        required: true
      responses:
        '200':
          description: Success response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationSuccessResult'
                - description: Whether the device location request was successful or not.
                contentMediaType: application/json
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: INVALID_PARAMETER
                    errorMessage: UWS verification failure (Could not find account {account}.)
                contentMediaType: application/json
              example:
                errorCode: INVALID_PARAMETER
                errorMessage: UWS verification failure (Could not find account {account}.)
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    delete:
      tags:
      - Exclusions
      summary: RemoveDevicesFromExclusionList
      description: Removes devices from the exclusion list so that they can be located with Device Location Services requests.
      operationId: RemoveDevicesFromExclusionList
      parameters:
      - name: accountName
        in: query
        description: The numeric name of the account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: deviceList
        in: query
        description: A list of the device IDs to remove from the exclusion list.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - IMEI
      responses:
        '200':
          description: Devices successfully removed from list.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationSuccessResult'
                - description: Whether the device location request was successful or not.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /consents/{account}/index/{startIndex}:
    get:
      tags:
      - Exclusions
      summary: ListExcludedDevices
      description: This consents endpoint retrieves a list of excluded devices in an account.
      operationId: ListExcludedDevices
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: startIndex
        in: path
        description: Zero-based number of the first record to return.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - '0'
      responses:
        '200':
          description: Excluded devices result.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DevicesConsentResult'
                - examples:
                  - accountName: 2024009649-00001
                    allDevice: false
                    hasMoreData: false
                    totalCount: 4
                    updateTime: 2018-05-18 19:20:50.076 +0000 UTC
                    exclusion:
                    - '990003420535375'
                    - '420535399000375'
                    - A100003861E585
                    - '205353759900034'
                contentMediaType: application/json
              example:
                accountName: 2024009649-00001
                allDevice: false
                hasMoreData: false
                totalCount: 4
                updateTime: 2018-05-18 19:20:50.076 +0000 UTC
                exclusion:
                - '990003420535375'
                - '420535399000375'
                - A100003861E585
                - '205353759900034'
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /subscriptions/{account}:
    get:
      tags:
      - Devices Location Subscriptions
      summary: GetLocationServiceSubscriptionStatus
      description: This subscriptions endpoint retrieves an account's current location subscription status.
      operationId: GetLocationServiceSubscriptionStatus
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Device location subscription information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationSubscription'
                - examples:
                  - accountName: 2024009649-00001
                    locType: TS-LOC-COARSE-CellID-5K
                    maxAllowance: '5000'
                    purchaseTime: 2017-05-10 06:25:25.171 +0000 UTC
                contentMediaType: application/json
              example:
                accountName: 2024009649-00001
                locType: TS-LOC-COARSE-CellID-5K
                maxAllowance: '5000'
                purchaseTime: 2017-05-10 06:25:25.171 +0000 UTC
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /usage:
    post:
      tags:
      - Devices Location Subscriptions
      summary: GetLocationServiceUsage
      description: This endpoint allows user to search for billable usage for accounts based on the provided date range.
      operationId: GetLocationServiceUsage
      parameters: []
      requestBody:
        description: Request to obtain billable usage for accounts.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/BillUsageRequest'
              - description: Request to obtain billable usage for accounts.
                examples:
                - accountName: 1234567890-00001
                  startDate: 04-01-2018
                  endDate: 04-30-2018
                  usageForAllAccounts: true
              contentMediaType: '*/*'
            example:
              accountName: 1234567890-00001
              startDate: 04-01-2018
              endDate: 04-30-2018
              usageForAllAccounts: true
        required: true
      responses:
        '200':
          description: Billable usage report.
          headers: {}
          content:
            application/json:
              schema:
                type: object
                examples:
                - accountName: 1223334444-00001
                  usageForAllAcounts: false
                  skuName: TS-LOC-COARSE-CellID-Aggr
                  transactionsAllowed: '5000'
                  totalTransactionCount: '350'
                  PrimaryAccount:
                    accountName: 1223334444-00001
                    transactionsCount: '125'
                  ManagedAccounts: []
                contentMediaType: application/json
              example:
                accountName: 1223334444-00001
                usageForAllAcounts: false
                skuName: TS-LOC-COARSE-CellID-Aggr
                transactionsAllowed: '5000'
                totalTransactionCount: '350'
                PrimaryAccount:
                  accountName: 1223334444-00001
                  transactionsCount: '125'
                ManagedAccounts: []
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /callbacks/{account}:
    get:
      tags:
      - Device Location Callbacks
      summary: ListRegisteredCallbacks
      description: Returns a list of all registered callback URLs for the account.
      operationId: GetListRegisteredCallbacks
      parameters:
      - name: account
        in: path
        description: Account number.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      responses:
        '200':
          description: List of all registered callback URLs.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceLocationCallback'
                description: ''
                examples:
                - - name: Location
                    url: http://10.120.102.147:50569/CallbackListener/Location.asmx
                  - name: Location
                    url: http://10.120.102.147:50569/CallbackListener/DeviceLocation.asmx
                contentMediaType: application/json
              example:
              - name: Location
                url: http://10.120.102.147:50569/CallbackListener/Location.asmx
              - name: Location
                url: http://10.120.102.147:50569/CallbackListener/DeviceLocation.asmx
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    post:
      tags:
      - Device Location Callbacks
      summary: RegisterCallback
      description: Provide a URL to receive messages from a ThingSpace callback service.
      operationId: PostRegisterCallback
      parameters:
      - name: account
        in: path
        description: Account number.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      requestBody:
        description: Request to register a callback.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceLocationCallback'
              - description: Request to register a callback.
                examples:
                - name: Location
                  url: http://10.120.102.183:50559/CallbackListener/LocationServiceMessages.asmx
              contentMediaType: '*/*'
            example:
              name: Location
              url: http://10.120.102.183:50559/CallbackListener/LocationServiceMessages.asmx
        required: true
      responses:
        '200':
          description: Callback registration response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CallbackRegistrationResult'
                - examples:
                  - account: 0212312345-00001
                    name: Location
                contentMediaType: application/json
              example:
                account: 0212312345-00001
                name: Location
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    put:
      tags:
      - Software Management Callbacks V2
      summary: UpdateCallback
      description: This endpoint allows user to update the HTTPS callback address.
      operationId: UpdateCallback
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: Callback URL registration.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/FotaV2CallbackRegistrationRequest'
              - description: Callback URL registration.
                examples:
                - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
              contentMediaType: '*/*'
            example:
              url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
        required: true
      responses:
        '200':
          description: Return callback registration.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2CallbackRegistrationResult'
                - description: Callback listener URL.
                  examples:
                  - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
                contentMediaType: application/json
              example:
                url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    delete:
      tags:
      - Software Management Callbacks V2
      summary: DeregisterCallback
      description: This endpoint allows user to delete a previously registered callback URL.
      operationId: DeleteDeregisterCallback2
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Result of deregistering a callback.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2SuccessResult'
                - description: Response to a successful request.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /callbacks/{account}/name/{service}:
    delete:
      tags:
      - Device Location Callbacks
      summary: DeregisterCallback
      description: Deregister a URL to stop receiving callback messages.
      operationId: DeleteDeregisterCallback
      parameters:
      - name: account
        in: path
        description: Account number.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0252012345-00001
      - name: service
        in: path
        description: Callback service name.
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/CallbackServiceName'
          - description: Callback service name.
            examples:
            - Location
      responses:
        '200':
          description: Deregistration successful.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationSuccessResult'
                - description: Whether the device location request was successful or not.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/loc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/loc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/loc/v1
        variables: {}
    parameters: []
  /usage/triggers:
    post:
      tags:
      - Usage Trigger Management
      summary: CreateNewTrigger
      description: >
        Create a new usage trigger, which will send an alert when the number of device location service transactions reaches a specified percentage of the monthly subscription amount.
      operationId: CreateNewTrigger
      parameters: []
      requestBody:
        description: License assignment.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UsageTriggerAddRequest'
              - description: License assignment.
                examples:
                - triggerName: 95% usage alert
                  accountName: 0212312345-00001
                  serviceName: Location
                  thresholdValue: '95'
                  allowExcess: true
                  sendSmsNotification: true
                  smsPhoneNumbers: '5551231234'
                  sendEmailNotification: true
                  emailAddresses: you@theinternet.com
              contentMediaType: application/json
            example:
              triggerName: 95% usage alert
              accountName: 0212312345-00001
              serviceName: Location
              thresholdValue: '95'
              allowExcess: true
              sendSmsNotification: true
              smsPhoneNumbers: '5551231234'
              sendEmailNotification: true
              emailAddresses: you@theinternet.com
        required: false
      responses:
        '200':
          description: Usage trigger Add result
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UsageTriggerResponse'
                - examples:
                  - triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
                    triggerName: 90 percent
                    accountName: 1000012345-00001
                    serviceName: Location
                    thresholdValue: '90'
                    allowExcess: true
                    sendSmsNotification: true
                    smsPhoneNumbers: '5558794321'
                    sendEmailNotification: false
                    emailAddresses: ''
                    createDate: 2018-08-11
                    updateDate: 2018-08-12
                contentMediaType: application/json
              example:
                triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
                triggerName: 90 percent
                accountName: 1000012345-00001
                serviceName: Location
                thresholdValue: '90'
                allowExcess: true
                sendSmsNotification: true
                smsPhoneNumbers: '5558794321'
                sendEmailNotification: false
                emailAddresses: ''
                createDate: 2018-08-11
                updateDate: 2018-08-12
        '400':
          description: Unexpected error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/subsc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
    parameters: []
  /usage/triggers/{triggerId}:
    post:
      tags:
      - Usage Trigger Management
      summary: UpdateTrigger
      description: >
        Update an existing usage trigger
      operationId: UpdateTrigger
      parameters:
      - name: triggerId
        in: path
        description: Usage trigger ID
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 595f5c44-c31c-4552-8670-020a1545a84d
      requestBody:
        description: New trigger values
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UsageTriggerUpdateRequest'
              - description: New trigger values
                examples:
                - accountName: 1000012345-00001
                  thresholdValue: '95'
              contentMediaType: application/json
            example:
              accountName: 1000012345-00001
              thresholdValue: '95'
        required: false
      responses:
        '200':
          description: Usage trigger Modify result
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UsageTriggerResponse'
                - examples:
                  - triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
                    triggerName: 90 percent
                    accountName: 1000012345-00001
                    serviceName: Location
                    thresholdValue: '90'
                    allowExcess: true
                    sendSmsNotification: true
                    smsPhoneNumbers: '5558794321'
                    sendEmailNotification: false
                    emailAddresses: ''
                    createDate: 2018-08-11
                    updateDate: 2018-08-12
                contentMediaType: application/json
              example:
                triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
                triggerName: 90 percent
                accountName: 1000012345-00001
                serviceName: Location
                thresholdValue: '90'
                allowExcess: true
                sendSmsNotification: true
                smsPhoneNumbers: '5558794321'
                sendEmailNotification: false
                emailAddresses: ''
                createDate: 2018-08-11
                updateDate: 2018-08-12
        '400':
          description: Unexpected error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/subsc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
    parameters: []
  /usage/accounts/{accountName}/triggers/{triggerId}:
    delete:
      tags:
      - Usage Trigger Management
      summary: DeleteTrigger
      description: eletes the specified usage trigger from the given account
      operationId: DeleteTrigger
      parameters:
      - name: accountName
        in: path
        description: Account name
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0212312345-00001
      - name: triggerId
        in: path
        description: Usage trigger ID
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 595f5c44-c31c-4552-8670-020a1545a84d
      responses:
        '200':
          description: Delete result
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationSuccessResult'
                - description: Whether the device location request was successful or not.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Unexpected error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/subsc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
    parameters: []
  /managedaccounts/actions/add:
    post:
      tags:
      - Billing
      summary: AddAccount
      description: >
        This endpoint allows user to add managed accounts to a primary account.
      operationId: AddAccount
      parameters: []
      requestBody:
        description: Service name and list of accounts to add
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ManagedAccountsAddRequest'
              - description: Service name and list of accounts to add
                examples:
                - accountName: 1234567890-00001
                  serviceName: Location
                  type: TS-LOC-COARSE-CellID-Aggr
                  managedAccList:
                  - 1223334444-00001
                  - 2334445555-00001
                  - 3445556666-00001
              contentMediaType: application/json
            example:
              accountName: 1234567890-00001
              serviceName: Location
              type: TS-LOC-COARSE-CellID-Aggr
              managedAccList:
              - 1223334444-00001
              - 2334445555-00001
              - 3445556666-00001
        required: true
      responses:
        '200':
          description: Add managed accounts response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ManagedAccountsAddResponse'
                - examples:
                  - txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                    statusList:
                    - id: 1223334444-00001
                      status: Success
                      reason: Success
                    - id: 2334445555-00001
                      status: Success
                      reason: Success
                    - id: 3445556666-00001
                      status: Success
                      reason: Success
                contentMediaType: application/json
              example:
                txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                statusList:
                - id: 1223334444-00001
                  status: Success
                  reason: Success
                - id: 2334445555-00001
                  status: Success
                  reason: Success
                - id: 3445556666-00001
                  status: Success
                  reason: Success
        '400':
          description: Unexpected error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/subsc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
    parameters: []
  /managedaccounts/actions/provision:
    post:
      tags:
      - Billing
      summary: ManagedAccountAction
      description: Activates a managed billing service relationship between a managed account and the primary account.
      operationId: ManagedAccountAction
      parameters: []
      requestBody:
        description: Service name and list of accounts to add
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ManagedAccountsProvisionRequest'
              - description: Service name and list of accounts to add
                examples:
                - accountName: 1223334444-00001
                  paccountName: 1234567890-00001
                  serviceName: Location
                  type: TS-LOC-COARSE-CellID-5K
                  txid: d4fbff33-ece4-9f02-42ef-2c90bd287e3b
              contentMediaType: application/json
            example:
              accountName: 1223334444-00001
              paccountName: 1234567890-00001
              serviceName: Location
              type: TS-LOC-COARSE-CellID-5K
              txid: d4fbff33-ece4-9f02-42ef-2c90bd287e3b
        required: true
      responses:
        '200':
          description: Managed account provision response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ManagedAccountsProvisionResponse'
                - examples:
                  - txid: 4fbff332-ece4-42ef-9f02-7e3bdc90bd28
                    accountName: 1223334444-00001
                    paccountName: 1234567890-00001
                    serviceName: Location
                    status: Success
                    reason: Success
                contentMediaType: application/json
              example:
                txid: 4fbff332-ece4-42ef-9f02-7e3bdc90bd28
                accountName: 1223334444-00001
                paccountName: 1234567890-00001
                serviceName: Location
                status: Success
                reason: Success
        '400':
          description: Unexpected error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/subsc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
    parameters: []
  /managedaccounts/actions/cancel:
    post:
      tags:
      - Billing
      summary: CancelManagedAccountAction
      description: 'Deactivates a managed billing service relationship between a managed account and the primary account. '
      operationId: CancelManagedAccountAction
      parameters: []
      requestBody:
        description: Service name and list of accounts to add
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ManagedAccountCancelRequest'
              - description: Service name and list of accounts to add
                examples:
                - accountName: 1223334444-00001
                  paccountName: 1234567890-00001
                  serviceName: Location
                  type: TS-LOC-COARSE-CellID-5K
                  txid: d4fbff33-ece4-9f02-42ef-2c90bd287e3b
              contentMediaType: application/json
            example:
              accountName: 1223334444-00001
              paccountName: 1234567890-00001
              serviceName: Location
              type: TS-LOC-COARSE-CellID-5K
              txid: d4fbff33-ece4-9f02-42ef-2c90bd287e3b
        required: true
      responses:
        '200':
          description: Managed account cancel response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ManagedAccountCancelResponse'
                - examples:
                  - txid: 4fbff332-ece4-42ef-9f02-7e3bdc90bd28
                    accountName: 1223334444-00001
                    paccountName: 1234567890-00001
                    serviceName: Location
                    status: Success
                    reason: Success
                contentMediaType: application/json
              example:
                txid: 4fbff332-ece4-42ef-9f02-7e3bdc90bd28
                accountName: 1223334444-00001
                paccountName: 1234567890-00001
                serviceName: Location
                status: Success
                reason: Success
        '400':
          description: Unexpected error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/subsc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
    parameters: []
  /managedaccounts/{accountName}/service/{serviceName}:
    get:
      tags:
      - Billing
      summary: ListManagedAccount
      description: This endpoint allows user to retrieve the list of all accounts managed by a primary account.
      operationId: ListManagedAccount
      parameters:
      - name: accountName
        in: path
        description: Primary account identifier
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 1223334444-00001
      - name: serviceName
        in: path
        description: Service name
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: List of managed accounts
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ManagedAccountsGetAllResponse'
                - examples:
                  - accountName: 2024009649-00001
                    ManagedAccAddedList:
                    - id: 1223334444-00001
                      txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                    - id: 2334445555-00001
                      txid: d4fbff33-ece4-9f02-42ef-2c90bd287e3b
                contentMediaType: application/json
              example:
                accountName: 2024009649-00001
                ManagedAccAddedList:
                - id: 1223334444-00001
                  txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
                - id: 2334445555-00001
                  txid: d4fbff33-ece4-9f02-42ef-2c90bd287e3b
        '400':
          description: Unexpected error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLocationResult'
                - description: Will be empty if there was no error.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/subsc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/subsc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/subsc/v1
        variables: {}
    parameters: []
  /licenses/{account}/index/{startIndex}:
    get:
      tags:
      - Software Management Subscriptions V1
      summary: GetAccountLicenseStatus
      description: Returns information about an account's Software Management Services licenses and a list of licensed devices.
      operationId: GetAccountLicenseStatus
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0402196254-00001
      - name: startIndex
        in: path
        description: The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices in the response, set startIndex=1000 for the second request, 2000 for the third request, etc.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - '0'
      responses:
        '200':
          description: Account license information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AccountLicenseInfo'
                - description: Account license information.
                  examples:
                  - accountName: 0402196254-00001
                    totalLicenses: 5000
                    assignedLicenses: 4319
                    hasMoreData: true
                    lastSeenDeviceId: 1000
                    deviceList:
                    - deviceId: '990003425730535'
                      assignmentTime: 2017-11-29T16:03:42.000Z
                    - deviceId: '990000473475989'
                      assignmentTime: 2017-11-29T16:03:42.000Z
                    - deviceId: '990000347475989'
                      assignmentTime: 2017-11-29T16:03:42.000Z
                    - deviceId: '990007303425535'
                      assignmentTime: 2016-11-29T15:03:36.000Z
                contentMediaType: application/json
              example:
                accountName: 0402196254-00001
                totalLicenses: 5000
                assignedLicenses: 4319
                hasMoreData: true
                lastSeenDeviceId: 1000
                deviceList:
                - deviceId: '990003425730535'
                  assignmentTime: 2017-11-29T16:03:42.000Z
                - deviceId: '990000473475989'
                  assignmentTime: 2017-11-29T16:03:42.000Z
                - deviceId: '990000347475989'
                  assignmentTime: 2017-11-29T16:03:42.000Z
                - deviceId: '990007303425535'
                  assignmentTime: 2016-11-29T15:03:36.000Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /licenses/{account}/assign:
    post:
      tags:
      - Software Management Licenses V1
      summary: AssignLicensesToDevices
      description: Assigns licenses to a specified list of devices so that firmware upgrades can be scheduled for those devices.
      operationId: AssignLicensesToDevices
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      requestBody:
        description: IMEIs of the devices to assign licenses to.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V1LicensesAssignedRemovedRequest'
              - description: IMEIs of the devices to assign licenses to.
                examples:
                - deviceList:
                  - '990003425730535'
                  - '990000473475989'
              contentMediaType: application/json
            example:
              deviceList:
              - '990003425730535'
              - '990000473475989'
        required: true
      responses:
        '200':
          description: List of licenses assigned.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V1LicensesAssignedRemovedResult'
                - description: License assignment or removal confirmation.
                  examples:
                  - accountName: 0242078689-00001
                    licCount: 9000
                    licUsedCount: 1000
                    deviceList:
                    - deviceId: '900000000000001'
                      status: LicenseAssignSuccess
                      Reason: Success
                    - deviceId: '900000000000999'
                      status: LicenseAssignSuccess
                      Reason: Success
                contentMediaType: application/json
              example:
                accountName: 0242078689-00001
                licCount: 9000
                licUsedCount: 1000
                deviceList:
                - deviceId: '900000000000001'
                  status: LicenseAssignSuccess
                  Reason: Success
                - deviceId: '900000000000999'
                  status: LicenseAssignSuccess
                  Reason: Success
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: true
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /licenses/{account}/remove:
    post:
      tags:
      - Software Management Licenses V1
      summary: RemoveLicensesFromDevices
      description: Remove unused licenses from device.
      operationId: RemoveLicensesFromDevices
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      requestBody:
        description: IMEIs of the devices to remove licenses from.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V1LicensesAssignedRemovedRequest'
              - description: IMEIs of the devices to remove licenses from.
                examples:
                - deviceList:
                  - '900000000000001'
                  - '900000000000998'
                  - '900000000000999'
              contentMediaType: application/json
            example:
              deviceList:
              - '900000000000001'
              - '900000000000998'
              - '900000000000999'
        required: true
      responses:
        '200':
          description: List of devices with license removal status.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V1LicensesAssignedRemovedResult'
                - description: License assignment or removal confirmation.
                  examples:
                  - accountName: 0242078689-00001
                    licCount: 9000
                    licUsedCount: 998
                    deviceList:
                    - deviceId: '900000000000001'
                      status: LicenseRemoveSuccess
                      Reason: Success
                    - deviceId: '900000000000998'
                      status: LicenseRemoveSuccess
                      Reason: Success
                    - deviceId: '900000000000999'
                      status: LicenseRemoveFailed
                      Reason: No license attached to device
                contentMediaType: application/json
              example:
                accountName: 0242078689-00001
                licCount: 9000
                licUsedCount: 998
                deviceList:
                - deviceId: '900000000000001'
                  status: LicenseRemoveSuccess
                  Reason: Success
                - deviceId: '900000000000998'
                  status: LicenseRemoveSuccess
                  Reason: Success
                - deviceId: '900000000000999'
                  status: LicenseRemoveFailed
                  Reason: No license attached to device
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: true
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /licenses/{account}/cancel:
    post:
      tags:
      - Software Management Licenses V1
      summary: CreateListOfLicensesToRemove
      description: Creates a list of devices from which licenses will be removed if the number of MRC licenses becomes less than the number of assigned licenses.
      operationId: CreateListOfLicensesToRemove
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      requestBody:
        description: Cancellation candidate device list.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V1ListOfLicensesToRemoveRequest'
              - description: Cancellation candidate device list.
                examples:
                - type: append
                  deviceList:
                  - '990003425730535'
                  - '990000473475989'
              contentMediaType: application/json
            example:
              type: append
              deviceList:
              - '990003425730535'
              - '990000473475989'
        required: true
      responses:
        '200':
          description: List of licenses assigned.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V1ListOfLicensesToRemoveResult'
                - description: List of licenses assigned.
                  examples:
                  - count: 2
                    deviceList:
                    - '900000000000001'
                    - '900000000000999'
                contentMediaType: application/json
              example:
                count: 2
                deviceList:
                - '900000000000001'
                - '900000000000999'
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: true
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    delete:
      tags:
      - Software Management Licenses V1
      summary: DeleteListOfLicensesToRemove
      description: Deletes the entire list of cancellation candidate devices.
      operationId: DeleteListOfLicensesToRemove
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      responses:
        '200':
          description: Upgrade canceled.
          headers: {}
          content:
            '*/*':
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1SuccessResult'
                - description: A response to a successful request contains a single Boolean value.
                  examples:
                  - success: true
                contentMediaType: '*/*'
              example:
                success: true
        '400':
          description: Unexpected error.
          headers: {}
          content:
            '*/*':
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: '*/*'
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: true
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    get:
      tags:
      - Software Management Licenses V2
      summary: ListLicensesToRemove
      description: The license cancel endpoint allows user to list registered license cancellation candidate devices.
      operationId: GetListLicensesToRemove
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      - name: startIndex
        in: query
        description: Start index to retrieve.
        style: form
        explode: true
        schema:
          type: string
      responses:
        '200':
          description: A list of license cancellation candidate devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V2ListOfLicensesToRemove'
                - description: A list of license cancellation candidate devices.
                  examples:
                  - count: 6
                    hasMoreData: false
                    updateTime: 2018-03-22 00:06:00.069 +0000 UTC
                    deviceList:
                    - '990003425730535'
                    - '990000473475989'
                    - '990005733420535'
                    - '990000347475989'
                    - '990007303425535'
                    - '990007590473489'
                contentMediaType: application/json
              example:
                count: 6
                hasMoreData: false
                updateTime: 2018-03-22 00:06:00.069 +0000 UTC
                deviceList:
                - '990003425730535'
                - '990000473475989'
                - '990005733420535'
                - '990000347475989'
                - '990007303425535'
                - '990007590473489'
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: true
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /licenses/{account}/cancel/index/{startIndex}:
    get:
      tags:
      - Software Management Licenses V1
      summary: ListLicensesToRemove
      description: Returns a list of devices from which licenses will be removed if the number of MRC licenses becomes less than the number of assigned licenses.
      operationId: ListLicensesToRemove
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      - name: startIndex
        in: path
        description: The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices in the response, set startIndex=1000 for the second request, 2000 for the third request, etc.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: List of cancellation candidate devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V1ListOfLicensesToRemove'
                - description: List of cancellation candidate devices.
                  examples:
                  - count: 6
                    hasMoreData: false
                    updateTime: 2018-03-22T12:06:06.000Z
                    deviceList:
                    - '990003425730535'
                    - '990000473475989'
                    - '990005733420535'
                    - '990000347475989'
                    - '990007303425535'
                    - '990007590473489'
                contentMediaType: application/json
              example:
                count: 6
                hasMoreData: false
                updateTime: 2018-03-22T12:06:06.000Z
                deviceList:
                - '990003425730535'
                - '990000473475989'
                - '990005733420535'
                - '990000347475989'
                - '990007303425535'
                - '990007590473489'
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: true
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /firmware/{account}:
    get:
      tags:
      - Firmware V1
      summary: ListAvailableFirmware
      description: Lists all device firmware images available for an account, based on the devices registered to that account.
      operationId: ListAvailableFirmware
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      responses:
        '200':
          description: List of available firmware.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Firmware'
                description: Array of firmware objects.
                examples:
                - - firmwareName: FOTA_Verizon_Model-A_01To02_HF
                    participantName: 0402196254-00001
                    launchDate: 2018-04-01T16:03:00.000Z
                    releaseNote: ''
                    model: Model-A
                    make: Verizon
                    fromVersion: VerizonFirmwareVersion-01
                    toVersion: VerizonFirmwareVersion-02
                contentMediaType: application/json
              example:
              - firmwareName: FOTA_Verizon_Model-A_01To02_HF
                participantName: 0402196254-00001
                launchDate: 2018-04-01T16:03:00.000Z
                releaseNote: ''
                model: Model-A
                make: Verizon
                fromVersion: VerizonFirmwareVersion-01
                toVersion: VerizonFirmwareVersion-02
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /upgrades:
    post:
      tags:
      - Firmware V1
      summary: ScheduleFirmwareUpgrade
      description: Schedules a firmware upgrade for devices.
      operationId: ScheduleFirmwareUpgrade
      parameters: []
      requestBody:
        description: Details of the firmware upgrade request.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/FirmwareUpgradeRequest'
              - description: Details of the firmware upgrade request.
                examples:
                - accountName: 0402196254-00001
                  firmwareName: FOTA_Verizon_Model-A_01To02_HF
                  firmwareTo: VerizonFirmwareVersion-02
                  startDate: 2018-04-01T16:03:00.000Z
                  deviceList:
                  - '990003425730535'
                  - '990000473475989'
              contentMediaType: application/json
            example:
              accountName: 0402196254-00001
              firmwareName: FOTA_Verizon_Model-A_01To02_HF
              firmwareTo: VerizonFirmwareVersion-02
              startDate: 2018-04-01T16:03:00.000Z
              deviceList:
              - '990003425730535'
              - '990000473475989'
        required: true
      responses:
        '200':
          description: Confirmation of successful firmware upgrade.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FirmwareUpgrade'
                - description: Array of upgrade objects with the specified status.
                  examples:
                  - id: e3a8d88a-04c6-4ef3-b039-89b62f91e962
                    accountName: 0242078689-00001
                    firmwareName: FOTA_Verizon_Model-A_01To02_HF
                    firmwareTo: VerizonFirmwareVersion-02
                    startDate: 2018-04-01
                    status: RequestPending
                    deviceList:
                    - deviceId: '990003425730535'
                      status: RequestPending
                    - deviceId: '990000473475989'
                      status: RequestPending
                contentMediaType: application/json
              example:
                id: e3a8d88a-04c6-4ef3-b039-89b62f91e962
                accountName: 0242078689-00001
                firmwareName: FOTA_Verizon_Model-A_01To02_HF
                firmwareTo: VerizonFirmwareVersion-02
                startDate: 2018-04-01
                status: RequestPending
                deviceList:
                - deviceId: '990003425730535'
                  status: RequestPending
                - deviceId: '990000473475989'
                  status: RequestPending
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /upgrades/{account}/upgrade/{upgradeId}:
    get:
      tags:
      - Firmware V1
      summary: ListFirmwareUpgradeDetails
      description: Returns information about a specified upgrade, include the target date of the upgrade, the list of devices in the upgrade, and the status of the upgrade for each device.
      operationId: ListFirmwareUpgradeDetails
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      - name: upgradeId
        in: path
        description: The UUID of the upgrade, returned by POST /upgrades when the upgrade was scheduled.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - e3a8d88a-04c6-4ef3-b039-89b62f91e962
      responses:
        '200':
          description: Firmware upgrade information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FirmwareUpgrade'
                - description: Array of upgrade objects with the specified status.
                  examples:
                  - id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                    accountName: 0402196254-00001
                    firmwareName: FOTA_Verizon_Model-A_01To02_HF
                    firmwareTo: VerizonFirmwareVersion-02
                    startDate: 2018-04-01
                    status: Queued
                    deviceList:
                    - deviceId: '900000000000002'
                      status: Device Accepted
                      resultReason: success
                    - deviceId: '900000000000003'
                      status: Device Accepted
                      resultReason: success
                contentMediaType: application/json
              example:
                id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                accountName: 0402196254-00001
                firmwareName: FOTA_Verizon_Model-A_01To02_HF
                firmwareTo: VerizonFirmwareVersion-02
                startDate: 2018-04-01
                status: Queued
                deviceList:
                - deviceId: '900000000000002'
                  status: Device Accepted
                  resultReason: success
                - deviceId: '900000000000003'
                  status: Device Accepted
                  resultReason: success
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    put:
      tags:
      - Firmware V1
      summary: UpdateFirmwareUpgradeDevices
      description: Add or remove devices from a scheduled upgrade.
      operationId: UpdateFirmwareUpgradeDevices
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      - name: upgradeId
        in: path
        description: The UUID of the upgrade, returned by POST /upgrades when the upgrade was scheduled.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - e3a8d88a-04c6-4ef3-b039-89b62f91e962
      requestBody:
        description: List of devices to add or remove.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/FirmwareUpgradeChangeRequest'
              - description: List of devices to add or remove.
                examples:
                - type: append
                  deviceList:
                  - 15-digit IMEI
                  - 15-digit IMEI
              contentMediaType: '*/*'
            example:
              type: append
              deviceList:
              - 15-digit IMEI
              - 15-digit IMEI
        required: true
      responses:
        '200':
          description: Upgrade information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FirmwareUpgradeChangeResult'
                - description: Upgrade information.
                  examples:
                  - accountName: 0000123456-00001
                    id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                    deviceList:
                    - deviceId: 15-digit IMEI
                      status: AddDeviceSucceed
                      Reason: Device added Successfully
                    - deviceId: 15-digit IMEI
                      status: AddDeviceSucceed
                      Reason: Device added Successfully
                contentMediaType: application/json
              example:
                accountName: 0000123456-00001
                id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                deviceList:
                - deviceId: 15-digit IMEI
                  status: AddDeviceSucceed
                  Reason: Device added Successfully
                - deviceId: 15-digit IMEI
                  status: AddDeviceSucceed
                  Reason: Device added Successfully
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    delete:
      tags:
      - Firmware V1
      summary: CancelScheduledFirmwareUpgrade
      description: Cancel a scheduled firmware upgrade.
      operationId: CancelScheduledFirmwareUpgrade
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      - name: upgradeId
        in: path
        description: The UUID of the scheduled upgrade that you want to cancel.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - e3a8d88a-04c6-4ef3-b039-89b62f91e962
      responses:
        '200':
          description: Upgrade canceled.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1SuccessResult'
                - description: A response to a successful request contains a single Boolean value.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /devices/{account}/index/{startIndex}:
    get:
      tags:
      - Software Management Reports V1
      summary: ListAccountDevices
      description: Returns an array of all devices in the specified account. Each device object includes information needed for managing firmware, including the device make and model, MDN and IMEI, and current firmware version.
      operationId: ListAccountDevices
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      - name: startIndex
        in: path
        description: Only return devices with IMEIs larger than this value. Use 0 for the first request. If `hasMoreData`=true in the response, use the `lastSeenDeviceId` value from the response as the startIndex in the next request.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: List of all devices in the specified account.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceListQueryResult'
                - description: List of devices.
                  examples:
                  - accountName: 0242078698-00001
                    hasMoreData: true
                    lastSeenDeviceId: 900000000001000
                    deviceList:
                    - deviceId: '900000000000001'
                      mdn: '0000040881'
                      model: Model-A
                      make: Verizon
                      firmware: VerizonFirmwareVersion-01
                      fotaEligible: true
                      licenseAssigned: true
                      upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                    - deviceId: '900000000000999'
                      mdn: '0000041879'
                      model: Model-A
                      make: Verizon
                      firmware: VerizonFirmwareVersion-01
                      fotaEligible: true
                      licenseAssigned: true
                      upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                    - deviceId: '900000000001000'
                      mdn: '0000041880'
                      model: Model-A
                      make: Verizon
                      firmware: VerizonFirmwareVersion-01
                      fotaEligible: true
                      licenseAssigned: true
                      upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                contentMediaType: application/json
              example:
                accountName: 0242078698-00001
                hasMoreData: true
                lastSeenDeviceId: 900000000001000
                deviceList:
                - deviceId: '900000000000001'
                  mdn: '0000040881'
                  model: Model-A
                  make: Verizon
                  firmware: VerizonFirmwareVersion-01
                  fotaEligible: true
                  licenseAssigned: true
                  upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                - deviceId: '900000000000999'
                  mdn: '0000041879'
                  model: Model-A
                  make: Verizon
                  firmware: VerizonFirmwareVersion-01
                  fotaEligible: true
                  licenseAssigned: true
                  upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                - deviceId: '900000000001000'
                  mdn: '0000041880'
                  model: Model-A
                  make: Verizon
                  firmware: VerizonFirmwareVersion-01
                  fotaEligible: true
                  licenseAssigned: true
                  upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /reports/{account}/status/{upgradeStatus}/index/{startIndex}:
    get:
      tags:
      - Software Management Reports V1
      summary: ListUpgradesForSpecifiedStatus
      description: Returns a list of all upgrades with a specified status.
      operationId: ListUpgradesForSpecifiedStatus
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      - name: upgradeStatus
        in: path
        description: The status of the upgrades that you want to retrieve.
        required: true
        style: simple
        schema:
          allOf:
          - $ref: '#/components/schemas/UpgradeStatus'
          - description: The status of the upgrades that you want to retrieve.
            examples:
            - RequestPending
      - name: startIndex
        in: path
        description: The zero-based number of the first record to return. Set startIndex=0 for the first request. If `hasMoreFlag`=true in the response, use the `lastSeenUpgradeId` value from the response as the startIndex in the next request.
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: A list of all upgrades with a specified status.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UpgradeListQueryResult'
                - description: Upgrade information.
                contentMediaType: application/json
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /reports/{account}/devices/{deviceId}:
    get:
      tags:
      - Software Management Reports V1
      summary: GetDeviceFirmwareUpgradeHistory
      description: Returns the upgrade history of the specified device from the previous six months.
      operationId: GetDeviceFirmwareUpgradeHistory
      parameters:
      - name: account
        in: path
        description: Account identifier in "##########-#####".
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0242078689-00001
      - name: deviceId
        in: path
        description: The IMEI of the device.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - '900000000000001'
      responses:
        '200':
          description: Device upgrade history.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceUpgradeHistory'
                description: Array of firmware upgrades that the device has had.
                examples:
                - - deviceId: '900000000000001'
                    id: f574fbb8-b291-4cc7-bf22-4e3f27977558
                    accountName: 0242078689-00001
                    firmwareFrom: VerizonFirmwareVersion-02
                    firmwareTo: VerizonFirmwareVersion-03
                    startDate: 2018-03-05
                    upgradeStartTime: 2018-03-05T19:07:21Z
                    status: UpgradeSuccess
                    reason: success
                  - deviceId: '900000000000001'
                    id: 5edade25-c06c-4b13-ba2a-fbb9ada93579
                    accountName: 0242078689-00001
                    firmwareFrom: VerizonFirmwareVersion-01
                    firmwareTo: VerizonFirmwareVersion-02
                    startDate: 2018-02-20
                    upgradeStartTime: 2018-02-20T00:03:19Z
                    status: UpgradeSuccess
                    reason: success
                contentMediaType: application/json
              example:
              - deviceId: '900000000000001'
                id: f574fbb8-b291-4cc7-bf22-4e3f27977558
                accountName: 0242078689-00001
                firmwareFrom: VerizonFirmwareVersion-02
                firmwareTo: VerizonFirmwareVersion-03
                startDate: 2018-03-05
                upgradeStartTime: 2018-03-05T19:07:21Z
                status: UpgradeSuccess
                reason: success
              - deviceId: '900000000000001'
                id: 5edade25-c06c-4b13-ba2a-fbb9ada93579
                accountName: 0242078689-00001
                firmwareFrom: VerizonFirmwareVersion-01
                firmwareTo: VerizonFirmwareVersion-02
                startDate: 2018-02-20
                upgradeStartTime: 2018-02-20T00:03:19Z
                status: UpgradeSuccess
                reason: success
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV1Result'
                - description: Response in case of any errors.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v1
        variables: {}
    parameters: []
  /licenses/{account}:
    get:
      tags:
      - Software Management Licenses V2
      summary: GetAccountLicenseStatus
      description: The endpoint allows user to list license usage.
      operationId: GetAccountLicenseStatus1
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: lastSeenDeviceId
        in: query
        description: Last seen device identifier.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 15-digit IMEI
      responses:
        '200':
          description: Summary of license assignment.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V2LicenseSummary'
                - description: Summary of license assignment.
                  examples:
                  - accountName: 0402196254-00001
                    totalLicense: 5000
                    assignedLicenses: 4319
                    hasMoreData: true
                    lastSeenDeviceId: '1000'
                    maxPageSize: 10
                    deviceList:
                    - deviceId: '990003425730535'
                      assignmentTime: 2017-11-29T16:03:42.000Z
                    - deviceId: '990000473475989'
                      assignmentTime: 2017-11-29T16:03:42.000Z
                    - deviceId: '990000347475989'
                      assignmentTime: 2017-11-29T16:03:42.000Z
                    - deviceId: '990007303425535'
                      assignmentTime: 2017-11-29T16:03:42.000Z
                contentMediaType: application/json
              example:
                accountName: 0402196254-00001
                totalLicense: 5000
                assignedLicenses: 4319
                hasMoreData: true
                lastSeenDeviceId: '1000'
                maxPageSize: 10
                deviceList:
                - deviceId: '990003425730535'
                  assignmentTime: 2017-11-29T16:03:42.000Z
                - deviceId: '990000473475989'
                  assignmentTime: 2017-11-29T16:03:42.000Z
                - deviceId: '990000347475989'
                  assignmentTime: 2017-11-29T16:03:42.000Z
                - deviceId: '990007303425535'
                  assignmentTime: 2017-11-29T16:03:42.000Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /campaigns/{account}:
    post:
      tags:
      - Campaigns V2
      summary: ScheduleCampaignFirmwareUpgrade
      description: This endpoint allows user to schedule a software upgrade.
      operationId: ScheduleCampaignFirmwareUpgrade
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: Software upgrade information.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/CampaignSoftwareUpgrade'
              - description: Software upgrade information.
                examples:
                - campaignName: FOTA_Verizon_Upgrade
                  softwareName: FOTA_Verizon_Model-A_02To03_HF
                  softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                  softwareTo: FOTA_Verizon_Model-A_02To03_HF
                  distributionType: HTTP
                  startDate: 2020-08-21
                  endDate: 2020-08-22
                  downloadAfterDate: 2020-08-21
                  downloadTimeWindowList:
                  - startTime: 20
                    endTime: 21
                  installAfterDate: 2020-08-21
                  installTimeWindowList:
                  - startTime: 22
                    endTime: 23
                  deviceList:
                  - '990013907835573'
                  - '990013907884259'
              contentMediaType: '*/*'
            example:
              campaignName: FOTA_Verizon_Upgrade
              softwareName: FOTA_Verizon_Model-A_02To03_HF
              softwareFrom: FOTA_Verizon_Model-A_00To01_HF
              softwareTo: FOTA_Verizon_Model-A_02To03_HF
              distributionType: HTTP
              startDate: 2020-08-21
              endDate: 2020-08-22
              downloadAfterDate: 2020-08-21
              downloadTimeWindowList:
              - startTime: 20
                endTime: 21
              installAfterDate: 2020-08-21
              installTimeWindowList:
              - startTime: 22
                endTime: 23
              deviceList:
              - '990013907835573'
              - '990013907884259'
        required: true
      responses:
        '200':
          description: Return software upgrade information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CampaignSoftware'
                - description: Software upgrade information.
                  examples:
                  - id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                    accountName: 0402196254-00001
                    campaignName: FOTA_Verizon_Upgrade
                    softwareName: FOTA_Verizon_Model-A_02To03_HF
                    distributionType: HTTP
                    make: Verizon
                    model: Model-A
                    softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                    softwareTo: FOTA_Verizon_Model-A_02To03_HF
                    startDate: 2020-08-21
                    endDate: 2020-08-22
                    downloadAfterDate: 2020-08-21
                    downloadTimeWindowList:
                    - startTime: 20
                      endTime: 21
                    installAfterDate: 2020-08-21
                    installTimeWindowList:
                    - startTime: 22
                      endTime: 23
                    status: CampaignRequestPending
                contentMediaType: application/json
              example:
                id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                accountName: 0402196254-00001
                campaignName: FOTA_Verizon_Upgrade
                softwareName: FOTA_Verizon_Model-A_02To03_HF
                distributionType: HTTP
                make: Verizon
                model: Model-A
                softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                softwareTo: FOTA_Verizon_Model-A_02To03_HF
                startDate: 2020-08-21
                endDate: 2020-08-22
                downloadAfterDate: 2020-08-21
                downloadTimeWindowList:
                - startTime: 20
                  endTime: 21
                installAfterDate: 2020-08-21
                installTimeWindowList:
                - startTime: 22
                  endTime: 23
                status: CampaignRequestPending
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /campaigns/{account}/{campaignId}:
    get:
      tags:
      - Campaigns V2
      summary: GetCampaignInformation
      description: This endpoint allows user to get information of a software upgrade.
      operationId: GetCampaignInformation
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Software upgrade identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
      responses:
        '200':
          description: Return software upgrade information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CampaignSoftware'
                - description: Software upgrade information.
                  examples:
                  - id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                    accountName: 0402196254-00001
                    campaignName: FOTA_Verizon_Upgrade
                    softwareName: FOTA_Verizon_Model-A_02To03_HF
                    distributionType: HTTP
                    make: Verizon
                    model: Model-A
                    softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                    softwareTo: FOTA_Verizon_Model-A_02To03_HF
                    startDate: 2020-08-21
                    endDate: 2020-08-22
                    downloadAfterDate: 2020-08-21
                    downloadTimeWindowList:
                    - startTime: 20
                      endTime: 21
                    installAfterDate: 2020-08-21
                    installTimeWindowList:
                    - startTime: 22
                      endTime: 23
                    status: CampaignEnded
                contentMediaType: application/json
              example:
                id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                accountName: 0402196254-00001
                campaignName: FOTA_Verizon_Upgrade
                softwareName: FOTA_Verizon_Model-A_02To03_HF
                distributionType: HTTP
                make: Verizon
                model: Model-A
                softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                softwareTo: FOTA_Verizon_Model-A_02To03_HF
                startDate: 2020-08-21
                endDate: 2020-08-22
                downloadAfterDate: 2020-08-21
                downloadTimeWindowList:
                - startTime: 20
                  endTime: 21
                installAfterDate: 2020-08-21
                installTimeWindowList:
                - startTime: 22
                  endTime: 23
                status: CampaignEnded
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    put:
      tags:
      - Campaigns V2
      summary: UpdateCampaignFirmwareDevices
      description: This endpoint allows user to Add or Remove devices to an existing software upgrade.
      operationId: UpdateCampaignFirmwareDevices
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Software upgrade information.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
      requestBody:
        description: Request to add or remove device to existing software upgrade information.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/V2AddOrRemoveDeviceRequest'
              - description: Request to add or remove device to existing software upgrade information.
                examples:
                - Type: remove
                  deviceList:
                  - '990013907884259'
                  - '990013907835573'
                  - '990013907833575'
              contentMediaType: '*/*'
            example:
              Type: remove
              deviceList:
              - '990013907884259'
              - '990013907835573'
              - '990013907833575'
        required: true
      responses:
        '200':
          description: Result of adding or removing devices to existing software upgrade information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V2AddOrRemoveDeviceResult'
                - description: Add or remove devices from the existing software upgrade information.
                contentMediaType: application/json
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    delete:
      tags:
      - Campaigns V2
      summary: CancelCampaign
      description: This endpoint allows user to cancel software upgrade. A software upgrade already started can not be cancelled.
      operationId: CancelCampaign
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Unique identifier of campaign.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
      responses:
        '200':
          description: Return cancellation status.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2SuccessResult'
                - description: Response to a successful request.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /campaigns/{account}/{campaignId}/dates:
    put:
      tags:
      - Campaigns V2
      summary: UpdateCampaignDates
      description: This endpoint allows user to change campaign dates and time windows. Fields which need to remain unchanged should be also provided.
      operationId: UpdateCampaignDates
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Software upgrade information.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
      requestBody:
        description: New dates and time windows.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/V2ChangeCampaignDatesRequest'
              - description: New dates and time windows.
                examples:
                - startDate: 2020-08-21
                  endDate: 2020-08-22
                  downloadAfterDate: 2020-08-21
                  downloadTimeWindowList:
                  - startTime: 3
                    endTime: 4
                  installAfterDate: 2020-08-21
                  installTimeWindowList:
                  - startTime: 5
                    endTime: 6
              contentMediaType: '*/*'
            example:
              startDate: 2020-08-21
              endDate: 2020-08-22
              downloadAfterDate: 2020-08-21
              downloadTimeWindowList:
              - startTime: 3
                endTime: 4
              installAfterDate: 2020-08-21
              installTimeWindowList:
              - startTime: 5
                endTime: 6
        required: true
      responses:
        '200':
          description: Updated campaign information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CampaignSoftware'
                - description: Software upgrade information.
                  examples:
                  - id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                    accountName: 0402196254-00001
                    campaignName: FOTA_Verizon_Upgrade
                    softwareName: FOTA_Verizon_Model-A_02To03_HF
                    distributionType: HTTP
                    make: Verizon
                    model: Model-A
                    softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                    softwareTo: FOTA_Verizon_Model-A_02To03_HF
                    startDate: 2020-08-21
                    endDate: 2020-08-22
                    downloadAfterDate: 2020-08-21
                    downloadTimeWindowList:
                    - startTime: 3
                      endTime: 4
                    - startTime: 5
                      endTime: 6
                    installAfterDate: 2020-08-21
                    installTimeWindowList:
                    - startTime: 5
                      endTime: 6
                    - startTime: 6
                      endTime: 7
                    status: RequestPending
                contentMediaType: application/json
              example:
                id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                accountName: 0402196254-00001
                campaignName: FOTA_Verizon_Upgrade
                softwareName: FOTA_Verizon_Model-A_02To03_HF
                distributionType: HTTP
                make: Verizon
                model: Model-A
                softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                softwareTo: FOTA_Verizon_Model-A_02To03_HF
                startDate: 2020-08-21
                endDate: 2020-08-22
                downloadAfterDate: 2020-08-21
                downloadTimeWindowList:
                - startTime: 3
                  endTime: 4
                - startTime: 5
                  endTime: 6
                installAfterDate: 2020-08-21
                installTimeWindowList:
                - startTime: 5
                  endTime: 6
                - startTime: 6
                  endTime: 7
                status: RequestPending
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /campaigns/files/{acc}:
    post:
      tags:
      - Campaigns V2
      summary: ScheduleFileUpgrade
      description: You can upload configuration files and schedule them in a campaign to devices.
      operationId: ScheduleFileUpgrade
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0402196254-00001
      requestBody:
        description: Device logging information.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UploadAndScheduleFileRequest'
              - description: Device logging information.
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Successful responses.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadAndScheduleFileResponse'
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /campaigns/software/{acc}:
    post:
      tags:
      - Campaigns V2
      summary: ScheduleSWUpgradeHttpDevices
      description: Campaign time windows for downloading and installing software are available as long as the device OEM supports this.
      operationId: ScheduleSWUpgradeHttpDevices
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0402196254-00001
      requestBody:
        description: Device logging information.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SchedulesSoftwareUpgradeRequest'
              - description: Device logging information.
                examples:
                - campaignName: FOTA_Verizon_Upgrade
                  softwareName: FOTA_Verizon_Model-A_02To03_HF
                  softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                  softwareTo: FOTA_Verizon_Model-A_02To03_HF
                  distributionType: HTTP
                  startDate: 2020-08-21
                  endDate: 2020-08-22
                  downloadAfterDate: 2020-08-21
                  downloadTimeWindowList:
                  - startTime: '20'
                    endTime: '21'
                  installAfterDate: 2020-08-21
                  installTimeWindowList:
                  - startTime: '22'
                    endTime: '23'
                  deviceList:
                  - '990013907835573'
                  - '990013907884259'
              contentMediaType: application/json
            example:
              campaignName: FOTA_Verizon_Upgrade
              softwareName: FOTA_Verizon_Model-A_02To03_HF
              softwareFrom: FOTA_Verizon_Model-A_00To01_HF
              softwareTo: FOTA_Verizon_Model-A_02To03_HF
              distributionType: HTTP
              startDate: 2020-08-21
              endDate: 2020-08-22
              downloadAfterDate: 2020-08-21
              downloadTimeWindowList:
              - startTime: '20'
                endTime: '21'
              installAfterDate: 2020-08-21
              installTimeWindowList:
              - startTime: '22'
                endTime: '23'
              deviceList:
              - '990013907835573'
              - '990013907884259'
        required: true
      responses:
        '200':
          description: Successful responses.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/UploadAndScheduleFileResponse'
                - examples:
                  - id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                    accountName: 0402196254-00001
                    campaignName: FOTA_Verizon_Upgrade
                    softwareName: FOTA_Verizon_Model-A_02To03_HF
                    distributionType: HTTP
                    make: Verizon
                    model: Model-A
                    softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                    softwareTo: FOTA_Verizon_Model-A_02To03_HF
                    startDate: 2020-08-21
                    endDate: 2020-08-22
                    downloadAfterDate: 2020-08-21
                    downloadTimeWindowList:
                    - startTime: '20'
                      endTime: '21'
                    installAfterDate: 2020-08-21
                    installTimeWindowList:
                    - startTime: '22'
                      endTime: '23'
                    status: CampaignRequestPending
                contentMediaType: application/json
              example:
                id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                accountName: 0402196254-00001
                campaignName: FOTA_Verizon_Upgrade
                softwareName: FOTA_Verizon_Model-A_02To03_HF
                distributionType: HTTP
                make: Verizon
                model: Model-A
                softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                softwareTo: FOTA_Verizon_Model-A_02To03_HF
                startDate: 2020-08-21
                endDate: 2020-08-22
                downloadAfterDate: 2020-08-21
                downloadTimeWindowList:
                - startTime: '20'
                  endTime: '21'
                installAfterDate: 2020-08-21
                installTimeWindowList:
                - startTime: '22'
                  endTime: '23'
                status: CampaignRequestPending
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /software/{account}:
    get:
      tags:
      - Software Management Reports V2
      summary: ListAvailableSoftware
      description: This endpoint allows user to list a certain type of software of an account.
      operationId: ListAvailableSoftware
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: distributionType
        in: query
        description: Filter distributionType to get specific type of software. Value is LWM2M, OMD-DM or HTTP.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - HTTP
      responses:
        '200':
          description: Return array of software.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoftwarePackage'
                description: Software package information.
                examples:
                - - softwareName: FOTA_Verizon_Model-A_02To03_HF
                    launchDate: 2020-08-31
                    releaseNote: ''
                    model: Model-A
                    make: Verizon
                    distributionType: HTTP
                    devicePlatformId: IoT
                contentMediaType: application/json
              example:
              - softwareName: FOTA_Verizon_Model-A_02To03_HF
                launchDate: 2020-08-31
                releaseNote: ''
                model: Model-A
                make: Verizon
                distributionType: HTTP
                devicePlatformId: IoT
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /devices/{account}:
    get:
      tags:
      - Software Management Reports V2
      summary: ListAccountDevices
      description: The device endpoint gets devices information of an account.
      operationId: GetListAccountDevices
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: lastSeenDeviceId
        in: query
        description: Last seen device identifier.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 15-digit IMEI
      - name: distributionType
        in: query
        description: Filter distributionType to get specific type of devices. Values is LWM2M, OMD-DM or HTTP.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - HTTP
      responses:
        '200':
          description: Return array of devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V2AccountDeviceList'
                - description: List of device information for an account.
                  examples:
                  - accountName: 0000123456-00001
                    hasMoreData: true
                    lastSeenDeviceId: 15-digit IMEI
                    maxPageSize: 1000
                    deviceList:
                    - deviceId: 15-digit IMEI
                      mdn: 10-digit MDN
                      model: Model-A
                      make: Verizon
                      fotaEligible: true
                      appFotaEligible: true
                      licenseAssigned: true
                      distributionType: HTTP
                      softwareList:
                      - name: FOTA_Verizon_Model-A_02To03_HF
                        version: '3'
                        upgradeTime: 2020-09-08T19:00:51.541Z
                      createTime: 2021-06-03 00:03:56.079 +0000 UTC
                      upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                      updateTime: 2021-06-03 00:03:56.079 +0000 UTC
                      refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
                    - deviceId: 15-digit IMEI
                      mdn: 10-digit MDN
                      model: Model-A
                      make: Verizon
                      fotaEligible: true
                      appFotaEligible: true
                      licenseAssigned: true
                      distributionType: HTTP
                      softwareList:
                      - name: FOTA_Verizon_Model-A_02To03_HF
                        version: '3'
                        upgradeTime: 2020-09-08T19:00:51.541Z
                      createTime: 2021-06-03 00:03:56.079 +0000 UTC
                      upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                      updateTime: 2021-06-03 00:03:56.079 +0000 UTC
                      refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
                    - deviceId: 15-digit IMEI
                      mdn: 10-digit MDN
                      model: Model-A
                      make: Verizon
                      fotaEligible: true
                      appFotaEligible: true
                      licenseAssigned: true
                      distributionType: HTTP
                      softwareList:
                      - name: FOTA_Verizon_Model-A_02To03_HF
                        version: '3'
                        upgradeTime: 2020-09-08T19:00:51.541Z
                      createTime: 2021-06-03 00:03:56.079 +0000 UTC
                      upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                      updateTime: 2021-06-03 00:03:56.079 +0000 UTC
                      refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
                contentMediaType: application/json
              example:
                accountName: 0000123456-00001
                hasMoreData: true
                lastSeenDeviceId: 15-digit IMEI
                maxPageSize: 1000
                deviceList:
                - deviceId: 15-digit IMEI
                  mdn: 10-digit MDN
                  model: Model-A
                  make: Verizon
                  fotaEligible: true
                  appFotaEligible: true
                  licenseAssigned: true
                  distributionType: HTTP
                  softwareList:
                  - name: FOTA_Verizon_Model-A_02To03_HF
                    version: '3'
                    upgradeTime: 2020-09-08T19:00:51.541Z
                  createTime: 2021-06-03 00:03:56.079 +0000 UTC
                  upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                  updateTime: 2021-06-03 00:03:56.079 +0000 UTC
                  refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
                - deviceId: 15-digit IMEI
                  mdn: 10-digit MDN
                  model: Model-A
                  make: Verizon
                  fotaEligible: true
                  appFotaEligible: true
                  licenseAssigned: true
                  distributionType: HTTP
                  softwareList:
                  - name: FOTA_Verizon_Model-A_02To03_HF
                    version: '3'
                    upgradeTime: 2020-09-08T19:00:51.541Z
                  createTime: 2021-06-03 00:03:56.079 +0000 UTC
                  upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                  updateTime: 2021-06-03 00:03:56.079 +0000 UTC
                  refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
                - deviceId: 15-digit IMEI
                  mdn: 10-digit MDN
                  model: Model-A
                  make: Verizon
                  fotaEligible: true
                  appFotaEligible: true
                  licenseAssigned: true
                  distributionType: HTTP
                  softwareList:
                  - name: FOTA_Verizon_Model-A_02To03_HF
                    version: '3'
                    upgradeTime: 2020-09-08T19:00:51.541Z
                  createTime: 2021-06-03 00:03:56.079 +0000 UTC
                  upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
                  updateTime: 2021-06-03 00:03:56.079 +0000 UTC
                  refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /reports/{account}/campaigns:
    get:
      tags:
      - Software Management Reports V2
      summary: GetCampaignHistoryByStatus
      description: The report endpoint allows user to get campaign history of an account for specified status.
      operationId: GetCampaignHistoryByStatus
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignStatus
        in: query
        description: Status of the campaign.
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: lastSeenCampaignId
        in: query
        description: Last seen campaign Id.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
      responses:
        '200':
          description: Return list of campaign history.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V2CampaignHistory'
                - description: Campaign history details.
                  examples:
                  - hasMoreData: true
                    lastSeenCampaignId: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                    campaignList:
                    - accountName: 0402196254-00001
                      id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                      campaignName: FOTA_Verizon_Upgrade
                      softwareName: FOTA_Verizon_Model-A_02To03_HF
                      distributionType: HTTP
                      softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                      softwareTo: FOTA_Verizon_Model-A_02To03_HF
                      make: Verizon
                      model: Model-A
                      startDate: 2020-08-21
                      endDate: 2020-08-22
                      downloadAfterDate: 2020-08-21
                      downloadTimeWindowList:
                      - startTime: 20
                        endTime: 21
                      installAfterDate: 2020-08-21
                      installTimeWindowList:
                      - startTime: 22
                        endTime: 23
                      status: CampaignEnded
                contentMediaType: application/json
              example:
                hasMoreData: true
                lastSeenCampaignId: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                campaignList:
                - accountName: 0402196254-00001
                  id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                  campaignName: FOTA_Verizon_Upgrade
                  softwareName: FOTA_Verizon_Model-A_02To03_HF
                  distributionType: HTTP
                  softwareFrom: FOTA_Verizon_Model-A_00To01_HF
                  softwareTo: FOTA_Verizon_Model-A_02To03_HF
                  make: Verizon
                  model: Model-A
                  startDate: 2020-08-21
                  endDate: 2020-08-22
                  downloadAfterDate: 2020-08-21
                  downloadTimeWindowList:
                  - startTime: 20
                    endTime: 21
                  installAfterDate: 2020-08-21
                  installTimeWindowList:
                  - startTime: 22
                    endTime: 23
                  status: CampaignEnded
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /reports/{account}/campaigns/{campaignId}/devices:
    get:
      tags:
      - Software Management Reports V2
      summary: GetCampaignDeviceStatus
      description: The report endpoint allows user to get the full list of device of a campaign.
      operationId: GetCampaignDeviceStatus
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Campaign identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
      - name: lastSeenDeviceId
        in: query
        description: Last seen device identifier.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 15-digit IMEI
      responses:
        '200':
          description: Return list of campaign history.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V2CampaignDevice'
                - description: List of devices in a campaign.
                  examples:
                  - totalDevice: 1148
                    hasMoreData: true
                    lastSeenDeviceId: 15-digit IMEI
                    maxPageSize: 1000
                    deviceList:
                    - deviceId: 15-digit IMEI
                      status: UpgradeSuccess
                      resultReason: DownloadInstallSucceeded
                    - deviceId: 15-digit IMEI
                      status: UpgradeSuccess
                      resultReason: DownloadInstallSucceeded
                    - deviceId: 15-digit IMEI
                      status: UpgradeSuccess
                      resultReason: DownloadInstallSucceeded
                contentMediaType: application/json
              example:
                totalDevice: 1148
                hasMoreData: true
                lastSeenDeviceId: 15-digit IMEI
                maxPageSize: 1000
                deviceList:
                - deviceId: 15-digit IMEI
                  status: UpgradeSuccess
                  resultReason: DownloadInstallSucceeded
                - deviceId: 15-digit IMEI
                  status: UpgradeSuccess
                  resultReason: DownloadInstallSucceeded
                - deviceId: 15-digit IMEI
                  status: UpgradeSuccess
                  resultReason: DownloadInstallSucceeded
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /logging/{account}/devices:
    get:
      tags:
      - Client Logging
      summary: ListDevicesWithLoggingEnabled
      description: Returns an array of all devices in the specified account for which logging is enabled.
      operationId: ListDevicesWithLoggingEnabled
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: List containing device logging status information.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceLoggingStatus'
                description: Array of logging-enabled device objects.
                examples:
                - - deviceId: '990013907835573'
                    expiryDate: 2020-10-19
                  - deviceId: '991124018926684'
                    expiryDate: 2020-10-19
                  - deviceId: '992234129057795'
                    expiryDate: 2020-10-23
                  - deviceId: '998891785613351'
                    expiryDate: 2020-10-23
                  - deviceId: '990013907835573'
                    expiryDate: 2020-10-23
                contentMediaType: application/json
              example:
              - deviceId: '990013907835573'
                expiryDate: 2020-10-19
              - deviceId: '991124018926684'
                expiryDate: 2020-10-19
              - deviceId: '992234129057795'
                expiryDate: 2020-10-23
              - deviceId: '998891785613351'
                expiryDate: 2020-10-23
              - deviceId: '990013907835573'
                expiryDate: 2020-10-23
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    put:
      tags:
      - Client Logging
      summary: EnableLoggingForDevices
      description: Each customer may have a maximum of 20 devices enabled for logging.
      operationId: EnableLoggingForDevices
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: Device logging information.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceLoggingRequest'
              - description: Device logging information.
                examples:
                - deviceIds:
                  - '990013907835573'
                  - '991124018926684'
                  - '992234129057795'
                  - '998891785613351'
                  - '990013907835573'
              contentMediaType: '*/*'
            example:
              deviceIds:
              - '990013907835573'
              - '991124018926684'
              - '992234129057795'
              - '998891785613351'
              - '990013907835573'
        required: true
      responses:
        '200':
          description: List containing device logging status information.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceLoggingStatus'
                description: Array of logging-enabled device objects.
                examples:
                - - deviceId: '990013907835573'
                    expiryDate: 2020-10-19
                  - deviceId: '991124018926684'
                    expiryDate: 2020-10-19
                  - deviceId: '992234129057795'
                    expiryDate: 2020-10-23
                  - deviceId: '998891785613351'
                    expiryDate: 2020-10-23
                  - deviceId: '990013907835573'
                    expiryDate: 2020-10-23
                contentMediaType: application/json
              example:
              - deviceId: '990013907835573'
                expiryDate: 2020-10-19
              - deviceId: '991124018926684'
                expiryDate: 2020-10-19
              - deviceId: '992234129057795'
                expiryDate: 2020-10-23
              - deviceId: '998891785613351'
                expiryDate: 2020-10-23
              - deviceId: '990013907835573'
                expiryDate: 2020-10-23
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    delete:
      tags:
      - Client Logging
      summary: DisableLoggingForDevices
      description: Turn logging off for a list of devices.
      operationId: DisableLoggingForDevices
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: deviceIds
        in: query
        description: The list of device IDs.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - '990013907835573'
      responses:
        '200':
          description: Success.
          headers: {}
          content: {}
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /logging/{account}/devices/{deviceId}:
    put:
      tags:
      - Client Logging
      summary: EnableDeviceLogging
      description: Enables logging for a specific device.
      operationId: EnableDeviceLogging
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: deviceId
        in: path
        description: Device IMEI identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - '990013907835573'
      responses:
        '200':
          description: Device logging status information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceLoggingStatus'
                - description: Device logging status information.
                  examples:
                  - deviceId: '990013907835573'
                    expiryDate: 2020-10-19
                contentMediaType: application/json
              example:
                deviceId: '990013907835573'
                expiryDate: 2020-10-19
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    delete:
      tags:
      - Client Logging
      summary: DisableDeviceLogging
      description: Disables logging for a specific device.
      operationId: DisableDeviceLogging
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: deviceId
        in: path
        description: Device IMEI identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - '990013907835573'
      responses:
        '200':
          description: Success.
          headers: {}
          content: {}
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /logging/{account}/devices/{deviceId}/logs:
    get:
      tags:
      - Client Logging
      summary: ListDeviceLogs
      description: Gets logs for a specific device.
      operationId: ListDeviceLogs
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: deviceId
        in: path
        description: Device IMEI identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - '990013907835573'
      responses:
        '200':
          description: List of device logs.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceLog'
                description: List of device logs.
                examples:
                - - deviceId: '990013907835573'
                    logTime: 2020-10-22T19:29:50.901Z
                    logType: string
                    eventLog: string
                    binaryLogFileBase64: string
                    binaryLogFilename: string
                contentMediaType: application/json
              example:
              - deviceId: '990013907835573'
                logTime: 2020-10-22T19:29:50.901Z
                logType: string
                eventLog: string
                binaryLogFileBase64: string
                binaryLogFilename: string
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /logging/{account}/devices/{deviceId}/checkInHistory:
    get:
      tags:
      - Server Logging
      summary: GetDeviceCheckInHistory
      description: Check-in history can be retrieved for any device belonging to the account, not necessarily with logging enabled.
      operationId: GetDeviceCheckInHistory
      parameters:
      - name: account
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: deviceId
        in: path
        description: Device IMEI identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - '990013907835573'
      responses:
        '200':
          description: List of check-in history entries.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CheckInHistoryItem'
                description: List of check-in history entries.
                contentMediaType: application/json
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /files/{acc}:
    get:
      tags:
      - Configuration Files
      summary: GetListOfFiles
      description: You can retrieve a list of configuration or supplementary of files for an account.
      operationId: GetListOfFiles
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0402196254-00001
      - name: distributionType
        in: query
        description: Filter the distributionType to only retrieve files for a specific distribution type.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - HTTP
      responses:
        '200':
          description: Successful responses.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrievesAvailableFilesResponseList'
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    post:
      tags:
      - Configuration Files
      summary: UploadConfigFile
      description: Uploads a configuration/supplementary file for an account. ThingSpace generates a fileName after the upload and is returned in the response.
      operationId: UploadConfigFile
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0402196254-00001
      requestBody:
        content:
          multipart/form-data:
            encoding: {}
            schema:
              type: object
              properties:
                fileupload:
                  type: string
                  description: The file to upload.
                  contentEncoding: base64
                fileVersion:
                  type: string
                  description: Version of the file.
                  examples:
                  - '1.0'
                make:
                  type: string
                  description: The software-applicable device make.
                  examples:
                  - Verizon
                model:
                  type: string
                  description: The software-applicable device model.
                  examples:
                  - VZW1
                localTargetPath:
                  type: string
                  description: Local target path on the device.
                  examples:
                  - /VZWFOTA/hello-world.txt
              contentMediaType: multipart/form-data
        required: false
      responses:
        '200':
          description: Successful responses.
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadConfigurationFilesResponse'
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV2Result'
                - description: Response for error cases.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v2
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v2
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v2
        variables: {}
    parameters: []
  /subscriptions/{acc}:
    get:
      tags:
      - Software Management Subscriptions V3
      summary: GetAccountSubscriptionStatus
      description: This endpoint retrieves a FOTA subscription by account.
      operationId: GetAccountSubscriptionStatus2
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: FOTA Subscription.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Subscription'
                - description: Information for licenses applied to devices.
                  examples:
                  - accountName: 0000123456-000001
                    purchaseType: TS-HFOTA-EVNT,TS-HFOTA-MRC
                    licenseCount: 500
                    licenseUsedCount: 400
                    updateTime: 2020-09-17T21:11:32.170Z
                contentMediaType: application/json
              example:
                accountName: 0000123456-000001
                purchaseType: TS-HFOTA-EVNT,TS-HFOTA-MRC
                licenseCount: 500
                licenseUsedCount: 400
                updateTime: 2020-09-17T21:11:32.170Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /licenses/{acc}:
    get:
      tags:
      - Software Management Licenses V3
      summary: GetAccountLicensesStatus
      description: The endpoint allows user to list license usage.
      operationId: GetAccountLicensesStatus
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: lastSeenDeviceId
        in: query
        description: Last seen device identifier.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - '0'
      responses:
        '200':
          description: Summary of license assignment.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V3LicenseSummary'
                - description: Information for FOTA licenses assigned to devices.
                  examples:
                  - accountName: 0000123456-00001
                    assignedLicenses: 4319
                    hasMoreData: true
                    lastSeenDeviceId: '1000'
                    maxPageSize: 1000
                    deviceList:
                    - deviceId: 15-digit IMEI
                      assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
                    - deviceId: 15-digit IMEI
                      assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
                contentMediaType: application/json
              example:
                accountName: 0000123456-00001
                assignedLicenses: 4319
                hasMoreData: true
                lastSeenDeviceId: '1000'
                maxPageSize: 1000
                deviceList:
                - deviceId: 15-digit IMEI
                  assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
                - deviceId: 15-digit IMEI
                  assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /licenses/{acc}/assign:
    post:
      tags:
      - Software Management Licenses V3
      summary: AssignLicensesToDevices
      description: This endpoint allows user to assign licenses to a list of devices.
      operationId: PostAssignLicensesToDevices1
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: License assignment.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V3LicenseIMEI'
              - description: License assignment.
                examples:
                - deviceList:
                  - 15-digit IMEI
                  - 15-digit IMEI
              contentMediaType: application/json
            example:
              deviceList:
              - 15-digit IMEI
              - 15-digit IMEI
        required: true
      responses:
        '200':
          description: License assignment result.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V3LicenseAssignedRemovedResult'
                - description: License assignment/removal response.
                  examples:
                  - accountName: 0000123456-00001
                    licUsedCount: 2
                    licCount: 1000
                    deviceList:
                    - deviceId: 15-digit IMEI
                      status: UpgradePending
                      resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
                      updatedTime: 2022-08-05T21:05:27.129Z
                      recentAttemptTime: 2022-10-05T21:05:01.19Z
                      nextAttemptTime: 2022-10-06T18:35:00Z
                contentMediaType: application/json
              example:
                accountName: 0000123456-00001
                licUsedCount: 2
                licCount: 1000
                deviceList:
                - deviceId: 15-digit IMEI
                  status: UpgradePending
                  resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
                  updatedTime: 2022-08-05T21:05:27.129Z
                  recentAttemptTime: 2022-10-05T21:05:01.19Z
                  nextAttemptTime: 2022-10-06T18:35:00Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /licenses/{acc}/remove:
    post:
      tags:
      - Software Management Licenses V3
      summary: RemoveLicensesFromDevices
      description: This endpoint allows user to remove licenses from a list of devices.
      operationId: PostRemoveLicensesFromDevices1
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: License removal.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V3LicenseIMEI'
              - description: License removal.
                examples:
                - deviceList:
                  - 15-digit IMEI
                  - 15-digit IMEI
                  - 15-digit IMEI
              contentMediaType: application/json
            example:
              deviceList:
              - 15-digit IMEI
              - 15-digit IMEI
              - 15-digit IMEI
        required: true
      responses:
        '200':
          description: License removal result.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V3LicenseAssignedRemovedResult'
                - description: License assignment/removal response.
                  examples:
                  - accountName: 0000123456-00001
                    licUsedCount: 998
                    licCount: 1000
                    deviceList:
                    - deviceId: 15-digit IMEI
                      status: UpgradePending
                      resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
                      updatedTime: 2022-08-05T21:05:27.129Z
                      recentAttemptTime: 2022-10-05T21:05:01.19Z
                      nextAttemptTime: 2022-10-06T18:35:00Z
                contentMediaType: application/json
              example:
                accountName: 0000123456-00001
                licUsedCount: 998
                licCount: 1000
                deviceList:
                - deviceId: 15-digit IMEI
                  status: UpgradePending
                  resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
                  updatedTime: 2022-08-05T21:05:27.129Z
                  recentAttemptTime: 2022-10-05T21:05:01.19Z
                  nextAttemptTime: 2022-10-06T18:35:00Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /campaigns/firmware/{acc}:
    post:
      tags:
      - Campaigns V3
      summary: ScheduleCampaignFirmwareUpgrade
      description: This endpoint allows a user to schedule a firmware upgrade for a list of devices.
      operationId: PostScheduleCampaignFirmwareUpgrade
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: Firmware upgrade information.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CampaignFirmwareUpgrade'
              - description: Firmware upgrade information.
                examples:
                - campaignName: Smart FOTA - test 4
                  firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
                  firmwareFrom: SR1.2.0.0-10512
                  firmwareTo: SR1.2.0.0-10657
                  protocol: LWM2M
                  startDate: 2021-09-29
                  endDate: 2021-10-01
                  campaignTimeWindowList:
                  - startTime: 18
                    endTime: 22
                  deviceList:
                  - 15-digit IMEI
              contentMediaType: application/json
            example:
              campaignName: Smart FOTA - test 4
              firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
              firmwareFrom: SR1.2.0.0-10512
              firmwareTo: SR1.2.0.0-10657
              protocol: LWM2M
              startDate: 2021-09-29
              endDate: 2021-10-01
              campaignTimeWindowList:
              - startTime: 18
                endTime: 22
              deviceList:
              - 15-digit IMEI
        required: true
      responses:
        '200':
          description: Return upgrade information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FirmwareCampaign'
                - description: Firmware upgrade information.
                  examples:
                  - id: f858b8c4-2153-11ec-8c44-aeb16d1aa652
                    accountName: 0000123456-00001
                    campaignName: Smart FOTA - test 4
                    firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
                    protocol: LWM2M
                    firmwareFrom: SR1.2.0.0-10512
                    firmwareTo: SR1.2.0.0-10657
                    make: SEQUANS Communications
                    model: GM01Q
                    status: CampaignRequestPending
                    startDate: 2021-09-29
                    endDate: 2021-10-01
                    campaignTimeWindowList:
                    - startTime: 18
                      endTime: 22
                contentMediaType: application/json
              example:
                id: f858b8c4-2153-11ec-8c44-aeb16d1aa652
                accountName: 0000123456-00001
                campaignName: Smart FOTA - test 4
                firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
                protocol: LWM2M
                firmwareFrom: SR1.2.0.0-10512
                firmwareTo: SR1.2.0.0-10657
                make: SEQUANS Communications
                model: GM01Q
                status: CampaignRequestPending
                startDate: 2021-09-29
                endDate: 2021-10-01
                campaignTimeWindowList:
                - startTime: 18
                  endTime: 22
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /campaigns/firmware/{acc}/{campaignId}:
    put:
      tags:
      - Campaigns V3
      summary: UpdateCampaignFirmwareDevices
      description: This endpoint allows user to Add or Remove devices to an existing campaign.
      operationId: PutUpdateCampaignFirmwareDevices
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Unique identifier of a campaign.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - f858b8c4-2153-11ec-8c44-aeb16d1aa652
      requestBody:
        description: Add or remove device to existing upgrade information.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V3AddOrRemoveDeviceRequest'
              - description: Add or remove device to existing upgrade information.
                examples:
                - Type: remove
                  deviceList:
                  - 15-digit IMEI
              contentMediaType: application/json
            example:
              Type: remove
              deviceList:
              - 15-digit IMEI
        required: true
      responses:
        '200':
          description: Returns add or remove devices to existing upgrade information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V3AddOrRemoveDeviceResult'
                - description: Add or remove devices to existing upgrade information.
                  examples:
                  - accountName: 0000123456-00001
                    campaignId: f858b8c4-2153-11ec-8c44-aeb16d1aa652
                    deviceList:
                    - deviceId: 15-digit IMEI
                      status: AddDeviceSucceed
                      Reason: Device added Successfully
                contentMediaType: application/json
              example:
                accountName: 0000123456-00001
                campaignId: f858b8c4-2153-11ec-8c44-aeb16d1aa652
                deviceList:
                - deviceId: 15-digit IMEI
                  status: AddDeviceSucceed
                  Reason: Device added Successfully
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /campaigns/firmware/{acc}/{campaignId}/dates:
    put:
      tags:
      - Campaigns V3
      summary: UpdateCampaignDates
      description: This endpoint allows user to change campaign dates and time windows. Fields which need to remain unchanged should be also provided.
      operationId: PutUpdateCampaignDates
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Firmware upgrade information.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - f858b8c4-2153-11ec-8c44-aeb16d1aa652
      requestBody:
        description: New dates and time windows.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V3ChangeCampaignDatesRequest'
              - description: New dates and time windows.
                examples:
                - startDate: 2022-02-23
                  endDate: 2022-02-24
                  campaignTimeWindowList:
                  - startTime: 14
                    endTime: 18
              contentMediaType: application/json
            example:
              startDate: 2022-02-23
              endDate: 2022-02-24
              campaignTimeWindowList:
              - startTime: 14
                endTime: 18
        required: true
      responses:
        '200':
          description: Updated campaign information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FirmwareCampaign'
                - description: Firmware upgrade information.
                  examples:
                  - id: 4e03b882-936a-11ec-931f-76f56843c393
                    accountName: 0000123456-00001
                    campaignName: modify-campaign-test-1
                    firmwareName: NordicSemiconductorASA_nRF9160_ee58ac77-f1fd-4960-8dc4-4d32e118a6d4_4325d595-7b69-4474-ba39-9c177930aac3
                    protocol: LWM2M
                    firmwareFrom: ee58ac77-f1fd-4960-8dc4-4d32e118a6d4
                    firmwareTo: 4325d595-7b69-4474-ba39-9c177930aac3
                    make: Nordic Semiconductor ASA
                    model: nRF9160
                    status: CampaignRequestQueued
                    startDate: 2022-02-23
                    endDate: 2022-02-24
                    campaignTimeWindowList:
                    - startTime: 14
                      endTime: 18
                contentMediaType: application/json
              example:
                id: 4e03b882-936a-11ec-931f-76f56843c393
                accountName: 0000123456-00001
                campaignName: modify-campaign-test-1
                firmwareName: NordicSemiconductorASA_nRF9160_ee58ac77-f1fd-4960-8dc4-4d32e118a6d4_4325d595-7b69-4474-ba39-9c177930aac3
                protocol: LWM2M
                firmwareFrom: ee58ac77-f1fd-4960-8dc4-4d32e118a6d4
                firmwareTo: 4325d595-7b69-4474-ba39-9c177930aac3
                make: Nordic Semiconductor ASA
                model: nRF9160
                status: CampaignRequestQueued
                startDate: 2022-02-23
                endDate: 2022-02-24
                campaignTimeWindowList:
                - startTime: 14
                  endTime: 18
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /campaigns/{acc}/{campaignId}:
    get:
      tags:
      - Campaigns V3
      summary: GetCampaignInformation
      description: This endpoint allows the user to retrieve campaign level information for a specified campaign.
      operationId: GetCampaignInformation1
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Firmware upgrade identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - f858b8c4-2153-11ec-8c44-aeb16d1aa652
      responses:
        '200':
          description: Returns firmware upgrade information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Campaign'
                - description: Firmware upgrade information.
                  examples:
                  - id: f858b8c4-2153-11ec-8c44-aeb16d1aa652
                    accountName: 0642233522-00001
                    campaignName: Smart FOTA - test 4
                    protocol: LWM2M
                    make: SEQUANS Communications
                    model: GM01Q
                    status: CampaignPreScheduled
                    startDate: 2021-09-29
                    endDate: 2021-10-01
                    firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
                    firmwareFrom: SR1.2.0.0-10512
                    firmwareTo: SR1.2.0.0-10657
                    campaignTimeWindowList:
                    - startTime: 18
                      endTime: 22
                contentMediaType: application/json
              example:
                id: f858b8c4-2153-11ec-8c44-aeb16d1aa652
                accountName: 0642233522-00001
                campaignName: Smart FOTA - test 4
                protocol: LWM2M
                make: SEQUANS Communications
                model: GM01Q
                status: CampaignPreScheduled
                startDate: 2021-09-29
                endDate: 2021-10-01
                firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
                firmwareFrom: SR1.2.0.0-10512
                firmwareTo: SR1.2.0.0-10657
                campaignTimeWindowList:
                - startTime: 18
                  endTime: 22
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    delete:
      tags:
      - Campaigns V3
      summary: CancelCampaign
      description: This endpoint allows user to cancel a firmware campaign. A firmware campaign already started can not be cancelled.
      operationId: DeleteCancelCampaign
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Firmware upgrade information.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - f858b8c4-2153-11ec-8c44-aeb16d1aa652
      responses:
        '200':
          description: Returns cancellation status.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3SuccessResult'
                - description: Cancelation status.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /reports/{acc}/firmware/campaigns:
    get:
      tags:
      - Software Management Reports V3
      summary: GetCampaignHistoryByStatus
      description: Retrieve a list of campaigns for an account that have a specified campaign status.
      operationId: GetCampaignHistoryByStatus1
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignStatus
        in: query
        description: Campaign status.
        required: true
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/CampaignStatus'
          - description: Campaign status.
            examples:
            - CampaignRequestPending
      - name: lastSeenCampaignId
        in: query
        description: Last seen campaign Id.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
      responses:
        '200':
          description: Return array of campaign history.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V3CampaignHistory'
                - description: Campaign history.
                  examples:
                  - hasMoreData: true
                    lastSeenCampaignId: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                    campaignList:
                    - accountName: 0000123456-00001
                      id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                      campaignName: FOTA_Verizon_Upgrade
                      firmwareName: FOTA_Verizon_Model-A_02To03_HF
                      firmwareFrom: FOTA_Verizon_Model-A_00To01_HF
                      firmwareTo: FOTA_Verizon_Model-A_02To03_HF
                      make: Verizon
                      model: Model-A
                      status: CampaignEnded
                      startDate: 2020-08-21
                      endDate: 2020-08-22
                      campaignTimeWindowList:
                      - startTime: 20
                        endTime: 21
                contentMediaType: application/json
              example:
                hasMoreData: true
                lastSeenCampaignId: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                campaignList:
                - accountName: 0000123456-00001
                  id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
                  campaignName: FOTA_Verizon_Upgrade
                  firmwareName: FOTA_Verizon_Model-A_02To03_HF
                  firmwareFrom: FOTA_Verizon_Model-A_00To01_HF
                  firmwareTo: FOTA_Verizon_Model-A_02To03_HF
                  make: Verizon
                  model: Model-A
                  status: CampaignEnded
                  startDate: 2020-08-21
                  endDate: 2020-08-22
                  campaignTimeWindowList:
                  - startTime: 20
                    endTime: 21
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /reports/{acc}/devices/{deviceId}:
    get:
      tags:
      - Software Management Reports V3
      summary: GetDeviceFirmwareUpgradeHistory
      description: Retrieve campaign history for a specific device.
      operationId: GetDeviceFirmwareUpgradeHistory2
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: deviceId
        in: path
        description: Device IMEI identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 15-digit IMEI
      responses:
        '200':
          description: Returns a list of firmware upgrades.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceFirmwareUpgrade'
                description: A list of firmware upgrades.
                examples:
                - - deviceId: 15-digit IMEI
                    campaignId: 252d7ffc-7e35-11ec-931d-76f56843c393
                    accountName: 0000123456-00001
                    firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512
                    firmwareFrom: SR1.2.0.0-10657
                    firmwareTo: SR1.2.0.0-10512
                    startDate: 2022-01-25
                    reportUpdatedTime: 2022-01-26 03:45:01.608 +0000 UTC
                    status: UpgradeSuccess
                    reason: Upgrade completed successfully
                  - deviceId: 15-digit IMEI
                    campaignId: 8f5e9a4a-6ce2-11ec-ace7-3ea293843397
                    accountName: 0000123456-00001
                    firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
                    firmwareFrom: SR1.2.0.0-10512
                    firmwareTo: SR1.2.0.0-10657
                    startDate: 2022-01-03
                    reportUpdatedTime: 2022-01-04 02:45:00.67 +0000 UTC
                    status: UpgradeSuccess
                    reason: Upgrade completed successfully
                contentMediaType: application/json
              example:
              - deviceId: 15-digit IMEI
                campaignId: 252d7ffc-7e35-11ec-931d-76f56843c393
                accountName: 0000123456-00001
                firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512
                firmwareFrom: SR1.2.0.0-10657
                firmwareTo: SR1.2.0.0-10512
                startDate: 2022-01-25
                reportUpdatedTime: 2022-01-26 03:45:01.608 +0000 UTC
                status: UpgradeSuccess
                reason: Upgrade completed successfully
              - deviceId: 15-digit IMEI
                campaignId: 8f5e9a4a-6ce2-11ec-ace7-3ea293843397
                accountName: 0000123456-00001
                firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
                firmwareFrom: SR1.2.0.0-10512
                firmwareTo: SR1.2.0.0-10657
                startDate: 2022-01-03
                reportUpdatedTime: 2022-01-04 02:45:00.67 +0000 UTC
                status: UpgradeSuccess
                reason: Upgrade completed successfully
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /reports/{acc}/campaigns/{campaignId}/devices:
    get:
      tags:
      - Software Management Reports V3
      summary: GetCampaignDeviceStatus
      description: Retrieve a list of all devices in a campaign and the status of each device.
      operationId: GetCampaignDeviceStatus1
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: campaignId
        in: path
        description: Campaign identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - f858b8c4-2153-11ec-8c44-aeb16d1aa652
      - name: lastSeenDeviceId
        in: query
        description: Last seen device identifier.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 15-digit IMEI
      responses:
        '200':
          description: Returns an array of campaign history.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V3CampaignDevice'
                - description: Campaign history.
                  examples:
                  - totalDevice: 2689
                    hasMoreData: true
                    lastSeenDeviceId: 15-digit IMEI
                    maxPageSize: 1000
                    deviceList:
                    - deviceId: 15-digit IMEI
                      status: UpgradePending
                      resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
                      updatedTime: 2022-08-05T21:05:27.129Z
                      recentAttemptTime: 2022-10-05T21:05:01.19Z
                      nextAttemptTime: 2022-10-06T18:35:00Z
                contentMediaType: application/json
              example:
                totalDevice: 2689
                hasMoreData: true
                lastSeenDeviceId: 15-digit IMEI
                maxPageSize: 1000
                deviceList:
                - deviceId: 15-digit IMEI
                  status: UpgradePending
                  resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
                  updatedTime: 2022-08-05T21:05:27.129Z
                  recentAttemptTime: 2022-10-05T21:05:01.19Z
                  nextAttemptTime: 2022-10-06T18:35:00Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /firmware/{acc}:
    get:
      tags:
      - Firmware V3
      summary: ListAvailableFirmware
      description: This endpoint allows user to list the firmware of an account.
      operationId: GetListAvailableFirmware
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: protocol
        in: query
        description: Filter to retrieve a specific protocol type used.
        required: true
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/FirmwareProtocol'
          - description: Filter to retrieve a specific protocol type used.
            examples:
            - LWM2M
      responses:
        '200':
          description: Returns an array of firmware objects.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FirmwarePackage'
                description: A list of available firmware.
                examples:
                - - firmwareName: VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B
                    firmwareFrom: BG96MAR04A04M1G
                    firmwareTo: BG96MAR04A04M1G_BETA0130B
                    launchDate: 2012-04-23T18:25:43.511Z
                    releaseNote: ''
                    model: LCO-277C4N
                    make: Verizon Smart Communities
                    protocol: LWM2M
                contentMediaType: application/json
              example:
              - firmwareName: VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B
                firmwareFrom: BG96MAR04A04M1G
                firmwareTo: BG96MAR04A04M1G_BETA0130B
                launchDate: 2012-04-23T18:25:43.511Z
                releaseNote: ''
                model: LCO-277C4N
                make: Verizon Smart Communities
                protocol: LWM2M
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /firmware/{acc}/devices:
    put:
      tags:
      - Firmware V3
      summary: SynchronizeDeviceFirmware
      description: Synchronize ThingSpace with the FOTA server for up to 100 devices.
      operationId: SynchronizeDeviceFirmware
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: DeviceIds to get firmware info synchronously.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/FirmwareIMEI'
              - description: DeviceIds to get firmware info synchronously.
                examples:
                - deviceList:
                  - 15-digit IMEI
              contentMediaType: application/json
            example:
              deviceList:
              - 15-digit IMEI
        required: true
      responses:
        '200':
          description: Returns device firmware information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceFirmwareList'
                - description: Device Firmware Information.
                  examples:
                  - accountName: 0000123456-00001
                    deviceFirmwarVersionList:
                    - deviceId: 15-digit IMEI
                      status: FirmwareVersionUpdateSuccess
                      firmwareVersion: SR1.2.0.0-10657
                contentMediaType: application/json
              example:
                accountName: 0000123456-00001
                deviceFirmwarVersionList:
                - deviceId: 15-digit IMEI
                  status: FirmwareVersionUpdateSuccess
                  firmwareVersion: SR1.2.0.0-10657
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /firmware/{acc}/async/{deviceId}:
    put:
      tags:
      - Firmware V3
      summary: ReportDeviceFirmware
      description: Ask a device to report its firmware version asynchronously.
      operationId: ReportDeviceFirmware
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: deviceId
        in: path
        description: Device identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 15-digit IMEI
      responses:
        '200':
          description: Device firmware version update request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceFirmwareVersionUpdateResult'
                - description: Device firmware version update response.
                contentMediaType: application/json
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /devices/{acc}:
    get:
      tags:
      - Account Devices
      summary: GetAccountDeviceInformation
      description: Retrieve account device information such as reported firmware on the devices.
      operationId: GetAccountDeviceInformation
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: lastSeenDeviceId
        in: query
        description: Last seen device identifier.
        style: form
        explode: true
        schema:
          type: string
          examples:
          - '0'
      - name: protocol
        in: query
        description: Filter to retrieve a specific protocol type used.
        style: form
        explode: true
        schema:
          allOf:
          - $ref: '#/components/schemas/DevicesProtocol'
          - description: Filter to retrieve a specific protocol type used.
            examples:
            - LWM2M
      responses:
        '200':
          description: Returns an array of devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/V3AccountDeviceList'
                - description: Array of devices.
                contentMediaType: application/json
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    post:
      tags:
      - Account Devices
      summary: ListAccountDevicesInformation
      description: Retrieve device information for a list of devices on an account.
      operationId: ListAccountDevicesInformation
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: Request device list information.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceIMEI'
              - description: Request device list information.
                examples:
                - deviceList:
                  - 15-digit IMEI
              contentMediaType: application/json
            example:
              deviceList:
              - 15-digit IMEI
        required: true
      responses:
        '200':
          description: Get device list information.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceListResult'
                - description: Device list information.
                  examples:
                  - accountName: 0000123456-00001
                    deviceCount: 1
                    deviceList:
                    - deviceId: 15-digit IMEI
                      mdn: 10-digit MDN
                      model: GM01Q
                      make: SEQUANS COMMUNICATIONS
                      firmware: SR1.2.0.0-10657
                      fotaEligible: true
                      licenseAssigned: true
                      status: Active
                      protocol: LWM2M
                      createTime: 2021-06-03 00:03:56.079 +0000 UTC
                      statusTime: 2021-06-03 00:03:56.079 +0000 UTC
                      refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
                      lastConnectionTime: 2012-04-23T18:25:43.511Z
                contentMediaType: application/json
              example:
                accountName: 0000123456-00001
                deviceCount: 1
                deviceList:
                - deviceId: 15-digit IMEI
                  mdn: 10-digit MDN
                  model: GM01Q
                  make: SEQUANS COMMUNICATIONS
                  firmware: SR1.2.0.0-10657
                  fotaEligible: true
                  licenseAssigned: true
                  status: Active
                  protocol: LWM2M
                  createTime: 2021-06-03 00:03:56.079 +0000 UTC
                  statusTime: 2021-06-03 00:03:56.079 +0000 UTC
                  refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
                  lastConnectionTime: 2012-04-23T18:25:43.511Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /callbacks/{acc}:
    get:
      tags:
      - Software Management Callbacks V3
      summary: ListRegisteredCallbacks
      description: This endpoint allows user to get the registered callback information.
      operationId: GetListRegisteredCallbacks3
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Return callback registration.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3CallbackSummary'
                - description: Callback registration information.
                  examples:
                  - url: http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
                contentMediaType: application/json
              example:
                url: http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    put:
      tags:
      - Software Management Callbacks V3
      summary: UpdateCallback
      description: This endpoint allows the user to update the HTTPS callback address.
      operationId: PutUpdateCallback
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: Callback URL registration.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/FotaV3CallbackRegistrationRequest'
              - description: Callback URL registration.
                examples:
                - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
              contentMediaType: application/json
            example:
              url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
        required: true
      responses:
        '200':
          description: Return callback registration.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3CallbackRegistrationResult'
                - description: Callback registration information.
                  examples:
                  - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
                contentMediaType: application/json
              example:
                url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    post:
      tags:
      - Software Management Callbacks V3
      summary: RegisterCallback
      description: This endpoint allows the user to create the HTTPS callback address.
      operationId: PostRegisterCallback3
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      requestBody:
        description: Callback URL registration.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/FotaV3CallbackRegistrationRequest'
              - description: Callback URL registration.
                examples:
                - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
              contentMediaType: application/json
            example:
              url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
        required: true
      responses:
        '200':
          description: Return callback registration.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3CallbackRegistrationResult'
                - description: Callback registration information.
                  examples:
                  - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
                contentMediaType: application/json
              example:
                url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    delete:
      tags:
      - Software Management Callbacks V3
      summary: DeregisterCallback
      description: This endpoint allows user to delete a previously registered callback URL.
      operationId: DeleteDeregisterCallback3
      parameters:
      - name: acc
        in: path
        description: Account identifier.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Delete request result.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3SuccessResult'
                - description: Cancelation status.
                  examples:
                  - success: true
                contentMediaType: application/json
              example:
                success: true
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FotaV3Result'
                - description: Error response.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/fota/v3
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/fota/v3
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/fota/v3
        variables: {}
    parameters: []
  /v1/devices/license/actions/assign:
    post:
      tags:
      - SIM Secure for IoT Licenses
      summary: AssignLicenseToDevices
      description: Assigns SIM-Secure for IoT licenses to SIMs.
      operationId: AssignLicenseToDevices
      parameters:
      - name: X-Request-ID
        in: header
        description: Transaction Id.
        style: simple
        schema:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9]-[0-9]{3,32}$
          type: string
      requestBody:
        description: Request to assign license to devices.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AssignLicenseRequest'
              - description: Request to assign license to devices.
                examples:
                - accountName: 0000123456-00001
                  skuNumber: SIMSec-IoT-Lt
                  devices:
                  - deviceIds:
                    - id: '864508030109877'
                      kind: IMEI
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              skuNumber: SIMSec-IoT-Lt
              devices:
              - deviceIds:
                - id: '864508030109877'
                  kind: IMEI
        required: true
      responses:
        '200':
          description: Success response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecuritySuccessResult'
                - description: Success response.
                  examples:
                  - requestId: c3f3d17c-79ff-4b35-82df-94446785b6e0
                contentMediaType: application/json
              example:
                requestId: c3f3d17c-79ff-4b35-82df-94446785b6e0
        '400':
          description: Bad request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '401':
          description: Unauthorized request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '403':
          description: Request Forbidden.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '404':
          description: Not Found / Does not exist.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '406':
          description: Format / Request Unacceptable.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '429':
          description: Too many requests.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/m2m
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/m2m
        variables: {}
    delete:
      tags:
      - SIM Secure for IoT Licenses
      summary: UnassignLicenseToDevices
      description: Unassigns SIM-Secure for IoT Flexible and Flexible Bundle license from SIMs.
      operationId: UnassignLicenseToDevices
      parameters:
      - name: X-Request-ID
        in: header
        description: Transaction Id.
        required: true
        style: simple
        schema:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9]-[0-9]{3,32}$
          type: string
      responses:
        '200':
          description: Success response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecuritySuccessResult'
                - description: Success response.
                  examples:
                  - requestId: 1f28c944-d007-44c9-9543-003b8820cc69
                contentMediaType: application/json
              example:
                requestId: 1f28c944-d007-44c9-9543-003b8820cc69
        '400':
          description: Bad request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '401':
          description: Unauthorized request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '403':
          description: Request forbidden.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '404':
          description: Not Found / Does not exist.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '406':
          description: Format / Request Unacceptable.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '429':
          description: Too many requests.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/m2m
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/m2m
        variables: {}
    parameters: []
  /v1/accounts/subscriptions/actions/list:
    post:
      tags:
      - Account Subscriptions
      summary: ListAccountSubscriptions
      description: Retrieves the total number of SIM-Secure for IoT subscription licenses purchased for your account by license type, and lists the number of licenses assigned and available for each license type.
      operationId: ListAccountSubscriptions
      parameters:
      - name: X-Request-ID
        in: header
        description: Transaction Id.
        style: simple
        schema:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9]-[0-9]{3,32}$
          type: string
      requestBody:
        description: Request for account subscription.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SecuritySubscriptionRequest'
              - description: Request for account subscription.
                examples:
                - accountName: '000012345600001'
                  skuNumber: SIMSec-IoT-Lt
              contentMediaType: application/json
            example:
              accountName: '000012345600001'
              skuNumber: SIMSec-IoT-Lt
        required: true
      responses:
        '200':
          description: Security subscription result.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecuritySubscriptionResult'
                - description: Response for a subscription request.
                  examples:
                  - accountName: '000012345600001'
                    subscriptionList:
                    - skuNumber: TS-BUNDLE-KTO-SIMSEC-MRC
                      licenseType: Flexible Bundle
                      licensePurchased: 9
                      licenseAssigned: 7
                      licenseAvailable: 1
                contentMediaType: application/json
              example:
                accountName: '000012345600001'
                subscriptionList:
                - skuNumber: TS-BUNDLE-KTO-SIMSEC-MRC
                  licenseType: Flexible Bundle
                  licensePurchased: 9
                  licenseAssigned: 7
                  licenseAvailable: 1
        '400':
          description: Bad request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '401':
          description: Unauthorized request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '403':
          description: Request forbidden.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '404':
          description: Not Found / Does not exist.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '406':
          description: Format / Request Unacceptable.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        '429':
          description: Too many requests.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SecurityResult'
                - description: Error response.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/m2m
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/m2m
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/m2m
        variables: {}
    parameters: []
  /performance/device/network/metrics:
    post:
      tags:
      - Performance Metrics
      summary: QueryMECPerformanceMetrics
      description: Query the most recent data for Key Performance Indicators (KPIs) like network availability, MEC hostnames and more.
      operationId: QueryMECPerformanceMetrics
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QueryMECPerformanceMetricsRequest'
              - examples:
                - IMEI: '440246108109673'
                  MSISDN: '10691876598'
              contentMediaType: application/json
            example:
              IMEI: '440246108109673'
              MSISDN: '10691876598'
        required: false
      responses:
        '200':
          description: MEC performance metrics.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MECPerformanceMetrics'
                - description: Response to query the most recent data for Key Performance Indicators (KPIs) like network availability, MEC hostnames and more.
                  examples:
                  - QueryStatus: Success
                    Start: 1/28/2021 12:00:00
                    End: 1/28/2021 12:15:00
                    QueryResult:
                    - name: NetworkAvailability
                      data:
                      - '100'
                      - percent
                      - high
                contentMediaType: application/json
              example:
                QueryStatus: Success
                Start: 1/28/2021 12:00:00
                End: 1/28/2021 12:15:00
                QueryResult:
                - name: NetworkAvailability
                  data:
                  - '100'
                  - percent
                  - high
        '400':
          description: Bad Request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgePerformanceResult'
                - description: Types of errors in response.
                  examples:
                  - status: HTTP status code
                    message: Error details
                contentMediaType: application/json
              example:
                status: HTTP status code
                message: Error details
        '401':
          description: Unauthorized request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgePerformanceResult'
                - description: Types of errors in response.
                  examples:
                  - status: HTTP status code
                    message: Error details
                contentMediaType: application/json
              example:
                status: HTTP status code
                message: Error details
        '403':
          description: Request forbidden.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgePerformanceResult'
                - description: Types of errors in response.
                  examples:
                  - status: HTTP status code
                    message: Error details
                contentMediaType: application/json
              example:
                status: HTTP status code
                message: Error details
        '404':
          description: Resource Not Found.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgePerformanceResult'
                - description: Types of errors in response.
                  examples:
                  - status: HTTP status code
                    message: Error details
                contentMediaType: application/json
              example:
                status: HTTP status code
                message: Error details
        '405':
          description: Method Not Allowed.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgePerformanceResult'
                - description: Types of errors in response.
                  examples:
                  - status: HTTP status code
                    message: Error details
                contentMediaType: application/json
              example:
                status: HTTP status code
                message: Error details
        '503':
          description: Service Unavailable.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/EdgePerformanceResult'
                - description: Types of errors in response.
                  examples:
                  - status: HTTP status code
                    message: Error details
                contentMediaType: application/json
              example:
                status: HTTP status code
                message: Error details
      deprecated: false
      servers:
      - url: https://5gedge.verizon.com/api/mec
        variables: {}
      - url: https://staging.5gedge.verizon.com/api/mec
        variables: {}
      - url: https://devmanagement-staging.5gedge.verizon.com:80/mec
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.5gedge.verizon.com/api/mec
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/mec
        variables: {}
    parameters: []
  /subscriptions:
    get:
      tags:
      - Diagnostics Subscriptions
      summary: GetDiagnosticsSubscription
      description: This endpoint retrieves a diagnostics subscription by account.
      operationId: GetDiagnosticsSubscription
      parameters:
      - name: accountName
        in: query
        description: Account identifier.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Diagnostics subscription response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DiagnosticsSubscription'
                - description: Status of the diagnostic services subscription.
                  examples:
                  - accountName: TestQAAccount
                    skuName: TS-BUNDLE-KTO-DIAGNOSTIC-MRC
                    totalAllowed: 100
                    totalUsed: 50
                    createdOn: 2019-08-29T00:47:59.240Z
                    lastUpdated: 2019-08-29T00:47:59.240Z
                contentMediaType: application/json
              example:
                accountName: TestQAAccount
                skuName: TS-BUNDLE-KTO-DIAGNOSTIC-MRC
                totalAllowed: 100
                totalUsed: 50
                createdOn: 2019-08-29T00:47:59.240Z
                lastUpdated: 2019-08-29T00:47:59.240Z
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    post:
      tags:
      - Cloud Connector Subscriptions
      summary: CreateSubscription
      description: Create a subscription to define a streaming channel that sends data from devices in the account to an endpoint defined in a target resource.
      operationId: CreateSubscription
      parameters: []
      requestBody:
        description: The request body provides the details of the subscription that you want to create.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSubscriptionRequest'
              - description: The request body provides the details of the subscription that you want to create.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  billingaccountid: 1223334444-00001
                  allowaggregation: false
                  name: Account subscription 1
                  targetid: '{target ID}'
                  streamkind: ts.event
                  email: me@mycompany.com
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              billingaccountid: 1223334444-00001
              allowaggregation: false
              name: Account subscription 1
              targetid: '{target ID}'
              streamkind: ts.event
              email: me@mycompany.com
        required: true
      responses:
        '200':
          description: Returns full subscription resource definition.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Subscription'
                - description: Subscription resource definition.
                  examples:
                  - configurationfailures: 0
                    createdon: 2018-12-21T05:05:02.134Z
                    delegateid: 00000000-0000-0000-0000-000000000000
                    id: d8c145dd-6948-67ec-ed9b-6a298806bb4a
                    kind: ts.subscription
                    laststreamingstatus: ''
                    laststreamingtime: 0001-01-01T00:00:00Z
                    lastupdated: 2018-12-21T05:22:12.178Z
                    networkfailures: 0
                    streamfailures: 0
                    streamkind: ts.event
                    targetid: 4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8
                    version: '1.0'
                    versionid: 5ed6063f-04e0-11e9-8279-02420a5e1b0b
                contentMediaType: application/json
              example:
                configurationfailures: 0
                createdon: 2018-12-21T05:05:02.134Z
                delegateid: 00000000-0000-0000-0000-000000000000
                id: d8c145dd-6948-67ec-ed9b-6a298806bb4a
                kind: ts.subscription
                laststreamingstatus: ''
                laststreamingtime: 0001-01-01T00:00:00Z
                lastupdated: 2018-12-21T05:22:12.178Z
                networkfailures: 0
                streamfailures: 0
                streamkind: ts.event
                targetid: 4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8
                version: '1.0'
                versionid: 5ed6063f-04e0-11e9-8279-02420a5e1b0b
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /devices/attributes/actions/observe:
    post:
      tags:
      - Diagnostics Observations
      summary: StartDiagnosticsObservation
      description: This endpoint allows the user to start or change observe diagnostics.
      operationId: StartDiagnosticsObservation
      parameters: []
      requestBody:
        description: Request for device observation information.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/ObservationRequest'
              - description: Request for device observation information.
                examples:
                - accountName: TestQAAccount
                  devices:
                  - id: '864508030026238'
                    kind: IMEI
                  attributes:
                  - name: RADIO_SIGNAL_STRENGTH
                  - name: LINK_QUALITY
                  - name: NETWORK_BEARER
                  - name: CELL_ID
                  frequency:
                    value: 15
                    unit: SECOND
                  duration:
                    value: 15
                    unit: SECOND
              contentMediaType: '*/*'
            example:
              accountName: TestQAAccount
              devices:
              - id: '864508030026238'
                kind: IMEI
              attributes:
              - name: RADIO_SIGNAL_STRENGTH
              - name: LINK_QUALITY
              - name: NETWORK_BEARER
              - name: CELL_ID
              frequency:
                value: 15
                unit: SECOND
              duration:
                value: 15
                unit: SECOND
        required: true
      responses:
        '200':
          description: Diagnostics observation result.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DiagnosticsObservationResult'
                - description: A success response containing the current status of the request.
                  examples:
                  - createdOn: 2019-09-10T19:05:33.33Z
                    transactionID: 9c7bb124-11f5-4ff3-8a88-0eec1ba99205
                    status: CANCEL_OBSERVE_PENDING
                contentMediaType: application/json
              example:
                createdOn: 2019-09-10T19:05:33.33Z
                transactionID: 9c7bb124-11f5-4ff3-8a88-0eec1ba99205
                status: CANCEL_OBSERVE_PENDING
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    delete:
      tags:
      - Diagnostics Observations
      summary: StopDiagnosticsObservation
      description: This endpoint allows the user to stop or reset observe diagnostics.
      operationId: StopDiagnosticsObservation
      parameters:
      - name: transactionId
        in: query
        description: The ID value associated with the transaction.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 5f4bd2ff-5d7f-444d-af17-3f6a80bb2a94
      - name: accountName
        in: query
        description: The numeric account name.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Diagnostics observation result.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DiagnosticsObservationResult'
                - description: A success response containing the current status of the request.
                  examples:
                  - createdOn: 2019-09-10T19:05:33.33Z
                    transactionID: 9c7bb124-11f5-4ff3-8a88-0eec1ba99205
                    status: CANCEL_OBSERVE_PENDING
                contentMediaType: application/json
              example:
                createdOn: 2019-09-10T19:05:33.33Z
                transactionID: 9c7bb124-11f5-4ff3-8a88-0eec1ba99205
                status: CANCEL_OBSERVE_PENDING
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    parameters: []
  /history/actions/$search:
    post:
      tags:
      - Diagnostics History
      summary: GetDiagnosticsHistory
      description: This endpoint allows the user to get the history data.
      operationId: GetDiagnosticsHistory
      parameters: []
      requestBody:
        description: History data information.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/HistorySearchRequest'
              - description: History data information.
                examples:
                - $filter:
                    accountName: 0000123456-00001
                    device:
                      id: 15-digit IMEI
                      kind: IMEI
                    attributes:
                      name: LINK_QUALITY
              contentMediaType: '*/*'
            example:
              $filter:
                accountName: 0000123456-00001
                device:
                  id: 15-digit IMEI
                  kind: IMEI
                attributes:
                  name: LINK_QUALITY
        required: true
      responses:
        '200':
          description: History search response.
          headers:
            X-Next:
              description: Used for pagination, a customer needs to pass this in the next request body $page field.
              content:
                text/plain:
                  schema:
                    type: string
                    description: Used for pagination, a customer needs to pass this in the next request body $page field.
                    contentMediaType: text/plain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/History'
                description: History data for selected devices and attributes over specific time periods.
                examples:
                - - accountName: 0000123456-00001
                    attributes:
                      createdOn: 2022-02-10T16:02:21.406Z
                      name: LINK_QUALITY
                      value: '47'
                    device:
                      id: 15-digit IMEI
                      kind: IMEI
                  - accountName: 0000123456-00001
                    attributes:
                      createdOn: 2022-02-10T16:02:05.316Z
                      name: LINK_QUALITY
                      value: '47'
                    device:
                      id: 15-digit IMEI
                      kind: IMEI
                contentMediaType: application/json
              example:
              - accountName: 0000123456-00001
                attributes:
                  createdOn: 2022-02-10T16:02:21.406Z
                  name: LINK_QUALITY
                  value: '47'
                device:
                  id: 15-digit IMEI
                  kind: IMEI
              - accountName: 0000123456-00001
                attributes:
                  createdOn: 2022-02-10T16:02:05.316Z
                  name: LINK_QUALITY
                  value: '47'
                device:
                  id: 15-digit IMEI
                  kind: IMEI
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    parameters: []
  /devices/settings:
    get:
      tags:
      - Diagnostics Settings
      summary: ListDiagnosticsSettings
      description: This endpoint retrieves diagnostics settings synchronously.
      operationId: ListDiagnosticsSettings
      parameters:
      - name: accountName
        in: query
        description: Account identifier.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: devices
        in: query
        description: 'Devices list format: [{"id":"{imei1}","kind":"imei"},{"id":"{imei2}","kind":"imei"}].'
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - - id: '864508030026238'
              kind: IMEI
            - id: '864508030026238'
              kind: IMEI
      responses:
        '200':
          description: Diagnostic settings.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiagnosticObservationSetting'
                description: The current diagnostic observation settings for a list of devices.
                examples:
                - - accountName: string
                    device:
                      id: '864508030026238'
                      kind: IMEI
                    attributes:
                    - name: MANUFACTURER
                      value: string
                      createdOn: 2019-09-07T23:08:03.532Z
                      isObservable: true
                      isObserving: true
                      frequency:
                        value: 5
                        unit: SECOND
                contentMediaType: application/json
              example:
              - accountName: string
                device:
                  id: '864508030026238'
                  kind: IMEI
                attributes:
                - name: MANUFACTURER
                  value: string
                  createdOn: 2019-09-07T23:08:03.532Z
                  isObservable: true
                  isObserving: true
                  frequency:
                    value: 5
                    unit: SECOND
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    parameters: []
  /callbacks:
    get:
      tags:
      - Diagnostics Callbacks
      summary: GetDiagnosticsSubscriptionCallbackInfo
      description: This endpoint allows user to get the registered callback information of an existing diagnostics subscription.
      operationId: GetDiagnosticsSubscriptionCallbackInfo
      parameters:
      - name: accountName
        in: query
        description: Account identifier.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Returns callback registration.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceDiagnosticsCallback'
                description: ''
                examples:
                - - accountName: TestQAAccount
                    serviceName: string
                    endpoint: https://yourwebsite.com
                    httpHeaders: {}
                    createdOn: 2019-09-07T23:57:53.292Z
                contentMediaType: application/json
              example:
              - accountName: TestQAAccount
                serviceName: string
                endpoint: https://yourwebsite.com
                httpHeaders: {}
                createdOn: 2019-09-07T23:57:53.292Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    post:
      tags:
      - Diagnostics Callbacks
      summary: RegisterDiagnosticsCallbackURL
      description: This endpoint allows user update the callback HTTPS address of an existing diagnostics subscription.
      operationId: RegisterDiagnosticsCallbackURL
      parameters: []
      requestBody:
        description: Callback URL registration request.
        content:
          '*/*':
            schema:
              allOf:
              - $ref: '#/components/schemas/CallbackRegistrationRequest'
              - description: Callback URL registration request.
                examples:
                - accountName: TestQAAccount
                  serviceName: Diagnostics
                  endpoint: https://yourwebsite.com
                  httpHeaders: {}
              contentMediaType: '*/*'
            example:
              accountName: TestQAAccount
              serviceName: Diagnostics
              endpoint: https://yourwebsite.com
              httpHeaders: {}
        required: true
      responses:
        '200':
          description: Returns callback registration.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsCallback'
                - description: Callback information of an existing diagnostics subscription.
                  examples:
                  - accountName: TestQAAccount
                    serviceName: string
                    endpoint: https://yourwebsite.com
                    httpHeaders: {}
                    createdOn: 2019-09-07T23:57:53.292Z
                contentMediaType: application/json
              example:
                accountName: TestQAAccount
                serviceName: string
                endpoint: https://yourwebsite.com
                httpHeaders: {}
                createdOn: 2019-09-07T23:57:53.292Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    delete:
      tags:
      - Diagnostics Callbacks
      summary: UnregisterDiagnosticsCallback
      description: This endpoint allows user to delete a registered callback URL and credential.
      operationId: UnregisterDiagnosticsCallback
      parameters:
      - name: accountName
        in: query
        description: Account identifier.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: serviceName
        in: query
        description: Service name for callback notification.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - string
      responses:
        '200':
          description: Device diagnostics callback registration.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsCallback'
                - description: Callback information of an existing diagnostics subscription.
                  examples:
                  - accountName: TestQAAccount
                    serviceName: string
                    endpoint: https://yourwebsite.com
                    httpHeaders: {}
                    createdOn: 2019-09-07T23:57:53.292Z
                contentMediaType: application/json
              example:
                accountName: TestQAAccount
                serviceName: string
                endpoint: https://yourwebsite.com
                httpHeaders: {}
                createdOn: 2019-09-07T23:57:53.292Z
        '400':
          description: Unexpected error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: error code string
                    errorMessage: error message string
                contentMediaType: application/json
              example:
                errorCode: error code string
                errorMessage: error message string
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    parameters: []
  /devices/actions/restart:
    post:
      tags:
      - Diagnostics Factory Reset
      summary: DecivesRestart
      description: Performs a device reboot or a factory reset on the modem portion of the device.
      operationId: DecivesRestart
      parameters: []
      requestBody:
        description: A request to perform a device reboot.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceResetRequest'
              - description: A request to perform a device reboot.
                examples:
                - accountName: 0642233522-00003
                  action: reboot
                  devices:
                  - id: '355154080648401'
                    kind: IMEI
              contentMediaType: application/json
            example:
              accountName: 0642233522-00003
              action: reboot
              devices:
              - id: '355154080648401'
                kind: IMEI
        required: true
      responses:
        '200':
          description: Diagnostics observation result.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DiagnosticsObservationResult'
                - description: A success response containing the current status of the request.
                  examples:
                  - createdOn: 2019-02-03T06:48:07
                    transactionID: 9c7bb124-11f5-4ff3-8a88-0eec1ba99205
                    status: FACTORY_RESET_PENDING
                contentMediaType: application/json
              example:
                createdOn: 2019-02-03T06:48:07
                transactionID: 9c7bb124-11f5-4ff3-8a88-0eec1ba99205
                status: FACTORY_RESET_PENDING
        default:
          description: Error response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/DeviceDiagnosticsResult'
                - description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
                  examples:
                  - errorCode: The type of error, such as INVALID_REQUEST.
                    errorMessage: Additional error information.
                contentMediaType: application/json
              example:
                errorCode: The type of error, such as INVALID_REQUEST.
                errorMessage: Additional error information.
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/diagnostics/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/diagnostics/v1
        variables: {}
    parameters: []
  /targets/actions/query:
    post:
      tags:
      - Targets
      summary: QueryTarget
      description: Search for targets by property values. Returns an array of all matching target resources.
      operationId: QueryTarget
      parameters: []
      requestBody:
        description: Search for targets by property values.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QueryTargetRequest'
              - description: Search for targets by property values.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  resourceidentifier:
                    id: dd1682d3-2d80-cefc-f3ee-25154800beff
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              resourceidentifier:
                id: dd1682d3-2d80-cefc-f3ee-25154800beff
        required: true
      responses:
        '200':
          description: A success response includes an array of all matching targets. Each target includes the full target resource definition.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Target'
                description: An array of all matching targets.
                examples:
                - - address: https://myhost.com:1825
                    addressscheme: streamrest
                    createdon: 2018-12-22T03:59:18.563Z
                    id: cee10900-f54e-6eef-e455-bd7f15c4be32
                    kind: ts.target
                    lastupdated: 2018-12-22T03:59:18.563Z
                    name: host:port target
                    version: '1.0'
                    versionid: f4be7c2b-059d-11e9-bec6-02420a4e1b0a
                  - address: arn:aws:iam::252156542789:role/ThingSpace
                    addressscheme: streamawsiot
                    createdon: 2019-01-24T19:06:43.577Z
                    externalid: lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
                    id: cea170cc-a58f-6531-fc4b-fae1ceb1a6c8
                    kind: ts.target
                    lastupdated: 2019-01-24T19:32:31.841Z
                    name: AWS Target
                    region: us-east-1
                    version: '1.0'
                    versionid: caf85ff7-200e-11e9-a85b-02420a621e0a
                contentMediaType: application/json
              example:
              - address: https://myhost.com:1825
                addressscheme: streamrest
                createdon: 2018-12-22T03:59:18.563Z
                id: cee10900-f54e-6eef-e455-bd7f15c4be32
                kind: ts.target
                lastupdated: 2018-12-22T03:59:18.563Z
                name: host:port target
                version: '1.0'
                versionid: f4be7c2b-059d-11e9-bec6-02420a4e1b0a
              - address: arn:aws:iam::252156542789:role/ThingSpace
                addressscheme: streamawsiot
                createdon: 2019-01-24T19:06:43.577Z
                externalid: lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
                id: cea170cc-a58f-6531-fc4b-fae1ceb1a6c8
                kind: ts.target
                lastupdated: 2019-01-24T19:32:31.841Z
                name: AWS Target
                region: us-east-1
                version: '1.0'
                versionid: caf85ff7-200e-11e9-a85b-02420a621e0a
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /targets/actions/delete:
    post:
      tags:
      - Targets
      summary: DeleteTarget
      description: Remove a target from a ThingSpace account.
      operationId: DeleteTarget
      parameters: []
      requestBody:
        description: The request body identifies the target to delete.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeleteTargetRequest'
              - description: The request body identifies the target to delete.
                examples:
                - accountidentifier:
                    billingaccountid: 0000000000-00001
                  resourceidentifier:
                    id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 0000000000-00001
              resourceidentifier:
                id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
        required: true
      responses:
        '204':
          description: Target deleted successfully.
          headers: {}
          content: {}
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /targets:
    post:
      tags:
      - Targets
      summary: CreateTarget
      description: Define a target to receive data streams, alerts, or callbacks. After creating the target resource, use its ID in a subscription to set up a data stream.
      operationId: CreateTarget
      parameters: []
      requestBody:
        description: The request body provides the details of the target that you want to create.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateTargetRequest'
              - description: The request body provides the details of the target that you want to create.
                examples:
                - accountidentifier:
                    billingaccountid: 0000000000-00001
                  billingaccountid: 0000000000-00001
                  kind: ts.target
                  address: https://your_IoT_Central_Application.azureiotcentral.com
                  addressscheme: streamazureiot
                  fields:
                    httpheaders:
                      Authorization: SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410
                    devicetypes:
                    - cHeAssetTracker
                    - cHeAssetTrackerV2
                    - tgAssetTracker
                    - tgAssetTrackerV2
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 0000000000-00001
              billingaccountid: 0000000000-00001
              kind: ts.target
              address: https://your_IoT_Central_Application.azureiotcentral.com
              addressscheme: streamazureiot
              fields:
                httpheaders:
                  Authorization: SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410
                devicetypes:
                - cHeAssetTracker
                - cHeAssetTrackerV2
                - tgAssetTracker
                - tgAssetTrackerV2
        required: true
      responses:
        '200':
          description: A success response includes the full target resource definition.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Target'
                - description: Target resource definition.
                  examples:
                  - address: arn:aws:iam::252156542978:role/ThingSpace
                    addressscheme: streamawsiot
                    billingaccountid: 1223334444-00001
                    createdon: 2018-12-21T04:37:42.651Z
                    externalid: lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
                    id: 0e411230-c3eb-64dc-f5f4-1020364aa81f
                    kind: ts.target
                    lastupdated: 2018-12-21T04:37:42.651Z
                    name: AWS Target
                    region: us-east-1
                    version: '1.0'
                    versionid: 27aca5a4-04da-11e9-bff3-02420a5e1b0b
                contentMediaType: application/json
              example:
                address: arn:aws:iam::252156542978:role/ThingSpace
                addressscheme: streamawsiot
                billingaccountid: 1223334444-00001
                createdon: 2018-12-21T04:37:42.651Z
                externalid: lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
                id: 0e411230-c3eb-64dc-f5f4-1020364aa81f
                kind: ts.target
                lastupdated: 2018-12-21T04:37:42.651Z
                name: AWS Target
                region: us-east-1
                version: '1.0'
                versionid: 27aca5a4-04da-11e9-bff3-02420a5e1b0b
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /targets/actions/newextid:
    post:
      tags:
      - Targets
      summary: GenerateTargetExternalID
      description: Create a unique string that ThingSpace will pass to AWS for increased security.
      operationId: GenerateTargetExternalID
      parameters: []
      requestBody:
        description: The request body only contains the authenticating account.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GenerateExternalIDRequest'
              - description: The request body only contains the authenticating account.
                examples:
                - accountidentifier:
                    billingaccountid: 0000000000-00001
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 0000000000-00001
        required: true
      responses:
        '200':
          description: Returns a new external ID.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GenerateExternalIDResult'
                - description: A new external ID.
                  examples:
                  - externalid: ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
                contentMediaType: application/json
              example:
                externalid: ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
      deprecated: false
      security: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /targets/actions/newaic:
    post:
      tags:
      - Targets
      summary: CreateAzureCentralIoTApplication
      description: Deploy a new Azure IoT Central application based on the Verizon ARM template within the specified Azure Active Directory account.
      operationId: CreateAzureCentralIoTApplication
      parameters:
      - name: BillingaccountID
        in: header
        description: TThe ThingSpace ID of the authenticating billing account.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: The request body must include the UUID of the subscription that you want to update plus any properties that you want to change.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateIoTApplicationRequest'
              - description: The request body must include the UUID of the subscription that you want to update plus any properties that you want to change.
                examples:
                - appName: newarmapp1
                  billingAccountID: 0000123456-00001
                  clientID: UUID
                  clientSecret: client secret
                  emailIDs: email@domain.com
                  resourcegroup: Myresourcegroup
                  sampleIOTcApp: '{app ID}'
                  subscriptionID: '{subscription ID}'
                  tenantID: '{tenant ID}'
              contentMediaType: application/json
            example:
              appName: newarmapp1
              billingAccountID: 0000123456-00001
              clientID: UUID
              clientSecret: client secret
              emailIDs: email@domain.com
              resourcegroup: Myresourcegroup
              sampleIOTcApp: '{app ID}'
              subscriptionID: '{subscription ID}'
              tenantID: '{tenant ID}'
        required: true
      responses:
        '200':
          description: A success response includes the full subscription resource definition.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/CreateIoTApplicationResponse'
                - description: A success response includes an array of all matching events. Each event includes the full event resource definition.
                  examples:
                  - appName: newarmapp1
                    sharedSecret: SharedAccessSignaturesr={client secret}
                    url: https://newarmapp1.azureiotcentral.com
                contentMediaType: application/json
              example:
                appName: newarmapp1
                sharedSecret: SharedAccessSignaturesr={client secret}
                url: https://newarmapp1.azureiotcentral.com
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /subscriptions/actions/query:
    post:
      tags:
      - Cloud Connector Subscriptions
      summary: QuerySubscription
      description: Search for subscriptions by property values. Returns an array of all matching subscription resources.
      operationId: QuerySubscription
      parameters: []
      requestBody:
        description: The request body specifies fields and values to match.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QuerySubscriptionRequest'
              - description: The request body specifies fields and values to match.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  resourceidentifier:
                    id: dd1682d3-2d80-cefc-f3ee-25154800beff
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              resourceidentifier:
                id: dd1682d3-2d80-cefc-f3ee-25154800beff
        required: true
      responses:
        '200':
          description: Returns an array of all matching subscriptions. Each subscription includes the full subscription resource definition.
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subscription'
                description: An array of all matching subscriptions.
                examples:
                - - configurationfailures: 0
                    createdon: 2019-02-13T23:13:24.689Z
                    delegateid: 00000000-0000-0000-0000-000000000000
                    disabled: false
                    email: me@mycompany.com
                    id: 98015aed-e984-62be-f049-1d895d2d1812
                    kind: ts.subscription
                    laststreamingstatus: success
                    laststreamingtime: 2019-02-20T18:20:45.865Z
                    lastupdated: 2019-02-13T23:13:24.689Z
                    networkfailures: 0
                    streamfailures: 0
                    streamkind: ts.event
                    targetid: 4e112cb3-da1d-6ece-f2c6-bb8700b20b09
                    targettype: Amazon Web Services
                    version: '1.0'
                    versionid: f68b8862-2fe4-11e9-85fd-02420a4c170d
                contentMediaType: application/json
              example:
              - configurationfailures: 0
                createdon: 2019-02-13T23:13:24.689Z
                delegateid: 00000000-0000-0000-0000-000000000000
                disabled: false
                email: me@mycompany.com
                id: 98015aed-e984-62be-f049-1d895d2d1812
                kind: ts.subscription
                laststreamingstatus: success
                laststreamingtime: 2019-02-20T18:20:45.865Z
                lastupdated: 2019-02-13T23:13:24.689Z
                networkfailures: 0
                streamfailures: 0
                streamkind: ts.event
                targetid: 4e112cb3-da1d-6ece-f2c6-bb8700b20b09
                targettype: Amazon Web Services
                version: '1.0'
                versionid: f68b8862-2fe4-11e9-85fd-02420a4c170d
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /subscriptions/actions/delete:
    post:
      tags:
      - Cloud Connector Subscriptions
      summary: DeleteSubscription
      description: Remove a subscription from a ThingSpace account.
      operationId: DeleteSubscription
      parameters: []
      requestBody:
        description: The request body identifies the subscription to delete.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeleteSubscriptionRequest'
              - description: The request body identifies the subscription to delete.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  resourceidentifier:
                    id: f8b112df-739c-6236-f059-106c67bafd99
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              resourceidentifier:
                id: f8b112df-739c-6236-f059-106c67bafd99
        required: true
      responses:
        '204':
          description: Subscription deleted successfully.
          headers: {}
          content: {}
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /devices/configuration/actions/set:
    post:
      tags:
      - Cloud Connector Devices
      summary: UpdateDevicesConfigurationValue
      description: Change configuration values on a device, such as setting how often a device records and reports sensor readings.
      operationId: UpdateDevicesConfigurationValue
      parameters: []
      requestBody:
        description: The request body changes configuration values on a device.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ChangeConfigurationRequest'
              - description: The request body changes configuration values on a device.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  resourceidentifier:
                    imei: '864508030147323'
                  configuration:
                    frequency: Low
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              resourceidentifier:
                imei: '864508030147323'
              configuration:
                frequency: Low
        required: true
      responses:
        '200':
          description: A success response contains the ts.event.configuration event that was created to record the change.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ChangeConfigurationResponse'
                - description: Change Configuration resource definition.
                  examples:
                  - action: set
                    createdon: 2019-02-14T01:41:03.619217664Z
                    deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                    fields:
                      configuration:
                        frequency: Low
                    foreignid: e1f15861-7de7-69cb-ed7d-b4a92e091bc4
                    id: 05c12adc-50c0-6ebb-feb0-b9f9637a1dba
                    kind: ts.event.configuration
                    lastupdated: 2019-02-14T01:41:03.619217727Z
                    name: SetConfigurationReq
                    state: pending
                    transactionid: 1d38aae7-558d-4cb9-8269-e8d4c0519045
                    version: '1.0'
                contentMediaType: application/json
              example:
                action: set
                createdon: 2019-02-14T01:41:03.619217664Z
                deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                fields:
                  configuration:
                    frequency: Low
                foreignid: e1f15861-7de7-69cb-ed7d-b4a92e091bc4
                id: 05c12adc-50c0-6ebb-feb0-b9f9637a1dba
                kind: ts.event.configuration
                lastupdated: 2019-02-14T01:41:03.619217727Z
                name: SetConfigurationReq
                state: pending
                transactionid: 1d38aae7-558d-4cb9-8269-e8d4c0519045
                version: '1.0'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /devices/actions/query:
    post:
      tags:
      - Cloud Connector Devices
      summary: FindDeviceByPropertyValues
      description: Find devices by property values. Returns an array of all matching device resources.
      operationId: FindDeviceByPropertyValues
      parameters: []
      requestBody:
        description: The request body specifies fields and values to match.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QuerySubscriptionRequest'
              - description: The request body specifies fields and values to match.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  resourceidentifier:
                    imei: '159495694333703'
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              resourceidentifier:
                imei: '159495694333703'
        required: true
      responses:
        '200':
          description: A success response includes an array of all matching devices. Each device includes the full device resource definition.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/FindDeviceByPropertyResponseList'
                - description: A success response includes an array of all matching devices. Each device includes the full device resource definition.
                  examples:
                  - DeviceProperty:
                    - billingaccountid: 1223334444-00001
                      createdon: 2018-12-19T06:45:41.496Z
                      eventretention: '90'
                      iccid: '20332350053095597842'
                      id: 64612cb3-3685-6dad-fd2b-ea1adeb5a269
                      imei: '320778042285497'
                      kind: ts.device
                      lastupdated: 2018-12-19T06:45:41.508Z
                      providerid: 8a314f07-849e-6568-e3c1-8381c1f61bfc
                      refid: '20332350053095597842'
                      refidtype: iccid
                      state: registered
                      version: '1.0'
                      versionid: b3cdaddb-0359-11e9-aba2-02420a4e1b0a
                    - billingaccountid: 1223334444-00001
                      createdon: 2018-12-20T18:42:23.548Z
                      eventretention: '90'
                      iccid: '89148000004197486411'
                      id: 0481cf95-e3b1-63eb-eb18-43bf717156cb
                      imei: '864508030147323'
                      kind: ts.device.cHeAssetTracker
                      lastupdated: 2018-12-20T18:42:23.688Z
                      providerid: 9dfcfa69-a1c8-4eae-8611-b282646bb113
                      refid: '864508030147323'
                      refidtype: imei
                      state: ready
                      version: '1.0'
                      versionid: fd835cc9-0486-11e9-a7da-02420a481608
                contentMediaType: application/json
              example:
                DeviceProperty:
                - billingaccountid: 1223334444-00001
                  createdon: 2018-12-19T06:45:41.496Z
                  eventretention: '90'
                  iccid: '20332350053095597842'
                  id: 64612cb3-3685-6dad-fd2b-ea1adeb5a269
                  imei: '320778042285497'
                  kind: ts.device
                  lastupdated: 2018-12-19T06:45:41.508Z
                  providerid: 8a314f07-849e-6568-e3c1-8381c1f61bfc
                  refid: '20332350053095597842'
                  refidtype: iccid
                  state: registered
                  version: '1.0'
                  versionid: b3cdaddb-0359-11e9-aba2-02420a4e1b0a
                - billingaccountid: 1223334444-00001
                  createdon: 2018-12-20T18:42:23.548Z
                  eventretention: '90'
                  iccid: '89148000004197486411'
                  id: 0481cf95-e3b1-63eb-eb18-43bf717156cb
                  imei: '864508030147323'
                  kind: ts.device.cHeAssetTracker
                  lastupdated: 2018-12-20T18:42:23.688Z
                  providerid: 9dfcfa69-a1c8-4eae-8611-b282646bb113
                  refid: '864508030147323'
                  refidtype: imei
                  state: ready
                  version: '1.0'
                  versionid: fd835cc9-0486-11e9-a7da-02420a481608
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /devices/actions/search:
    post:
      tags:
      - Cloud Connector Devices
      summary: SearchDevicesResourcesByPropertyValues
      description: Search for devices by property values. Returns an array of all matching device resources.
      operationId: SearchDevicesResourcesByPropertyValues
      parameters: []
      requestBody:
        description: The request body specifies fields and values to match.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/QuerySubscriptionRequest'
              - description: The request body specifies fields and values to match.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  $selection:
                    iccid: '89148000003499233389'
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              $selection:
                iccid: '89148000003499233389'
        required: true
      responses:
        '200':
          description: A success response includes an array of all matching devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SearchDeviceByPropertyResponseList'
                - description: A success response includes an array of all matching devices.
                  examples:
                  - DeviceProperty:
                    - billingaccountid: 1223334444-00001
                      createdon: 2018-12-19T06:45:41.496Z
                      eventretention: '90'
                      iccid: '20332350053095597842'
                      id: 64612cb3-3685-6dad-fd2b-ea1adeb5a269
                      imei: '320778042285497'
                      kind: ts.device
                      lastupdated: 2018-12-19T06:45:41.508Z
                      providerid: 8a314f07-849e-6568-e3c1-8381c1f61bfc
                      refid: '20332350053095597842'
                      refidtype: iccid
                      state: registered
                      version: '1.0'
                      versionid: b3cdaddb-0359-11e9-aba2-02420a4e1b0a
                contentMediaType: application/json
              example:
                DeviceProperty:
                - billingaccountid: 1223334444-00001
                  createdon: 2018-12-19T06:45:41.496Z
                  eventretention: '90'
                  iccid: '20332350053095597842'
                  id: 64612cb3-3685-6dad-fd2b-ea1adeb5a269
                  imei: '320778042285497'
                  kind: ts.device
                  lastupdated: 2018-12-19T06:45:41.508Z
                  providerid: 8a314f07-849e-6568-e3c1-8381c1f61bfc
                  refid: '20332350053095597842'
                  refidtype: iccid
                  state: registered
                  version: '1.0'
                  versionid: b3cdaddb-0359-11e9-aba2-02420a4e1b0a
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /devices/fields/actions/history/search:
    post:
      tags:
      - Cloud Connector Devices
      summary: SearchDeviceEventHistory
      description: Search device event history to find events that match criteria.Sensor readings, configuration changes, and other device data are all stored as events.
      operationId: SearchDeviceEventHistory
      parameters: []
      requestBody:
        description: The device identifier and fields to match in the search.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchDeviceEventHistoryRequest'
              - description: The device identifier and fields to match in the search.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  resourceidentifier:
                    imei: '864508030084997'
                  $selection:
                    kind: ts.event.configuration
                  $limitnumber: 2
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              resourceidentifier:
                imei: '864508030084997'
              $selection:
                kind: ts.event.configuration
              $limitnumber: 2
        required: true
      responses:
        '200':
          description: A success response includes an array of all matching devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SearchDeviceEventHistoryResponseList'
                - description: A success response includes an array of all matching events.
                  examples:
                  - SearchDeviceEventHistory:
                    - action: set
                      createdon: 2019-02-21T02:05:25.270417481Z
                      deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                      id: e521b8ae-440d-6cc1-f687-7c80e085ff29
                      kind: ts.event.configuration
                      lastupdated: 2019-02-21T02:05:25.394230017Z
                      name: SetConfigurationReq
                      state: update
                      tagids:
                      - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
                      - cd81ed16-18ae-6c7d-eaba-2883b0395387
                      transactionid: c7a0a8cf-6856-4733-93ea-69913650e4ca
                      version: '1.0'
                      versionid: 270e4820-357d-11e9-9d6c-02420a470c06
                    - action: set
                      createdon: 2019-02-21T01:58:45.163Z
                      deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                      id: 25819e96-c4f2-6545-fb68-0e1d9662359f
                      kind: ts.event.configuration
                      lastupdated: 2019-02-21T01:58:45.163Z
                      state: pending
                      tagids:
                      - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
                      - cd81ed16-18ae-6c7d-eaba-2883b0395387
                      transactionid: c7a0a8cf-6856-4733-93ea-69913650e4ca
                      version: '1.0'
                      versionid: 387fe2fe-357c-11e9-ae40-02420a49140a
                contentMediaType: application/json
              example:
                SearchDeviceEventHistory:
                - action: set
                  createdon: 2019-02-21T02:05:25.270417481Z
                  deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                  id: e521b8ae-440d-6cc1-f687-7c80e085ff29
                  kind: ts.event.configuration
                  lastupdated: 2019-02-21T02:05:25.394230017Z
                  name: SetConfigurationReq
                  state: update
                  tagids:
                  - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
                  - cd81ed16-18ae-6c7d-eaba-2883b0395387
                  transactionid: c7a0a8cf-6856-4733-93ea-69913650e4ca
                  version: '1.0'
                  versionid: 270e4820-357d-11e9-9d6c-02420a470c06
                - action: set
                  createdon: 2019-02-21T01:58:45.163Z
                  deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                  id: 25819e96-c4f2-6545-fb68-0e1d9662359f
                  kind: ts.event.configuration
                  lastupdated: 2019-02-21T01:58:45.163Z
                  state: pending
                  tagids:
                  - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
                  - cd81ed16-18ae-6c7d-eaba-2883b0395387
                  transactionid: c7a0a8cf-6856-4733-93ea-69913650e4ca
                  version: '1.0'
                  versionid: 387fe2fe-357c-11e9-ae40-02420a49140a
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /devices/fields/{fieldname}/actions/history:
    post:
      tags:
      - Cloud Connector Devices
      summary: SearchSensorReadings
      description: Returns the readings of a specified sensor, with the most recent reading first. Sensor readings are stored as events; this request an array of events.
      operationId: SearchSensorReadings
      parameters:
      - name: fieldname
        in: path
        description: The name of the sensor.
        required: true
        style: simple
        schema:
          type: string
      requestBody:
        description: The device identifier and fields to match in the search.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchSensorHistoryRequest'
              - description: The device identifier and fields to match in the search.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  resourceidentifier:
                    imei: '864508030084997'
                  $limitnumber: 2
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              resourceidentifier:
                imei: '864508030084997'
              $limitnumber: 2
        required: true
      responses:
        '200':
          description: A success response includes an array of all matching devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SearchSensorHistoryResponseList'
                - description: A success response includes an array of all matching events.
                  examples:
                  - SearchSensorHistory:
                    - action: update
                      createdon: 2019-02-22T04:05:26Z
                      deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                      fields:
                        temperature: '18.4'
                      id: 4521b7a7-7de1-6e68-f020-1345ef3b764a
                      kind: ts.event
                      lastupdated: 2019-02-22T04:05:49.786Z
                      state: update
                      tagids:
                      - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
                      - cd81ed16-18ae-6c7d-eaba-2883b0395387
                      transactionid: 864508030084997-OnBoard-c05f946c-3f5c-4527-b4d0-5aca256fc3dd
                      version: '1.0'
                      versionid: 238addb9-3657-11e9-8848-02420a951f13
                    - action: update
                      createdon: 2019-02-22T03:05:26Z
                      deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                      fields:
                        temperature: '19.0'
                      id: 05b1ea7b-4bf2-6af6-ea8b-414595f2c3e9
                      kind: ts.event
                      lastupdated: 2019-02-22T03:05:48.483Z
                      state: update
                      tagids:
                      - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
                      - cd81ed16-18ae-6c7d-eaba-2883b0395387
                      transactionid: 864508030084997-OnBoard-5f71f47d-4464-4f69-a3ee-5c243f0ef5b8
                      version: '1.0'
                      versionid: c0ffa4b5-364e-11e9-a3ee-02420a8c0d14
                contentMediaType: application/json
              example:
                SearchSensorHistory:
                - action: update
                  createdon: 2019-02-22T04:05:26Z
                  deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                  fields:
                    temperature: '18.4'
                  id: 4521b7a7-7de1-6e68-f020-1345ef3b764a
                  kind: ts.event
                  lastupdated: 2019-02-22T04:05:49.786Z
                  state: update
                  tagids:
                  - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
                  - cd81ed16-18ae-6c7d-eaba-2883b0395387
                  transactionid: 864508030084997-OnBoard-c05f946c-3f5c-4527-b4d0-5aca256fc3dd
                  version: '1.0'
                  versionid: 238addb9-3657-11e9-8848-02420a951f13
                - action: update
                  createdon: 2019-02-22T03:05:26Z
                  deviceid: 8461f530-2e31-6e87-e357-6c38251d4d01
                  fields:
                    temperature: '19.0'
                  id: 05b1ea7b-4bf2-6af6-ea8b-414595f2c3e9
                  kind: ts.event
                  lastupdated: 2019-02-22T03:05:48.483Z
                  state: update
                  tagids:
                  - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
                  - cd81ed16-18ae-6c7d-eaba-2883b0395387
                  transactionid: 864508030084997-OnBoard-5f71f47d-4464-4f69-a3ee-5c243f0ef5b8
                  version: '1.0'
                  versionid: c0ffa4b5-364e-11e9-a3ee-02420a8c0d14
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /devices/actions/delete:
    post:
      tags:
      - Cloud Connector Devices
      summary: DeleteDeviceFromAccount
      description: Remove a device from a ThingSpace account.
      operationId: DeleteDeviceFromAccount
      parameters: []
      requestBody:
        description: The request body identifies the device to delete.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RemoveDeviceRequest'
              - description: The request body identifies the device to delete.
                examples:
                - accountidentifier:
                    billingaccountid: 1223334444-00001
                  resourceidentifier:
                    imei: '864508030084997'
              contentMediaType: application/json
            example:
              accountidentifier:
                billingaccountid: 1223334444-00001
              resourceidentifier:
                imei: '864508030084997'
        required: true
      responses:
        '204':
          description: Target deleted successfully.
          headers: {}
          content: {}
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/cc/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/cc/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/cc/v1
        variables: {}
    parameters: []
  /devices/services:
    get:
      tags:
      - Device Service Management
      summary: GetDeviceHyperPreciseStatus
      description: Gets the list of a status for hyper-precise location devices.
      operationId: GetDeviceHyperPreciseStatus
      parameters:
      - name: imei
        in: query
        description: A unique identifier for a device.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - '709312034493372'
      - name: accountNumber
        in: query
        description: A unique identifier for an account.
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0844021539-00001
      responses:
        '200':
          description: Returns the status of Hyper Precise Location on the device.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BullseyeServiceResult'
                - description: Status of Hyper Precise Location on the device.
                  examples:
                  - accountNumber: 0844021539-00001
                    deviceList:
                    - imei: '709312034493372'
                      BullseyeEnable: true
                contentMediaType: application/json
              example:
                accountNumber: 0844021539-00001
                deviceList:
                - imei: '709312034493372'
                  BullseyeEnable: true
        '400':
          description: Bad request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
                contentMediaType: application/json
              examples:
                '400':
                  summary: '400'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
                contentMediaType: application/json
              examples:
                '401':
                  summary: '401'
                  value:
                    responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
        '403':
          description: Forbidden request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Certified
                contentMediaType: application/json
              examples:
                '403':
                  summary: '403'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Certified
        '404':
          description: Bad request. Not found.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Inactive
                contentMediaType: application/json
              examples:
                '404':
                  summary: '404'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Inactive
        '409':
          description: Bad request. Conflict state.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
                contentMediaType: application/json
              examples:
                '409':
                  summary: '409'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
        '500':
          description: Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
                contentMediaType: application/json
              examples:
                '500':
                  summary: '500'
                  value:
                    responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/hyper-precise/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
    put:
      tags:
      - Device Service Management
      summary: UpdateDeviceHyperPreciseStatus
      description: Enable/disable hyper-precise service for a device.
      operationId: UpdateDeviceHyperPreciseStatus
      parameters: []
      requestBody:
        description: List of devices and hyper-precise required statuses.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/BullseyeServiceRequest'
              - description: List of devices and hyper-precise required statuses.
                examples:
                - deviceList:
                  - imei: '354658090356210'
                    BullseyeEnable: true
                  accountNumber: 0242080353-00001
              contentMediaType: application/json
            example:
              deviceList:
              - imei: '354658090356210'
                BullseyeEnable: true
              accountNumber: 0242080353-00001
        required: true
      responses:
        '200':
          description: Successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BullseyeServiceResult'
                - description: Status of Hyper Precise Location on the device.
                  examples:
                  - accountNumber: 0844021539-00001
                    deviceList:
                    - imei: '709312034493372'
                      BullseyeEnable: true
                contentMediaType: application/json
              example:
                accountNumber: 0844021539-00001
                deviceList:
                - imei: '709312034493372'
                  BullseyeEnable: true
        '400':
          description: Bad request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
                contentMediaType: application/json
              examples:
                '400':
                  summary: '400'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
                contentMediaType: application/json
              examples:
                '401':
                  summary: '401'
                  value:
                    responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
        '403':
          description: Forbidden request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Certified
                contentMediaType: application/json
              examples:
                '403':
                  summary: '403'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Certified
        '404':
          description: Bad request. Not found.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Inactive
                contentMediaType: application/json
              examples:
                '404':
                  summary: '404'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Inactive
        '409':
          description: Bad request. Conflict state.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
                contentMediaType: application/json
              examples:
                '409':
                  summary: '409'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
        '500':
          description: Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
                contentMediaType: application/json
              examples:
                '500':
                  summary: '500'
                  value:
                    responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/hyper-precise/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
    parameters: []
  /report/aggregate:
    post:
      tags:
      - Device Reports
      summary: CalculateAggregatedReportSynchronous
      description: Calculate aggregated report per day with number of sessions and usage information. User will receive synchronous response for specified list of devices (Max 10) and date range (Max 180 days).
      operationId: CalculateAggregatedReportSynchronous
      parameters: []
      requestBody:
        description: Aggregated report request.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AggregateSessionReportRequest'
              - description: Aggregated report request.
                examples:
                - accountNumber: 0844021539-00001
                  startDate: 2022-12-09T22:01:06.217Z
                  endDate: 2022-12-09T22:01:08.734Z
                  imei:
                  - '709312034493372'
                  deviceGroup: null
                  dataPlan: null
                  noSessionFlag: 'false'
              contentMediaType: application/json
            example:
              accountNumber: 0844021539-00001
              startDate: 2022-12-09T22:01:06.217Z
              endDate: 2022-12-09T22:01:08.734Z
              imei:
              - '709312034493372'
              deviceGroup: null
              dataPlan: null
              noSessionFlag: 'false'
        required: true
      responses:
        '200':
          description: A successful response shows session and usage details for up to 10 devices.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AggregateSessionReport'
                - description: Session and usage details for up to 10 devices.
                  examples:
                  - txid: null
                    usage:
                    - imei: '709312034493372'
                      numberOfSessions: 1
                      bytesTransferred: 2057
                contentMediaType: application/json
              example:
                txid: null
                usage:
                - imei: '709312034493372'
                  numberOfSessions: 1
                  bytesTransferred: 2057
        '400':
          description: Bad request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
                contentMediaType: application/json
              examples:
                '400':
                  summary: '400'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
                contentMediaType: application/json
              examples:
                '401':
                  summary: '401'
                  value:
                    responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
        '403':
          description: Forbidden request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Certified
                contentMediaType: application/json
              examples:
                '403':
                  summary: '403'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Certified
        '404':
          description: Bad request. Not found.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Inactive
                contentMediaType: application/json
              examples:
                '404':
                  summary: '404'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Inactive
        '409':
          description: Bad request. Conflict state.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
                contentMediaType: application/json
              examples:
                '409':
                  summary: '409'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
        '500':
          description: Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
                contentMediaType: application/json
              examples:
                '500':
                  summary: '500'
                  value:
                    responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/hyper-precise/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
    parameters: []
  /report/async/aggregate:
    post:
      tags:
      - Device Reports
      summary: CalculateAggregatedReportAsynchronous
      description: Calculate aggregated report per day with number of sessions and usage information. User will receive an asynchronous callback for the specified list of devices (Max 10000) and date range (Max 180 days).
      operationId: CalculateAggregatedReportAsynchronous
      parameters: []
      requestBody:
        description: Aggregated session report request.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AggregateSessionReportRequest'
              - description: Aggregated session report request.
                examples:
                - accountNumber: 0844021539-00001
                  startDate: 2022-12-09T22:01:06.217Z
                  endDate: 2022-12-09T22:01:08.734Z
                  imei:
                  - '709312034493372'
                  deviceGroup: null
                  dataPlan: null
                  noSessionFlag: 'false'
              contentMediaType: application/json
            example:
              accountNumber: 0844021539-00001
              startDate: 2022-12-09T22:01:06.217Z
              endDate: 2022-12-09T22:01:08.734Z
              imei:
              - '709312034493372'
              deviceGroup: null
              dataPlan: null
              noSessionFlag: 'false'
        required: true
      responses:
        '200':
          description: A successful response shows the request is queued with a unique `txid` to identify the report data with.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AggregatedReportCallbackResult'
                - description: Aggregated usage report (Asynchronous).
                  examples:
                  - txid: 60c07fff-470b-4d6d-afcc-75e6a7c238f6
                    status: QUEUED
                contentMediaType: application/json
              example:
                txid: 60c07fff-470b-4d6d-afcc-75e6a7c238f6
                status: QUEUED
        '400':
          description: Bad request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
                contentMediaType: application/json
              examples:
                '400':
                  summary: '400'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
                contentMediaType: application/json
              examples:
                '401':
                  summary: '401'
                  value:
                    responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
        '403':
          description: Forbidden request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Certified
                contentMediaType: application/json
              examples:
                '403':
                  summary: '403'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Certified
        '404':
          description: Bad request. Not found.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Inactive
                contentMediaType: application/json
              examples:
                '404':
                  summary: '404'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Inactive
        '409':
          description: Bad request. Conflict state.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
                contentMediaType: application/json
              examples:
                '409':
                  summary: '409'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
        '500':
          description: Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
                contentMediaType: application/json
              examples:
                '500':
                  summary: '500'
                  value:
                    responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/hyper-precise/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
    parameters: []
  /report/sessions:
    post:
      tags:
      - Device Reports
      summary: GetSessionsReport
      description: Detailed report of session duration and number of bytes transferred per day.
      operationId: GetSessionsReport
      parameters: []
      requestBody:
        description: Request for sessions report.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SessionReportRequest'
              - description: Request for sessions report.
                examples:
                - accountNumber: 0844021539-00001
                  startDate: 2022-12-09T22:01:06.217Z
                  endDate: 2022-12-09T22:01:08.734Z
                  imei: '709312034493372'
                  durationLow: null
                  durationHigh: null
              contentMediaType: application/json
            example:
              accountNumber: 0844021539-00001
              startDate: 2022-12-09T22:01:06.217Z
              endDate: 2022-12-09T22:01:08.734Z
              imei: '709312034493372'
              durationLow: null
              durationHigh: null
        required: true
      responses:
        '200':
          description: A successful response includes the session information for an individual device.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/SessionReport'
                - description: Session report for a device.
                  examples:
                  - id: '709312034493372'
                    txid: 60c07fff-470b-4d6d-afcc-75e6a7c238f6
                contentMediaType: application/json
              example:
                id: '709312034493372'
                txid: 60c07fff-470b-4d6d-afcc-75e6a7c238f6
        '400':
          description: Bad request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
                contentMediaType: application/json
              examples:
                '400':
                  summary: '400'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Found, Request will be queued
        '401':
          description: Unauthorized request. Access token is missing or invalid.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
                contentMediaType: application/json
              examples:
                '401':
                  summary: '401'
                  value:
                    responseCode: INVALID_ACCESS
                    message: The access policy denied the resource operation for this user
        '403':
          description: Forbidden request.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Not Certified
                contentMediaType: application/json
              examples:
                '403':
                  summary: '403'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Not Certified
        '404':
          description: Bad request. Not found.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Device Inactive
                contentMediaType: application/json
              examples:
                '404':
                  summary: '404'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Device Inactive
        '409':
          description: Bad request. Conflict state.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
                contentMediaType: application/json
              examples:
                '409':
                  summary: '409'
                  value:
                    responseCode: INVALID_PARAMETER
                    message: Service Not Purchased
        '500':
          description: Internal Server Error.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/HyperPreciseLocationResult'
                - description: Error response.
                  examples:
                  - responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
                contentMediaType: application/json
              examples:
                '500':
                  summary: '500'
                  value:
                    responseCode: INTERNAL_ERROR
                    message: Device is active in several accounts
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com:80/hyper-precise/v1
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api/hyper-precise/v1
        variables: {}
    parameters: []
  /m2m/v1/intelligence/anomaly/settings:
    post:
      tags:
      - Anomaly Settings
      summary: ActivateAnomalyDetection
      description: Uses the subscribed account ID to activate anomaly detection and set threshold values.
      operationId: ActivateAnomalyDetection
      parameters: []
      requestBody:
        description: Request to activate anomaly detection.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AnomalyDetectionRequest'
              - description: Request to activate anomaly detection.
                examples:
                - accountName: 0000123456-00001
                  requestType: anomaly
                  sensitivityParameter:
                    abnormalMaxValue: 1.1
                    enableAbnormal: true
                    enableVeryAbnormal: true
                    veryAbnormalMaxValue: 0.55
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              requestType: anomaly
              sensitivityParameter:
                abnormalMaxValue: 1.1
                enableAbnormal: true
                enableVeryAbnormal: true
                veryAbnormalMaxValue: 0.55
        required: true
      responses:
        '200':
          description: Success response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceSuccessResult'
                - description: Success response.
                  examples:
                  - status: Success
                contentMediaType: application/json
              example:
                status: Success
        default:
          description: An error occurred.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/intelligence/{accountName}/anomaly/settings:
    get:
      tags:
      - Anomaly Settings
      summary: ListAnomalyDetectionSettings
      description: Retrieves the current anomaly detection settings for an account.
      operationId: ListAnomalyDetectionSettings
      parameters:
      - name: accountName
        in: path
        description: The name of the subscribed account.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Retrieve the settings for anomaly detection.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AnomalyDetectionSettings'
                - description: Settings for anomaly detection.
                  examples:
                  - accountName: Success
                    sensitivityParameter:
                      abnormalMaxValue: 1.1
                      enableAbnormal: true
                      enableVeryAbnormal: true
                      veryAbnormalMaxValue: 0.55
                    status: Active
                contentMediaType: application/json
              example:
                accountName: Success
                sensitivityParameter:
                  abnormalMaxValue: 1.1
                  enableAbnormal: true
                  enableVeryAbnormal: true
                  veryAbnormalMaxValue: 0.55
                status: Active
        default:
          description: An error occurred.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/intelligence/{accountName}/anomaly/settings/reset:
    put:
      tags:
      - Anomaly Settings
      summary: ResetAnomalyDetectionParameters
      description: Resets the thresholds to zero.
      operationId: ResetAnomalyDetectionParameters
      parameters:
      - name: accountName
        in: path
        description: The name of the subscribed account.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Success response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceSuccessResult'
                - description: Success response.
                  examples:
                  - status: Success
                contentMediaType: application/json
              example:
                status: Success
        default:
          description: An error occurred.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/triggers:
    get:
      tags:
      - Anomaly Triggers
      summary: ListAnomalyDetectionTriggers
      description: This corresponds to the M2M-MC SOAP interface, ```GetTriggers```.
      operationId: ListAnomalyDetectionTriggers
      parameters: []
      responses:
        '200':
          description: List of triggers associated to a Contact
          headers: {}
          content:
            application/json:
              schema:
                maxItems: 10
                type: array
                items:
                  $ref: '#/components/schemas/GetTriggerResponseList'
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '404':
          description: Not Found / Does not exist
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '406':
          description: Format / Request Unacceptable
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '429':
          description: Too many requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    put:
      tags:
      - Anomaly Triggers
      summary: UpdateAnomalyDetectionTrigger
      description: This corresponds to the M2M-MC SOAP interface, ```UpdateTriggerRequest```.
      operationId: UpdateAnomalyDetectionTrigger
      parameters: []
      requestBody:
        description: Update Trigger Request
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateTriggerRequest'
              - description: Update Trigger Request
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Trigger ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AnomalyDetectionTrigger'
                - description: Trigger for anomaly detection.
                contentMediaType: application/json
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '404':
          description: Not Found / Does not exist
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '406':
          description: Format / Request Unacceptable
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '429':
          description: Too many requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    post:
      tags:
      - Anomaly Triggers
      summary: CreateAnomalyDetectionTrigger
      description: This corresponds to the M2M-MC SOAP interface, ```CreateTrigger```.
      operationId: CreateAnomalyDetectionTrigger
      parameters: []
      requestBody:
        description: Create Trigger Request
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateTriggerRequest'
              - description: Create Trigger Request
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Trigger ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AnomalyDetectionTrigger'
                - description: Trigger for anomaly detection.
                contentMediaType: application/json
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '404':
          description: Not Found / Does not exist
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '406':
          description: Format / Request Unacceptable
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '429':
          description: Too many requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/triggers/{triggerId}:
    get:
      tags:
      - Anomaly Triggers
      summary: ListAnomalyDetectionTriggerSettings
      description: This corresponds to the M2M-MC SOAP interface, ```GetTriggers```.
      operationId: ListAnomalyDetectionTriggerSettings
      parameters:
      - name: triggerId
        in: path
        description: trigger ID
        required: true
        style: simple
        schema:
          type: string
          examples:
          - be1b5958-3e11-41db-9abd-b1b7618c0035
      responses:
        '200':
          description: Trigger information associated to a Trigger Id
          headers: {}
          content:
            application/json:
              schema:
                maxItems: 5
                type: array
                items:
                  $ref: '#/components/schemas/GetTriggerResponseList'
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '404':
          description: Not Found / Does not exist
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '406':
          description: Format / Request Unacceptable
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        '429':
          description: Too many requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    delete:
      tags:
      - Anomaly Triggers
      summary: DeleteAnomalyDetectionTrigger
      description: Deletes a specific trigger ID
      operationId: DeleteAnomalyDetectionTrigger
      parameters:
      - name: triggerId
        in: path
        description: The trigger ID to be deleted
        required: true
        style: simple
        schema:
          type: string
          examples:
          - be1b5958-3e11-41db-9abd-b1b7618c0035
      responses:
        '200':
          description: The ID of the deleted trigger is returned
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AnomalyDetectionTrigger'
                - description: Trigger for anomaly detection.
                contentMediaType: application/json
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v2/triggers:
    post:
      tags:
      - Anomaly Triggers V2
      summary: CreateAnomalyDetectionTriggerV2
      description: Creates the trigger to identify an anomaly.
      operationId: CreateAnomalyDetectionTriggerV2
      parameters: []
      requestBody:
        description: Request to create an anomaly trigger.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateTriggerRequestOptions'
              description: Request to create an anomaly trigger.
              examples:
              - - name: Anomaly Daily Usage REST Test-Patch 1
                  triggerCategory: UsageAnomaly
                  accountName: 0000123456-00001
                  anomalyTriggerRequest:
                    accountNames: 0000123456-00001
                    includeAbnormal: true
                    includeVeryAbnormal: true
                    includeUnderExpectedUsage: true
                    includeOverExpectedUsage: true
                  notification:
                    notificationType: DailySummary
                    callback: true
                    emailNotification: false
                    notificationGroupName: Anomaly Test API
                    notificationFrequencyFactor: 3
                    notificationFrequencyInterval: Hourly
                    externalEmailRecipients: placeholder@verizon.com
                    smsNotification: true
                    smsNumbers:
                    - carrier: US Cellular
                      number: '9299280711'
                    reminder: true
                    severity: Critical
              contentMediaType: application/json
            example:
            - name: Anomaly Daily Usage REST Test-Patch 1
              triggerCategory: UsageAnomaly
              accountName: 0000123456-00001
              anomalyTriggerRequest:
                accountNames: 0000123456-00001
                includeAbnormal: true
                includeVeryAbnormal: true
                includeUnderExpectedUsage: true
                includeOverExpectedUsage: true
              notification:
                notificationType: DailySummary
                callback: true
                emailNotification: false
                notificationGroupName: Anomaly Test API
                notificationFrequencyFactor: 3
                notificationFrequencyInterval: Hourly
                externalEmailRecipients: placeholder@verizon.com
                smsNotification: true
                smsNumbers:
                - carrier: US Cellular
                  number: '9299280711'
                reminder: true
                severity: Critical
        required: true
      responses:
        '200':
          description: Result of request to create a trigger for anomaly detection.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AnomalyDetectionTrigger'
                - description: Trigger for anomaly detection.
                  examples:
                  - triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
                contentMediaType: application/json
              example:
                triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
        default:
          description: An error occurred.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    put:
      tags:
      - Anomaly Triggers V2
      summary: UpdateAnomalyDetectionTriggerV2
      description: Updates an existing trigger using the account name.
      operationId: UpdateAnomalyDetectionTriggerV2
      parameters: []
      requestBody:
        description: Request to update existing trigger.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateTriggerRequestOptions'
              description: Request to update existing trigger.
              examples:
              - - triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
                  triggerName: Anomaly Daily Usage REST Test-Patch Update 4
                  accountName: 0000123456-00001
                  triggerCategory: UsageAnomaly
                  anomalyTriggerRequest:
                    accountNames: 0000123456-00001
                    includeAbnormal: true
                    includeVeryAbnormal: true
                    includeUnderExpectedUsage: false
                    includeOverExpectedUsage: true
                  notification:
                    notificationType: DailySummary
                    callback: true
                    emailNotification: false
                    notificationGroupName: Anomaly Test API
                    notificationFrequencyFactor: 3
                    notificationFrequencyInterval: Hourly
                    externalEmailRecipients: placeholder@verizon.com
                    smsNotification: true
                    smsNumbers:
                    - carrier: US Cellular
                      number: '9299280711'
                    reminder: true
                    severity: Critical
              contentMediaType: application/json
            example:
            - triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
              triggerName: Anomaly Daily Usage REST Test-Patch Update 4
              accountName: 0000123456-00001
              triggerCategory: UsageAnomaly
              anomalyTriggerRequest:
                accountNames: 0000123456-00001
                includeAbnormal: true
                includeVeryAbnormal: true
                includeUnderExpectedUsage: false
                includeOverExpectedUsage: true
              notification:
                notificationType: DailySummary
                callback: true
                emailNotification: false
                notificationGroupName: Anomaly Test API
                notificationFrequencyFactor: 3
                notificationFrequencyInterval: Hourly
                externalEmailRecipients: placeholder@verizon.com
                smsNotification: true
                smsNumbers:
                - carrier: US Cellular
                  number: '9299280711'
                reminder: true
                severity: Critical
        required: true
      responses:
        '200':
          description: Success response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceSuccessResult'
                - description: Success response.
                  examples:
                  - status: Success
                contentMediaType: application/json
              example:
                status: Success
        default:
          description: An error occurred.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    get:
      tags:
      - Retrieve the Triggers
      summary: GetAllAvailableTriggers
      description: Retrieves all of the available triggers for pseudo-MDN.
      operationId: GetAllAvailableTriggers
      parameters: []
      responses:
        '200':
          description: Status of Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerValueResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReadySimRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: More details about the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: More details about the error
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v2/triggers/{triggerId}:
    get:
      tags:
      - Anomaly Triggers V2
      summary: ListAnomalyDetectionTriggerSettingsV2
      description: Retrieves the values for a specific trigger ID.
      operationId: ListAnomalyDetectionTriggerSettingsV2
      parameters:
      - name: triggerId
        in: path
        description: The trigger ID of a specific trigger.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - be1b5958-3e11-41db-9abd-b1b7618c0035
      responses:
        '200':
          description: Anomaly detection trigger details.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/AnomalyTriggerResult'
                - description: A result containing a list of anomaly triggers.
                  examples:
                  - triggers:
                    - triggerId: BE1B5958-3E11-41DB-9ABD-B1B7618C0035
                      triggerName: Anomaly Daily Usage REST Test-1
                      organizationName: AnamolyDetectionRTRTest
                      triggerCategory: UsageAnomaly
                      triggerAttributes:
                      - key: DataPercentage50
                        value: false
                      createdAt: 2021-10-21T23:57:03.397.0000Z
                      modifiedAt: 2021-10-21T23:57:03.397.0000Z
                      notification:
                        notificationType: DailySummary
                        callback: true
                        emailNotification: true
                        notificationGroupName: Anomaly Test API
                        notificationFrequencyFactor: -2147483648
                        externalEmailRecipients: placeholder@verizon.com
                        smsNotification: true
                        smsNumbers:
                        - carrier: US Cellular
                          number: '9299280711'
                        reminder: false
                        severity: Critical
                contentMediaType: application/json
              example:
                triggers:
                - triggerId: BE1B5958-3E11-41DB-9ABD-B1B7618C0035
                  triggerName: Anomaly Daily Usage REST Test-1
                  organizationName: AnamolyDetectionRTRTest
                  triggerCategory: UsageAnomaly
                  triggerAttributes:
                  - key: DataPercentage50
                    value: false
                  createdAt: 2021-10-21T23:57:03.397.0000Z
                  modifiedAt: 2021-10-21T23:57:03.397.0000Z
                  notification:
                    notificationType: DailySummary
                    callback: true
                    emailNotification: true
                    notificationGroupName: Anomaly Test API
                    notificationFrequencyFactor: -2147483648
                    externalEmailRecipients: placeholder@verizon.com
                    smsNotification: true
                    smsNumbers:
                    - carrier: US Cellular
                      number: '9299280711'
                    reminder: false
                    severity: Critical
        default:
          description: An error occurred.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IntelligenceResult'
                - description: An error occurred.
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/intelligence/network-conditions:
    post:
      tags:
      - Wireless Network Performance
      summary: NearRealTimeNetworkConditions
      description: WNP Query for current network condition.
      operationId: NearRealTimeNetworkConditions
      parameters: []
      requestBody:
        description: Request for current network health.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetNetworkConditionsRequest'
              - description: Request for current network health.
                examples:
                - accountName: 0000123456-00001
                  locationType: LONGLAT
                  coordinates:
                    latitude: '-33.84819'
                    longitude: '151.22049'
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              locationType: LONGLAT
              coordinates:
                latitude: '-33.84819'
                longitude: '151.22049'
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRequestResponse'
                - description: Wireless network performance request response.
                  examples:
                  - requestId: d1f08526-5443-4054-9a29-4456490ea9f8
                contentMediaType: application/json
              example:
                requestId: d1f08526-5443-4054-9a29-4456490ea9f8
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRestErrorResponse'
                - description: Wireless network performance rest error response.
                  examples:
                  - errorCode: '400'
                    errorMessage: A brief description of the error code
                contentMediaType: application/json
              example:
                errorCode: '400'
                errorMessage: A brief description of the error code
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/intelligence/wireless-coverage:
    post:
      tags:
      - Wireless Network Performance
      summary: Domestic4GAnd5GNationwideNetworkCoverage
      description: 'Run a report to determine network types available and available coverage. Network types covered include: CAT-M, NB-IOT, LTE, LTE-AWS and 5GNW.'
      operationId: Domestic4GAnd5GNationwideNetworkCoverage
      parameters: []
      requestBody:
        description: Request for network coverage details.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetWirelessCoverageRequest'
              - description: Request for network coverage details.
                examples:
                - accountName: 0000123456-00001
                  requestType: NW
                  locationType: LONGLAT
                  locations:
                    coordinatesList:
                    - latitude: '-33.84819'
                      longitude: '151.22049'
                  networkTypesList:
                  - networkType: LTE
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              requestType: NW
              locationType: LONGLAT
              locations:
                coordinatesList:
                - latitude: '-33.84819'
                  longitude: '151.22049'
              networkTypesList:
              - networkType: LTE
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRequestResponse'
                - description: Wireless network performance request response.
                  examples:
                  - requestId: d1f08526-5443-4054-9a29-4456490ea9f8
                contentMediaType: application/json
              example:
                requestId: d1f08526-5443-4054-9a29-4456490ea9f8
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRestErrorResponse'
                - description: Wireless network performance rest error response.
                  examples:
                  - errorCode: '400'
                    errorMessage: A brief description of the error code
                contentMediaType: application/json
              example:
                errorCode: '400'
                errorMessage: A brief description of the error code
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/intelligence/site-proximity/action/list:
    post:
      tags:
      - Wireless Network Performance
      summary: SiteProximity
      description: Identify the direction and general distance of nearby cell sites and the technology supported by the equipment.
      operationId: SiteProximity
      parameters: []
      requestBody:
        description: Request for cell site proximity.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetNetworkConditionsRequest'
              - description: Request for cell site proximity.
                examples:
                - accountName: 0000123456-00001
                  locationType: LONGLAT
                  coordinates:
                    latitude: '-33.84819'
                    longitude: '151.22049'
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              locationType: LONGLAT
              coordinates:
                latitude: '-33.84819'
                longitude: '151.22049'
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRequestResponse'
                - description: Wireless network performance request response.
                  examples:
                  - requestId: d1f08526-5443-4054-9a29-4456490ea9f8
                contentMediaType: application/json
              example:
                requestId: d1f08526-5443-4054-9a29-4456490ea9f8
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRestErrorResponse'
                - description: Wireless network performance rest error response.
                  examples:
                  - errorCode: '400'
                    errorMessage: A brief description of the error code
                contentMediaType: application/json
              example:
                errorCode: '400'
                errorMessage: A brief description of the error code
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/intelligence/device-experience/history/30-days:
    post:
      tags:
      - Wireless Network Performance
      summary: DeviceExperience30daysHistory
      description: A report of a specific device's service scores over a 30 day period.
      operationId: DeviceExperience30daysHistory
      parameters: []
      requestBody:
        description: Request for a device's 30 day experience.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetDeviceExperienceScoreHistoryRequest'
              - description: Request for a device's 30 day experience.
                examples:
                - accountName: 0000123456-00001
                  deviceId:
                    kind: iccid
                    id: '01234567899876543210'
                    mdn: '0123456789'
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              deviceId:
                kind: iccid
                id: '01234567899876543210'
                mdn: '0123456789'
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRequestResponse'
                - description: Wireless network performance request response.
                  examples:
                  - requestId: d1f08526-5443-4054-9a29-4456490ea9f8
                contentMediaType: application/json
              example:
                requestId: d1f08526-5443-4054-9a29-4456490ea9f8
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRestErrorResponse'
                - description: Wireless network performance rest error response.
                  examples:
                  - errorCode: '400'
                    errorMessage: A brief description of the error code
                contentMediaType: application/json
              example:
                errorCode: '400'
                errorMessage: A brief description of the error code
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/intelligence/device-experience/bulk/latest:
    post:
      tags:
      - Wireless Network Performance
      summary: DeviceExperienceBulkLatest
      description: Run a report to view the latest device experience score for specific devices.
      operationId: DeviceExperienceBulkLatest
      parameters: []
      requestBody:
        description: Request for bulk latest history details.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetDeviceExperienceScoreBulkRequest'
              - description: Request for bulk latest history details.
                examples:
                - accountName: 0000123456-00001
                  deviceList:
                  - kind: iccid
                    id: '01234567899876543210'
                    mdn: '0123456789'
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              deviceList:
              - kind: iccid
                id: '01234567899876543210'
                mdn: '0123456789'
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRequestResponse'
                - description: Wireless network performance request response.
                  examples:
                  - requestId: d1f08526-5443-4054-9a29-4456490ea9f8
                contentMediaType: application/json
              example:
                requestId: d1f08526-5443-4054-9a29-4456490ea9f8
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRestErrorResponse'
                - description: Wireless network performance rest error response.
                  examples:
                  - errorCode: '400'
                    errorMessage: A brief description of the error code
                contentMediaType: application/json
              example:
                errorCode: '400'
                errorMessage: A brief description of the error code
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/intelligence/wireless-coverage:
    post:
      tags:
      - Fixed Wireless Qualification
      summary: Domestic4GAnd5GFixedWirelessQualification
      description: 'Use this query for Fixed Wireless Qualification of an address. Network types include: LTE, C-BAND and MMWAVE.'
      operationId: Domestic4GAnd5GFixedWirelessQualification
      parameters: []
      requestBody:
        description: Request for network coverage details.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetWirelessCoverageRequestFWA'
              - description: Request for network coverage details.
                examples:
                - accountName: 0000123456-00001
                  requestType: FWA
                  locationType: ADDRESS
                  locations:
                    addressList:
                    - addressLine1: street address
                      city: city
                      state: LA
                      country: USA
                      zip: '00000'
                  networkTypesList:
                  - networkType: LTE
              contentMediaType: application/json
            example:
              accountName: 0000123456-00001
              requestType: FWA
              locationType: ADDRESS
              locations:
                addressList:
                - addressLine1: street address
                  city: city
                  state: LA
                  country: USA
                  zip: '00000'
              networkTypesList:
              - networkType: LTE
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRequestResponse'
                - description: Wireless network performance request response.
                  examples:
                  - requestId: d1f08526-5443-4054-9a29-4456490ea9f8
                contentMediaType: application/json
              example:
                requestId: d1f08526-5443-4054-9a29-4456490ea9f8
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/WNPRestErrorResponse'
                - description: Wireless network performance rest error response.
                  examples:
                  - errorCode: '400'
                    errorMessage: A brief description of the error code
                contentMediaType: application/json
              example:
                errorCode: '400'
                errorMessage: A brief description of the error code
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/profile/actions/download:
    post:
      tags:
      - Managing eSIM Profiles
      summary: DownloadADeviceProfile
      description: Download a Global IoT Orchestration device profile.
      operationId: DownloadADeviceProfile
      parameters: []
      requestBody:
        description: Device Profile Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeviceProfileRequest'
              - description: Device Profile Query
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORequestResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/sms/{accountName}/history:
    get:
      tags:
      - Device SMS Messaging
      summary: GetSmsMessages
      description: Retrieves queued SMS messages sent by all M2M MC devices associated with an account.
      operationId: GetSmsMessages
      parameters:
      - name: accountName
        in: path
        description: Numeric account name
        required: true
        style: simple
        schema:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9\-]{3,32}$
          type: string
          examples:
          - 0000123456-00001
      - name: next
        in: query
        description: Continue the previous query from the pageUrl in Location Header
        style: form
        explode: true
        schema:
          maxLength: 64
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          examples:
          - TheURLForTheNextQuery
      responses:
        '200':
          description: Successful response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsMessagesResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/sms/{accountName}/startCallbacks:
    put:
      tags:
      - Device SMS Messaging
      summary: StartSmsMessageDelivery
      description: Starts delivery of SMS messages for the specified account.
      operationId: StartSmsMessageDelivery
      parameters:
      - name: accountName
        in: path
        description: Numeric account name
        required: true
        style: simple
        schema:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9\-]{3,32}$
          type: string
          examples:
          - 0000123456-00001
      responses:
        '200':
          description: Request Success Message
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/sms/history/actions/list:
    post:
      tags:
      - Device SMS Messaging
      summary: ListSmsMessageHistory
      description: Returns a list of sms history for a given device during a specified time frame.
      operationId: ListSmsMessageHistory
      parameters: []
      requestBody:
        description: Device Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SMSEventHistoryRequest'
              - description: Device Query
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORequestResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v2/devices/actions/list:
    post:
      tags:
      - Device Actions
      summary: RetrieveTheGlobalDeviceList
      description: Allows the profile to fetch the complete device list. This works with Verizon US and Global profiles.
      operationId: RetrieveTheGlobalDeviceList
      parameters: []
      requestBody:
        description: Device Profile Query
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/GetDeviceListWithProfilesRequest'
              - description: Device Profile Query
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORequestResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v2/devices/history/actions/list:
    post:
      tags:
      - Device Actions
      summary: RetrieveDeviceProvisioningHistory
      description: Retreive the provisioning history of a specific device or devices.
      operationId: RetrieveDeviceProvisioningHistory
      parameters: []
      requestBody:
        description: Device Provisioning History
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ProvhistoryRequest'
              - description: Device Provisioning History
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORequestResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v2/accounts/{accountName}/requests/{requestID}/status:
    get:
      tags:
      - Device Actions
      summary: GetAsynchronousRequestStatus
      description: Get the status of an asynchronous request made with the Device Actions.
      operationId: GetAsynchronousRequestStatus
      parameters:
      - name: accountName
        in: path
        description: ''
        required: true
        style: simple
        schema:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9\-]{3,32}$
          type: string
          examples:
          - 0000123456-00001
      - name: requestID
        in: path
        description: ''
        required: true
        style: simple
        schema:
          maxLength: 64
          minLength: 3
          pattern: ^[A-Za-z0-9\-]{3,64}$
          type: string
          examples:
          - d1f08526-5443-4054-9a29-4456490ea9f8
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GIORestErrorResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/actions/enhanceQoS:
    post:
      tags:
      - ThingSpace Quality of Service API Actions
      summary: CreateAThingSpaceQualityOfServiceAPISubscription
      description: Creates a QoS elevation subscription ID and activates the subscription.
      operationId: CreateAThingSpaceQualityOfServiceAPISubscription
      parameters: []
      requestBody:
        description: The request details to create a ThingSpace Quality of Service API subscription.
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/subscribeRequest'
              - description: The request details to create a ThingSpace Quality of Service API subscription.
              contentMediaType: application/json
        required: true
      responses:
        '201':
          description: Success Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/201success'
        default:
          description: Error Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    delete:
      tags:
      - ThingSpace Quality of Service API Actions
      summary: StopAThingSpaceQualityOfServiceAPISubscription
      description: Stops an active ThingSpace Quality of Service API subscription using the account name and the subscription ID.
      operationId: StopAThingSpaceQualityOfServiceAPISubscription
      parameters:
      - name: accountName
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: qosSubscriptionId
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
          examples:
          - QoS subscription ID
      responses:
        '201':
          description: Success Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/201success'
        default:
          description: Error Response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultResponse'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/mec/kpi/list/{aname}:
    get:
      tags:
      - MEC
      summary: KPIList
      description: ''
      operationId: KPIList
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0342351414-00001
      responses:
        '200':
          description: Kpi list received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/KPIInfoList'
                - examples:
                  - KpiInfoList:
                    - name: DOWNLINK_THROUGHPUT
                      value: '23.2'
                      nodeName: 132924_ENB_VZ_EULESS_OLTE_RD-01
                      nodeType: BASEBAND
                      description: Downlink throughput (4G)
                      unit: Mbps
                      category: Network Performance Radio
                      timeOfLastUpdate: 2022-12-07T08:39:59.228Z
                contentMediaType: application/json
              example:
                KpiInfoList:
                - name: DOWNLINK_THROUGHPUT
                  value: '23.2'
                  nodeName: 132924_ENB_VZ_EULESS_OLTE_RD-01
                  nodeType: BASEBAND
                  description: Downlink throughput (4G)
                  unit: Mbps
                  category: Network Performance Radio
                  timeOfLastUpdate: 2022-12-07T08:39:59.228Z
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/mec/profiles/list/{aname}:
    get:
      tags:
      - MEC
      summary: GetProfileList
      description: ''
      operationId: GetProfileList
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0342351414-00001
      responses:
        '200':
          description: MEC profiles list received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MECProfileList'
                - examples:
                  - profiles:
                    - profileId: HSS-EsmProfile_Enterprise
                      profileName: HSS EsmProfile Enterprise
                contentMediaType: application/json
              example:
                profiles:
                - profileId: HSS-EsmProfile_Enterprise
                  profileName: HSS EsmProfile Enterprise
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/mec/actions/state/activate:
    post:
      tags:
      - MEC
      summary: ChangePmecDeviceState-Activate
      description: ''
      operationId: ChangePmecDeviceState-Activate
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ChangePmecDeviceState-ActivateRequest'
              - examples:
                - accountName: 0342351414-00001
                  deviceList:
                  - deviceIds:
                    - id: '99948099913024600001'
                      kind: iccid
                  activate:
                    profile: HSS EsmProfile Enterprise 5G
              contentMediaType: application/json
            example:
              accountName: 0342351414-00001
              deviceList:
              - deviceIds:
                - id: '99948099913024600001'
                  kind: iccid
              activate:
                profile: HSS EsmProfile Enterprise 5G
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ChangeMecDeviceStateResponse'
                - description: Response to change mec device state
                  examples:
                  - requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
                contentMediaType: application/json
              example:
                requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/mec/actions/state/deactivate:
    post:
      tags:
      - MEC
      summary: ChangePmecDeviceState-BulkDeactivate
      description: ''
      operationId: ChangePmecDeviceState-BulkDeactivate
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ChangePmecDeviceState-BulkDeactivateRequest'
              - examples:
                - accountName: 0342351414-00001
                  deviceList:
                  - deviceIds:
                    - id: '99948099913031600000'
                      kind: iccid
                  - deviceIds:
                    - id: '99948099913031700000'
                      kind: iccid
              contentMediaType: application/json
            example:
              accountName: 0342351414-00001
              deviceList:
              - deviceIds:
                - id: '99948099913031600000'
                  kind: iccid
              - deviceIds:
                - id: '99948099913031700000'
                  kind: iccid
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ChangeMecDeviceStateResponse'
                - description: Response to change mec device state
                  examples:
                  - requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
                contentMediaType: application/json
              example:
                requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/mec/actions/profile:
    post:
      tags:
      - MEC
      summary: ChangePmecDeviceProfile
      description: ''
      operationId: ChangePmecDeviceProfile
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ChangePmecDeviceProfileRequest'
              - examples:
                - accountName: 0342351414-00001
                  deviceList:
                  - deviceIds:
                    - id: '99948099913024600000'
                      kind: iccid
                  newProfile: HSS EsmProfile Enterprise 5G internet
              contentMediaType: application/json
            example:
              accountName: 0342351414-00001
              deviceList:
              - deviceIds:
                - id: '99948099913024600000'
                  kind: iccid
              newProfile: HSS EsmProfile Enterprise 5G internet
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ChangeMecDeviceProfileResponse'
                - description: Response to change mec device profile
                  examples:
                  - requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
                contentMediaType: application/json
              example:
                requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/mec/actions/ipaddress:
    put:
      tags:
      - MEC
      summary: ChangePmecDeviceIPaddressBulk
      description: ''
      operationId: ChangePmecDeviceIPaddressBulk
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ChangePmecDeviceState-BulkDeactivateRequest'
              - examples:
                - accountName: 0342351414-00001
                  deviceList:
                  - deviceIds:
                    - id: '99948099913031600000'
                      kind: iccid
                  - deviceIds:
                    - id: '99948099913031700000'
                      kind: iccid
              contentMediaType: application/json
            example:
              accountName: 0342351414-00001
              deviceList:
              - deviceIds:
                - id: '99948099913031600000'
                  kind: iccid
              - deviceIds:
                - id: '99948099913031700000'
                  kind: iccid
        required: true
      responses:
        '200':
          description: Request ID received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ChangeMecDeviceIPAddressResponse'
                - description: Response to change mec device ip address.
                  examples:
                  - requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
                contentMediaType: application/json
              example:
                requestId: c7b45cf2-cab1-4e42-82f8-20350f4c4ea3
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/mec/performance/consent/{aname}:
    get:
      tags:
      - MEC
      summary: GetMECPerformanceConsent
      description: ''
      operationId: GetMECPerformanceConsent
      parameters:
      - name: aname
        in: path
        description: Account name.
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 1533445500-00088
      responses:
        '200':
          description: consent received on a successful response.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/GetMECPerformanceConsentResponse'
                - description: MEC Performance Consent Response
                  examples:
                  - consent: 'false'
                contentMediaType: application/json
              example:
                consent: 'false'
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/usage/actions/promodeviceusage:
    post:
      tags:
      - Promotion Period Information
      summary: getPromoDeviceUsageHistory
      description: Retrieves the usage history of a device during the promotion period.
      operationId: getPromoDeviceUsageHistory
      parameters: []
      requestBody:
        description: Retrieve Aggregate Usage
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestBodyforUsage1'
              - description: Retrieve Aggregate Usage
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Usage History
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ResponsetoUsageQuery'
                - examples:
                  - hasmoredata: false
                    deviceId:
                      kind: iccid
                      id: 20-digit iccid
                    usageHistory:
                    - bytesUsed: 3072
                      serviceplan: The serviceplan name
                      smsUsed: 0
                      moSMS: 0
                      mtSMS: 0
                      source: Raw Usage
                      eventDateTime: 2021-08-15T05:00:00Z
                contentMediaType: application/json
              example:
                hasmoredata: false
                deviceId:
                  kind: iccid
                  id: 20-digit iccid
                usageHistory:
                - bytesUsed: 3072
                  serviceplan: The serviceplan name
                  smsUsed: 0
                  moSMS: 0
                  mtSMS: 0
                  source: Raw Usage
                  eventDateTime: 2021-08-15T05:00:00Z
        default:
          description: All error responses will be in this format
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReadySimRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: More details about the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: More details about the error
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v1/devices/usage/actions/promoaggregateusage:
    post:
      tags:
      - Promotion Period Information
      summary: GetPromoDeviceAggregateUsageHistory
      description: Retrieves the aggregate usage for an account using pseudo-MDN during the promotional period using a callback.
      operationId: GetPromoDeviceAggregateUsageHistory
      parameters: []
      requestBody:
        description: Retrieve Aggregate Usage
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestBodyforUsage'
              - description: Retrieve Aggregate Usage
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Request response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/usageRequestResponse'
                - examples:
                  - requestId: be1b5958-3e11-41db-9abd-b1b7618c0035
                contentMediaType: application/json
              example:
                requestId: be1b5958-3e11-41db-9abd-b1b7618c0035
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReadySimRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: More details about the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: More details about the error
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v2/triggers/accounts/{accountName}:
    get:
      tags:
      - Retrieve the Triggers
      summary: GetAllTriggersByAccountName
      description: Retrieve the triggers associated with an account name.
      operationId: GetAllTriggersByAccountName
      parameters:
      - name: accountName
        in: path
        description: The account name
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-000001
      responses:
        '200':
          description: Status of Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerValueResponse'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReadySimRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: More details about the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: More details about the error
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v2/triggers/categories/PromoAlerts:
    get:
      tags:
      - Retrieve the Triggers
      summary: GetAllTriggersByTriggerCategory
      description: Retrieves all of the triggers for the specified account associated with the PromoAlert category
      operationId: GetAllTriggersByTriggerCategory
      parameters: []
      responses:
        '200':
          description: Request response
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerValueResponse2'
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ReadySimRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: More details about the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: More details about the error
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /m2m/v2/accounts/{accountname}/requests/{requestID}/status:
    get:
      tags:
      - Global Reporting
      summary: requeststatususingGET
      description: Get the status of a request made with the Device Actions.
      operationId: requeststatususingGET
      parameters:
      - name: accountname
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 0000123456-00001
      - name: requestID
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          examples:
          - 86c83330-4bf5-4235-9c4e-a83f93aeae4c
      responses:
        '200':
          description: Request ID
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/eSIMStatusResponse'
                - examples:
                  - requestId: d1f08526-5443-4054-9a29-4456490ea9f8
                    status: Success
                    subrequests:
                    - id: 32-digit EID
                      kind: eid
                    - status: success
                contentMediaType: application/json
              example:
                requestId: d1f08526-5443-4054-9a29-4456490ea9f8
                status: Success
                subrequests:
                - id: 32-digit EID
                  kind: eid
                - status: success
        '400':
          description: Bad request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/eSIMRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: a description of the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: a description of the error
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/eSIMRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: a description of the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: a description of the error
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/eSIMRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: a description of the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: a description of the error
        '404':
          description: Not Found / Does not exist
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/eSIMRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: a description of the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: a description of the error
        '406':
          description: Format / Request Unacceptable
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/eSIMRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: a description of the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: a description of the error
        '429':
          description: Too many requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/eSIMRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: a description of the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: a description of the error
        default:
          description: Error response
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/eSIMRestErrorResponse'
                - examples:
                  - errorCode: The 3-digit HTML error code
                    errorMessage: a description of the error
                contentMediaType: application/json
              example:
                errorCode: The 3-digit HTML error code
                errorMessage: a description of the error
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://thingspace.verizon.com/api
        variables: {}
      - url: https://staging.thingspace.verizon.com/api
        variables: {}
      - url: https://devmanagement-staging.thingspace.verizon.com/api
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.thingspace.verizon.com/api
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com/api
        variables: {}
    parameters: []
  /api/v1/vendors/registration:
    post:
      tags:
      - Registration
      summary: RegisterIMPVendor
      description: >
        With this API call the users (clients) register themselves as Vendors to the IMP system. Therefore, when a registration is initiated from a device or software service to the IMP system with the registered VendorID, then the client registration will be authorized.
      operationId: RegisterIMPVendor
      parameters:
      - name: BasicToken
        in: header
        description: This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).
        required: true
        style: simple
        schema:
          maxLength: 256
          pattern: ^[A-Za-z0-9]+$
          type: string
          examples:
          - RGFrb3RhQ2xpZWnTAtYjNhMjGyYWE0ZWMz
      - name: Username
        in: header
        description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 64
          pattern: ^[@\-\w\.]+$
          type: string
          examples:
          - VerizonImpUser
      - name: Password
        in: header
        description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 128
          pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
          type: string
          examples:
          - Some-Password_123
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorRegistrationRequest'
        required: true
      responses:
        '201':
          description: Successful Vendor Registration
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/VendorRegistrationResponse'
                - description: Response for /vendors/registration. It provides a response if the vendor wa added to the system or updated with the new data.
                contentMediaType: application/json
        '202':
          description: Successful Vendor Registration Update
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/VendorRegistrationResponse'
                - description: Response for /vendors/registration. It provides a response if the vendor wa added to the system or updated with the new data.
                contentMediaType: application/json
        '400':
          description: Invalid Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '401':
          description: Unauthorized Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '403':
          description: Forbidden Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '503':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        default:
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://imp.thingspace.verizon.com
        variables: {}
      - url: https://staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://devmanagement-staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.imp.thingspace.verizon.com
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com
        variables: {}
    delete:
      tags:
      - Registration
      summary: UnregisterIMPVendor
      description: >
        With this API call the users (clients) can unregister themselves from the IMP system. The devices and services for this Vendor will no longer be able to use the IMP Message Exchange.
      operationId: UnregisterIMPVendor
      parameters:
      - name: BasicToken
        in: header
        description: This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).
        required: true
        style: simple
        schema:
          maxLength: 256
          pattern: ^[A-Za-z0-9]+$
          type: string
          examples:
          - RGFrb3RhQ2xpZWnTAtYjNhMjGyYWE0ZWMz
      - name: Username
        in: header
        description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 64
          pattern: ^[@\-\w\.]+$
          type: string
          examples:
          - VerizonImpUser
      - name: Password
        in: header
        description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 128
          pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
          type: string
          examples:
          - Some-Password_123
      - name: VendorID
        in: query
        description: The VendorID set during the Vendor registration call.
        required: true
        style: form
        explode: true
        schema:
          maxLength: 64
          pattern: ^[a-zA-Z0-9]+$
          type: string
          examples:
          - VerizonIMP
      responses:
        '204':
          description: Successful Deletion
          headers: {}
          content: {}
        '400':
          description: Invalid Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '401':
          description: Unauthorized Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '403':
          description: Forbidden Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '503':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        default:
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://imp.thingspace.verizon.com
        variables: {}
      - url: https://staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://devmanagement-staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.imp.thingspace.verizon.com
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com
        variables: {}
    parameters: []
  /api/v1/clients/registration:
    post:
      tags:
      - Registration
      summary: RegisterIMPDevice
      description: >
        With this API call the user (client) registers its device or software service to the IMP system. Therefore, when a connection is initiated from the device or software service to the IMP system along with the credential provided by this registration call, then the connection will be authorized.

        Note 1: One user can register multiple devices or software services, which can all be used at the same time.


        Note 2: The user needs to authenticate with their ThingSpace credentials and request a bearer token in order to call this API.
      operationId: RegisterIMPDevice
      parameters:
      - name: Username
        in: header
        description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 64
          pattern: ^[@\-\w\.]+$
          type: string
          examples:
          - VerizonImpUser
      - name: Password
        in: header
        description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 128
          pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
          type: string
          examples:
          - Some-Password_123
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRegistrationRequest'
        required: true
      responses:
        '200':
          description: Successful Registration
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ClientRegistrationResponse'
                - description: Response for /clients/registration. It provides a generated device ID and the certificates needed to connect the IMP Message Exchange.
                contentMediaType: application/json
        '400':
          description: Invalid Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '401':
          description: Unauthorized Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '403':
          description: Forbidden Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '503':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        default:
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://imp.thingspace.verizon.com
        variables: {}
      - url: https://staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://devmanagement-staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.imp.thingspace.verizon.com
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com
        variables: {}
    delete:
      tags:
      - Registration
      summary: UnregisterIMPDevice
      description: >
        With this API call the user (client) can unregister its devices and software services from the IMP system. The unregistered devices and services will no longer be able to use the IMP Message Exchange.
      operationId: UnregisterIMPDevice
      parameters:
      - name: Username
        in: header
        description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 64
          pattern: ^[@\-\w\.]+$
          type: string
          examples:
          - VerizonImpUser
      - name: Password
        in: header
        description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 128
          pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
          type: string
          examples:
          - Some-Password_123
      - name: DeviceIDs
        in: query
        description: The Device IDs acquired through the registration API.
        required: true
        style: form
        explode: true
        schema:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            contentEncoding: uuid
      responses:
        '204':
          description: Successful Deletion
          headers: {}
          content: {}
        '400':
          description: Invalid Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '401':
          description: Unauthorized Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '403':
          description: Forbidden Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '503':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        default:
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://imp.thingspace.verizon.com
        variables: {}
      - url: https://staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://devmanagement-staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.imp.thingspace.verizon.com
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com
        variables: {}
    parameters: []
  /api/v1/clients/connection:
    post:
      tags:
      - Registration
      summary: RetrieveMQTTurl
      description: >
        With this API call the  or software service requests the MQTT URL for the location that it needs to connect. To determine the proper URL the device or software service needs to provide its ID (the one that was provided in the registration request), location (GPS coordinates), and whether it is on the Verizon cellular network or not.


        Note: The user needs to authenticate with their ThingSpace credentials and request a bearer token in order to call this API.
      operationId: RetrieveMQTTurl
      parameters:
      - name: Username
        in: header
        description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 64
          pattern: ^[@\-\w\.]+$
          type: string
          examples:
          - VerizonImpUser
      - name: Password
        in: header
        description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 128
          pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
          type: string
          examples:
          - Some-Password_123
      - name: VendorID
        in: header
        description: The VendorID set during the Vendor registration call.
        required: true
        style: simple
        schema:
          maxLength: 64
          pattern: ^[a-zA-Z0-9]+$
          type: string
          examples:
          - VerizonIMP
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionRequest'
        required: true
      responses:
        '200':
          description: Successful retrieval
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ConnectionResponse'
                - description: response for /clients/connection
                contentMediaType: application/json
        '400':
          description: Invalid request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '403':
          description: Forbidden Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        '503':
          description: Internal server Error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
        default:
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IMPResponseError'
                - description: error response structure
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://imp.thingspace.verizon.com
        variables: {}
      - url: https://staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://devmanagement-staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.imp.thingspace.verizon.com
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com
        variables: {}
    parameters: []
  /api/v1/mapdata:
    post:
      tags:
      - Map Data Manager
      summary: UploadMapDataMessage
      description: This endpoint allows user to upload map messages in asn.1 J2735 encoded format. The MapData can have one or more intersections.
      operationId: UploadMapDataMessage
      parameters:
      - name: BasicToken
        in: header
        description: This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).
        required: true
        style: simple
        schema:
          maxLength: 256
          pattern: ^[A-Za-z0-9]+$
          type: string
          examples:
          - RGFrb3RhQ2xpZWnTAtYjNhMjGyYWE0ZWMz
      - name: Username
        in: header
        description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 64
          pattern: ^[@\-\w\.]+$
          type: string
          examples:
          - VerizonImpUser
      - name: Password
        in: header
        description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 128
          pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
          type: string
          examples:
          - Some-Password_123
      requestBody:
        description: ''
        content:
          text/plain:
            schema:
              maxLength: 1000000
              pattern: ^[A-Za-z0-9]+$
              type: string
              contentMediaType: text/plain
        required: true
      responses:
        '201':
          description: Map message/s successfully processed
          headers: {}
          content:
            text/plain:
              schema:
                maxLength: 100
                pattern: ^[\w\s<>=+:;,"'\-\?\.\!]+$
                type: string
                contentMediaType: text/plain
        '400':
          description: Invalid request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        '403':
          description: Forbidden Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        '503':
          description: Internal server Error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        default:
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://imp.thingspace.verizon.com
        variables: {}
      - url: https://staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://devmanagement-staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.imp.thingspace.verizon.com
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com
        variables: {}
    get:
      tags:
      - Map Data Manager
      summary: DownloadMapDataMessage
      description: This endpoint allows user to download SAE J2735 MAP messages in ASN.1 UPER format. The area for the MAP messages is needed to be defined in the query.
      operationId: DownloadMapDataMessage
      parameters:
      - name: BasicToken
        in: header
        description: This is the Basic (authentication) token for the user. It should be acquired by using the ThingSpace Portal (thingspace.verizon.com).
        required: true
        style: simple
        schema:
          maxLength: 256
          pattern: ^[A-Za-z0-9]+$
          type: string
          examples:
          - RGFrb3RhQ2xpZWnTAtYjNhMjGyYWE0ZWMz
      - name: Username
        in: header
        description: This is the UWS login name for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 64
          pattern: ^[@\-\w\.]+$
          type: string
          examples:
          - Imp-Us3r@verizon.com
      - name: Password
        in: header
        description: This is the UWS password for the user. It should be acquired by using the ThingSpace Connectivity Management Portal (thingspace.verizonwireless.com).
        required: true
        style: simple
        schema:
          maxLength: 128
          pattern: ^[-\w\+@#$?!^&\(\)\[\]\{\}\.\:\;]+$
          type: string
          examples:
          - Some-Password_123
      - name: GeoFence
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/Polygon'
      responses:
        '200':
          description: The response is a list line separated ASN.1 UPER J2735 base64 encoded MapData messages
          headers: {}
          content:
            text/plain:
              schema:
                maxLength: 1000000
                pattern: ^[\w\s<>=+:;,"'\-\?\.\!]+$
                type: string
                contentMediaType: text/plain
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        '403':
          description: Forbidden Request
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        '429':
          description: Too Many Requests
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        '503':
          description: Internal server Error
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
        default:
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/MapDataResponseError'
                - description: error response structure
                contentMediaType: application/json
      deprecated: false
      security:
      - thingspace_oauth: []
        VZ-M2M-Token: []
      servers:
      - url: https://imp.thingspace.verizon.com
        variables: {}
      - url: https://staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://devmanagement-staging.imp.thingspace.verizon.com
        variables: {}
      - url: https://tsd-nginx-qa-us-east-1.imp.thingspace.verizon.com
        variables: {}
      - url: https://mock-staging.thingspace.verizon.com
        variables: {}
    parameters: []
components:
  schemas:
    DeleteServiceProfileResult:
      title: DeleteServiceProfileResult
      type: object
      properties:
        status:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          examples:
          - Success
        message:
          maxLength: 32
          type: string
          examples:
          - Service Profile Deleted
      description: Response on successful deletion of service profile.
    UpdateServiceProfileResult:
      title: UpdateServiceProfileResult
      type: object
      properties:
        status:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: HTTP status code.
          examples:
          - Success
        message:
          maxLength: 32
          type: string
          description: Service Profile that are updated or error details in case of an error.
          examples:
          - Service Profile Updated
      description: Response on successful update of service profile.
    ListServiceProfilesResult:
      title: ListServiceProfilesResult
      type: object
      properties:
        status:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: HTTP status code.
          examples:
          - Success
        data:
          maxItems: 100
          type: array
          items:
            maxLength: 32
            type: string
          description: A comma delimited list of all the service profiles registered under your API key.
      description: Response on successful retrieval of service profiles.
    CreateServiceProfileResult:
      title: CreateServiceProfileResult
      type: object
      properties:
        serviceProfileId:
          type: string
          description: Unique identifier for a service profile.
          examples:
          - 4054ea9a-593e-4776-b488-697b1bfa4f3b
      description: A successful request returns a serviceProfileId that you can use in subsequent requests.
    DeregisterServiceEndpointResult:
      title: DeregisterServiceEndpointResult
      type: object
      properties:
        status:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: HTTP status code.
          examples:
          - Success
        message:
          maxLength: 32
          type: string
          description: EdgeAppServicesID that are deleted or error details in case of an error.
          examples:
          - EdgeAppServicesID Deleted
      description: Response to deregister an application's Service Endpoint from one or more Multi-access Edge Compute (MEC) Platforms.
    UpdateServiceEndpointResult:
      title: UpdateServiceEndpointResult
      type: object
      properties:
        status:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: HTTP status code.
          examples:
          - Success
        message:
          maxLength: 64
          type: string
          description: EdgeAppServices are updated or error details in case of an error.
          examples:
          - EdgeAppServices are updated
      description: Response to update registered Service Endpoint information.
    ListAllServiceEndpointsResult:
      title: ListAllServiceEndpointsResult
      type: object
      properties:
        status:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: HTTP status code.
          default: success
        data:
          maxItems: 100
          type: array
          items:
            maxLength: 32
            type: string
          description: A comma delimited list of all registered service endpoints.
      description: Response on successful retrieval of all registered service endpoints.
    RegisterServiceEndpointResult:
      title: RegisterServiceEndpointResult
      type: object
      properties:
        serviceEndpointsId:
          type: string
          description: A system-defined string identifier representing one or more registered Service Endpoints.
          readOnly: true
          examples:
          - 43f3f7bb-d6c5-4bad-b081-9a3a0df2db98
      description: Response to register Service Endpoints of a deployed application to specified Muli-access Edge Compute (MEC) Platforms.
    ListOptimalServiceEndpointsResult:
      title: ListOptimalServiceEndpointsResult
      type: object
      properties:
        serviceEndpoints:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/ResourcesEdgeHostedService'
          description: An array of optimal Service Endpoint IDs for clients to connect to.
      description: Response on successful retrieval of optimal service endpoints for clients.
    ListRegionsResult:
      title: ListRegionsResult
      type: object
      properties:
        regions:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/Region'
          description: An array of all regions in the Verizon 5G Edge service.
      description: Response to return an array of all regions in the Verizon 5G Edge service. You can use the region IDs from the response to find optimal Edge platforms or service endpoints.
    ListMECPlatformsResult:
      title: ListMECPlatformsResult
      type: object
      properties:
        MECPlatforms:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/MECPlatformResource'
          description: A list of optimal MEC Platforms where you can register your deployed application.
      description: Response to return the optimal 5G Edge platforms for deployment based on a region, service profile of the service that you want to deploy or user equipment.
    ClientType:
      title: ClientType
      enum:
      - V2X
      - ComputerVision
      - MachineLearning
      - IoT
      - Gaming
      - AR
      - VR
      - Analytics
      - Robotics
      type: string
      description: The category of application client.
    ResourcesServiceProfile:
      title: ResourcesServiceProfile
      required:
      - clientType
      type: object
      properties:
        clientType:
          allOf:
          - $ref: '#/components/schemas/ClientType'
          - description: The category of application client.
        ecspFilter:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: Identity of the preferred Edge Computing Service Provider.
          examples:
          - Verizon
        clientSchedule:
          maxLength: 32
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          description: The expected operation schedule of the application client (e.g. time windows).
          examples:
          - time windows
        clientServiceArea:
          maxLength: 32
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          description: The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.
          examples:
          - BAY AREA
        networkResources:
          allOf:
          - $ref: '#/components/schemas/NetworkResourcesType'
          - description: Network resources of a service profile.
        computeResources:
          allOf:
          - $ref: '#/components/schemas/ComputeResourcesType'
          - description: Compute resources of a service profile.
        properties:
          allOf:
          - $ref: '#/components/schemas/MECPlatformsAdditionalSupportInfo'
          - description: Additional service support information for the MEC platform.
      description: Information about the resource requirements and service characteristics of an edge application. The `maxLatencyMs` and `clientType` parameters are both required in the request body. **Note:** The `maxLatencyMs` value must be submitted in multiples of 5. Does not include serviceProfileId
    ResourcesServiceProfileWithId:
      title: ResourcesServiceProfileWithId
      required:
      - clientType
      type: object
      properties:
        serviceProfileId:
          type: string
          description: Unique identifier for a service profile.
          examples:
          - 4054ea9a-593e-4776-b488-697b1bfa4f3b
        clientType:
          allOf:
          - $ref: '#/components/schemas/ClientType'
          - description: The category of application client.
        ecspFilter:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: Identity of the preferred Edge Computing Service Provider.
          examples:
          - Verizon
        clientSchedule:
          maxLength: 32
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          description: The expected operation schedule of the application client (e.g. time windows).
          examples:
          - time windows
        clientServiceArea:
          maxLength: 32
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          description: The expected location(s) (e.g. route) of the hosting UE during the Client's operation schedule.
          examples:
          - BAY AREA
        networkResources:
          allOf:
          - $ref: '#/components/schemas/NetworkResourcesType'
          - description: Network resources of a service profile.
        computeResources:
          allOf:
          - $ref: '#/components/schemas/ComputeResourcesType'
          - description: Compute resources of a service profile.
        properties:
          allOf:
          - $ref: '#/components/schemas/MECPlatformsAdditionalSupportInfo'
          - description: Additional service support information for the MEC platform.
      description: Information about the resource requirements and service characteristics of an edge application. Includes serviceProfileId. Used when retrieving a service profile.
    MECPlatformsAdditionalSupportInfo:
      title: MECPlatformsAdditionalSupportInfo
      type: object
      properties:
        type:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: Type of additional service support information for the MEC platform.
        data:
          allOf:
          - $ref: '#/components/schemas/MECPlatformsAdditionalSupportInfoData'
          - description: Data about additional service support information for the MEC platform.
      description: Additional service support information for the MEC platform.
    MECPlatformsAdditionalSupportInfoData:
      title: MECPlatformsAdditionalSupportInfoData
      type: object
      properties:
        additionalInfo:
          maxLength: 32
          type: string
      description: Data about additional service support information for the MEC platform.
    ResourcesEdgeHostedService:
      title: ResourcesEdgeHostedService
      type: object
      properties:
        ern:
          maxLength: 32
          pattern: ^[A-Za-z0-9-_]{3,32}$
          type: string
          description: Edge Resource Name. A string identifier for a set of edge resources.
          examples:
          - LASVEGAS_NV_WL
        serviceEndpoint:
          allOf:
          - $ref: '#/components/schemas/ResourcesServiceEndpoint'
          - description: Service Endpoint path, address, and port.
        applicationServerProviderId:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: Unique ID representing the Edge Application Provider.
          examples:
          - AWS
        applicationId:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: Unique ID representing the Edge Application.
          examples:
          - IogspaceJan15
        serviceDescription:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          examples:
          - ThieIt
      description: Edge hosted service represented by Service Endpoint definition.
    ResourcesEdgeHostedServiceWithProfileId:
      title: ResourcesEdgeHostedServiceWithProfileId
      type: object
      properties:
        ern:
          maxLength: 32
          pattern: ^[A-Za-z0-9-]{3,32}$
          type: string
          description: Edge Resource Name. A string identifier for a set of edge resources.
          examples:
          - us-east-1-wl1-atl-wlz-1
        serviceEndpoint:
          allOf:
          - $ref: '#/components/schemas/ResourcesServiceEndpoint'
          - description: Service Endpoint path, address, and port.
        applicationServerProviderId:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: Unique ID representing the Edge Application Provider.
          examples:
          - AWS
        applicationId:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: Unique ID representing the Edge Application.
          examples:
          - IogspaceJan15
        serviceDescription:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          examples:
          - ThieIt
        serviceProfileID:
          type: string
          description: The system assigned ID of the service profile.
          examples:
          - 4054ea9a-593e-4776-b488-697b1bfa4f3b
      description: Edge hosted service represented by Service Endpoint definition.
    ResourcesServiceEndpoint:
      title: ResourcesServiceEndpoint
      type: object
      properties:
        URI:
          maxLength: 32
          pattern: '\w+:(/?/?)[^\s]+'
          type: string
          description: URI of Service Endpoint if available.
          examples:
          - http://base_path/some_segment/id
        FQDN:
          maxLength: 32
          pattern: ^[A-Za-z0-9.]{3,32}$
          type: string
          description: FQDN of Service Endpoint if available.
          examples:
          - thingtest.verizon.com
        IPv4Address:
          maxLength: 32
          type: string
          description: IPv4 Address of Service Endpoint if available.
          examples:
          - 192.168.11.10
        IPv6Address:
          maxLength: 64
          type: string
          description: IPv6 Address of Service Endpoint if available.
          examples:
          - 2001:0db8:85a3:0000:0000:8a2e:0370:1234
        port:
          maximum: 10000
          minimum: 1
          type: integer
          description: Port information of Service Endpoint if IPv4 or IPv6 is mentioned.
          contentEncoding: int32
          examples:
          - 1234
      description: Service Endpoint path, address, and port.
    Region:
      title: Region
      type: object
      properties:
        regionId:
          type:
          - string
          - 'null'
          description: The unique identifier of the region.
          examples:
          - consectetur
        name:
          maxLength: 32
          pattern: ^[A-Za-z0-9_]{3,32}$
          type:
          - string
          - 'null'
          description: A relevant and identifiable region name.
          examples:
          - US_EAST_1
        countryCode:
          maxLength: 3
          pattern: ^[A-Za-z0-9]{2,3}$
          type:
          - string
          - 'null'
          description: A two-character alpha code for a country, based on ISO 3166-1 alpha-2. This is future functionality, so the value returned is 'null'.
          examples:
          - nr
        metro:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type:
          - string
          - 'null'
          description: The metropolitan area or 'City' value.  This is future functionality, so the value returned is 'null'.
          examples:
          - e1D
        area:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type:
          - string
          - 'null'
          description: This is a sub-set of 'City' and is similar to 'Zone'. This is future functionality, so the value returned is 'null'.
          examples:
          - IdUESF
      description: Information representing a certain geographical or logical area where MEC resources and services are provided.
    MECPlatformStatus:
      title: MECPlatformStatus
      enum:
      - Active
      - Inactive
      - unknown
      type: string
      description: Status of the MEC Platform (default is 'unknown')
    MECPlatformResource:
      title: MECPlatformResource
      type: object
      properties:
        ern:
          maxLength: 32
          pattern: ^[A-Za-z0-9-]{3,32}$
          type: string
          description: Edge Resource Name. A string identifier for a set of edge resources.
          examples:
          - 5x4VBwmfZbzSL3
        zone:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type:
          - string
          - 'null'
          description: Unique identifier representing a zone. *Note:* This will have a null value as a placeholder.
          examples:
          - e5oV52kMGjDLhnJSsLJZL
        region:
          type: string
          description: MEC region name. Current valid values are US_WEST_2 and US_EAST_1.
          examples:
          - US_WEST_2
        status:
          allOf:
          - $ref: '#/components/schemas/MECPlatformStatus'
          - description: Status of the MEC Platform (default is 'unknown')
        properties: {}
      description: 5G Edge platform used for deployment of a service. The ern of each platform contains the name of the matching AWS Wavelength zone that can be used when deploying.
    NetworkResourcesType:
      title: NetworkResourcesType
      required:
      - maxLatencyMs
      type: object
      properties:
        minBandwidthKbits:
          maximum: 10000
          minimum: 1
          type: integer
          description: Minimum required connection bandwidth in Kbit/s for the application.
          contentEncoding: int32
          examples:
          - 1
        serviceContinuitySupport:
          type: boolean
          description: Indicates if service continuity support is required or not for the application.
          examples:
          - true
        maxRequestRate:
          maximum: 100
          minimum: 1
          type: integer
          description: Maximum request rate that the application can handle.
          contentEncoding: int32
          examples:
          - 15
        maxLatencyMs:
          maximum: 1000
          minimum: 5
          type: integer
          description: 'Maximum response time or latency that the application can handle, in milliseconds. Note: this value must be in multiples of 5.'
          contentEncoding: int32
          examples:
          - 20
        minAvailability:
          maximum: 100
          minimum: 1
          type: integer
          description: Minimum availability required for the server.
          contentEncoding: int32
          examples:
          - 1
      description: Network resources of a service profile.
    ComputeResourcesType:
      title: ComputeResourcesType
      type: object
      properties:
        GPU:
          allOf:
          - $ref: '#/components/schemas/GPU'
          - description: GPU resources of a service profile.
        minRAMGB:
          maximum: 100
          minimum: 1
          type: integer
          description: Minimum RAM required in Gigabytes.
          contentEncoding: int32
          examples:
          - 1
        minStorageGB:
          maximum: 100
          minimum: 1
          type: integer
          description: Minimum storage requirement in Gigabytes.
          contentEncoding: int32
          examples:
          - 1
      description: Compute resources of a service profile.
    GPU:
      title: GPU
      type: object
      properties:
        minCoreClockMHz:
          maximum: 10000
          minimum: 1
          type: integer
          description: Minimum Core Clock value in megahertz.
          contentEncoding: int32
          examples:
          - 1
        minMemoryClockMHz:
          maximum: 100000
          minimum: 1
          type: integer
          description: Minimum Memory Clock value in megahertz.
          contentEncoding: int32
          examples:
          - 35740
        minBandwidthGBs:
          maximum: 1000
          minimum: 1
          type: integer
          description: Minimum GPU bandwidth in GB/s.
          contentEncoding: int32
          examples:
          - 588
        minTFLOPS:
          maximum: 100
          minimum: 1
          type: integer
          description: Minimum Floating Point Operations Per Second in Teraflops.
          contentEncoding: int32
          examples:
          - 33
      description: GPU resources of a service profile.
    EdgeDiscoveryResult:
      title: EdgeDiscoveryResult
      required:
      - status
      - message
      type: object
      properties:
        status:
          maxLength: 32
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: HTTP status code or status of response.
        message:
          maxLength: 32
          type: string
          description: Error details.
        data:
          allOf:
          - $ref: '#/components/schemas/EdgeDiscoveryResultData'
          - description: For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.
      description: Base type for all errors.
    EdgeDiscoveryResultData:
      title: EdgeDiscoveryResultData
      type: object
      properties:
        additionalMessage:
          maxLength: 32
          type: string
      description: For cases where user input exceeds the boundary values an additional 'data' key will be returned with a relevant description.
    UserEquipmentIdentityType:
      title: UserEquipmentIdentityType
      const: IPAddress
      type: string
      description: Type of User Equipment identifier used in `UEIdentity`.
      examples:
      - IPAddress
    Account:
      title: Account
      type: object
      properties:
        accountName:
          type: string
          description: The name of the account.
          examples:
          - Chintan_CPNStaticBulk
        accountNumber:
          type: string
          description: The billing number of the account.
          examples:
          - 1234567890-77777
        organizationName:
          type: string
          description: The name of the organization that the account is part of.
          examples:
          - ChintanCPNBulk
        isProvisioningAllowed:
          type: boolean
          description: True if devices can be added to the account and activated with a single request. False if devices must be added to the account before they can be activated.
          examples:
          - true
        carriers:
          type: array
          items:
            type: string
          description: The names of all carriers for the account.
          examples:
          - - Verizon Wireless
        features:
          type: array
          items:
            type: string
          description: The names of features that are enabled for the account.
          examples:
          - - Static IP
            - Dynamic IP
            - Customer PN
        iPPools:
          type: array
          items:
            $ref: '#/components/schemas/IPPool'
          description: Array of IP pools that are available to the account.
          examples:
          - - poolName: ACMESTATIC001
              poolType: Static IP
              isDefaultPool: true
            - poolName: ACMEDYNAMIC001
              poolType: Dynamic IP
              isDefaultPool: false
        servicePlans:
          type: array
          items:
            $ref: '#/components/schemas/ServicePlan'
          description: Array of service plans that are available to the account.
          examples:
          - - name: ''
              code: '92876'
              sizeKb: 1
              carrierServicePlanCode: ''
              extendedAttributes: []
            - name: ''
              code: '92876'
              sizeKb: 1
              carrierServicePlanCode: ''
              extendedAttributes: []
      description: Returns information about a specified account.
      examples:
      - accountName: Chintan_CPNStaticBulk
        accountNumber: 1234567890-77777
        organizationName: ChintanCPNBulk
        isProvisioningAllowed: true
        carriers:
        - Verizon Wireless
        features:
        - Static IP
        - Dynamic IP
        - Customer PN
        iPPools:
        - poolName: ACMESTATIC001
          poolType: Static IP
          isDefaultPool: true
        - poolName: ACMEDYNAMIC001
          poolType: Dynamic IP
          isDefaultPool: false
        servicePlans:
        - name: ''
          code: '92876'
          sizeKb: 1
          carrierServicePlanCode: ''
          extendedAttributes: []
        - name: ''
          code: '92876'
          sizeKb: 1
          carrierServicePlanCode: ''
          extendedAttributes: []
    AddDevicesRequest:
      title: AddDevicesRequest
      type: object
      properties:
        accountName:
          type: string
          description: The billing account to which the devices are added.
          examples:
          - 0868924207-00001
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: The names and values for any custom fields that you want set for the devices as they are added to the account.
          examples:
          - - key: CustomField2
              value: SuperVend
        devicesToAdd:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: The devices that you want to add.
          examples:
          - - deviceIds:
              - kind: imei
                id: '990013907835573'
              - kind: iccid
                id: '89141390780800784259'
            - deviceIds:
              - kind: imei
                id: '990013907884259'
              - kind: iccid
                id: '89141390780800735573'
        groupName:
          type: string
          description: The name of a device group to add the devices to. They are added to the default device group if you don't include this parameter.
          examples:
          - West Region
        skuNumber:
          type: string
          description: The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM.
        state:
          type: string
          description: The initial service state for the devices. The only valid state is “Preactive.”
          examples:
          - preactive
        smsrOid:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
      description: Request to add the devices.
      examples:
      - accountName: 0868924207-00001
        customFields:
        - key: CustomField2
          value: SuperVend
        devicesToAdd:
        - deviceIds:
          - kind: imei
            id: '990013907835573'
          - kind: iccid
            id: '89141390780800784259'
        - deviceIds:
          - kind: imei
            id: '990013907884259'
          - kind: iccid
            id: '89141390780800735573'
        groupName: West Region
        state: preactive
    AddDevicesResult:
      title: AddDevicesResult
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: Identifiers for the device.
          examples:
          - - id: '89148000000800784259'
              kind: iccid
        response:
          type: string
          description: The success message or error message for the current device.
          examples:
          - Success
      description: Contains the device identifiers and a success or failure response for each device in the request.
      examples:
      - deviceIds:
        - id: '89148000000800784259'
          kind: iccid
        response: Success
    Address:
      title: Address
      required:
      - addressLine1
      - city
      - state
      - zip
      - country
      type: object
      properties:
        addressLine1:
          type: string
          description: The street address for the line's primary place of use. This must be a physical address for taxation; it cannot be a P.O. box.
          examples:
          - 1600 Pennsylvania Ave NW
        addressLine2:
          type: string
          description: Optional additional street address information.
        city:
          type: string
          description: The city for the line's primary place of use.
          examples:
          - Washington
        state:
          type: string
          description: The state for the line's primary place of use.
          examples:
          - DC
        zip:
          type: string
          description: The ZIP code for the line's primary place of use.
          examples:
          - '20500'
        zip4:
          type: string
          description: The ZIP+4 for the line's primary place of use.
        country:
          type: string
          description: Either “US” or “USA” for the country of the line's primary place of use.
          examples:
          - USA
        phone:
          type: string
          description: A phone number where the customer can be reached.
        phoneType:
          type: string
          description: A single letter to indicate the customer phone type.
        emailAddress:
          type: string
          description: An email address for the customer.
      description: The customer address for the line's primary place of use, for line usage taxation.
      examples:
      - addressLine1: 1600 Pennsylvania Ave NW
        city: Washington
        state: DC
        zip: '20500'
        country: USA
    ConnectivityManagementCallback:
      title: ConnectivityManagementCallback
      type: object
      properties:
        accountName:
          type: string
          description: The name of the billing account for which callback messages will be sent.
          examples:
          - 0252012345-00001
        password:
          type: string
          description: The password defined when a URL was registered for the callback service, or an empty string if no password was defined.
          examples:
          - drowssap
        serviceName:
          type: string
          description: The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.
          examples:
          - DeviceUsage
        url:
          type: string
          description: The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.
          examples:
          - http://10.120.102.147:50569/CallbackListener/Usage.asmx
        username:
          type: string
          description: The username defined when a URL was registered for the callback service, or an empty string if no username was defined.
          examples:
          - zaffod
      description: Includes callback listeners that were registered through the Connectivity Management API.
      examples:
      - accountName: 0252012345-00001
        password: drowssap
        serviceName: DeviceUsage
        url: http://10.120.102.147:50569/CallbackListener/Usage.asmx
        username: zaffod
    CallbackActionResult:
      title: CallbackActionResult
      type: object
      properties:
        accountName:
          type: string
          description: The name of the billing account.
          examples:
          - 122333444-00002
        serviceName:
          type: string
          description: The name of the callback service that was registered/deregistered.
          examples:
          - CarrierService
      description: Response to a callback action.
      examples:
      - accountName: 122333444-00002
        serviceName: CarrierService
    CarrierActionsRequest:
      title: CarrierActionsRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - 0868924207-00001
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
          examples:
          - - key: CustomField2
              value: SuperVend
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: The devices for which you want to restore service, specified by device identifier.
          examples:
          - - deviceIds:
              - id: '89148000000800139708'
                kind: iccid
        groupName:
          type: string
          description: The name of a device group, if you want to restore service for all devices in that group.
          examples:
          - 4G West
        servicePlan:
          type: string
          description: The name of a service plan, if you want to only include devices that have that service plan.
          examples:
          - m2m_4G
      description: Request for a carrier action.
      examples:
      - devices:
        - deviceIds:
          - id: '89148000000800139708'
            kind: iccid
    NotificationReportStatusRequest:
      title: NotificationReportStatusRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - 0868924207-00001
        device:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: An identifier for a single device.
            examples:
            - kind: imei
              id: '990013907835573'
        requestExpirationTime:
          type: string
          description: The time at which the request expires.
        requestType:
          type: string
          description: The type of request.
    RetrieveMonitorsRequest:
      title: RetrieveMonitorsRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - 0868924207-00001
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: The devices for which you want to restore service, specified by device identifier.
          examples:
          - - deviceIds:
              - id: '89148000000800139708'
                kind: iccid
        monitorType:
          type: string
          description: The name of a billing account.
          examples:
          - monitorType
    CarrierActivateRequest:
      title: CarrierActivateRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - 0868924207-00001
        carrierIpPoolName:
          type: string
          description: The private IP pool (Carrier Group Name) from which your device IP addresses will be derived.
        carrierName:
          type: string
          description: The carrier that will perform the activation.
        costCenterCode:
          type: string
          description: A string to identify the cost center that the device is associated with.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: A user-defined descriptive field, limited to 50 characters.
          examples:
          - - key: CustomField2
              value: SuperVend
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: Up to 10,000 devices for which you want to activate service, specified by device identifier.
          examples:
          - - deviceIds:
              - kind: imei
                id: '990013907835573'
              - kind: iccid
                id: '89141390780800784259'
            - deviceIds:
              - kind: imei
                id: '990013907884259'
              - kind: iccid
                id: '89141390780800735573'
        groupName:
          type: string
          description: If you specify devices by ID in the devices parameters, this is the name of a device group that the devices should be added to.If you don't specify individual devices with the devices parameter, you can provide the name of a device group to activate all devices in that group.
          examples:
          - 4G West
        leadId:
          type: string
          description: The ID of a “Qualified” or “Closed - Won” VPP customer lead, which is used with other values to determine MDN assignment, taxation, and compensation.
        mdnZipCode:
          type: string
          description: The Zip code of the location where the line of service will primarily be used, or a Zip code that you have been told to use with these devices. For accounts that are configured for geographic numbering, this is the ZIP code from which the MDN will be derived.
          examples:
          - '98801'
        primaryPlaceOfUse:
          allOf:
          - $ref: '#/components/schemas/PlaceOfUse'
          - description: The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.
            examples:
            - customerName:
                title: President
                firstName: Zaffod
                lastName: Beeblebrox
              address:
                addressLine1: 1600 Pennsylvania Ave NW
                city: Washington
                state: DC
                zip: '20500'
                country: USA
        publicIpRestriction:
          type: string
          description: For devices with static IP addresses on the public network, this specifies whether the devices have general access to the Internet.
        servicePlan:
          type: string
          description: The service plan code that you want to assign to all specified devices.
          examples:
          - m2m_4G
        skuNumber:
          type: string
          description: The Stock Keeping Unit (SKU) of a 4G device type can be used with ICCID device identifiers in lieu of an IMEI when activating 4G devices. The SkuNumber will be used with all devices in the request, so all devices must be of the same type.
          examples:
          - '7640111922001'
      description: Request for carrier activation.
      examples:
      - devices:
        - deviceIds:
          - kind: imei
            id: '990013907835573'
          - kind: iccid
            id: '89141390780800784259'
        - deviceIds:
          - kind: imei
            id: '990013907884259'
          - kind: iccid
            id: '89141390780800735573'
        accountName: 0868924207-00001
        servicePlan: m2m_4G
        mdnZipCode: '98801'
        customFields:
        - key: CustomField2
          value: SuperVend
        groupName: 4G West
        primaryPlaceOfUse:
          customerName:
            title: President
            firstName: Zaffod
            lastName: Beeblebrox
          address:
            addressLine1: 1600 Pennsylvania Ave NW
            city: Washington
            state: DC
            zip: '20500'
            country: USA
    CarrierDeactivateRequest:
      title: CarrierDeactivateRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - 0000123456-00001
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: The devices for which you want to deactivate service, specified by device identifier.
          examples:
          - - deviceIds:
              - id: 20-digit ICCID
                kind: iccid
            - deviceIds:
              - id: 20-digit ICCID
                kind: iccid
        etfWaiver:
          type: boolean
          description: Fees may be assessed for deactivating Verizon Wireless devices, depending on the account contract. The etfWaiver parameter waives the Early Termination Fee (ETF), if applicable.
          examples:
          - true
        groupName:
          type: string
          description: The name of a device group, if you want to deactivate all devices in that group.
        reasonCode:
          type: string
          description: Code identifying the reason for the deactivation. Currently the only valid reason code is “FF”, which corresponds to General Admin/Maintenance.
          examples:
          - FF
        servicePlan:
          type: string
          description: The name of a service plan, if you want to only include devices that have that service plan.
        deleteAfterDeactivation:
          type: boolean
      description: Request to deactivate a carrier.
      examples:
      - devices:
        - deviceIds:
          - id: 20-digit ICCID
            kind: iccid
        reasonCode: FF
        etfWaiver: true
    CarrierInformation:
      title: CarrierInformation
      type: object
      properties:
        carrierName:
          type: string
          description: The carrier that will perform the activation. This parameter is only required if you have more than one carrier.
          examples:
          - Verizon Wireless
        servicePlan:
          type: string
          description: The service plan code that is assigned to the device.
          examples:
          - m2m4G
        state:
          type: string
          description: 'The device state. Valid values include: Activate, Suspend, Deactive, Pre-active.'
          examples:
          - active
      description: Information about the carrier.
      examples:
      - carrierName: Verizon Wireless
        servicePlan: m2m4G
        state: active
    ChangeDeviceIdRequest:
      title: ChangeDeviceIdRequest
      type: object
      properties:
        assignNonGeoMdn:
          type: boolean
          description: Set to true to assign a non-Geo MDN and MSISDN, or false to assign an MDN and MSISDN from a specific NPA-NXX.
          examples:
          - false
        change4gOption:
          type: string
          description: The type of change that you want to make for a 4G device.
          examples:
          - ChangeICCID
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: The device that you want to change, specified by a device identifier.
          examples:
          - - id: '42590078891480000008'
              kind: iccid
        deviceIdsTo:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: The new identifier for the device. Required for all change4GOptions except ChangeMSISDN.
          examples:
          - - id: '89148000000842590078'
              kind: iccid
        npaNxx:
          type: string
          description: The NPA NXX (area code and prefix) from which the MDN and MSISDN will be derived when assignNonGeoMDN is false. Specify the 6-digit NPA NXX of the location where the line of service will primarily be used. This API checks to see if a number starting with the NPA NXX is available. If not, this API uses the zipCode parameter, if specified, to assign a number in the area of the line of service. This parameter is required when you change an MDN/MSISDN for a B2B carrier, such as Verizon Wireless.
          examples:
          - '509393'
        servicePlan:
          type: string
          description: The code for a different service plan, if you want to change the service plan while changing the device identifier. Set this parameter to one of the Code values returned by GET /plans.
          examples:
          - M2M2GB
        zipCode:
          type: string
          description: The ZIP code from which the MDN and MSISDN will be derived when assignNonGeoMDN is true. Specify the zip code of the location where the line of service will primarily be used.
          examples:
          - '98802'
        smsrOid:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
      description: Changes the identifier of a 3G or 4G device to match hardware changes made for a line of service. Use this request to transfer the line of service and the MDN to new hardware, or to change the MDN.
      examples:
      - deviceIds:
        - id: '42590078891480000008'
          kind: iccid
        change4gOption: ChangeMSISDN
        assignNonGeoMdn: false
        npaNxx: '509393'
        servicePlan: M2M2GB
    ConnectionEvent:
      title: ConnectionEvent
      type: object
      properties:
        connectionEventAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: The attributes that describe the connection event.
          examples:
          - - key: BytesUsed
              value: '0'
            - key: Event
              value: Start
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Currently not used.
        occurredAt:
          type: string
          description: The date and time when the connection event occured.
          examples:
          - 2015-12-17T14:12:36-05:00
      description: Network connection events for a device during a specified time period.
      examples:
      - connectionEventAttributes:
        - key: BytesUsed
          value: '0'
        - key: Event
          value: Start
        extendedAttributes: []
        occurredAt: 2015-12-17T14:12:36-05:00
    ConnectionHistoryResult:
      title: ConnectionHistoryResult
      type: object
      properties:
        connectionHistory:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionEvent'
          description: Device connection events, sorted by the occurredAt timestamp, oldest first.
          examples:
          - - connectionEventAttributes:
              - key: BytesUsed
                value: '0'
              - key: Event
                value: Start
              extendedAttributes: []
              occurredAt: 2015-12-17T14:12:36-05:00
            - connectionEventAttributes:
              - key: BytesUsed
                value: '419863234'
              - key: Event
                value: Stop
              - key: Msisdn
                value: '15086303371'
              extendedAttributes: []
              occurredAt: 2015-12-19T01:20:00-05:00
        hasMoreData:
          type: boolean
          description: False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved. Send another request, adjusting the earliest value in the request based on the occuredAt value for the last device in the current response.
          examples:
          - false
      description: Response containing the connection history. It is a list of Network Connection Events for a device.
      examples:
      - connectionHistory:
        - connectionEventAttributes:
          - key: BytesUsed
            value: '0'
          - key: Event
            value: Start
          extendedAttributes: []
          occurredAt: 2015-12-17T14:12:36-05:00
        - connectionEventAttributes:
          - key: BytesUsed
            value: '419863234'
          - key: Event
            value: Stop
          - key: Msisdn
            value: '15086303371'
          extendedAttributes: []
          occurredAt: 2015-12-19T01:20:00-05:00
        hasMoreData: false
    ContactInfoUpdateRequest:
      title: ContactInfoUpdateRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of the billing account that the devices belong to. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 0212345678-00001
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: A list of the devices that you want to change, specified by device identifier. You only need to provide one identifier per device. Do not include accountName, groupName, customFields, or servicePlan if you use this parameter.
          examples:
          - - deviceIds:
              - kind: ESN
                id: '19110173057'
              - kind: ESN
                id: '19110173057'
        primaryPlaceOfUse:
          type: object
          description: The customer name and the address of the device's primary place of use. These values are applied to all devices in the request.The Primary Place of Use location may affect taxation or have other legal implications. You may want to speak with legal and/or financial advisers before entering values for these fields.
          examples:
          - address:
              addressLine1: 9868 Scranton Rd
              addressLine2: Suite A
              city: San Diego
              state: CA
              country: USA
              zip: '92121'
              zip4: '0001'
              phone: '1234567890'
              phoneType: H
              emailAddress: zaffod@theinternet.com
            customerName:
              firstName: Zaffod
              lastName: Beeblebrox
              middleName: P
              title: President
              suffix: I
      description: Request to update contact information.
      examples:
      - devices:
        - deviceIds:
          - kind: ESN
            id: '19110173057'
          - kind: ESN
            id: '19110173057'
        accountName: 0212345678-00001
        primaryPlaceOfUse:
          address:
            addressLine1: 9868 Scranton Rd
            addressLine2: Suite A
            city: San Diego
            state: CA
            country: USA
            zip: '92121'
            zip4: '0001'
            phone: '1234567890'
            phoneType: H
            emailAddress: zaffod@theinternet.com
          customerName:
            firstName: Zaffod
            lastName: Beeblebrox
            middleName: P
            title: President
            suffix: I
    CreateDeviceGroupRequest:
      title: CreateDeviceGroupRequest
      type: object
      properties:
        accountName:
          type: string
          description: The Verizon billing account that the device group will belong to. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 10001234-0001
        devicesToAdd:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: Zero or more devices to add to the device group. You can use POST /devices/actions/list to get a list of all devices in the account.
          examples:
          - - kind: imei
              id: '990003420535537'
        groupDescription:
          type: string
          description: A description for the device group.
          examples:
          - Nevada tank level monitors
        groupName:
          type: string
          description: The name for the new device group. This name must be unique within the specified account.
          examples:
          - NV tanks
      description: Create request for a new device group and optionally add devices to the group.
      examples:
      - accountName: 10001234-0001
        groupName: NV tanks
        groupDescription: Nevada tank level monitors.
        devicesToAdd:
        - kind: imei
          id: '990003420535537'
    CustomerName:
      title: CustomerName
      required:
      - firstName
      - lastName
      type: object
      properties:
        title:
          type: string
          description: An optional title for the customer, such as “Mr.” or “Dr.”
          examples:
          - President
        firstName:
          type: string
          description: The customer's first name.
          examples:
          - Zaffod
        middleName:
          type: string
          description: The customer's middle name.
        lastName:
          type: string
          description: The customer's last name.
          examples:
          - Beeblebrox
        suffix:
          type: string
          description: An optional suffix for the customer name, such as “Jr.” or “III.”
      description: The customer name to be used for line usage taxation.
      examples:
      - title: President
        firstName: Zaffod
        lastName: Beeblebrox
    CustomFieldsUpdateRequest:
      title: CustomFieldsUpdateRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.This parameter is only required if the UWS account used for the current API session has access to multiple billing accounts.An account name is usually numeric, and must include any leading zeros.
          examples:
          - 010045678-0001
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
          examples:
          - - key: CustomField2
              value: West Region
        customFieldsToUpdate:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: The names and new values of any custom fields that you want to change.
          examples:
          - - key: CustomField1
              value: West Region
            - key: CustomField2
              value: Distribution
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: The devices that you want to change.
          examples:
          - - deviceIds:
              - id: '89148000000800139708'
                kind: iccid
        groupName:
          type: string
          description: The name of a device group, if you want to only include devices in that group.
        servicePlan:
          type: string
          description: The name of a service plan, if you want to only include devices that have that service plan.
      description: Request to assign or change custom field values for one or more devices.
      examples:
      - devices:
        - deviceIds:
          - id: '89148000000800139708'
            kind: iccid
        customFieldsToUpdate:
        - key: CustomField1
          value: West Region
        - key: CustomField2
          value: Distribution
    DateFilter:
      title: DateFilter
      type: object
      properties:
        earliest:
          type: string
          description: Only include devices that were added after this date and time.
          examples:
          - 2020-05-01T15:00:00-08:00Z
        latest:
          type: string
          description: Only include devices that were added before this date and time.
          examples:
          - 2020-07-30T15:00:00-08:00Z
      description: Filter out the dates.
      examples:
      - earliest: 2020-05-01T15:00:00-08:00Z
        latest: 2020-07-30T15:00:00-08:00Z
    DeleteDevicesRequest:
      title: DeleteDevicesRequest
      type: object
      properties:
        accountName:
          type: string
          description: The Verizon billing account that the device group belongs to. An account name is usually numeric, and must include any leading zeros.
        devicesToDelete:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: A list of up to 100 devices that you want to delete, specified by device identifier. You only need to provide one identifier per device.
          examples:
          - - deviceIds:
              - id: '09005470263'
                kind: esn
            - deviceIds:
              - id: '85000022411113460014'
                kind: iccid
            - deviceIds:
              - id: '85000022412313460016'
                kind: iccid
      description: Request to delete a device request.
      examples:
      - devicesToDelete:
        - deviceIds:
          - id: '09005470263'
            kind: esn
        - deviceIds:
          - id: '85000022411113460014'
            kind: iccid
        - deviceIds:
          - id: '85000022412313460016'
            kind: iccid
    DeviceId:
      title: DeviceId
      type: object
      properties:
        id:
          type: string
          description: The value of the device identifier.
          examples:
          - '990013907835573'
        kind:
          type: string
          description: The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.
          examples:
          - imei
      description: An identifier for a single device.
      examples:
      - kind: imei
        id: '990013907835573'
    DeleteDevicesResult:
      title: DeleteDevicesResult
      type: object
      properties:
        deviceIds:
          description: One object per device to be deleted. Each object must contain a kind and id element identifying the device.
        status:
          type: string
          description: “Success” if the device was deleted, or “Failed” if there was a problem.
          examples:
          - Success
        message:
          type: string
          description: Not present if status=Success. One of these messages if status=Failed:The device is not in deactivate state.The user does not have access to delete the device.
          examples:
          - The device is not in deactive state.
      description: Response for a request made to delete a device.
      examples:
      - deviceIds:
        - id: '09005470263'
          kind: esn
        status: Success
    ThingspaceDevice:
      title: ThingspaceDevice
      type: object
      properties:
        accountName:
          type: string
          description: The billing account that the device is associated with.
          examples:
          - 0000123456-00001
        billingCycleEndDate:
          type: string
          description: The date that the device's current billing cycle ends.
          examples:
          - 2020-05-09T20:00:00-04:00
        carrierInformations:
          type: array
          items:
            $ref: '#/components/schemas/CarrierInformation'
          description: The carrier information associated with the device.
          examples:
          - - carrierName: Verizon Wireless
              servicePlan: m2m4G
              state: active
        connected:
          type: boolean
          description: True if the device is connected; false if it is not.
          examples:
          - false
        createdAt:
          type: string
          description: The date and time that the device was added to the system.
          examples:
          - 2019-08-07T10:42:15-04:00
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: The custom fields and values that have been set for the device.
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: All identifiers for the device.
          examples:
          - - id: 10-digit MDN
              kind: mdn
            - id: 15-digit IMEI
              kind: imei
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Any extended attributes for the device, as Key and Value pairs. The pairs listed below are returned as part of the response for a single device, but are not included if the request was for information about multiple devices.
        groupNames:
          type: array
          items:
            type:
            - string
            - 'null'
          description: The device groups that the device belongs to.
          examples:
          - - southwest
        ipAddress:
          type: string
          description: The IP address of the device.
          examples:
          - 0.0.0.0
        lastActivationBy:
          type: string
          description: The user who last activated the device.
          examples:
          - Joe Q Public
        lastActivationDate:
          type: string
          description: The date and time that the device was last activated.
          examples:
          - 2019-08-07T10:42:34-04:00
        lastConnectionDate:
          type: string
          description: The most recent connection date and time.
          examples:
          - 2020-03-12T04:23:37-04:00
      description: Device that exist in Verizon Mobile Device Management (MDM).
      examples:
      - accountName: 0000123456-00001
        billingCycleEndDate: 2020-05-09T20:00:00-04:00
        carrierInformations:
        - carrierName: Verizon Wireless
          servicePlan: m2m4G
          state: active
        connected: false
        createdAt: 2019-08-07T10:42:15-04:00
        deviceIds:
        - id: 10-digit MDN
          kind: mdn
        - id: 15-digit IMEI
          kind: imei
        groupNames:
        - southwest
        ipAddress: 0.0.0.0
        lastActivationBy: Joe Q Public
        lastActivationDate: 2019-08-07T10:42:34-04:00
        lastConnectionDate: 2020-03-12T04:23:37-04:00
    DeviceAggregateUsageListRequest:
      title: DeviceAggregateUsageListRequest
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: One or more devices for which you want aggregate data, specified by device ID.
          examples:
          - - id: '84258000000891490087'
              kind: ICCID
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - 9992330389-00001
        groupName:
          type: string
          description: The name of a device group, if you want to only include devices in that group.
          examples:
          - SMS
        startTime:
          type: string
          description: The beginning of the reporting period. The startTime cannot be more than 6 months before the current date.
          examples:
          - 2021-08-01T00:00:00-06:00
        endTime:
          type: string
          description: The end of the reporting period. The endTime date must be within on month of the startTime date.
          examples:
          - 2021-08-30T00:00:00-06:00
        label:
          maxItems: 50
          type: array
          items:
            $ref: '#/components/schemas/Label'
          description: ''
      description: Request to list device aggregate usage.
      examples:
      - deviceIds:
        - id: '84258000000891490087'
          kind: ICCID
        accountName: 9992330389-00001
        endTime: 2021-08-30T00:00:00-06:00
        startTime: 2021-08-01T00:00:00-06:00
    DeviceConnectionListRequest:
      title: DeviceConnectionListRequest
      type: object
      properties:
        deviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: An identifier for a single device.
            examples:
            - kind: imei
              id: '990013907835573'
        earliest:
          type: string
          description: The earliest date and time for which you want connection events.
          examples:
          - 2015-09-16T00:00:01Z
        latest:
          type: string
          description: The last date and time for which you want connection events.
          examples:
          - 2010-09-18T00:00:01Z
      description: Request to list of network connection events for a device during a specified time period.
      examples:
      - deviceId:
          id: '89141390780800784259'
          kind: iccid
        earliest: 2015-09-16T00:00:01Z
        latest: 2010-09-18T00:00:01Z
    DeviceCostCenterRequest:
      title: DeviceCostCenterRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
        costCenter:
          type: string
          description: The new cost center code. Valid values are any string of up to 36 alphanumeric characters, space, dash, exclamation point, and pound sign.
          examples:
          - cc12345
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: A list of the devices that you want to change, specified by device identifier. Do not include accountName, groupName, customFields, or servicePlan if you use this parameter.
          examples:
          - - deviceIds:
              - id: '89148000000800139708'
                kind: iccid
        groupName:
          type: string
          description: The name of a device group, if you want to only include devices in that group.
        primaryPlaceOfUse:
          type: object
          description: The customer name and the address of the device's primary place of use. These values are applied to all devices in the request.The Primary Place of Use location may affect taxation or have other legal implications. You may want to speak with legal and/or financial advisers before entering values for these fields.
        removeCostCenter:
          type: boolean
          description: Set to true to remove the cost center code value. This flag takes precedence over a new costCenter value. If this flag is true and costCenter has a value, the cost center code is removed. Do not include this parameter, or set it to false to change the costCenter value.
        servicePlan:
          type: string
          description: The name of a service plan, if you want to only include devices that have that service plan.
      description: Request to retrieve cost center value of a device.
      examples:
      - costCenter: cc12345
        devices:
        - deviceIds:
          - id: '89148000000800139708'
            kind: iccid
    DeviceExtendedDiagnosticsRequest:
      title: DeviceExtendedDiagnosticsRequest
      required:
      - accountName
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: The Verizon billing account that the device belongs to. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 1223334444-00001
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: The device for which you want diagnostic information, specified by the device's MDN.
          examples:
          - - id: 10-digit MDN
              kind: mdn
      description: Request for obtaining device extended diagnostics.
      examples:
      - accountName: 1223334444-00001
        deviceList:
        - id: 10-digit MDN
          kind: mdn
    DeviceExtendedDiagnosticsResult:
      title: DeviceExtendedDiagnosticsResult
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticsCategory'
          description: The response includes various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.
          examples:
          - - categoryName: Connectivity
              extendedAttributes:
              - key: Connected
                value: 'false'
      description: Result for a request to obtain device extended diagnostics.
      examples:
      - categories:
        - categoryName: Connectivity
          extendedAttributes:
          - key: Connected
            value: 'false'
    DeviceFilter:
      title: DeviceFilter
      type: object
      properties:
        account:
          type: string
          description: The the billing account that the devices belong to.
        groupName:
          type: string
          description: Only include devices that are in this device group.
          examples:
          - Short-Haul Trucks
        servicePlan:
          type: string
          description: Only include devices that have this service plan.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
          examples:
          - - key: CustomField1
              value: East Region Trucks
      description: Specify the kind of the device identifier, the type of match, and the string that you want to match.
      examples:
      - groupName: Short-Haul Trucks
        customFields:
        - key: CustomField1
          value: East Region Trucks
    DeviceFilterWithoutAccount:
      title: DeviceFilterWithoutAccount
      type: object
      properties:
        groupName:
          type: string
          description: Only include devices that are in this device group.
          examples:
          - suspended devices
        servicePlan:
          type: string
          description: Only include devices that have this service plan.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
      description: Filter for devices without account.
      examples:
      - groupName: suspended devices
    DeviceIdSearch:
      title: DeviceIdSearch
      required:
      - kind
      type: object
      properties:
        contains:
          type: string
          description: The string appears anywhere in the identifer.
          examples:
          - '4259'
        startswith:
          type: string
          description: The identifer must start with the specified string.
        endswith:
          type: string
          description: The identifier must end with the specified string.
        kind:
          type: string
          description: The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.
          examples:
          - imei
      description: Search by device id.
      examples:
      - kind: iccid
        contains: '4259'
    AccountDeviceList:
      title: AccountDeviceList
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: All identifiers for the device.
          examples:
          - - kind: imei
              id: '990013907835573'
            - kind: iccid
              id: '89141390780800784259'
        ipAddress:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9].[0-9].[0-9].[0-9]{3,32}$
          type: string
      description: A list of deviceId objects to use when requesting information from multiple devices.
      examples:
      - deviceIds:
        - kind: imei
          id: '990013907835573'
        - kind: iccid
          id: '89141390780800784259'
    AccountDeviceListFilter:
      title: AccountDeviceListFilter
      type: object
      properties:
        deviceIdentifierFilters:
          type: array
          items:
            $ref: '#/components/schemas/DeviceIdSearch'
          description: Specify the kind of the device identifier, the type of match, and the string that you want to match.
          examples:
          - - kind: iccid
              contains: '4259'
      description: Filter for a list of devices.
      examples:
      - deviceIdentifierFilters:
        - kind: iccid
          contains: '4259'
    AccountDeviceListRequest:
      title: AccountDeviceListRequest
      type: object
      properties:
        accountName:
          type: string
          description: The billing account for which a list of devices is returned. If you don't specify an accountName, the list includes all devices to which you have access.
          examples:
          - 0786890242-00001
        deviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: An identifier for a single device.
            examples:
            - kind: imei
              id: '990013907835573'
        filter:
          allOf:
          - $ref: '#/components/schemas/AccountDeviceListFilter'
          - description: Filter for a list of devices.
            examples:
            - deviceIdentifierFilters:
              - kind: iccid
                contains: '4259'
        currentState:
          type: string
          description: The name of a device state, to only include devices in that state.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
        earliest:
          type: string
          description: Only include devices that were added after this date and time.
        groupName:
          type: string
          description: Only include devices that are in this device group.
        latest:
          type: string
          description: Only include devices that were added before this date and time.
        servicePlan:
          type: string
          description: Only include devices that have this service plan.
        maxNumberOfDevices:
          maximum: 100
          minimum: 0
          type: integer
          contentEncoding: int32
        largestDeviceIdSeen:
          maximum: 100
          minimum: 0
          type: integer
          contentEncoding: int64
      description: Request for listing account devices.
      examples:
      - accountName: 0786890242-00001
        filter:
          deviceIdentifierFilters:
          - kind: iccid
            contains: '4259'
    AccountDeviceListResult:
      title: AccountDeviceListResult
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/ThingspaceDevice'
          description: Up to 10,000 devices that you want to move to a different account, specified by device identifier.
          examples:
          - - accountName: 0000123456-00001
              billingCycleEndDate: 2020-05-09T20:00:00-04:00
              carrierInformations:
              - carrierName: Verizon Wireless
                servicePlan: m2m4G
                state: active
              connected: false
              createdAt: 2019-08-07T10:42:15-04:00
              deviceIds:
              - id: 10-digit MDN
                kind: mdn
              - id: 15-digit IMEI
                kind: imei
              groupNames:
              - southwest
              ipAddress: 0.0.0.0
              lastActivationBy: Joe Q Public
              lastActivationDate: 2019-08-07T10:42:34-04:00
              lastConnectionDate: 2020-03-12T04:23:37-04:00
        hasMoreData:
          type: boolean
          description: False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.
          examples:
          - false
      description: Response for a request to list down account devices.
      examples:
      - hasMoreData: false
        devices:
        - accountName: 0000123456-00001
          billingCycleEndDate: 2020-05-09T20:00:00-04:00
          carrierInformations:
          - carrierName: Verizon Wireless
            servicePlan: m2m4G
            state: active
          connected: false
          createdAt: 2019-08-07T10:42:15-04:00
          deviceIds:
          - id: 10-digit MDN
            kind: mdn
          - id: 15-digit IMEI
            kind: imei
          groupNames:
          - southwest
          ipAddress: 0.0.0.0
          lastActivationBy: Joe Q Public
          lastActivationDate: 2019-08-07T10:42:34-04:00
          lastConnectionDate: 2020-03-12T04:23:37-04:00
    DeviceActivationRequest:
      title: DeviceActivationRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - 0212345678-00001
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: Up to 10,000 devices that you want to move to a different account, specified by device identifier.
          examples:
          - - deviceIds:
              - kind: meid
                id: A100008385E561
      description: Request for device status to check availability of activation.
      examples:
      - accountName: 0212345678-00001
        devices:
        - deviceIds:
          - kind: meid
            id: A100008385E561
    DevicePrlListRequest:
      title: DevicePrlListRequest
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: The devices for which you want the PRL version, specified by device identifier. You only need to provide one identifier per device. Do not use any of the other parameters if you specify device IDs.
        accountName:
          type: string
          description: The name of a billing account. This parameter is only required if you are passing groupName and the UWS account used for the current API session has access to multiple billing accounts, because the same device group name can exist in multiple accounts.An account name is usually numeric, and must include any leading zeros.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: The names and values of custom fields, if you want to only include devices that have matching custom fields.
        groupName:
          type: string
          description: The name of a device group, if you want to only include devices in that group.
          examples:
          - West Region
        servicePlan:
          type: string
          description: The name of a service plan, if you want to only include devices that have that service plan.
          examples:
          - 3G 2MB
      description: Requests the current PRL (Preferred Roaming List) version for 2G or 3G devices, which can help determine which devices need a PRL update. (4G and GSM devices do not have a PRL.).
      examples:
      - groupName: West Region
        accountName: 101234-0001
        servicePlan: 3G 2MB
    DeviceMismatchListRequest:
      title: DeviceMismatchListRequest
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: A list of specific devices that you want to check, specified by ICCID or MDN.
          examples:
          - - deviceIds:
              - kind: ICCID
                id: '8914800000080078'
              - kind: MDN
                id: '5096300587'
        filter:
          allOf:
          - $ref: '#/components/schemas/DateFilter'
          - description: Filter out the dates.
            examples:
            - earliest: 2020-05-01T15:00:00-08:00Z
              latest: 2020-07-30T15:00:00-08:00Z
        accountName:
          type: string
          description: The account that you want to search for mismatched devices. If you don't specify an accountName, the search includes all devices to which you have access.
          examples:
          - 0342077109-00001
        groupName:
          type: string
          description: The name of a device group, to only include devices in that group.
      description: Request to list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.
      examples:
      - accountName: 0342077109-00001
        devices:
        - deviceIds:
          - kind: ICCID
            id: '8914800000080078'
          - kind: MDN
            id: '5096300587'
        filter:
          earliest: 2020-05-01T15:00:00-08:00Z
          latest: 2020-07-30T15:00:00-08:00Z
    DeviceMismatchListResult:
      title: DeviceMismatchListResult
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/MismatchedDevice'
          description: A list of specific devices that you want to check, specified by ICCID or MDN.
          examples:
          - - accountName: 0212398765-00001
              mdn: '5096300587'
              activationDate: 2011-01-21T10:55:27-08:00
              iccid: '89148000000800784259'
              preImei: '990003420535573'
              postImei: '987603420573553'
              simOtaDate: 2017-12-01T16:00:00-08:00
      description: Response to list of all 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.
      examples:
      - devices:
        - accountName: 0212398765-00001
          mdn: '5096300587'
          activationDate: 2011-01-21T10:55:27-08:00
          iccid: '89148000000800784259'
          preImei: '990003420535573'
          postImei: '987603420573553'
          simOtaDate: 2017-12-01T16:00:00-08:00
    DeviceProvisioningHistoryListRequest:
      title: DeviceProvisioningHistoryListRequest
      type: object
      properties:
        deviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: An identifier for a single device.
            examples:
            - kind: imei
              id: '990013907835573'
        earliest:
          type: string
          description: The earliest date and time for which you want provisioning data.
          examples:
          - 2015-09-16T00:00:01Z
        latest:
          type: string
          description: The last date and time for which you want provisioning data.
          examples:
          - 2015-09-18T00:00:01Z
      description: Request to return the provisioning history of a specified device during a specified time period.
      examples:
      - deviceId:
          id: '89141390780800784259'
          kind: iccid
        earliest: 2015-09-16T00:00:01Z
        latest: 2015-09-18T00:00:01Z
    DeviceProvisioningHistoryListResult:
      title: DeviceProvisioningHistoryListResult
      type: object
      properties:
        hasMoreData:
          type: boolean
          description: False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.
          examples:
          - false
        provisioningHistory:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningHistory'
          description: The provisioning history of a specified device during a specified time period.
          examples:
          - - occurredAt: 2015-12-17T13:56:13-05:00
              status: Success
              eventBy: Harry Potter
              eventType: Activation Confirmed
              servicePlan: Tablet5GB
              mdn: ''
              msisdn: '15086303371'
              extendedAttributes: []
      description: Response to return the provisioning history of a specified device during a specified time period.
      examples:
      - provisioningHistory:
        - occurredAt: 2015-12-17T13:56:13-05:00
          status: Success
          eventBy: Harry Potter
          eventType: Activation Confirmed
          servicePlan: Tablet5GB
          mdn: ''
          msisdn: '15086303371'
          extendedAttributes: []
        hasMoreData: false
    DeviceSuspensionStatusRequest:
      title: DeviceSuspensionStatusRequest
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: The devices that you want to include in the request, specified by device identifier. You only need to provide one identifier per device.
        filter:
          allOf:
          - $ref: '#/components/schemas/DeviceFilterWithoutAccount'
          - description: Filter for devices without account.
            examples:
            - groupName: suspended devices
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - 1223334444-00001
      description: Request to return service suspension information about one or more devices.
      examples:
      - filter:
          groupName: suspended devices
        accountName: 1223334444-00001
    DeviceUsageListRequest:
      title: DeviceUsageListRequest
      type: object
      properties:
        deviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceId'
          - description: An identifier for a single device.
            examples:
            - kind: imei
              id: '990013907835573'
        earliest:
          type: string
          description: The earliest date for which you want usage data.
          examples:
          - 2018-03-20T00:00:01Z
        latest:
          type: string
          description: The last date for which you want usage data.
          examples:
          - 2020-12-31T00:00:01Z
        label:
          $ref: '#/components/schemas/Label'
      description: Request to return the daily network data usage of a single device during a specified time period.
      examples:
      - earliest: 2018-03-20T00:00:01Z
        latest: 2020-12-31T00:00:01Z
    Label:
      title: Label
      type: object
      properties:
        name:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        value:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
    DeviceUsageListResult:
      title: DeviceUsageListResult
      type: object
      properties:
        hasMoreData:
          type: boolean
          description: False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.
          examples:
          - false
        usageHistory:
          type: array
          items:
            $ref: '#/components/schemas/Usage'
          description: Placeholder.
          examples:
          - - bytesUsed: 4096
              extendedAttributes:
              - key: MoSms
                value: '0'
              smsUsed: 0
              source: Raw Usage
              timestamp: 2020-12-01T00:00:00Z
      description: Response to return the daily network data usage of a single device during a specified time period.
      examples:
      - hasMoreData: false
        usageHistory:
        - bytesUsed: 4096
          extendedAttributes:
          - key: MoSms
            value: '0'
          smsUsed: 0
          source: Raw Usage
          timestamp: 2020-12-01T00:00:00Z
    DiagnosticsCategory:
      title: DiagnosticsCategory
      type: object
      properties:
        categoryName:
          type: string
          description: The name of the category.
          examples:
          - Connectivity
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: A list of Extended Attribute objects as key-value pairs.
          examples:
          - - key: Connected
              value: 'false'
      description: Various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.
      examples:
      - categoryName: Connectivity
        extendedAttributes:
        - key: Connected
          value: 'false'
    Engagement:
      title: Engagement
      type: object
      properties:
        engagementId:
          type: string
          description: The engagement ID.
          examples:
          - '1234'
        chargingGroup:
          type: string
          description: The charging group name.
          examples:
          - Engagement1234
        services:
          type: array
          items:
            $ref: '#/components/schemas/AccountService'
          description: The services associated with the account.
          examples:
          - - name: Svc1
              description: Usage Segmentation - Main Line.
              states:
              - name: Svc1 Activate
                workflowSequenceNumber: 1
                servicePlans:
                - 4523aef7250f67205fd5
                - 4d4090c0f2d48814c94d
              - name: Svc1 No Telematics
                workflowSequenceNumber: 3
                servicePlans:
                - 4523aef7250f67205fd5
                - 4d4090c0f2d48814c94d
              - name: Svc1 Deactivate
                workflowSequenceNumber: 2
                servicePlans:
                - 4523aef7250f67205fd5
                - 4d4090c0f2d48814c94d
      description: The engagements associated with the account.
      examples:
      - engagementId: '1234'
        chargingGroup: Engagement1234
        services:
        - name: Svc1
          description: Usage Segmentation - Main Line.
          states:
          - name: Svc1 Activate
            workflowSequenceNumber: 1
            servicePlans:
            - 4523aef7250f67205fd5
            - 4d4090c0f2d48814c94d
          - name: Svc1 No Telematics
            workflowSequenceNumber: 3
            servicePlans:
            - 4523aef7250f67205fd5
            - 4d4090c0f2d48814c94d
          - name: Svc1 Deactivate
            workflowSequenceNumber: 2
            servicePlans:
            - 4523aef7250f67205fd5
            - 4d4090c0f2d48814c94d
        - name: WIFI
          description: Usage Segmentation - WiFi.
          states:
          - name: WIFI Redirect
            workflowSequenceNumber: 2
            servicePlans:
            - 4d4090c0f2d48814c94d
          - name: WIFI Trial
            workflowSequenceNumber: 4
            servicePlans:
            - 4d4090c0f2d48814c94d
          - name: WIFI Goodwill
            workflowSequenceNumber: 6
            servicePlans:
            - 4d4090c0f2d48814c94d
          - name: WIFI Disable
            workflowSequenceNumber: 3
            servicePlans:
            - 4d4090c0f2d48814c94d
    AccountStatesAndServices:
      title: AccountStatesAndServices
      required:
      - engagement
      type: object
      properties:
        engagement:
          type: array
          items:
            $ref: '#/components/schemas/Engagement'
          description: The engagements associated with the account.
          examples:
          - - engagementId: '1234'
              chargingGroup: Engagement1234
              services:
              - name: Svc1
                description: Usage Segmentation - Main Line.
                states:
                - name: Svc1 Activate
                  workflowSequenceNumber: 1
                  servicePlans:
                  - 4523aef7250f67205fd5
                  - 4d4090c0f2d48814c94d
                - name: Svc1 No Telematics
                  workflowSequenceNumber: 3
                  servicePlans:
                  - 4523aef7250f67205fd5
                  - 4d4090c0f2d48814c94d
                - name: Svc1 Deactivate
                  workflowSequenceNumber: 2
                  servicePlans:
                  - 4523aef7250f67205fd5
                  - 4d4090c0f2d48814c94d
              - name: WIFI
                description: Usage Segmentation - WiFi.
                states:
                - name: WIFI Redirect
                  workflowSequenceNumber: 2
                  servicePlans:
                  - 4d4090c0f2d48814c94d
                - name: WIFI Trial
                  workflowSequenceNumber: 4
                  servicePlans:
                  - 4d4090c0f2d48814c94d
                - name: WIFI Goodwill
                  workflowSequenceNumber: 6
                  servicePlans:
                  - 4d4090c0f2d48814c94d
                - name: WIFI Disable
                  workflowSequenceNumber: 3
                  servicePlans:
                  - 4d4090c0f2d48814c94d
      description: Returns a list and details of all custom services and states defined for a specified account.
      examples:
      - engagement:
        - engagementId: '1234'
          chargingGroup: Engagement1234
          services:
          - name: Svc1
            description: Usage Segmentation - Main Line.
            states:
            - name: Svc1 Activate
              workflowSequenceNumber: 1
              servicePlans:
              - 4523aef7250f67205fd5
              - 4d4090c0f2d48814c94d
            - name: Svc1 No Telematics
              workflowSequenceNumber: 3
              servicePlans:
              - 4523aef7250f67205fd5
              - 4d4090c0f2d48814c94d
            - name: Svc1 Deactivate
              workflowSequenceNumber: 2
              servicePlans:
              - 4523aef7250f67205fd5
              - 4d4090c0f2d48814c94d
          - name: WIFI
            description: Usage Segmentation - WiFi.
            states:
            - name: WIFI Redirect
              workflowSequenceNumber: 2
              servicePlans:
              - 4d4090c0f2d48814c94d
            - name: WIFI Trial
              workflowSequenceNumber: 4
              servicePlans:
              - 4d4090c0f2d48814c94d
            - name: WIFI Goodwill
              workflowSequenceNumber: 6
              servicePlans:
              - 4d4090c0f2d48814c94d
            - name: WIFI Disable
              workflowSequenceNumber: 3
              servicePlans:
              - 4d4090c0f2d48814c94d
    GoToStateRequest:
      title: GoToStateRequest
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: Up to 10,000 devices that you want to push to a different state, specified by device identifier.
          examples:
          - - deviceIds:
              - kind: imei
                id: '990013907835573'
              - kind: iccid
                id: '89141390780800784259'
            - deviceIds:
              - kind: imei
                id: '990013907884259'
              - kind: iccid
                id: '89141390780800735573'
        filter:
          allOf:
          - $ref: '#/components/schemas/DeviceFilter'
          - description: Specify the kind of the device identifier, the type of match, and the string that you want to match.
            examples:
            - groupName: Short-Haul Trucks
              customFields:
              - key: CustomField1
                value: East Region Trucks
        serviceName:
          type: string
          description: The name of a customer-defined service to push the devices to.
          examples:
          - My Service
        stateName:
          type: string
          description: The name of a customer-defined stage state to push the devices to.
          examples:
          - My State
        servicePlan:
          type: string
          description: The service plan code that you want to assign to all specified devices in the new state.
          examples:
          - '87641'
        mdnZipCode:
          type: string
          description: The Zip code of the location where the line of service will primarily be used, or a Zip code that you have been told to use with these devices. For accounts that are configured for geographic numbering, this is the ZIP code from which the MDN will be derived.
          examples:
          - '94203'
        carrierIpPoolName:
          type: string
          description: The pool from which your device IP addresses will be derived if the service or state change requires new IP addresses.If you do not include this element, the default pool will be used.
        publicIpRestriction:
          type: string
          description: For devices with static IP addresses on the public network, this specifies whether the devices have general access to the Internet. Valid values are “restricted” or “unrestricted”.
          examples:
          - unrestricted
        skuNumber:
          type: string
          description: The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM. Can be used with ICCID or EID device identifiers in lieu of an IMEI when activating 4G devices. The SkuNumber will be used with all devices in the request, so all devices must be of the same type.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: The names and values of any custom fields that you want to set for the devices.
        groupName:
          type: string
          description: The name of a device group that the devices should be added to.
          examples:
          - 4G West
        primaryPlaceOfUse:
          allOf:
          - $ref: '#/components/schemas/PlaceOfUse'
          - description: The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.
            examples:
            - customerName:
                title: President
                firstName: Zaffod
                lastName: Beeblebrox
              address:
                addressLine1: 1600 Pennsylvania Ave NW
                city: Washington
                state: DC
                zip: '20500'
                country: USA
      description: Changes the provisioning state of one or more devices to a specified customer-defined service and state.
      examples:
      - devices:
        - deviceIds:
          - kind: imei
            id: '990013907835573'
          - kind: iccid
            id: '89141390780800784259'
        - deviceIds:
          - kind: imei
            id: '990013907884259'
          - kind: iccid
            id: '89141390780800735573'
        serviceName: My Service
        stateName: My State
        servicePlan: '87641'
        mdnZipCode: '94203'
        groupName: 4G West
        publicIpRestriction: unrestricted
        primaryPlaceOfUse:
          customerName:
            title: President
            firstName: Zaffod
            lastName: Beeblebrox
          address:
            addressLine1: 1600 Pennsylvania Ave NW
            city: Washington
            state: DC
            zip: '20500'
            country: USA
    DeviceGroupDevicesData:
      title: DeviceGroupDevicesData
      type: object
      properties:
        description:
          type: string
          description: The description of the device group.
          examples:
          - All service trucks in Nebraska
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: The devices in the device group.
          examples:
          - - deviceIds:
              - id: '12345'
                kind: meid
              - id: '54321'
                kind: mdn
        hasMoreData:
          type: boolean
          description: False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.
          examples:
          - false
        name:
          type: string
          description: The name of the device group.
          examples:
          - Nebraska Trucks
      description: Returns the name, description, and list of devices in a device group.
      examples:
      - name: Nebraska Trucks
        description: All service trucks in Nebraska.
        hasMoreData: false
        devices:
        - deviceIds:
          - id: '12345'
            kind: meid
          - id: '54321'
            kind: mdn
    DeviceGroup:
      title: DeviceGroup
      type: object
      properties:
        description:
          type: string
          description: The description of the device group.
          examples:
          - All devices that are not in another device group.
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Any extended attributes for the device group, as Key and Value pairs.
          examples:
          - []
        isDefaultGroup:
          type: boolean
          description: Identifies the default device group.
          examples:
          - true
        name:
          type: string
          description: The name of the device group.
          examples:
          - Unassigned Devices
      description: Returns a list of all device groups in a specified account.
      examples:
      - name: Unassigned Devices
        description: All devices that are not in another device group.
        isDefaultGroup: true
        extendedAttributes: []
    DeviceGroupUpdateRequest:
      title: DeviceGroupUpdateRequest
      type: object
      properties:
        devicesToAdd:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: Zero or more devices to add to the device group, specified by device ID. The devices will be removed from their current device groups. You can use POST /devices/actions/list to get a list of all devices in the account.
          examples:
          - - kind: imei
              id: '990003420535537'
        devicesToRemove:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: Zero or more devices to remove from the device group, specified by device ID. The devices will be added to the default device group.
        newGroupDescription:
          type: string
          description: A new description for the device group. Do not include this parameter to leave the group description unchanged.
          examples:
          - All western region tank level monitors
        newGroupName:
          type: string
          description: A new name for the device group. Do not include this parameter if you want to leave the group name unchanged.
          examples:
          - Western region tanks
      description: Make changes to a device group, including changing the name and description, and adding or removing devices.
      examples:
      - newGroupName: Western region tanks
        newGroupDescription: All western region tank level monitors.
        devicesToAdd:
        - kind: imei
          id: '990003420535537'
    IPPool:
      title: IPPool
      type: object
      properties:
        poolName:
          type: string
          description: The name of the IP pool.
          examples:
          - ACMESALES001
        poolType:
          type: string
          description: The type of IP pool, such as “Static IP” or “Dynamic IP.”
          examples:
          - Static IP
        isDefaultPool:
          type: boolean
          description: True if this is the default IP pool for the account.
          examples:
          - true
      description: IP pool that is available to the account.
      examples:
      - poolName: ACMESTATIC001
        poolType: Static IP
        isDefaultPool: true
    CustomFields:
      title: CustomFields
      type: object
      properties:
        key:
          type: string
          description: The key for an extended attribute.
          examples:
          - CustomField2
        value:
          type: string
          description: The value of an extended attribute.
          examples:
          - SuperVend
      description: Custom data that can be included using key-value pairs.
      examples:
      - key: CustomField2
        value: SuperVend
    AccountLeadsResult:
      title: AccountLeadsResult
      type: object
      properties:
        hasMoreData:
          type: boolean
          description: False if no more leads.True if there is more data to be retrieved.
          examples:
          - false
        leads:
          type: array
          items:
            $ref: '#/components/schemas/AccountLead'
          description: The leads associated with an account.
          examples:
          - - leadId: L-10001
              leadState: Qualified
              address:
                addressLine1: 1600 Pennsylvania Avenue
                addressLine2: ''
                city: Washington
                state: DC
                zip: '20500'
                country: USA
      description: Returns information for all leads associated with an account.
      examples:
      - leads:
        - leadId: L-10001
          leadState: Qualified
          address:
            addressLine1: 1600 Pennsylvania Avenue
            addressLine2: ''
            city: Washington
            state: DC
            zip: '20500'
            country: USA
        hasMoreData: false
    AccountLead:
      title: AccountLead
      type: object
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          - description: The customer address for the line's primary place of use, for line usage taxation.
            examples:
            - addressLine1: 1600 Pennsylvania Ave NW
              city: Washington
              state: DC
              zip: '20500'
              country: USA
        leadId:
          type: string
          description: Unique number for each lead. Use this value in the leadId parameter when activating devices to credit the activations to the lead.
          examples:
          - L-10001
        leadState:
          type: string
          description: The current state of the lead, such as “Qualified” or “Closed.”
          examples:
          - Qualified
      description: A successful response returns an array of lead objects.
      examples:
      - leadId: L-10001
        leadState: Qualified
        address:
          addressLine1: 1600 Pennsylvania Avenue
          addressLine2: ''
          city: Washington
          state: DC
          zip: '20500'
          country: USA
    LogInRequest:
      title: LogInRequest
      type: object
      properties:
        username:
          type: string
          description: The username for authentication.
          examples:
          - zbeeblebrox
        password:
          type: string
          description: The password for authentication.
          examples:
          - IMgr8
      description: Request to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.
      examples:
      - username: zbeeblebrox
        password: IMgr8
    LogInResult:
      title: LogInResult
      type: object
      properties:
        sessionToken:
          type: string
          description: The identifier for the session that was created by the request. Store the sessionToken for use in the header of all other API requests.
          examples:
          - bcce3ea6-fe4f-4952-bacf-eadd80718e83
      description: Response to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.
      examples:
      - sessionToken: bcce3ea6-fe4f-4952-bacf-eadd80718e83
    LogOutRequest:
      title: LogOutRequest
      type: object
      properties:
        sessionToken:
          type: string
          description: The session token is returned to confirm that it was invalidated.
          examples:
          - bcce3ea6-fe4f-4952-bacf-eadd80718e83
      description: Request to end a Connectivity Management session.
      examples:
      - sessionToken: bcce3ea6-fe4f-4952-bacf-eadd80718e83
    MismatchedDevice:
      title: MismatchedDevice
      type: object
      properties:
        accountName:
          type: string
          description: The account that the device is associated with.
          examples:
          - 0212398765-00001
        mdn:
          type: string
          description: The assigned phone number of the device.
          examples:
          - '5096300587'
        activationDate:
          type: string
          description: The date and time when the SIM was last activated.
          examples:
          - 2011-01-21T10:55:27-08:00
        iccid:
          type: string
          description: The ID of the SIM.
          examples:
          - '89148000000800784259'
        preImei:
          type: string
          description: The IMEI of the device prior to the SIM OTA activation on simOtaDate.
          examples:
          - '990003420535573'
        postImei:
          type: string
          description: The IMEI of the device after the SIM OTA activation on simOtaDate.
          examples:
          - '987603420573553'
        simOtaDate:
          type: string
          description: The date and time of the SIM OTA activation.
          examples:
          - 2017-12-01T16:00:00-08:00
      description: 4G devices with an ICCID (SIM) that was not activated with the expected IMEI (hardware) during a specified time frame.
      examples:
      - accountName: 0212398765-00001
        mdn: '5096300587'
        activationDate: 2011-01-21T10:55:27-08:00
        iccid: '89148000000800784259'
        preImei: '990003420535573'
        postImei: '987603420573553'
        simOtaDate: 2017-12-01T16:00:00-08:00
    MoveDeviceRequest:
      title: MoveDeviceRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of the billing account that you want to move the devices to.
          examples:
          - 0212345678-00001
        filter:
          allOf:
          - $ref: '#/components/schemas/DeviceFilter'
          - description: Specify the kind of the device identifier, the type of match, and the string that you want to match.
            examples:
            - groupName: Short-Haul Trucks
              customFields:
              - key: CustomField1
                value: East Region Trucks
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
          examples:
          - - key: CustomField1
              value: East Region Trucks
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: Up to 10,000 devices that you want to move to a different account, specified by device identifier.
          examples:
          - - deviceIds:
              - kind: ESN
                id: '19110173057'
        groupName:
          type: string
          description: The name of a device group, to only include devices in that group.
          examples:
          - Short-Haul Trucks
        carrierIpPoolName:
          type: string
          description: The pool from which device IP addresses will be derived in the new account. If you do not include this element, the default pool will be used.
        servicePlan:
          type: string
          description: The service plan code that you want to assign to the devices in the new account. If you do not include this element, ThingSpace will attempt to use the current service plan, which will result in a error if the new account does not have that service plan.
          examples:
          - M2M5GB
      description: Request to move active devices from one billing account to another within a customer profile.
      examples:
      - filter:
          groupName: Short-Haul Trucks
          customFields:
          - key: CustomField1
            value: East Region Trucks
        accountName: 0212345678-00001
        servicePlan: M2M5GB
    PlaceOfUse:
      title: PlaceOfUse
      type: object
      properties:
        address:
          allOf:
          - $ref: '#/components/schemas/Address'
          - description: The customer address for the line's primary place of use, for line usage taxation.
            examples:
            - addressLine1: 1600 Pennsylvania Ave NW
              city: Washington
              state: DC
              zip: '20500'
              country: USA
        customerName:
          allOf:
          - $ref: '#/components/schemas/CustomerName'
          - description: The customer name to be used for line usage taxation.
            examples:
            - title: President
              firstName: Zaffod
              lastName: Beeblebrox
      description: The customer name and the address of the device's primary place of use. Leave these fields empty to use the account profile address as the primary place of use. These values will be applied to all devices in the request.If the account is enabled for non-geographic MDNs and the device supports it, the primaryPlaceOfUse address will also be used to derive the MDN for the device.
      examples:
      - customerName:
          title: President
          firstName: Zaffod
          lastName: Beeblebrox
        address:
          addressLine1: 1600 Pennsylvania Ave NW
          city: Washington
          state: DC
          zip: '20500'
          country: USA
    ProvisioningHistory:
      title: ProvisioningHistory
      type: object
      properties:
        occurredAt:
          type: string
          description: The date and time when the provisioning event occured.
          examples:
          - 2015-12-17T13:56:13-05:00
        status:
          type: string
          description: The success or failure of the provisioning event.
          examples:
          - Success
        eventBy:
          type: string
          description: The user who performed the provisioning event.
          examples:
          - Harry Potter
        eventType:
          type: string
          description: The provisioning action:Activate,Suspend,Restore,Deactivate,Device Move.
          examples:
          - Activation Confirmed
        mdn:
          type: string
          description: The MDN assigned to the device after the provisioning event.
        msisdn:
          type: string
          description: The MSISDN assigned to the device after the provisioning event.
          examples:
          - '15086303371'
        servicePlan:
          type: string
          description: The service plan of the device after the provisioning event occurred.
          examples:
          - Tablet5GB
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Any extended attributes for the event, as Key and Value pairs.
          examples:
          - []
      description: The provisioning history of a specified device during a specified time period.
      examples:
      - occurredAt: 2015-12-17T13:56:13-05:00
        status: Success
        eventBy: Harry Potter
        eventType: Activation Confirmed
        servicePlan: Tablet5GB
        mdn: ''
        msisdn: '15086303371'
        extendedAttributes: []
    RegisterCallbackRequest:
      title: RegisterCallbackRequest
      type: object
      properties:
        name:
          type: string
          description: The name of the callback service that you want to subscribe to.
          examples:
          - CarrierService
        url:
          type: string
          description: The address on your server where you have enabled a listening service for callback messages.
          examples:
          - https://mock.thingspace.verizon.com/webhook
        username:
          type: string
          description: The user name that the M2M Platform should return in the callback messages.
        password:
          type: string
          description: The password that the M2M Platform should return in the callback messages.
      description: Request to register a callback.
      examples:
      - name: CarrierService
        url: https://mock.thingspace.verizon.com/webhook
    DeviceManagementResult:
      title: DeviceManagementResult
      type: object
      properties:
        requestId:
          type: string
          description: A unique string that associates the request with the results that are sent via a callback service.
          examples:
          - 24da9f9a-d110-4a54-86b4-93fb76aab83cs
      description: Response to activate service for one or more devices so that they can send and receive data.
      examples:
      - requestId: 24da9f9a-d110-4a54-86b4-93fb76aab83c
    RequestStatus:
      title: RequestStatus
      enum:
      - Pending
      - Success
      - Failure
      type: string
      description: The current status of the callback response.
      examples:
      - Success
    AsynchronousRequestResult:
      title: AsynchronousRequestResult
      type: object
      properties:
        requestId:
          type: string
          description: The unique ID of the asynchronous request.
          examples:
          - 86c83330-4bf5-4235-9c4e-a83f93aeae4c
        status:
          allOf:
          - $ref: '#/components/schemas/RequestStatus'
          - description: The current status of the callback response.
            examples:
            - Success
      description: A successful request returns the request ID and the current status.
      examples:
      - requestId: 86c83330-4bf5-4235-9c4e-a83f93aeae4c
        status: Success
    ConnectivityManagementResult:
      title: ConnectivityManagementResult
      type: object
      properties:
        errorCode:
          type: string
          description: Code of the error.
          examples:
          - error code string
        errorMessage:
          type: string
          description: Details of the error.
          examples:
          - error message string
      description: Response to errors.
      examples:
      - errorCode: error code string
        errorMessage: error message string
    ConnectivityManagementSuccessResult:
      title: ConnectivityManagementSuccessResult
      type: object
      properties:
        success:
          type: boolean
          description: A value of “true” indicates that the device group was created successfully.
          examples:
          - true
      description: Response to successful request.
      examples:
      - success: true
    AccountService:
      title: AccountService
      type: object
      properties:
        name:
          type: string
          description: The name of the service plan.
          examples:
          - Svc1
        description:
          type: string
          description: The description of the service plan.
          examples:
          - Usage Segmentation - Main Line
        states:
          type: array
          items:
            $ref: '#/components/schemas/State'
          description: The state of the service plan.
          examples:
          - - name: Svc1 Activate
              workflowSequenceNumber: 1
              servicePlans:
              - 4523aef7250f67205fd5
              - 4d4090c0f2d48814c94d
      description: Service associated with the account.
      examples:
      - name: Svc1
        description: Usage Segmentation - Main Line.
        states:
        - name: Svc1 Activate
          workflowSequenceNumber: 1
          servicePlans:
          - 4523aef7250f67205fd5
          - 4d4090c0f2d48814c94d
        - name: Svc1 No Telematics
          workflowSequenceNumber: 3
          servicePlans:
          - 4523aef7250f67205fd5
          - 4d4090c0f2d48814c94d
        - name: Svc1 Deactivate
          workflowSequenceNumber: 2
          servicePlans:
          - 4523aef7250f67205fd5
          - 4d4090c0f2d48814c94d
    ServicePlan:
      title: ServicePlan
      type: object
      properties:
        carrierServicePlanCode:
          type: string
          description: The code that is used by the carrier for the service plan.
          examples:
          - '84638'
        code:
          type: string
          description: The code of the service plan, which may not be the same as the name.
          examples:
          - M2MSHR5GB
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Any extended attributes for the service plan, as Key and Value pairs.
        name:
          type: string
          description: The name of the service plan.
          examples:
          - 2MSHR5GB
        sizeKb:
          type: integer
          description: The size of the service plan in kilobytes.
          contentEncoding: int64
          examples:
          - 0
      description: Details of the service plan.
      examples:
      - name: 2MSHR5GB
        code: M2MSHR5GB
        sizeKb: 0
        carrierServicePlanCode: '84638'
    ServicePlanUpdateRequest:
      title: ServicePlanUpdateRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
        currentServicePlan:
          type: string
          description: The name of a service plan, if you want to only include devices that have that service plan.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: Custom field names and values, if you want to only include devices that have matching values.
        devices:
          type: array
          items:
            $ref: '#/components/schemas/AccountDeviceList'
          description: A list of the devices that you want to change, specified by device identifier.
          examples:
          - - deviceIds:
              - id: A100003685E561
                kind: meid
        groupName:
          type: string
          description: The name of a device group, if you want to restore service for all devices in that group.
        servicePlan:
          type: string
          description: The service plan code that you want to assign to all specified devices.
          examples:
          - new_service_plan_code
        carrierIpPoolName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        takeEffect:
          type: string
          contentEncoding: date-time
      description: Request to update service plan.
      examples:
      - devices:
        - deviceIds:
          - id: A100003685E561
            kind: meid
        servicePlan: new_service_plan_code
    SessionResetPasswordRequest:
      title: SessionResetPasswordRequest
      type: object
      properties:
        oldPassword:
          type: string
          description: The current password for the username.
          examples:
          - grflbk
      description: Request to a new, randomly generated password for the current username.
      examples:
      - oldPassword: grflbk
    SessionResetPasswordResult:
      title: SessionResetPasswordResult
      type: object
      properties:
        newPassword:
          type: string
          description: The new password for the username.
          examples:
          - Wh0a1545a84d
      description: Response to a new, randomly generated password for the current username.
      examples:
      - newPassword: Wh0a1545a84d
    SMSMessage:
      title: SMSMessage
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: One or more IDs of the device that sent the message.
          examples:
          - - id: '09623489171'
              kind: esn
        message:
          type: string
          description: The contents of the SMS message.
          examples:
          - testmessage1
        timestamp:
          type: string
          description: The date and time that the message was received by the Verizon ThingSpace Platform.
          examples:
          - 2016-01-01T12:29:49-08:00
      description: SMS messages sent by all M2M devices associated with a billing account.
      examples:
      - deviceIds:
        - id: '09623489171'
          kind: esn
        message: testmessage1
        timestamp: 2016-01-01T12:29:49-08:00
    SMSMessagesQueryResult:
      title: SMSMessagesQueryResult
      type: object
      properties:
        hasMoreData:
          type: boolean
          description: False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.
          examples:
          - false
        messages:
          type: array
          items:
            $ref: '#/components/schemas/SMSMessage'
          description: An array of up to 100 SMS messages that were sent by devices in the account.
          examples:
          - - deviceIds:
              - id: '09623489171'
                kind: esn
              message: testmessage1
              timestamp: 2016-01-01T12:29:49-08:00
            - deviceIds:
              - id: '09623489171'
                kind: esn
              message: testmessage2
              timestamp: 2016-01-01T12:31:02-08:00
      description: Response to SMS messages sent by all M2M devices associated with a billing account.
      examples:
      - messages:
        - deviceIds:
          - id: '09623489171'
            kind: esn
          message: testmessage1
          timestamp: 2016-01-01T12:29:49-08:00
        - deviceIds:
          - id: '09623489171'
            kind: esn
          message: testmessage2
          timestamp: 2016-01-01T12:31:02-08:00
        hasMoreData: false
    SMSSendRequest:
      title: SMSSendRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: The names and values of custom fields, if you want to only include devices that have matching custom fields.
        dataEncoding:
          type: string
          description: The SMS message encoding, which can be 7-bit (default), 8-bit-ASCII, 8-bit-UTF-8, 8-bit-DATA.
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: The devices that you want to send the message to, specified by device identifier.
        groupName:
          type: string
          description: The name of a device group, if you want to send the SMS message to all devices in the device group.
        servicePlan:
          type: string
          description: The name of a service plan, if you want to only include devices that have that service plan.
          examples:
          - T Plan 2
        smsMessage:
          type: string
          description: The contents of the SMS message. The SMS message is limited to 160 characters in 7-bit format, or 140 characters in 8-bit format.
          examples:
          - The rain in Spain stays mainly in the plain.
      description: Request to send SMS.
      examples:
      - smsMessage: The rain in Spain stays mainly in the plain.
    State:
      title: State
      type: object
      properties:
        name:
          type: string
          description: The name of the state.
          examples:
          - Svc1 Activate
        workflowSequenceNumber:
          type: number
          description: The workflow sequence number of this state.
          examples:
          - 1
        servicePlans:
          type: array
          items:
            type: string
          description: The service plans that can be used to charge for services for devices in this state.
          examples:
          - - 4523aef7250f67205fd5
            - 4d4090c0f2d48814c94d
      description: Each service includes custom states.
      examples:
      - name: Svc1 Activate
        workflowSequenceNumber: 1
        servicePlans:
        - 4523aef7250f67205fd5
        - 4d4090c0f2d48814c94d
    Usage:
      title: Usage
      type: object
      properties:
        bytesUsed:
          type: integer
          description: The number of bytes that the device sent or received on the report date.
          contentEncoding: int64
          examples:
          - 4096
        extendedAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomFields'
          description: The number of mobile-originated and mobile-terminated SMS messages on the report date.
          examples:
          - - key: MoSms
              value: '0'
        servicePlan:
          type: string
          description: The list of service plans associated with the device/account.
        smsUsed:
          type: integer
          description: The number of SMS messages that were sent or received on the report date.
          contentEncoding: int32
          examples:
          - 0
        source:
          type: string
          description: The source of the information for the reported usage.
          examples:
          - Raw Usage
        timestamp:
          type: string
          description: The date of the recorded usage.
          examples:
          - 2020-12-01T00:00:00Z
      description: The daily network data usage of a single device during a specified time period.
      examples:
      - bytesUsed: 4096
        extendedAttributes:
        - key: MoSms
          value: '0'
        smsUsed: 0
        source: Raw Usage
        timestamp: 2020-12-01T00:00:00Z
    ActivateDeviceProfileRequest:
      title: ActivateDeviceProfileRequest
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: ''
        accountName:
          type: string
          examples:
          - 0000123456-00001
        servicePlan:
          type: string
          examples:
          - The service plan name
        mdnZipCode:
          type: string
          examples:
          - five digit zip code
    DeviceList:
      title: DeviceList
      type: object
      properties:
        deviceIds:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeviceId'
          description: ''
    RequestResponse:
      title: RequestResponse
      type: object
      properties:
        requestId:
          maxLength: 32
          minLength: 3
          type: string
          examples:
          - d1f08526-5443-4054-9a29
    RestErrorResponse:
      title: RestErrorResponse
      type: object
      properties:
        errorCode:
          maxLength: 3
          pattern: ^[0-9]{3}$
          type: string
          examples:
          - '400'
        errorMessage:
          type: string
          examples:
          - a description of the error
    ProfileRequest:
      title: ProfileRequest
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: ''
        carrierName:
          type: string
          examples:
          - the name of the mobile service provider
        accountName:
          type: string
          examples:
          - 0000123456-00001
        servicePlan:
          type: string
          examples:
          - The service plan name
        mdnZipCode:
          type: string
          examples:
          - five digit zip code
        primaryPlaceOfUse:
          maxItems: 25
          type: array
          items:
            $ref: '#/components/schemas/PrimaryPlaceOfUse'
          description: ''
        smsrOid:
          maxLength: 46
          minLength: 3
          pattern: ^[0-9.]{3,46}$
          type: string
        carrierIpPoolName:
          type: string
          description: The name of the pool of IP addresses assigned to the profile.
    addressquery:
      title: addressquery
      type: object
      properties:
        address:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: ''
    customernamequery:
      title: customernamequery
      type: object
      properties:
        customerName:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/CustomerName'
          description: ''
    DeactivateDeviceProfileRequest:
      title: DeactivateDeviceProfileRequest
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeactivateDeviceList'
          description: ''
        accountName:
          type: string
          examples:
          - 0000123456-00001
        carrierName:
          type: string
          examples:
          - the name of the mobile service provider
        reasonCode:
          type: string
          examples:
          - a short code for the reason action was taken
        etfWaiver:
          type: boolean
          default: true
        checkFallbackProfile:
          type: boolean
          default: false
    DeactivateDeviceList:
      title: DeactivateDeviceList
      type: object
      properties:
        ids:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/Id'
          description: ''
    PropertyDeviceId:
      title: PropertyDeviceId
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
          description: The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.
          examples:
          - imei
    SetFallbackAttributeRequest:
      title: SetFallbackAttributeRequest
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: ''
        accountName:
          type: string
          examples:
          - 0000123456-00001
        carrierName:
          type: string
          examples:
          - the name of the mobile service provider
    NotificationReportRequest:
      title: NotificationReportRequest
      required:
      - accountName
      - requestType
      - devices
      - monitorExpirationTime
      type: object
      properties:
        accountName:
          type: string
          examples:
          - 0242072320-00001
        requestType:
          type: string
          examples:
          - REACHABLE_FOR_DATA
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: ''
        monitorExpirationTime:
          type: string
          examples:
          - 2019-12-02T15:00:00-08:00Z
    StopMonitorRequest:
      title: StopMonitorRequest
      required:
      - accountName
      - monitorIds
      type: object
      properties:
        accountName:
          type: string
          examples:
          - 0242123520-00001
        monitorIds:
          type: array
          items:
            type: string
          description: ''
          examples:
          - - 35596ca6-bab4-4333-a914-42b4fc2da54c
            - 35596ca6-bab4-4333-a914-42b4fc2da54b
    DeviceUploadRequest:
      title: DeviceUploadRequest
      required:
      - accountName
      - devices
      - emailAddress
      - deviceSku
      - uploadType
      type: object
      properties:
        accountName:
          type: string
          examples:
          - 1223334444-00001
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: ''
        emailAddress:
          type: string
          examples:
          - bob@mycompany.com
        deviceSku:
          type: string
          examples:
          - VZW123456
        uploadType:
          type: string
          examples:
          - IMEI
    BillingCycle:
      title: BillingCycle
      type: object
      properties:
        year:
          type: string
          examples:
          - '2020'
        month:
          type: string
          examples:
          - '3'
    billedusageListRequest:
      title: billedusageListRequest
      type: object
      properties:
        accountName:
          type: string
          examples:
          - 9231221278-99990
        labels:
          $ref: '#/components/schemas/LabelsList'
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: ''
        billingCycle:
          $ref: '#/components/schemas/BillingCycle'
      description: Information required to associate a usage segmentation label with a device to retrieve billing.
    LabelsList:
      title: LabelsList
      type: object
      properties:
        deviceIds:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeviceLabels'
          description: ''
    DeviceLabels:
      title: DeviceLabels
      type: object
      properties:
        name:
          type: string
          description: The label you want to associate with the device.
          examples:
          - VIN
        value:
          type: string
          description: The value of label
          examples:
          - XXUZL54B5YN105457
      description: A label for a single device.
    ProfileChangeStateRequest:
      title: ProfileChangeStateRequest
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: ''
        accountName:
          type: string
          examples:
          - 1223334444-00001
        smsrOid:
          type: string
          examples:
          - 1.3.6.1.4.1.31746.1.500.200.101.5
    AccountLabels:
      title: AccountLabels
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: ''
        label:
          type: array
          items:
            $ref: '#/components/schemas/DeviceLabels'
          description: ''
      description: Maximum of 2,000 objects are allowed in the array.
    AssociateLabelRequest:
      title: AssociateLabelRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 1223334444-00001
        labels:
          allOf:
          - $ref: '#/components/schemas/AccountLabels'
          - description: Maximum of 2,000 objects are allowed in the array.
    UploadsActivatesDeviceRequest:
      title: UploadsActivatesDeviceRequest
      required:
      - accountName
      - emailAddress
      - deviceSku
      - uploadType
      - servicePlan
      - mdnZipCode
      - devices
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 1223334444-00001
        emailAddress:
          type: string
          description: The email address that the report should be sent to when the upload is complete.
          examples:
          - bob@mycompany.com
        deviceSku:
          type: string
          description: The stock keeping unit that identifies the type of devices in the upload and activation.
          examples:
          - VZW123456
        uploadType:
          type: string
          description: The format of the device identifiers in the upload and activation.
          examples:
          - IMEI ICCID Pair
        servicePlan:
          type: string
          description: The service plan code that you want to assign to all specified devices.
          examples:
          - 15MBShr
        carrierIpPoolName:
          type: string
          description: The pool from which your device IP addresses is derived.
          examples:
          - The carrier pool name
        mdnZipCode:
          type: string
          description: The Zip code of the location where the line of service is primarily used, or a Zip code that you have been told to use with these devices.
          examples:
          - '92222'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: The devices to upload, specified by device IDs in a format matching uploadType.
      description: The request body identifies the devices to upload.
    CheckOrderStatusRequest:
      title: CheckOrderStatusRequest
      required:
      - accountName
      - devices
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 1223334444-00001
        orderRequestId:
          type: string
          description: The request id from the activation order.
          examples:
          - f55fea16-3664-4a32-ae9d-c0cbe3eedf1d
        devices:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList'
          description: The devices to upload, specified by device IDs in a format matching uploadType.
      description: The request body identifies the devices to upload.
    Id:
      title: Id
      type: object
      properties:
        id:
          type: string
          description: The value of the device identifier.
          examples:
          - '990013907835573'
        kind:
          type: string
          description: The type of the device identifier. Valid types of identifiers are:ESN (decimal),EID,ICCID (up to 20 digits),IMEI (up to 16 digits),MDN,MEID (hexadecimal),MSISDN.
          examples:
          - imei
    PrimaryPlaceOfUse:
      title: PrimaryPlaceOfUse
      type: object
      properties:
        customerName:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/CustomerName'
          description: ''
        address:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/Address'
          description: ''
    AccuracyMode:
      title: AccuracyMode
      const: '0'
      type: string
      description: Accurary, currently only 0-coarse supported.
      examples:
      - '0'
    CacheMode:
      title: CacheMode
      enum:
      - '0'
      - '1'
      - '2'
      type: string
      description: Location cache mode.
      examples:
      - '1'
    DeviceLocationCallback:
      title: DeviceLocationCallback
      required:
      - name
      - url
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/CallbackServiceName'
          - description: The name of the callback service.
            examples:
            - Location
        url:
          type: string
          description: The location of your callback listener.
          examples:
          - http://10.120.102.183:50559/CallbackListener/LocationServiceMessages.asmx
      examples:
      - name: Location
        url: http://10.120.102.183:50559/CallbackListener/LocationServiceMessages.asmx
    CallbackRegistrationResult:
      title: CallbackRegistrationResult
      type: object
      properties:
        account:
          type: string
          description: The name of the account that registered the callback URL.
          examples:
          - 0212312345-00001
        name:
          allOf:
          - $ref: '#/components/schemas/CallbackServiceName'
          - description: The name of the callback service.
            examples:
            - Location
      examples:
      - account: 0212312345-00001
        name: Location
    CallbackServiceName:
      title: CallbackServiceName
      enum:
      - Location
      - DeviceLocation
      type: string
      description: The name of the callback service.
      examples:
      - Location
    ConsentDeleteRequest:
      title: ConsentDeleteRequest
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - MyAccount-1
        deviceList:
          type: array
          items:
            type: string
          description: Device ID list.
    ConsentRequest:
      title: ConsentRequest
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 2234434445-32333
        allDevice:
          type: boolean
          description: Exclude all devices or not.
          examples:
          - false
        type:
          type: string
          description: 'The change to make: append or replace.'
          examples:
          - replace
        exclusion:
          type: array
          items:
            type: string
          description: Device ID list.
          examples:
          - - '980003420535573'
            - '375535024300089'
            - A100003861E585
      examples:
      - accountName: 1234567890-00001
        type: replace
        allDevice: false
        exclusion:
        - '980003420535573'
        - '375535024300089'
        - A100003861E585
    DevicesConsentResult:
      title: DevicesConsentResult
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 2234434445-32333
        allDevice:
          type: boolean
          description: Exclude all devices or not?
          examples:
          - false
        hasMoreData:
          type: boolean
          description: Are there more devices to retrieve or not?
          examples:
          - false
        totalCount:
          type: integer
          description: Total number of excluded devices in the account.
          contentEncoding: int32
          examples:
          - 4
        updateTime:
          type: string
          description: Last update time.
          examples:
          - 2018-05-18 19:20:50.076 +0000 UTC
        exclusion:
          type: array
          items:
            type: string
          description: Device ID list.
          examples:
          - - '990003420535375'
            - '420535399000375'
            - A100003861E585
            - '205353759900034'
      examples:
      - accountName: 2024009649-00001
        allDevice: false
        hasMoreData: false
        totalCount: 4
        updateTime: 2018-05-18 19:20:50.076 +0000 UTC
        exclusion:
        - '990003420535375'
        - '420535399000375'
        - A100003861E585
        - '205353759900034'
    DeviceInfo:
      title: DeviceInfo
      required:
      - id
      - kind
      - mdn
      type: object
      properties:
        id:
          type: string
          description: Device identifier.
          examples:
          - '980003420535573'
        kind:
          type: string
          description: Device identifier kind.
          examples:
          - imei
        mdn:
          type: string
          description: Device MDN.
          examples:
          - '7892345678'
      description: The devices that you want to locate. The array cannot contain more than 20 devices.
      examples:
      - id: '980003420535573'
        kind: imei
        mdn: '7892345678'
    SynchronousLocationRequestResult:
      title: SynchronousLocationRequestResult
      required:
      - txid
      - status
      type: object
      properties:
        txid:
          type: string
          description: The transaction ID of the report.
          examples:
          - 4be7c858-0ef9-4b15-a0c1-95061456d835
        status:
          allOf:
          - $ref: '#/components/schemas/ReportStatus'
          - description: Status of the report.
            examples:
            - INPROGRESS
      examples:
      - txid: 4be7c858-0ef9-4b15-a0c1-95061456d835
        status: QUEUED
    LocationRequest:
      title: LocationRequest
      required:
      - accountName
      - accuracyMode
      - cacheMode
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 1234567890-00001
        accuracyMode:
          allOf:
          - $ref: '#/components/schemas/AccuracyMode'
          - description: Accurary, currently only 0-coarse supported.
            examples:
            - '0'
        cacheMode:
          allOf:
          - $ref: '#/components/schemas/CacheMode'
          - description: Location cache mode.
            examples:
            - '1'
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceInfo'
          description: Device list.
          examples:
          - - id: '980003420535573'
              kind: imei
              mdn: '7892345678'
            - id: '375535024300089'
              kind: imei
              mdn: '7897654321'
            - id: A100003861E585
              kind: meid
              mdn: '7897650914'
      description: The body contains the the account name and list of devices that you want to locate, plus other options.
      examples:
      - accountName: 1234567890-00001
        accuracyMode: '0'
        cacheMode: '1'
        deviceList:
        - id: '980003420535573'
          kind: imei
          mdn: '7892345678'
        - id: '375535024300089'
          kind: imei
          mdn: '7897654321'
        - id: A100003861E585
          kind: meid
          mdn: '7897650914'
    Location:
      title: Location
      type: object
      properties:
        msid:
          type: string
          description: MDN.
          examples:
          - '7892345678'
        pd:
          allOf:
          - $ref: '#/components/schemas/PositionData'
          - description: Position data.
            examples:
            - qos: false
              radius: '5571'
              time: '20170520004421'
              x: '33.45324'
              y: '-84.59621'
        error:
          allOf:
          - $ref: '#/components/schemas/PositionError'
          - description: Position error.
            examples:
            - time: '20170525214342'
              type: POSITION METHOD FAILURE
              info: Exception code=ABSENT SUBSCRIBER
      description: Device location information.
      examples:
      - msid: '7892345678'
        pd:
          time: '20170520004421'
          x: '33.45324'
          y: '-84.59621'
          radius: '5571'
          qos: false
        error: {}
    LocationReport:
      title: LocationReport
      type: object
      properties:
        devLocationList:
          type: array
          items:
            $ref: '#/components/schemas/Location'
          description: Device location information.
          examples:
          - - msid: '7892345678'
              pd:
                time: '20170520004421'
                x: '33.45324'
                y: '-84.59621'
                radius: '5571'
                qos: false
              error: {}
        hasMoreData:
          type: boolean
          description: True if there are more device locations to retrieve.
          examples:
          - false
        startIndex:
          type: string
          description: The zero-based number of the first record to return. Set startIndex=0 for the first request. If there are more than 1,000 devices to be returned (hasMoreData=true), set startIndex=1000 for the second request, 2000 for the third request, etc.
          examples:
          - '0'
        totalCount:
          type: integer
          description: The total number of devices in the original request and in the report.
          contentEncoding: int32
          examples:
          - 4
        txid:
          type: string
          description: The transaction ID of the report.
          examples:
          - 4be7c858-0ef9-4b15-a0c1-95061456d835
      description: Location information for up to 1,000 devices.
      examples:
      - startIndex: '0'
        txid: 2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9
        totalCount: 3
        hasMoreData: false
        devLocationList:
        - error: {}
          msid: '7892345678'
          pd:
            qos: false
            radius: '5571'
            time: '20170520004421'
            x: '33.45324'
            y: '-84.59621'
        - error: {}
          msid: '8583239709'
          pd:
            qos: false
            radius: '3866'
            time: '20170525214342'
            x: '38.8408694'
            y: '-105.0422583'
        - error:
            time: '20170525214342'
            type: POSITION METHOD FAILURE
            info: Exception code=ABSENT SUBSCRIBER
          msid: '7897654321'
          pd: {}
    AsynchronousLocationRequestResult:
      title: AsynchronousLocationRequestResult
      type: object
      properties:
        txid:
          type: string
          description: The transaction ID of the report.
          examples:
          - 4be7c858-0ef9-4b15-a0c1-95061456d835
        status:
          allOf:
          - $ref: '#/components/schemas/ReportStatus'
          - description: Status of the report.
            examples:
            - INPROGRESS
        estimatedDuration:
          type: string
          description: Estimated number of minutes required to complete the report.
          examples:
          - '12'
      examples:
      - txid: 2017-12-11Te8b47da2-3a45-46cf-9903-61815e1e97e9
    LocationReportStatus:
      title: LocationReportStatus
      type: object
      properties:
        txid:
          type: string
          description: The transaction ID of the report.
          examples:
          - 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
        status:
          allOf:
          - $ref: '#/components/schemas/ReportStatus'
          - description: Status of the report.
            examples:
            - INPROGRESS
      description: Status of the report.
      examples:
      - txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
        status: QUEUED
    PositionData:
      title: PositionData
      type: object
      properties:
        time:
          type: string
          description: Time location obtained.
          examples:
          - '20170520004421'
        utcoffset:
          type: string
          description: UTC offset of time.
          examples:
          - '0'
        x:
          type: string
          description: X coordinate of location.
          examples:
          - '38.8408694'
        y:
          type: string
          description: Y coordinate of location.
          examples:
          - '-105.0422583'
        radius:
          type: string
          description: Radius of the location in meters.
          examples:
          - '3866'
        qos:
          type: boolean
          description: Whether requested accurary is met or not.
          examples:
          - false
      description: Position data.
      examples:
      - qos: false
        radius: '5571'
        time: '20170520004421'
        x: '33.45324'
        y: '-84.59621'
    PositionError:
      title: PositionError
      type: object
      properties:
        time:
          type: string
          description: Time location obtained.
          examples:
          - '20170525214342'
        utcoffset:
          type: string
          description: UTC offset of time.
          examples:
          - '0'
        type:
          type: string
          description: Error type returned from location server.
          examples:
          - POSITION METHOD FAILURE
        info:
          type: string
          description: Additional information about the error.
          examples:
          - Exception code=ABSENT SUBSCRIBER
      description: Position error.
      examples:
      - time: '20170525214342'
        type: POSITION METHOD FAILURE
        info: Exception code=ABSENT SUBSCRIBER
    ReportStatus:
      title: ReportStatus
      enum:
      - QUEUED
      - INPROGRESS
      - COMPLETED
      type: string
      description: Status of the report.
      examples:
      - INPROGRESS
    DeviceLocationSubscription:
      title: DeviceLocationSubscription
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 2024009649-00001
        locType:
          type: string
          description: Location service license type.
          examples:
          - TS-LOC-COARSE-CellID-5K
        maxAllowance:
          type: string
          description: The number of billable location requests allowed per billing cycle.
          examples:
          - '5000'
        purchaseTime:
          type: string
          description: Location service purchase time.
          examples:
          - 2017-05-10 06:25:25.171 +0000 UTC
      examples:
      - accountName: 2024009649-00001
        locType: TS-LOC-COARSE-CellID-5K
        maxAllowance: '5000'
        purchaseTime: 2017-05-10 06:25:25.171 +0000 UTC
    TransactionID:
      title: TransactionID
      type: object
      properties:
        txid:
          type: string
          examples:
          - 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
      description: The transaction ID of the request that you want to cancel, from the POST /devicelocations synchronus response.
      examples:
      - txid: 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
    BillUsageRequest:
      title: BillUsageRequest
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 1234567890-00001
        startDate:
          type: string
          description: Start date to search for billable usage, mm-dd-yyyy.
          examples:
          - 04-01-2018
        endDate:
          type: string
          description: End date to search for billable usage, mm-dd-yyyy.
          examples:
          - 04-30-2018
        usageForAllAccounts:
          type: boolean
          description: Request usage for single or multiple accounts.
          examples:
          - true
      description: Bill usage request.
      examples:
      - accountName: 1234567890-00001
        startDate: 04-01-2018
        endDate: 04-30-2018
        usageForAllAccounts: true
    BillableUsageReport:
      title: BillableUsageReport
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 1223334444-00001
        usageForAllAccounts:
          type: boolean
          description: The usage is for a single or multiple accounts.
          examples:
          - false
        skuName:
          type: string
          description: SKU Name of the service subscription.
          examples:
          - TS-LOC-COARSE-CellID-Aggr
        transactionsAllowed:
          type: string
          description: The number of location requests included with the subscription type.
          examples:
          - '5000'
        totalTransactionCount:
          type: string
          description: The total number of billable device location requests during the reporting period from all included accounts.
          examples:
          - '125'
        PrimaryAccount:
          allOf:
          - $ref: '#/components/schemas/ServiceUsage'
          - examples:
            - accountName: 3333355555-00001
              transactionsCount: '200'
        ManagedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/ServiceUsage'
          description: Zero or more managed accounts.
          examples:
          - - accountName: 1111122222-00001
              transactionsCount: '100'
            - accountName: 3333355555-00001
              transactionsCount: '200'
            - accountName: 6666677777-00001
              transactionsCount: '300'
      description: Bill usage report.
      examples:
      - accountName: 1223334444-00001
        usageForAllAccounts: false
        skuName: TS-LOC-COARSE-CellID-Aggr
        transactionsAllowed: '5000'
        totalTransactionCount: '350'
        PrimaryAccount:
          accountName: 1223334444-00001
          transactionsCount: '125'
        ManagedAccounts: []
    ServiceUsage:
      title: ServiceUsage
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 3333355555-00001
        transactionsCount:
          type: string
          description: Total requests for the account during the reporting period.
          examples:
          - '200'
      examples:
      - accountName: 3333355555-00001
        transactionsCount: '200'
    DeviceLocationSuccessResult:
      title: DeviceLocationSuccessResult
      type: object
      properties:
        success:
          type: boolean
          examples:
          - true
      description: Whether the device location request was successful or not.
    DeviceLocationResult:
      title: DeviceLocationResult
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
          examples:
          - The type of error, such as INVALID_REQUEST.
        errorMessage:
          type: string
          examples:
          - Additional error information.
      description: Will be empty if there was no error.
      examples:
      - errorCode: The type of error, such as INVALID_REQUEST.
        errorMessage: Additional error information.
    serviceName:
      title: serviceName
      enum:
      - Location
      - fota
      type: string
      description: Service name
    UsageTriggerAddRequest:
      title: UsageTriggerAddRequest
      required:
      - accountName
      - serviceName
      - thresholdValue
      type: object
      properties:
        triggerName:
          type: string
          description: Usage trigger name
          examples:
          - 95% usage alert
        accountName:
          type: string
          description: Account name
          examples:
          - 0212312345-00001
        serviceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: Service name
        thresholdValue:
          type: string
          description: The percent of subscribed usage required to activate the trigger, such as 90 or 100.
          examples:
          - '95'
        allowExcess:
          type: boolean
          description: Allow additional requests after thresholdValue is reached. (currently not functional)
        sendSmsNotification:
          type: boolean
          description: Send SMS (text) alerts when the thresholdValue is reached.
        smsPhoneNumbers:
          type: string
          description: Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or parentheses, etc.
          examples:
          - '5551231234'
        sendEmailNotification:
          type: boolean
          description: Send email alerts when the thresholdValue is reached.
        emailAddresses:
          type: string
          description: Comma-separated list of email addresses to send alerts to.
          examples:
          - you@theinternet.com
    UsageTriggerResponse:
      title: UsageTriggerResponse
      required:
      - triggerId
      - triggerName
      - accountName
      - serviceName
      - thresholdValue
      - allowExcess
      - sendSmsNotification
      - smsPhoneNumbers
      - sendEmailNotification
      - emailAddresses
      - createDate
      - updateDate
      type: object
      properties:
        triggerId:
          type: string
          description: Unique usage triggerId
          examples:
          - 3bb4777e-5292-4de7-97df-f578df4a2dbe
        triggerName:
          type: string
          description: Usage trigger name
          examples:
          - 95% usage alert
        accountName:
          type: string
          description: Account name
          examples:
          - 0212312345-00001
        serviceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: Service name
        thresholdValue:
          type: string
          description: Percent of subscription at which trigger will send an alert
          examples:
          - '95'
        allowExcess:
          type: boolean
          description: allowExcess determines whether to restrict usage after exceeds limits
        sendSmsNotification:
          type: boolean
          description: Send SMS (text) alerts when the thresholdValue is reached.
        smsPhoneNumbers:
          type: string
          description: comma seperated value of list of Phone numbers for SMS notifications
          examples:
          - '5551231234'
        sendEmailNotification:
          type: boolean
          description: Send email alerts when the thresholdValue is reached.
        emailAddresses:
          type: string
          description: comma seperated value of list of Email addresses for Email notifications
          examples:
          - me@theinternet.com, you@theinternet.com
        createDate:
          type: string
          description: UTC Date when the usage trigger was created
          examples:
          - 2018-08-31
        updateDate:
          type: string
          description: UTC Date when the usage trigger was last updated
          examples:
          - 2018-09-03
    UsageTriggerUpdateRequest:
      title: UsageTriggerUpdateRequest
      required:
      - accountName
      type: object
      properties:
        triggerName:
          type: string
          description: Usage trigger name
          examples:
          - 95% usage alert
        accountName:
          type: string
          description: Account name
          examples:
          - 0212312345-00001
        thresholdValue:
          type: string
          description: The percent of subscribed usage required to activate the trigger, such as 90 or 100.
          examples:
          - '95'
        smsPhoneNumbers:
          type: string
          description: Comma-separated list of phone numbers to send SMS alerts to. Digits only; no dashes or parentheses, etc.
          examples:
          - '5551231234'
        emailAddresses:
          type: string
          description: Comma-separated list of email addresses to send alerts to.
          examples:
          - me@theinternet.com, you@theinternet.com
    ManagedAccountsAddRequest:
      title: ManagedAccountsAddRequest
      required:
      - accountName
      - serviceName
      - type
      - managedAccList
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier
          examples:
          - 1234567890-00001
        serviceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: Service name
        type:
          type: string
          description: SKU name
          examples:
          - TS-LOC-COARSE-CellID-Aggr
        managedAccList:
          type: array
          items:
            type: string
          description: managed account list
          examples:
          - - 1223334444-00001
            - 2334445555-00001
            - 3445556666-00001
    ManagedAccountsAddResponse:
      title: ManagedAccountsAddResponse
      type: object
      properties:
        TxId:
          type: string
          description: Transaction identifier
          examples:
          - 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
        statusList:
          type: array
          items:
            $ref: '#/components/schemas/StatusList'
          description: ''
    ManagedAccountsProvisionRequest:
      title: ManagedAccountsProvisionRequest
      required:
      - accountName
      - paccountName
      - serviceName
      - type
      - txid
      type: object
      properties:
        accountName:
          type: string
          description: Managed account identifier
          examples:
          - 1223334444-00001
        paccountName:
          type: string
          description: Primary Account identifier
          examples:
          - 1223334444-00001
        serviceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: Service name
        type:
          type: string
          description: SKU name
          examples:
          - TS-LOC-COARSE-CellID-5K
        txid:
          type: string
          description: Transaction identifier returned by add request
          examples:
          - d4fbff33-ece4-9f02-42ef-2c90bd287e3b
    ManagedAccountsProvisionResponse:
      title: ManagedAccountsProvisionResponse
      type: object
      properties:
        txid:
          type: string
          description: Transaction identifier
          examples:
          - 4fbff332-ece4-42ef-9f02-7e3bdc90bd28
        accountName:
          type: string
          description: Account identifier
          examples:
          - 1223334444-00001
        paccountName:
          type: string
          description: Primary Account identifier
          examples:
          - 1223334444-00001
        serviceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: Service name
        status:
          type: string
          description: Provision status. Success or Fail
          examples:
          - Success
        reason:
          type: string
          description: Detailed reason
          examples:
          - Success
    ManagedAccountCancelRequest:
      title: ManagedAccountCancelRequest
      required:
      - accountName
      - paccountName
      - serviceName
      - type
      - txid
      type: object
      properties:
        accountName:
          type: string
          description: Managed account identifier
          examples:
          - 1223334444-00001
        paccountName:
          type: string
          description: Primary Account identifier
          examples:
          - 1223334444-00001
        serviceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: Service name
        type:
          type: string
          description: SKU name
          examples:
          - TS-LOC-COARSE-CellID-5K
        txid:
          type: string
          description: Transaction identifier returned by provision request
          examples:
          - d4fbff33-ece4-9f02-42ef-2c90bd287e3b
    ManagedAccountCancelResponse:
      title: ManagedAccountCancelResponse
      required:
      - txid
      - accountName
      - paccountName
      - serviceName
      - status
      - reason
      type: object
      properties:
        txid:
          type: string
          description: Transaction identifier
          examples:
          - 4fbff332-ece4-42ef-9f02-7e3bdc90bd28
        accountName:
          type: string
          description: Managed account identifier
          examples:
          - 1223334444-00001
        paccountName:
          type: string
          description: Primary account identifier
          examples:
          - 1223334444-00001
        serviceName:
          allOf:
          - $ref: '#/components/schemas/serviceName'
          - description: Service name
        status:
          type: string
          description: Deactivate/cancel status, Success or Fail
          examples:
          - Success
        reason:
          type: string
          description: Detailed reason
          examples:
          - Success
    ManagedAccountsGetAllResponse:
      title: ManagedAccountsGetAllResponse
      type: object
      properties:
        accountName:
          type: string
          description: Account Name
          examples:
          - 0212312345-00001
        ManagedAccAddedList:
          type: array
          items:
            $ref: '#/components/schemas/ManagedAccAddedList'
          description: ''
        managedAccProvisionedList:
          type: array
          items:
            $ref: '#/components/schemas/ManagedAccProvisionedList'
          description: ''
    ManagedAccAddedList:
      title: ManagedAccAddedList
      type: object
      properties:
        id:
          type: string
          description: Account name
          examples:
          - 1223334444-00001
        txid:
          type: string
          description: Transaction identifier
          examples:
          - 2c90bd28-ece4-42ef-9f02-7e3bd4fbff33
    ManagedAccProvisionedList:
      title: ManagedAccProvisionedList
      type: object
      properties:
        id:
          type: string
          description: Account name
          examples:
          - 2334445555-00001
        txid:
          type: string
          description: Transaction identifier
          examples:
          - d4fbff33-ece4-9f02-42ef-2c90bd287e3b
    StatusList:
      title: StatusList
      type: object
      properties:
        id:
          type: string
          description: Account name
          examples:
          - 1223334444-00001
        status:
          type: string
          description: Success or Fail
          examples:
          - Success
        reason:
          type: string
          description: detailed reason
          examples:
          - Success
    CallbackService:
      title: CallbackService
      const: Fota
      type: string
      description: Callback type. Must be 'Fota' for Software Management Services API.
      examples:
      - Fota
    UpgradeStatus:
      title: UpgradeStatus
      enum:
      - RequestPending
      - Queued
      - RequestFailed
      - InProgress
      - Finished
      - UpgradeFailed
      type: string
      description: The status of the upgrades that you want to retrieve.
      examples:
      - RequestPending
    RegisteredCallbacks:
      title: RegisteredCallbacks
      type: object
      properties:
        aname:
          type: string
          description: The name of the billing account for which callback messages will be sent.
          examples:
          - 0252012345-00001
        name:
          type: string
          description: The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL. This will be 'Fota' for the Software Management Services callback.
          examples:
          - Fota
        url:
          type: string
          description: The address to which callback messages will be sent.
          examples:
          - http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
        username:
          type: string
          description: The user name that ThingSpace will return in the callback messages.
        password:
          type: string
          description: The password that ThingSpace will return in the callback messages.
      description: List of registered callback endpoints.
      examples:
      - aname: 0252012345-00001
        name: Fota
        url: http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
    FotaV1CallbackRegistrationRequest:
      title: FotaV1CallbackRegistrationRequest
      required:
      - name
      - url
      type: object
      properties:
        name:
          type: string
          description: The name of the callback service that you want to subscribe to, which must be 'Fota' for Software Management Services callbacks.
          examples:
          - Fota
        url:
          type: string
          description: The address on your server where you have enabled a listening service for Software Management Services callback messages.
          examples:
          - https://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
        username:
          type: string
          description: The user name that ThingSpace should return in the callback messages.
        password:
          type: string
          description: The password that ThingSpace should return in the callback messages.
      description: Callback endpoint information.
      examples:
      - name: Fota
        url: https://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
    FotaV1CallbackRegistrationResult:
      title: FotaV1CallbackRegistrationResult
      type: object
      properties:
        accountName:
          type: string
          description: The name of the billing account for which callback messages will be sent.
          examples:
          - 0204563412-00001
        serviceName:
          type: string
          description: The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL. This will be 'Fota' for the Software Management Services callback.
          examples:
          - Fota
      description: Registered callback account name and service name.
      examples:
      - accountName: 0204563412-00001
        serviceName: Fota
    V1ListOfLicensesToRemoveRequest:
      title: V1ListOfLicensesToRemoveRequest
      required:
      - deviceList
      type: object
      properties:
        type:
          type: string
          description: Set to 'append' to append the devices in the current request to the existing list. If there is no existing list then it will be created with only these devices. Leave this parameter out when you want to replace the existing list with the devices in the current request.
          examples:
          - append
        deviceList:
          type: array
          items:
            type: string
          description: The IMEIs of the devices.
          examples:
          - - '990003425730535'
            - '990000473475989'
            - '990005733420535'
            - '990000347475989'
            - '990007303425535'
            - '990007590473489'
      description: List of devices to removes.
      examples:
      - type: append
        deviceList:
        - '990003425730535'
        - '990000473475989'
    V1ListOfLicensesToRemoveResult:
      title: V1ListOfLicensesToRemoveResult
      type: object
      properties:
        count:
          type: integer
          description: The total number of devices on the cancellation candidate list.
          contentEncoding: int32
          examples:
          - 2
        deviceList:
          type: array
          items:
            type: string
          description: The IMEIs of the devices.
          examples:
          - - '990003425730535'
            - '990000473475989'
            - '990005733420535'
            - '990000347475989'
            - '990007303425535'
            - '990007590473489'
      description: List of licenses assigned.
      examples:
      - count: 2
        deviceList:
        - '900000000000001'
        - '900000000000999'
    V1ListOfLicensesToRemove:
      title: V1ListOfLicensesToRemove
      type: object
      properties:
        count:
          type: integer
          description: The total number of devices on the list.
          contentEncoding: int32
          examples:
          - 6
        hasMoreData:
          type: boolean
          description: True if there are more devices to retrieve.
          examples:
          - false
        updateTime:
          type: string
          description: The date and time that the list was last updated.
          contentEncoding: date-time
          examples:
          - 2018-03-22T12:06:06.000Z
        deviceList:
          type: array
          items:
            type: string
          description: The IMEIs of the devices.
          examples:
          - - '990003425730535'
            - '990000473475989'
            - '990005733420535'
            - '990000347475989'
            - '990007303425535'
            - '990007590473489'
      description: List of cancellation candidate devices.
      examples:
      - count: 6
        hasMoreData: false
        updateTime: 2018-03-22T12:06:06.000Z
        deviceList:
        - '990003425730535'
        - '990000473475989'
        - '990005733420535'
        - '990000347475989'
        - '990007303425535'
        - '990007590473489'
    DeviceListQueryResult:
      title: DeviceListQueryResult
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0242078698-00001
        hasMoreData:
          type: boolean
          description: True if there are more devices to retrieve.
          examples:
          - true
        lastSeenDeviceId:
          type: integer
          description: If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.
          contentEncoding: int64
          examples:
          - 900000000001000
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceListQueryItem'
          description: The list of devices in the account.
          examples:
          - - deviceId: '900000000000001'
              mdn: '0000040881'
              model: Model-A
              make: Verizon
              firmware: VerizonFirmwareVersion-01
              fotaEligible: true
              licenseAssigned: true
              upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
            - deviceId: '900000000000999'
              mdn: '0000041879'
              model: Model-A
              make: Verizon
              firmware: VerizonFirmwareVersion-01
              fotaEligible: true
              licenseAssigned: true
              upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
            - deviceId: '900000000001000'
              mdn: '0000041880'
              model: Model-A
              make: Verizon
              firmware: VerizonFirmwareVersion-01
              fotaEligible: true
              licenseAssigned: true
              upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
      description: List of devices.
      examples:
      - accountName: 0242078698-00001
        hasMoreData: true
        lastSeenDeviceId: 900000000001000
        deviceList:
        - deviceId: '900000000000001'
          mdn: '0000040881'
          model: Model-A
          make: Verizon
          firmware: VerizonFirmwareVersion-01
          fotaEligible: true
          licenseAssigned: true
          upgradeTime: 2018-03-03T16:03:33.000Z
        - deviceId: '900000000000999'
          mdn: '0000041879'
          model: Model-A
          make: Verizon
          firmware: VerizonFirmwareVersion-01
          fotaEligible: true
          licenseAssigned: true
          upgradeTime: 2018-03-03T16:03:33.000Z
        - deviceId: '900000000001000'
          mdn: '0000041880'
          model: Model-A
          make: Verizon
          firmware: VerizonFirmwareVersion-01
          fotaEligible: true
          licenseAssigned: true
          upgradeTime: 2018-03-03T16:03:33.000Z
    DeviceListQueryItem:
      title: DeviceListQueryItem
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '900000000000001'
        mdn:
          type: string
          description: The MDN (phone number) of the device.
          examples:
          - '0000040881'
        model:
          type: string
          description: The device model name.
          examples:
          - Model-A
        make:
          type: string
          description: The device make.
          examples:
          - Verizon
        firmware:
          type: string
          description: The name of the firmware image currently installed on the device.
          examples:
          - VerizonFirmwareVersion-01
        fotaEligible:
          type: boolean
          description: True if the device firmware can be upgraded over the air using the Software Management Services API.
          examples:
          - true
        licenseAssigned:
          type: boolean
          description: True if an MRC license has been assigned to this device.
          examples:
          - true
        upgradeTime:
          type: string
          description: The date and time that the device firmware was last upgraded. If a device has never been upgraded, the upgradeTime will be 01/01/1900 0:0:0.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
      description: The list of devices in the account.
      examples:
      - deviceId: '900000000000001'
        mdn: '0000040881'
        model: Model-A
        make: Verizon
        firmware: VerizonFirmwareVersion-01
        fotaEligible: true
        licenseAssigned: true
        upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
    DeviceUpgradeHistory:
      title: DeviceUpgradeHistory
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '900000000000001'
        id:
          type: string
          description: The unique identifier for the upgrade.
          examples:
          - f574fbb8-b291-4cc7-bf22-4e3f27977558
        accountName:
          type: string
          description: The name (number) of the billing account that the device belongs to.
          examples:
          - 0242078689-00001
        firmwareFrom:
          type: string
          description: The firmware version that was on the device before the upgrade.
          examples:
          - VerizonFirmwareVersion-02
        firmwareTo:
          type: string
          description: The name of the firmware version that was on the device after the upgrade.
          examples:
          - VerizonFirmwareVersion-03
        startDate:
          type: string
          description: The date of the upgrade.
          examples:
          - 2018-03-05
        upgradeStartTime:
          type: string
          description: The date and time that the upgrade actually started for this device.
          examples:
          - 2018-03-05T19:07:21Z
        status:
          type: string
          description: The status of the upgrade for this device.
          examples:
          - UpgradeSuccess
        reason:
          type: string
          description: More information about the status.
          examples:
          - success
      description: Firmware upgrade information.
      examples:
      - deviceId: '900000000000001'
        id: f574fbb8-b291-4cc7-bf22-4e3f27977558
        accountName: 0242078689-00001
        firmwareFrom: VerizonFirmwareVersion-02
        firmwareTo: VerizonFirmwareVersion-03
        startDate: 2018-03-05
        upgradeStartTime: 2018-03-05T19:07:21Z
        status: UpgradeSuccess
        reason: success
    FotaV1Result:
      title: FotaV1Result
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
          description: Error response code.
          examples:
          - error code string
        errorMessage:
          type: string
          description: Description of the error.
          examples:
          - error message string
      description: Response in case of any errors.
      examples:
      - errorCode: error code string
        errorMessage: error message string
    Firmware:
      title: Firmware
      type: object
      properties:
        firmwareName:
          type: string
          description: The name of the firmware image, provided by the device manufacturer.
          examples:
          - FOTA_Verizon_Model-A_01To02_HF
        participantName:
          type: string
          description: Internal reference; can be ignored.
          examples:
          - 0402196254-00001
        launchDate:
          type: string
          description: The release date of the firmware image.
          contentEncoding: date-time
          examples:
          - 2018-04-01T16:03:00.000Z
        releaseNote:
          type: string
          description: Additional information about the release.
        model:
          type: string
          description: The device model that the firmware applies to.
          examples:
          - Model-A
        make:
          type: string
          description: The device make that the firmware applies to.
          examples:
          - Verizon
        fromVersion:
          type: string
          description: The firmware version that must currently be on the device to upgrade.
          examples:
          - VerizonFirmwareVersion-01
        toVersion:
          type: string
          description: The firmware version that will be on the device after an upgrade.
          examples:
          - VerizonFirmwareVersion-02
      description: Firmware information.
      examples:
      - firmwareName: FOTA_Verizon_Model-A_01To02_HF
        participantName: 0402196254-00001
        launchDate: 2018-04-01T16:03:00.000Z
        releaseNote: ''
        model: Model-A
        make: Verizon
        fromVersion: VerizonFirmwareVersion-01
        toVersion: VerizonFirmwareVersion-02
    FirmwareUpgradeChangeRequest:
      title: FirmwareUpgradeChangeRequest
      required:
      - type
      - deviceList
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/FirmwareTypeList'
          - description: Possible values are `append` or `remove`
            examples:
            - append
        deviceList:
          type: array
          items:
            type: string
          description: The IMEIs of the devices.
          examples:
          - - '990003425730535'
            - '990000473475989'
            - '990005733420535'
            - '990000347475989'
            - '990007303425535'
            - '990007590473489'
      description: List of devices to add or remove.
      examples:
      - type: append
        deviceList:
        - 15-digit IMEI
        - 15-digit IMEI
    FirmwareTypeList:
      title: FirmwareTypeList
      enum:
      - append
      - remove
      type: string
      description: Possible values are `append` or `remove`
      examples:
      - append
    FirmwareUpgradeChangeResult:
      title: FirmwareUpgradeChangeResult
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0000123456-00001
        id:
          type: string
          description: The unique identifier for this upgrade.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V1DeviceListItem'
          description: A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.
          examples:
          - - deviceId: 15-digit IMEI
              status: AddDeviceSucceed
              Reason: Device added Successfully
            - deviceId: 15-digit IMEI
              status: AddDeviceSucceed
              Reason: Device added Successfully
      description: Upgrade information.
      examples:
      - accountName: 0000123456-00001
        id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
        deviceList:
        - deviceId: 15-digit IMEI
          status: AddDeviceSucceed
          Reason: Device added Successfully
        - deviceId: 15-digit IMEI
          status: AddDeviceSucceed
          Reason: Device added Successfully
    V1DeviceListItem:
      title: V1DeviceListItem
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '900000000000001'
        status:
          type: string
          description: Whether the device was successfully added or removed from the campaign.
          examples:
          - LicenseAssignSuccess
        Reason:
          type: string
          description: Additional details about the status.
          examples:
          - Success
      description: A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.
      examples:
      - deviceId: '900000000000001'
        status: LicenseAssignSuccess
        Reason: Success
    FirmwareUpgradeRequest:
      title: FirmwareUpgradeRequest
      required:
      - accountName
      - firmwareName
      - firmwareTo
      - startDate
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0402196254-00001
        firmwareName:
          type: string
          description: The name of the firmware image that will be used for the upgrade, from a GET /firmware response.
          examples:
          - FOTA_Verizon_Model-A_01To02_HF
        firmwareTo:
          type: string
          description: The name of the firmware version that will be on the devices after a successful upgrade.
          examples:
          - VerizonFirmwareVersion-02
        startDate:
          type: string
          description: The date that the upgrade should begin.
          contentEncoding: date-time
          examples:
          - 2018-04-01T16:03:00.000Z
        deviceList:
          type: array
          items:
            type: string
          description: The IMEIs of the devices.
          examples:
          - - '990003425730535'
            - '990000473475989'
            - '990005733420535'
            - '990000347475989'
            - '990007303425535'
            - '990007590473489'
      description: Details of the firmware upgrade request.
      examples:
      - accountName: 0402196254-00001
        firmwareName: FOTA_Verizon_Model-A_01To02_HF
        firmwareTo: VerizonFirmwareVersion-02
        startDate: 2018-04-01T16:03:00.000Z
        deviceList:
        - '990003425730535'
        - '990000473475989'
    FirmwareUpgrade:
      title: FirmwareUpgrade
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for this upgrade.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0402196254-00001
        firmwareName:
          type: string
          description: The name of the firmware image that will be used for the upgrade.
          examples:
          - FOTA_Verizon_Model-A_01To02_HF
        firmwareTo:
          type: string
          description: The name of the firmware version that will be on the devices after a successful upgrade.
          examples:
          - VerizonFirmwareVersion-02
        startDate:
          type: string
          description: The intended start date for the upgrade.
          examples:
          - 2018-04-01
        status:
          type: string
          description: The current status of the upgrade.
          examples:
          - Queued
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/FirmwareUpgradeDeviceListItem'
          description: A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.
          examples:
          - - deviceId: '900000000000002'
              status: Device Accepted
              resultReason: success
            - deviceId: '900000000000003'
              status: Device Accepted
              resultReason: success
      description: Array of upgrade objects with the specified status.
      examples:
      - id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
        accountName: 0402196254-00001
        firmwareName: FOTA_Verizon_Model-A_01To02_HF
        firmwareTo: VerizonFirmwareVersion-02
        startDate: 2018-04-01
        status: Queued
        deviceList:
        - deviceId: '900000000000002'
          status: Device Accepted
          resultReason: success
        - deviceId: '900000000000003'
          status: Device Accepted
          resultReason: success
    FirmwareUpgradeDeviceListItem:
      title: FirmwareUpgradeDeviceListItem
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '900000000000002'
        status:
          type: string
          description: The status of the upgrade for this device.
          examples:
          - Device Accepted
        resultReason:
          type: string
          description: Additional details about the status. Not included when status='Request Pending.'
          examples:
          - success
      description: A JSON object for each device that was included in the upgrade, showing the device IMEI, the status of the upgrade, and additional information about the status.
      examples:
      - deviceId: '900000000000002'
        status: Device Accepted
        resultReason: success
    AccountLicenseInfo:
      title: AccountLicenseInfo
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0402196254-00001
        totalLicenses:
          type: integer
          description: Number of monthly licenses in an MRC subscription.
          contentEncoding: int32
          examples:
          - 5000
        assignedLicenses:
          type: integer
          description: Number of licenses currently assigned to devices.
          contentEncoding: int32
          examples:
          - 4319
        hasMoreData:
          type: boolean
          description: True if there are more devices to retrieve.
          examples:
          - true
        lastSeenDeviceId:
          type: integer
          description: If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.
          contentEncoding: int32
          examples:
          - 1000
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/AccountLicenseDeviceListItem'
          description: The list of devices that have licenses assigned, including the date and time of when each license was assigned.
          examples:
          - - deviceId: '990003425730535'
              assignmentTime: 2017-11-29T16:03:42.000Z
            - deviceId: '990000473475989'
              assignmentTime: 2017-11-29T16:03:42.000Z
      description: Account license information.
      examples:
      - accountName: 0402196254-00001
        totalLicenses: 5000
        assignedLicenses: 4319
        hasMoreData: true
        lastSeenDeviceId: 1000
        deviceList:
        - deviceId: '990003425730535'
          assignmentTime: 2017-11-29T16:03:42.000Z
        - deviceId: '990000473475989'
          assignmentTime: 2017-11-29T16:03:42.000Z
        - deviceId: '990000347475989'
          assignmentTime: 2017-11-29T16:03:42.000Z
        - deviceId: '990007303425535'
          assignmentTime: 2016-11-29T16:03:42.000Z
    AccountLicenseDeviceListItem:
      title: AccountLicenseDeviceListItem
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '990003425730535'
        assignmentTime:
          type: string
          description: Timestamp of when a license was assigned to the device.
          contentEncoding: date-time
          examples:
          - 2017-11-29T16:03:42.000Z
      description: The list of devices that have licenses assigned, including the date and time of when each license was assigned.
      examples:
      - deviceId: '990003425730535'
        assignmentTime: 2017-11-29T16:03:42.000Z
    V1LicensesAssignedRemovedRequest:
      title: V1LicensesAssignedRemovedRequest
      required:
      - deviceList
      type: object
      properties:
        deviceList:
          type: array
          items:
            type: string
          description: The IMEIs of the devices.
          examples:
          - - '990003425730535'
            - '990000473475989'
            - '990005733420535'
            - '990000347475989'
            - '990007303425535'
            - '990007590473489'
      description: IMEIs of the devices to assign licenses to.
      examples:
      - deviceList:
        - '900000000000001'
        - '900000000000998'
        - '900000000000999'
    V1LicensesAssignedRemovedResult:
      title: V1LicensesAssignedRemovedResult
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0242078689-00001
        licCount:
          type: integer
          description: Total number of monthly licenses in an MRC subscription.
          contentEncoding: int32
          examples:
          - 9000
        licUsedCount:
          type: integer
          description: Number of licenses assigned to devices after the request completed.
          contentEncoding: int32
          examples:
          - 1000
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V1DeviceListItem'
          description: A JSON object for each device that was in the request.
          examples:
          - - deviceId: '900000000000001'
              status: LicenseAssignSuccess
              Reason: Success
            - deviceId: '900000000000999'
              status: LicenseAssignSuccess
              Reason: Success
      description: License assignment or removal confirmation.
      examples:
      - accountName: 0242078689-00001
        licCount: 9000
        licUsedCount: 1000
        deviceList:
        - deviceId: '900000000000001'
          status: LicenseAssignSuccess
          Reason: Success
        - deviceId: '900000000000999'
          status: LicenseAssignSuccess
          Reason: Success
    FotaV1SuccessResult:
      title: FotaV1SuccessResult
      type: object
      properties:
        success:
          type: boolean
          description: True is returned in case of success.
          examples:
          - true
      description: A response to a successful request contains a single Boolean value.
      examples:
      - success: true
    V1AccountSubscription:
      title: V1AccountSubscription
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0402196254-00001
        purchaseType:
          type: string
          description: Subscription models used by the account.
          examples:
          - TS-HFOTA-EVNT,TS-HFOTA-MRC
        licenseCount:
          type: integer
          description: Number of monthly licenses in an MRC subscription.
          contentEncoding: int32
          examples:
          - 9000
        licenseUsedCount:
          type: integer
          description: Number of licenses currently assigned to devices.
          contentEncoding: int32
          examples:
          - 1000
        updateTime:
          type: string
          description: The date and time of when the subscription was last updated.
          examples:
          - 2018-03-02T16:03:06.000Z
      description: Account subscription information.
      examples:
      - accountName: 0402196254-00001
        purchaseType: TS-HFOTA-EVNT,TS-HFOTA-MRC
        licenseCount: 9000
        licenseUsedCount: 1000
        updateTime: 2018-03-02T16:03:06.000Z
    UpgradeListQueryResult:
      title: UpgradeListQueryResult
      type: object
      properties:
        hasMoreFlag:
          type: boolean
          description: True if there are more devices to retrieve.
          examples:
          - false
        lastSeenUpgradeId:
          type: integer
          description: If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.
          contentEncoding: int32
        reportList:
          type:
          - array
          - 'null'
          items:
            $ref: '#/components/schemas/FirmwareUpgrade'
          description: Array of upgrade objects with the specified status.
          examples:
          - - id: 3ac8c863-bde7-4f41-878e-dd5473e973bb
              accountName: 0242078689-00001
              firmwareName: FOTA_Verizon_Model-A_01To02_HF
              firmwareTo: VerizonFirmwareVersion-02
              startDate: 2018-04-01
              status: Queued
              deviceList:
              - deviceId: '900000000000002'
                status: Device Accepted
                resultReason: success
              - deviceId: '900000000000003'
                status: Device Accepted
                resultReason: success
            - id: efb8206b-2e88-4fdb-886d-31d8e87cd95f
              accountName: 0242078689-00001
              firmwareName: FOTA_Verizon_Model-A_01To02_HF
              firmwareTo: VerizonFirmwareVersion-02
              startDate: 2018-04-01T16:03:00.000Z
              status: Queued
              deviceList:
              - deviceId: '900000000000008'
                status: Device Accepted
                resultReason: success
      description: Upgrade information.
    FotaV2Subscription:
      title: FotaV2Subscription
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 00000000000-123345
        purchaseType:
          type: string
          description: Subscription models used by the account.
          examples:
          - TS-HFOTA-EVNT,TS-HFOTA-MRC
        licenseCount:
          type: integer
          description: Number of monthly licenses in an MRC subscription.
          contentEncoding: int32
          examples:
          - 500
        licenseUsedCount:
          type: integer
          description: Number of licenses currently assigned to devices.
          contentEncoding: int32
          examples:
          - 400
        updateTime:
          type: string
          description: The date and time of when the subscription was last updated.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
      description: FOTA Subscription.
      examples:
      - accountName: 00000000000-123345
        purchaseType: TS-HFOTA-EVNT,TS-HFOTA-MRC
        licenseCount: 500
        licenseUsedCount: 400
        updateTime: 2021-06-03 00:03:56.079 +0000 UTC
    V2LicenseSummary:
      title: V2LicenseSummary
      required:
      - accountName
      - assignedLicenses
      - hasMoreData
      - maxPageSize
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0402196254-00001
        totalLicense:
          type: integer
          description: Total FOTA license count.
          contentEncoding: int32
          examples:
          - 5000
        assignedLicenses:
          type: integer
          description: Assigned FOTA license count.
          contentEncoding: int32
          examples:
          - 4319
        hasMoreData:
          type: boolean
          description: True if there are more devices to retrieve.
          examples:
          - true
        lastSeenDeviceId:
          type: string
          description: Last seen device identifier.
          examples:
          - '1000'
        maxPageSize:
          type: integer
          description: Maximum page size.
          contentEncoding: int32
          examples:
          - 10
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V2LicenseDevice'
          description: Device IMEI list.
          examples:
          - - deviceId: '990003425730535'
              assignmentTime: 2017-11-29T16:03:42.000Z
            - deviceId: '990000473475989'
              assignmentTime: 2017-11-29T16:03:42.000Z
      description: Summary of license assignment.
      examples:
      - accountName: 0402196254-00001
        totalLicense: 5000
        assignedLicenses: 4319
        hasMoreData: true
        lastSeenDeviceId: '1000'
        maxPageSize: 10
        deviceList:
        - deviceId: '990003425730535'
          assignmentTime: 2017-11-29T16:03:42.000Z
        - deviceId: '990000473475989'
          assignmentTime: 2017-11-29T16:03:42.000Z
        - deviceId: '990000347475989'
          assignmentTime: 2017-11-29T16:03:42.000Z
        - deviceId: '990007303425535'
          assignmentTime: 2017-11-29T16:03:42.000Z
    V2LicenseDevice:
      title: V2LicenseDevice
      required:
      - deviceId
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '990003425730535'
        assignmentTime:
          type: string
          description: License assignment time.
          examples:
          - 2017-11-29T16:03:42.000Z
      description: Device IMEI list.
      examples:
      - deviceId: '990003425730535'
        assignmentTime: 2017-11-29T16:03:42.000Z
    V2LicensesAssignedRemovedResult:
      title: V2LicensesAssignedRemovedResult
      required:
      - accountName
      - licTotalCount
      - licUsedCount
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account name.
          examples:
          - 0242078689-00001
        licTotalCount:
          type: integer
          description: Total license count.
          contentEncoding: int32
          examples:
          - 1000
        licUsedCount:
          type: integer
          description: Assigned license count.
          contentEncoding: int32
          examples:
          - 502
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V2DeviceStatus'
          description: List of devices with id in IMEI.
          examples:
          - - deviceId: '990003425730524'
              status: Success
              resultReason: Success
            - deviceId: '990000473475967'
              status: Failure
              resultReason: Device does not exist.
      description: License assignment or removal confirmation.
      examples:
      - accountName: 0242078689-00001
        licTotalCount: 1000
        licUsedCount: 502
        deviceList:
        - deviceId: '990003425730524'
          status: Success
          resultReason: Success
        - deviceId: '990000473475967'
          status: Failure
          resultReason: Device does not exist.
    V2LicenseIMEI:
      title: V2LicenseIMEI
      required:
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account name.
          examples:
          - 0242078689-00001
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - '990003425730524'
            - '990000473475967'
      description: IMEIs of the devices to assign or remove licenses.
      examples:
      - deviceList:
        - '990003425730524'
        - '990000473475967'
    V2ListOfLicensesToRemoveRequest:
      title: V2ListOfLicensesToRemoveRequest
      required:
      - deviceList
      type: object
      properties:
        type:
          type: string
          description: List creation option.
          examples:
          - append
        count:
          type: integer
          description: The number of devices.
          contentEncoding: int32
          examples:
          - 2
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - '990003425730535'
            - '990000473475989'
      description: License cancellation candidate devices.
      examples:
      - type: append
        count: 2
        deviceList:
        - '990003425730535'
        - '990000473475989'
    V2ListOfLicensesToRemoveResult:
      title: V2ListOfLicensesToRemoveResult
      required:
      - count
      - deviceList
      type: object
      properties:
        count:
          type: integer
          description: The number of devices.
          contentEncoding: int32
          examples:
          - 2
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - '990003425730535'
            - '990000473475989'
      description: List of created license cancellation devices.
      examples:
      - count: 2
        deviceList:
        - '990003425730535'
        - '990000473475989'
    V2ListOfLicensesToRemove:
      title: V2ListOfLicensesToRemove
      required:
      - count
      - hasMoreData
      - updateTime
      - deviceList
      type: object
      properties:
        count:
          type: integer
          description: Cancellation candidate devices count.
          contentEncoding: int32
          examples:
          - 6
        hasMoreData:
          type: boolean
          description: Flag to indicat more devices.
          examples:
          - false
        updateTime:
          type: string
          description: Last update time.
          examples:
          - 2018-03-22 00:06:00.069 +0000 UTC
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - '990003425730535'
            - '990000473475989'
            - '990005733420535'
            - '990000347475989'
            - '990007303425535'
            - '990007590473489'
      description: A list of license cancellation candidate devices.
      examples:
      - count: 6
        hasMoreData: false
        updateTime: 2018-03-22 00:06:00.069 +0000 UTC
        deviceList:
        - '990003425730535'
        - '990000473475989'
        - '990005733420535'
        - '990000347475989'
        - '990007303425535'
        - '990007590473489'
    CampaignSoftwareUpgrade:
      title: CampaignSoftwareUpgrade
      required:
      - softwareName
      - softwareFrom
      - softwareTo
      - distributionType
      - startDate
      - endDate
      - deviceList
      type: object
      properties:
        campaignName:
          type: string
          description: Campaign name.
          examples:
          - FOTA_Verizon_Upgrade
        softwareName:
          type: string
          description: Software name to upgrade to.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        softwareFrom:
          type: string
          description: Old software name.
          examples:
          - FOTA_Verizon_Model-A_00To01_HF
        softwareTo:
          type: string
          description: New software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        distributionType:
          type: string
          description: OMA or HTTP.
          examples:
          - HTTP
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2020-08-21
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2020-08-21
        downloadAfterDate:
          type: string
          description: Specifies starting date client should download package. If null, client will download as soon as possible.
          contentEncoding: date
          examples:
          - 2020-08-21
        downloadTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V2TimeWindow'
          description: List of allowed download time windows.
          examples:
          - - startTime: 20
              endTime: 21
        installAfterDate:
          type: string
          description: Client will install package after date. If null, client will install as soon as possible.
          contentEncoding: date
          examples:
          - 2020-08-21
        installTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V2TimeWindow'
          description: List of allowed install time windows.
          examples:
          - - startTime: 22
              endTime: 23
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - '990013907835573'
            - '990013907884259'
      description: Software upgrade information.
      examples:
      - campaignName: FOTA_Verizon_Upgrade
        softwareName: FOTA_Verizon_Model-A_02To03_HF
        softwareFrom: FOTA_Verizon_Model-A_00To01_HF
        softwareTo: FOTA_Verizon_Model-A_02To03_HF
        distributionType: HTTP
        startDate: 2020-08-21
        endDate: 2020-08-22
        downloadAfterDate: 2020-08-21
        downloadTimeWindowList:
        - startTime: 20
          endTime: 21
        installAfterDate: 2020-08-21
        installTimeWindowList:
        - startTime: 22
          endTime: 23
        deviceList:
        - '990013907835573'
        - '990013907884259'
    CampaignSoftware:
      title: CampaignSoftware
      required:
      - id
      - accountName
      - softwareName
      - distributionType
      - make
      - model
      - softwareFrom
      - softwareTo
      - startDate
      - endDate
      - status
      type: object
      properties:
        id:
          type: string
          description: Upgrade identifier.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0402196254-00001
        campaignName:
          type: string
          description: Campaign name.
          examples:
          - FOTA_Verizon_Upgrade
        softwareName:
          type: string
          description: Software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        distributionType:
          type: string
          description: LWM2M, OMD-DM or HTTP.
          examples:
          - HTTP
        make:
          type: string
          description: Applicable make.
          examples:
          - Verizon
        model:
          type: string
          description: Applicable model.
          examples:
          - Model-A
        softwareFrom:
          type: string
          description: Old software name.
          examples:
          - FOTA_Verizon_Model-A_00To01_HF
        softwareTo:
          type: string
          description: New software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2020-08-21
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2020-08-21
        downloadAfterDate:
          type: string
          description: Specifies starting date client should download package. If null, client will download as soon as possible.
          contentEncoding: date
          examples:
          - 2020-08-21
        downloadTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V2TimeWindow'
          description: List of allowed download time windows.
          examples:
          - - startTime: 20
              endTime: 21
        installAfterDate:
          type: string
          description: Client will install package after date. If null, client will install as soon as possible.
          contentEncoding: date
          examples:
          - 2020-08-21
        installTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V2TimeWindow'
          description: List of allowed install time windows.
          examples:
          - - startTime: 22
              endTime: 23
        status:
          type: string
          description: Software upgrade status.
          examples:
          - CampaignRequestPending
      description: Software upgrade information.
      examples:
      - id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
        accountName: 0402196254-00001
        campaignName: FOTA_Verizon_Upgrade
        softwareName: FOTA_Verizon_Model-A_02To03_HF
        distributionType: HTTP
        make: Verizon
        model: Model-A
        softwareFrom: FOTA_Verizon_Model-A_00To01_HF
        softwareTo: FOTA_Verizon_Model-A_02To03_HF
        startDate: 2020-08-21
        endDate: 2020-08-22
        downloadAfterDate: 2020-08-21
        downloadTimeWindowList:
        - startTime: 20
          endTime: 21
        installAfterDate: 2020-08-21
        installTimeWindowList:
        - startTime: 22
          endTime: 23
        status: CampaignRequestPending
    V2ChangeCampaignDatesRequest:
      title: V2ChangeCampaignDatesRequest
      required:
      - startDate
      - endDate
      type: object
      properties:
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2020-08-21
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2020-08-21
        downloadAfterDate:
          type: string
          description: Specifies starting date client should download package. If null, client will download as soon as possible.
          contentEncoding: date
          examples:
          - 2020-08-21
        downloadTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V2TimeWindow'
          description: List of allowed download time windows. Removing of existing windows is not allowed.
          examples:
          - - startTime: 3
              endTime: 4
        installAfterDate:
          type: string
          description: Client will install package after date. If null, client will install as soon as possible.
          contentEncoding: date
          examples:
          - 2020-08-21
        installTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V2TimeWindow'
          description: List of allowed install time windows. Removing of existing windows is not allowed.
          examples:
          - - startTime: 5
              endTime: 6
      description: New dates and time windows.
      examples:
      - startDate: 2020-08-21
        endDate: 2020-08-22
        downloadAfterDate: 2020-08-21
        downloadTimeWindowList:
        - startTime: 3
          endTime: 4
        installAfterDate: 2020-08-21
        installTimeWindowList:
        - startTime: 5
          endTime: 6
    V2AddOrRemoveDeviceRequest:
      title: V2AddOrRemoveDeviceRequest
      required:
      - Type
      - deviceList
      type: object
      properties:
        Type:
          type: string
          description: Operation either 'append' or 'remove'.
          examples:
          - remove
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - '990013907884259'
            - '990013907835573'
            - '990013907833575'
      description: Add or remove device to existing software upgrade information.
      examples:
      - Type: remove
        deviceList:
        - '990013907884259'
        - '990013907835573'
        - '990013907833575'
    V2AddOrRemoveDeviceResult:
      title: V2AddOrRemoveDeviceResult
      required:
      - accountName
      - campaignId
      - requestId
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0402196254-00001
        campaignId:
          type: string
          description: Campaign identifier.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        requestId:
          type: string
          description: Request identifier.
      description: Add or remove devices from the existing software upgrade information.
    FotaV2CallbackRegistrationRequest:
      title: FotaV2CallbackRegistrationRequest
      type: object
      properties:
        url:
          type: string
          description: Callback URL for an subscribed service.
          examples:
          - https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
      description: Callback URL registration.
      examples:
      - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
    FotaV2CallbackRegistrationResult:
      title: FotaV2CallbackRegistrationResult
      type: object
      properties:
        url:
          type: string
          description: Callback URL.
          examples:
          - https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
      description: Callback listener URL.
      examples:
      - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
    CallbackSummary:
      title: CallbackSummary
      type: object
      properties:
        url:
          type: string
          description: Callback URL for an subscribed service.
          examples:
          - http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
      description: Registered callback information.
      examples:
      - url: http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
    SoftwarePackage:
      title: SoftwarePackage
      required:
      - softwareName
      - launchDate
      - model
      - make
      - distributionType
      - devicePlatformId
      type: object
      properties:
        softwareName:
          type: string
          description: Software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        launchDate:
          type: string
          description: Software launch date.
          contentEncoding: date
          examples:
          - 2020-08-31
        releaseNote:
          type: string
          description: Software release note reserved for future use.
        model:
          type: string
          description: Software applicable device model.
          examples:
          - Model-A
        make:
          type: string
          description: Software applicable device make.
          examples:
          - Verizon
        distributionType:
          type: string
          description: LWM2M, OMD-DM or HTTP.
          examples:
          - HTTP
        devicePlatformId:
          type: string
          description: The platform (Android, iOS, etc.) that the software can be applied to.
          examples:
          - IoT
      description: Software package information.
      examples:
      - softwareName: FOTA_Verizon_Model-A_02To03_HF
        launchDate: 2020-08-31
        releaseNote: ''
        model: Model-A
        make: Verizon
        distributionType: HTTP
        devicePlatformId: IoT
    DeviceSoftwareUpgrade:
      title: DeviceSoftwareUpgrade
      required:
      - deviceId
      - id
      - accountName
      - startDate
      - status
      - reason
      type: object
      properties:
        deviceId:
          type: string
          description: Device identifier.
          examples:
          - '990013907835573'
        id:
          type: string
          description: Upgrade identifier.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0402196254-00001
        softwareName:
          type: string
          description: Software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        startDate:
          type: string
          description: Software upgrade start date.
          contentEncoding: date
          examples:
          - 2018-03-05
        status:
          type: string
          description: Software upgrade status.
          examples:
          - UpgradeSuccess
        reason:
          type: string
          description: Software upgrade result reason.
          examples:
          - success
      description: Array of software upgrade objects with the specified status.
      examples:
      - deviceId: '990013907835573'
        id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
        accountName: 0402196254-00001
        softwareName: FOTA_Verizon_Model-A_02To03_HF
        startDate: 2018-03-05
        status: UpgradeSuccess
        reason: success
    V2CampaignHistory:
      title: V2CampaignHistory
      required:
      - hasMoreData
      - campaignList
      type: object
      properties:
        hasMoreData:
          type: boolean
          description: Has more report flag.
          examples:
          - true
        lastSeenCampaignId:
          type: string
          description: Campaign identifier.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        campaignList:
          type:
          - array
          - 'null'
          items:
            $ref: '#/components/schemas/V2CampaignMetaInfo'
          description: Software upgrade list.
          examples:
          - - accountName: 0402196254-00001
              id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
              campaignName: FOTA_Verizon_Upgrade
              softwareName: FOTA_Verizon_Model-A_02To03_HF
              distributionType: HTTP
              softwareFrom: FOTA_Verizon_Model-A_00To01_HF
              softwareTo: FOTA_Verizon_Model-A_02To03_HF
              make: Verizon
              model: Model-A
              startDate: 2020-08-21
              endDate: 2020-08-22
              downloadAfterDate: 2020-08-21
              downloadTimeWindowList:
              - startTime: 20
                endTime: 21
              installAfterDate: 2020-08-21
              installTimeWindowList:
              - startTime: 22
                endTime: 23
              status: CampaignEnded
      description: Campaign history details.
      examples:
      - hasMoreData: true
        lastSeenCampaignId: 60b5d639-ccdc-4db8-8824-069bd94c95bf
        campaignList:
        - accountName: 0402196254-00001
          id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
          campaignName: FOTA_Verizon_Upgrade
          softwareName: FOTA_Verizon_Model-A_02To03_HF
          distributionType: HTTP
          softwareFrom: FOTA_Verizon_Model-A_00To01_HF
          softwareTo: FOTA_Verizon_Model-A_02To03_HF
          make: Verizon
          model: Model-A
          startDate: 2020-08-21
          endDate: 2020-08-22
          downloadAfterDate: 2020-08-21
          downloadTimeWindowList:
          - startTime: 20
            endTime: 21
          installAfterDate: 2020-08-21
          installTimeWindowList:
          - startTime: 22
            endTime: 23
          status: CampaignEnded
    V2CampaignMetaInfo:
      title: V2CampaignMetaInfo
      required:
      - accountName
      - id
      - softwareName
      - distributionType
      - softwareFrom
      - softwareTo
      - make
      - model
      - startDate
      - endDate
      - status
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0402196254-00001
        id:
          type: string
          description: Campaign identifier.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        campaignName:
          type: string
          description: Campaign name.
          examples:
          - FOTA_Verizon_Upgrade
        softwareName:
          type: string
          description: Software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        distributionType:
          type: string
          description: LWM2M, OMD-DM or HTTP.
          examples:
          - HTTP
        softwareFrom:
          type: string
          description: Old software name.
          examples:
          - FOTA_Verizon_Model-A_00To01_HF
        softwareTo:
          type: string
          description: New software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        make:
          type: string
          description: Applicable make.
          examples:
          - Verizon
        model:
          type: string
          description: Applicable model.
          examples:
          - Model-A
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2020-08-21
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2020-08-21
        downloadAfterDate:
          type: string
          description: Specifies starting date client should download package. If null, client will download as soon as possible.
          contentEncoding: date
          examples:
          - 2020-08-21
        downloadTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V2TimeWindow'
          description: List of allowed download time windows.
          examples:
          - - startTime: 20
              endTime: 21
        installAfterDate:
          type: string
          description: Client will install package after date. If null, client will install as soon as possible.
          contentEncoding: date
          examples:
          - 2020-08-21
        installTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V2TimeWindow'
          description: List of allowed install time windows.
          examples:
          - - startTime: 22
              endTime: 23
        status:
          type: string
          description: Software upgrade status.
          examples:
          - CampaignEnded
      description: Campaign and campaign details.
      examples:
      - accountName: 0402196254-00001
        id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
        campaignName: FOTA_Verizon_Upgrade
        softwareName: FOTA_Verizon_Model-A_02To03_HF
        distributionType: HTTP
        softwareFrom: FOTA_Verizon_Model-A_00To01_HF
        softwareTo: FOTA_Verizon_Model-A_02To03_HF
        make: Verizon
        model: Model-A
        startDate: 2020-08-21
        endDate: 2020-08-22
        downloadAfterDate: 2020-08-21
        downloadTimeWindowList:
        - startTime: 20
          endTime: 21
        installAfterDate: 2020-08-21
        installTimeWindowList:
        - startTime: 22
          endTime: 23
        status: CampaignEnded
    V2CampaignDevice:
      title: V2CampaignDevice
      required:
      - hasMoreData
      - maxPageSize
      - deviceList
      type: object
      properties:
        totalDevice:
          type: integer
          description: Total device count.
          contentEncoding: int32
          examples:
          - 1148
        hasMoreData:
          type: boolean
          description: Has more report flag.
          examples:
          - true
        lastSeenDeviceId:
          type: string
          description: Device identifier.
          examples:
          - 15-digit IMEI
        maxPageSize:
          type: integer
          description: Maximum page size.
          contentEncoding: int32
          examples:
          - 1000
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V2DeviceStatus'
          description: List of devices with id in IMEI.
          examples:
          - - deviceId: 15-digit IMEI
              status: UpgradeSuccess
              resultReason: DownloadInstallSucceeded
            - deviceId: 15-digit IMEI
              status: UpgradeSuccess
              resultReason: DownloadInstallSucceeded
            - deviceId: 15-digit IMEI
              status: UpgradeSuccess
              resultReason: DownloadInstallSucceeded
      description: List of devices in a campaign.
      examples:
      - totalDevice: 1148
        hasMoreData: true
        lastSeenDeviceId: 15-digit IMEI
        maxPageSize: 1000
        deviceList:
        - deviceId: 15-digit IMEI
          status: UpgradeSuccess
          resultReason: DownloadInstallSucceeded
        - deviceId: 15-digit IMEI
          status: UpgradeSuccess
          resultReason: DownloadInstallSucceeded
        - deviceId: 15-digit IMEI
          status: UpgradeSuccess
          resultReason: DownloadInstallSucceeded
    V2AccountDeviceList:
      title: V2AccountDeviceList
      required:
      - accountName
      - hasMoreData
      - maxPageSize
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        hasMoreData:
          type: boolean
          description: Has more device flag?
          examples:
          - true
        lastSeenDeviceId:
          type: string
          description: Last seen device identifier.
          examples:
          - 15-digit IMEI
        maxPageSize:
          type: integer
          description: Maximum page size.
          contentEncoding: int32
          examples:
          - 1000
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V2AccountDevice'
          description: Account device list.
          examples:
          - - deviceId: 15-digit IMEI
              mdn: 10-digit MDN
              model: Model-A
              make: Verizon
              fotaEligible: true
              appFotaEligible: true
              licenseAssigned: true
              distributionType: HTTP
              softwareList:
              - name: FOTA_Verizon_Model-A_02To03_HF
                version: '3'
                upgradeTime: 2020-09-08T19:00:51.541Z
              createTime: 2021-06-03 00:03:56.079 +0000 UTC
              upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
              updateTime: 2021-06-03 00:03:56.079 +0000 UTC
              refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
            - deviceId: 15-digit IMEI
              mdn: 10-digit MDN
              model: Model-A
              make: Verizon
              fotaEligible: true
              appFotaEligible: true
              licenseAssigned: true
              distributionType: HTTP
              softwareList:
              - name: FOTA_Verizon_Model-A_02To03_HF
                version: '3'
                upgradeTime: 2020-09-08T19:00:51.541Z
              createTime: 2021-06-03 00:03:56.079 +0000 UTC
              upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
              updateTime: 2021-06-03 00:03:56.079 +0000 UTC
              refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
            - deviceId: 15-digit IMEI
              mdn: 10-digit MDN
              model: Model-A
              make: Verizon
              fotaEligible: true
              appFotaEligible: true
              licenseAssigned: true
              distributionType: HTTP
              softwareList:
              - name: FOTA_Verizon_Model-A_02To03_HF
                version: '3'
                upgradeTime: 2020-09-08T19:00:51.541Z
              createTime: 2021-06-03 00:03:56.079 +0000 UTC
              upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
              updateTime: 2021-06-03 00:03:56.079 +0000 UTC
              refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
      description: List of device information for an account.
      examples:
      - accountName: 0000123456-00001
        hasMoreData: true
        lastSeenDeviceId: 15-digit IMEI
        maxPageSize: 1000
        deviceList:
        - deviceId: 15-digit IMEI
          mdn: 10-digit MDN
          model: Model-A
          make: Verizon
          fotaEligible: true
          appFotaEligible: true
          licenseAssigned: true
          distributionType: HTTP
          softwareList:
          - name: FOTA_Verizon_Model-A_02To03_HF
            version: '3'
            upgradeTime: 2020-09-08T19:00:51.541Z
          createTime: 2021-06-03 00:03:56.079 +0000 UTC
          upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
          updateTime: 2021-06-03 00:03:56.079 +0000 UTC
          refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
        - deviceId: 15-digit IMEI
          mdn: 10-digit MDN
          model: Model-A
          make: Verizon
          fotaEligible: true
          appFotaEligible: true
          licenseAssigned: true
          distributionType: HTTP
          softwareList:
          - name: FOTA_Verizon_Model-A_02To03_HF
            version: '3'
            upgradeTime: 2020-09-08T19:00:51.541Z
          createTime: 2021-06-03 00:03:56.079 +0000 UTC
          upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
          updateTime: 2021-06-03 00:03:56.079 +0000 UTC
          refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
        - deviceId: 15-digit IMEI
          mdn: 10-digit MDN
          model: Model-A
          make: Verizon
          fotaEligible: true
          appFotaEligible: true
          licenseAssigned: true
          distributionType: HTTP
          softwareList:
          - name: FOTA_Verizon_Model-A_02To03_HF
            version: '3'
            upgradeTime: 2020-09-08T19:00:51.541Z
          createTime: 2021-06-03 00:03:56.079 +0000 UTC
          upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
          updateTime: 2021-06-03 00:03:56.079 +0000 UTC
          refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
    V2AccountDevice:
      title: V2AccountDevice
      required:
      - deviceId
      - mdn
      - model
      - make
      - fotaEligible
      - appFotaEligible
      - licenseAssigned
      - distributionType
      - softwareList
      type: object
      properties:
        deviceId:
          type: string
          description: Device identifier.
          examples:
          - 15-digit IMEI
        mdn:
          type: string
          description: MDN.
          examples:
          - 10-digit MDN
        model:
          type: string
          description: Device model.
          examples:
          - Model-A
        make:
          type: string
          description: Device make.
          examples:
          - Verizon
        fotaEligible:
          type: boolean
          description: Device FOTA capable.
          examples:
          - true
        appFotaEligible:
          type: boolean
          description: Device application FOTA capable.
          examples:
          - true
        licenseAssigned:
          type: boolean
          description: License assigned device.
          examples:
          - true
        distributionType:
          type: string
          description: LWM2M, OMD-DM or HTTP.
          examples:
          - HTTP
        softwareList:
          type: array
          items:
            $ref: '#/components/schemas/V2SoftwareInfo'
          description: List of sofware.
          examples:
          - - name: FOTA_Verizon_Model-A_02To03_HF
              version: '3'
              upgradeTime: 2020-09-08T19:00:51.541Z
        createTime:
          type: string
          description: The date and time of when the device is created.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        upgradeTime:
          type: string
          description: The date and time of when the device firmware or software is upgraded.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        updateTime:
          type: string
          description: The date and time of when the device is updated.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        refreshTime:
          type: string
          description: The date and time of when the device is refreshed.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
      description: Account device information.
      examples:
      - deviceId: 15-digit IMEI
        mdn: 10-digit MDN
        model: Model-A
        make: Verizon
        fotaEligible: true
        appFotaEligible: true
        licenseAssigned: true
        distributionType: HTTP
        softwareList:
        - name: FOTA_Verizon_Model-A_02To03_HF
          version: '3'
          upgradeTime: 2020-09-08T19:00:51.541Z
        createTime: 2021-06-03 00:03:56.079 +0000 UTC
        upgradeTime: 2021-06-03 00:03:56.079 +0000 UTC
        updateTime: 2021-06-03 00:03:56.079 +0000 UTC
        refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
    V2SoftwareInfo:
      title: V2SoftwareInfo
      required:
      - name
      - version
      - upgradeTime
      type: object
      properties:
        name:
          type: string
          description: Software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        version:
          type: string
          description: Software version.
          examples:
          - '3'
        upgradeTime:
          type: string
          description: Upgrade time.
          examples:
          - 2020-09-08T19:00:51.541Z
      description: Software information.
      examples:
      - name: FOTA_Verizon_Model-A_02To03_HF
        version: '3'
        upgradeTime: 2020-09-08T19:00:51.541Z
    V2TimeWindow:
      title: V2TimeWindow
      required:
      - startTime
      - endTime
      type: object
      properties:
        startTime:
          type: integer
          description: Start hour in range [0..23], current hour >= startTime.
          contentEncoding: int32
          examples:
          - 20
        endTime:
          type: integer
          description: End hour in range [1..24], current hour < endTime.
          contentEncoding: int32
          examples:
          - 21
      description: Allowed start and end time windows.
      examples:
      - startTime: 20
        endTime: 21
    DeviceLog:
      title: DeviceLog
      required:
      - deviceId
      - logTime
      - logType
      - eventLog
      - binaryLogFileBase64
      - binaryLogFilename
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '990013907835573'
        logTime:
          type: string
          description: Time of log.
          contentEncoding: date-time
          examples:
          - 2020-10-22T19:29:50.901Z
        logType:
          type: string
          description: Log type (one of SoftwareUpdate, Event, UserNotification, AgentService, Wireless, WirelessWeb, MobileBroadbandModem, WindowsMDM).
        eventLog:
          type: string
          description: Event log.
        binaryLogFileBase64:
          type: string
          description: Base64-encoded contents of binary log file.
        binaryLogFilename:
          type: string
          description: File name of binary log file.
      description: Device logging information.
    V2DeviceStatus:
      title: V2DeviceStatus
      required:
      - deviceId
      - status
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '990000473475967'
        status:
          type: string
          description: Success or failure.
          examples:
          - Failure
        resultReason:
          type: string
          description: Result reason.
          examples:
          - Device does not exist.
      description: Device with id in IMEI.
      examples:
      - deviceId: '990000473475967'
        status: Failure
        resultReason: Device does not exist.
    DeviceLoggingRequest:
      title: DeviceLoggingRequest
      required:
      - deviceIds
      type: object
      properties:
        deviceIds:
          type: array
          items:
            type: string
          description: List of device IMEI identifiers.
          examples:
          - - '990013907835573'
            - '991124018926684'
            - '992234129057795'
            - '998891785613351'
            - '990013907835573'
      description: Device logging information.
      examples:
      - deviceIds:
        - '990013907835573'
        - '991124018926684'
        - '992234129057795'
        - '998891785613351'
        - '990013907835573'
    DeviceLoggingStatus:
      title: DeviceLoggingStatus
      required:
      - deviceId
      - expiryDate
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '990013907835573'
        expiryDate:
          type: string
          description: The date when device logging expires.
          contentEncoding: date
          examples:
          - 2020-10-19
      description: Device logging status information.
      examples:
      - deviceId: '990013907835573'
        expiryDate: 2020-10-19
    CheckInHistoryItem:
      title: CheckInHistoryItem
      required:
      - deviceId
      - clientType
      - result
      - failureType
      - timeCompleted
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - '990013907835573'
        clientType:
          type: string
          description: Type of client.
        result:
          type: string
        failureType:
          type: string
        timeCompleted:
          type: string
          contentEncoding: date-time
          examples:
          - 2020-10-22T19:35:07.753Z
      description: Check-in history for a device.
    FotaV2SuccessResult:
      title: FotaV2SuccessResult
      required:
      - success
      type: object
      properties:
        success:
          type: boolean
          examples:
          - true
      description: Response to a successful request.
      examples:
      - success: true
    FotaV2Result:
      title: FotaV2Result
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
          description: Code of the error.
          examples:
          - error code string
        errorMessage:
          type: string
          description: Details of the error.
          examples:
          - error message string
      description: Response for error cases.
      examples:
      - errorCode: error code string
        errorMessage: error message string
    UploadConfigurationFilesResponse:
      title: UploadConfigurationFilesResponse
      type: object
      properties:
        fileName:
          type: string
          description: The name of the file you are upgrading to.
          examples:
          - hello-world.txt
        fileVersion:
          type: string
          description: The version of the file you are upgrading to.
          examples:
          - '1.0'
        launchDate:
          type: string
          description: Software launch date.
          contentEncoding: date
          examples:
          - 2020-08-31
        releaseNote:
          type: string
          description: Software release note.
          examples:
          - note
        model:
          type: string
          description: Software applicable device model.
          examples:
          - Model-A
        make:
          type: string
          description: Software applicable device make.
          examples:
          - Verizon
        distributionType:
          type: string
          description: LWM2M, OMD-DM or HTTP.
          examples:
          - HTTP
        devicePlatformId:
          type: string
          description: The platform (Android, iOS, etc.) that the software can be applied to.
          examples:
          - IoT
        localTargetPath:
          type: string
          description: Local target path on the device.
          examples:
          - IoT
    RetrievesAvailableFilesResponseList:
      title: RetrievesAvailableFilesResponseList
      type: object
      properties:
        AvailableFilesResponse:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/RetrievesAvailableFilesResponse'
          description: ''
    RetrievesAvailableFilesResponse:
      title: RetrievesAvailableFilesResponse
      type: object
      properties:
        fileName:
          type: string
          description: ThingSpace-generated name of the file. You will use this name when listing or scheduling campaigns for the file.
          examples:
          - configfile-Verizon_VZW1_hello-world.txt
        fileVersion:
          type: string
          description: Version of the file.
          examples:
          - '1.0'
        releaseNote:
          type: string
          description: Software release note.
          examples:
          - Hello world initial file
        make:
          type: string
          description: The software-applicable device make.
          examples:
          - Verizon
        model:
          type: string
          description: The software-applicable device model.
          examples:
          - VZW1
        localTargetPath:
          type: string
          description: Local target path on the device.
          examples:
          - /VZWFOTA/hello-world.txt
        distributionType:
          type: string
          description: Valid values
          examples:
          - HTTP
        devicePlatformId:
          type: string
          description: The platform (Android, iOS, etc.,) that the software can be applied to.
          examples:
          - IoT
    UploadAndScheduleFileRequest:
      title: UploadAndScheduleFileRequest
      type: object
      properties:
        campaignName:
          type: string
          description: The campaign name.
          examples:
          - FOTA_Verizon_Upgrade
        fileName:
          type: string
          description: The name of the file you are upgrading to.
          examples:
          - configfile-Verizon_VZW1_hello-world.txt
        fileVersion:
          type: string
          description: The version of the file you are upgrading to.
          examples:
          - '1.0'
        distributionType:
          type: string
          description: Valid values
          examples:
          - HTTP
        startDate:
          type: string
          description: Campaign start date.
          examples:
          - 2021-02-08
        endDate:
          type: string
          description: Campaign end date.
          examples:
          - 2021-02-08
        downloadAfterDate:
          type: string
          description: Specifies the starting date the client should download the package. If null, client downloads as soon as possible.
          examples:
          - 2021-02-08
        downloadTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/downloadTimeWindow'
          description: List of allowed download time windows.
        installAfterDate:
          type: string
          description: The date after which you install the package. If null, install as soon as possible.
        installTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/downloadTimeWindow'
          description: List of allowed install time windows.
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
    downloadTimeWindow:
      title: downloadTimeWindow
      type: object
      properties:
        startTime:
          type: string
          description: Device IMEI list.
          examples:
          - '0'
        endTime:
          type: string
          description: Device IMEI list.
          examples:
          - '0'
    UploadAndScheduleFileResponse:
      title: UploadAndScheduleFileResponse
      type: object
      properties:
        id:
          type: string
          description: Updgrade identifier.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        accountName:
          type: string
          description: Account identifer.
          examples:
          - 0242078689-00001
        campaignName:
          type: string
          description: The campaign name.
          examples:
          - FOTA_Verizon_Upgrade
        softwareName:
          type: string
          description: Software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        softwareFrom:
          type: string
          description: Old software name.
          examples:
          - FOTA_Verizon_Model-A_00To01_HF
        softwareTo:
          type: string
          description: New software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        fileName:
          type: string
          description: The name of the file you are upgrading to.
          examples:
          - configfile-Verizon_VZW1_hello-world.txt
        fileVersion:
          type: string
          description: The version of the file you are upgrading to.
          examples:
          - '1.0'
        distributionType:
          type: string
          description: Valid values
          examples:
          - HTTP
        make:
          type: string
          description: Applicable make.
          examples:
          - Verizon
        model:
          type: string
          description: Applicable model.
          examples:
          - Model-A
        startDate:
          type: string
          description: Campaign start date.
          examples:
          - 2021-02-08
        endDate:
          type: string
          description: Campaign end date.
          examples:
          - 2021-02-08
        downloadAfterDate:
          type: string
          description: Specifies the starting date the client should download the package. If null, client downloads as soon as possible.
          examples:
          - 2021-02-08
        downloadTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/downloadTimeWindow'
          description: List of allowed download time windows.
        installAfterDate:
          type: string
          description: The date after which you install the package. If null, install as soon as possible.
        installTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/downloadTimeWindow'
          description: List of allowed install time windows.
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
        status:
          type: string
          description: Software update status.
          examples:
          - pending
    SchedulesSoftwareUpgradeRequest:
      title: SchedulesSoftwareUpgradeRequest
      type: object
      properties:
        campaignName:
          type: string
          description: The campaign name.
          examples:
          - FOTA_Verizon_Upgrade
        softwareName:
          type: string
          description: Software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        softwareFrom:
          type: string
          description: Old software name.
          examples:
          - FOTA_Verizon_Model-A_00To01_HF
        softwareTo:
          type: string
          description: New software name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        distributionType:
          type: string
          description: Valid values
          examples:
          - HTTP
        startDate:
          type: string
          description: Campaign start date.
          examples:
          - 2021-02-08
        endDate:
          type: string
          description: Campaign end date.
          examples:
          - 2021-02-08
        downloadAfterDate:
          type: string
          description: Specifies the starting date the client should download the package. If null, client downloads as soon as possible.
          examples:
          - 2021-02-08
        downloadTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/downloadTimeWindow'
          description: List of allowed download time windows.
        installAfterDate:
          type: string
          description: The date after which you install the package. If null, install as soon as possible.
        installTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/downloadTimeWindow'
          description: List of allowed install time windows.
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
    CampaignStatus:
      title: CampaignStatus
      enum:
      - CampaignRequestPending
      - CampaignRequestFailed
      - CampaignRequestQueued
      - CampaignCancelled
      - CampaignAborted
      - CampaignFailed
      - CampaignScheduled
      - CampaignEnded
      type: string
      description: Current status of the campaign.
      examples:
      - CampaignRequestPending
    CampaignMetaInfoProtocol:
      title: CampaignMetaInfoProtocol
      enum:
      - LWM2M
      - OMD-DM
      type: string
      description: 'Firmware protocol. Valid values include: LWM2M, OMD-DM.'
      examples:
      - LWM2M
    DevicesProtocol:
      title: DevicesProtocol
      enum:
      - LWM2M
      - OMDADM
      - HTTP
      type: string
      description: 'Firmware protocol. Valid values include: LWM2M, OMADM, HTTP.'
      examples:
      - LWM2M
    FirmwareProtocol:
      title: FirmwareProtocol
      enum:
      - LWM2M
      - OMD-DM
      - all
      type: string
      description: 'Firmware protocol. Valid values include: LWM2M, OMD-DM, all.'
      examples:
      - LWM2M
    V3DeviceListItem:
      title: V3DeviceListItem
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - 15-digit IMEI
        status:
          type: string
          description: Success or failure.
          examples:
          - AddDeviceSucceed
        Reason:
          type: string
          description: Result reason.
          examples:
          - Device added Successfully
      description: Device changed.
      examples:
      - deviceId: 15-digit IMEI
        status: AddDeviceSucceed
        Reason: Device added Successfully
    V3AddOrRemoveDeviceRequest:
      title: V3AddOrRemoveDeviceRequest
      required:
      - Type
      - deviceList
      type: object
      properties:
        Type:
          type: string
          description: Operation either 'append' or 'remove'
          examples:
          - remove
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - 15-digit IMEI
      description: Devices to add or remove from existing software upgrade information.
      examples:
      - Type: remove
        deviceList:
        - 15-digit IMEI
    V3AddOrRemoveDeviceResult:
      title: V3AddOrRemoveDeviceResult
      required:
      - accountName
      - campaignId
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0000123456-00001
        campaignId:
          type: string
          description: Campaign identifier.
          examples:
          - f858b8c4-2153-11ec-8c44-aeb16d1aa652
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V3DeviceListItem'
          description: Array of devices changed.
          examples:
          - - deviceId: 15-digit IMEI
              status: AddDeviceSucceed
              Reason: Device added Successfully
      description: Add or remove devices to existing upgrade information.
      examples:
      - accountName: 0000123456-00001
        campaignId: f858b8c4-2153-11ec-8c44-aeb16d1aa652
        deviceList:
        - deviceId: 15-digit IMEI
          status: AddDeviceSucceed
          Reason: Device added Successfully
    V3ChangeCampaignDatesRequest:
      title: V3ChangeCampaignDatesRequest
      required:
      - startDate
      - endDate
      type: object
      properties:
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2022-02-23
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2022-02-24
        campaignTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V3TimeWindow'
          description: List of allowed campaign time windows.
          examples:
          - - startTime: 14
              endTime: 18
      description: Campaign dates and time windows.
      examples:
      - startDate: 2022-02-23
        endDate: 2022-02-24
        campaignTimeWindowList:
        - startTime: 14
          endTime: 18
    V3TimeWindow:
      title: V3TimeWindow
      required:
      - startTime
      - endTime
      type: object
      properties:
        startTime:
          type: integer
          description: Start hour in range [0..23], current hour >= startTime.
          contentEncoding: int32
          examples:
          - 18
        endTime:
          type: integer
          description: End hour in range [1..24], current hour < endTime.
          contentEncoding: int32
          examples:
          - 22
      description: Time window.
      examples:
      - startTime: 18
        endTime: 22
    FotaV3Subscription:
      title: FotaV3Subscription
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0000123456-000001
        purchaseType:
          type: string
          description: Subscription models used by the account.
          examples:
          - TS-HFOTA-EVNT,TS-HFOTA-MRC
        licenseCount:
          type: integer
          description: Number of monthly licenses in an MRC subscription.
          contentEncoding: int32
          examples:
          - 500
        licenseUsedCount:
          type: integer
          description: Number of licenses currently assigned to devices.
          contentEncoding: int32
          examples:
          - 400
        updateTime:
          type: string
          description: The date and time of when the subscription was last updated.
          examples:
          - 2020-09-17T21:11:32.170
      description: Information for licenses applied to devices.
      examples:
      - accountName: 0000123456-000001
        purchaseType: TS-HFOTA-EVNT,TS-HFOTA-MRC
        licenseCount: 500
        licenseUsedCount: 400
        updateTime: 2020-09-17T21:11:32.170Z
    V3LicenseSummary:
      title: V3LicenseSummary
      required:
      - accountName
      - assignedLicenses
      - hasMoreData
      - maxPageSize
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0000123456-00001
        totalLicenses:
          type: integer
          description: Total FOTA license count.
          contentEncoding: int32
          examples:
          - 5000
        assignedLicenses:
          type: integer
          description: Assigned FOTA license count.
          contentEncoding: int32
          examples:
          - 5000
        hasMoreData:
          type: boolean
          description: True if there are more devices to retrieve.
          examples:
          - true
        lastSeenDeviceId:
          type: string
          description: Last seen device identifier.
          examples:
          - '1000'
        maxPageSize:
          type: integer
          description: Maximum page size.
          contentEncoding: int32
          examples:
          - 1000
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V3LicenseDevice'
          description: Device IMEI list.
          examples:
          - - deviceId: 15-digit IMEI
              assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
            - deviceId: 15-digit IMEI
              assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
      description: Information for FOTA licenses assigned to devices.
      examples:
      - accountName: 0000123456-00001
        totalLicenses: 5000
        assignedLicenses: 4319
        hasMoreData: true
        lastSeenDeviceId: '1000'
        maxPageSize: 1000
        deviceList:
        - deviceId: 15-digit IMEI
          assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
        - deviceId: 15-digit IMEI
          assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
    V3LicenseDevice:
      title: V3LicenseDevice
      required:
      - deviceId
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - 15-digit IMEI
        assignmentTime:
          type: string
          description: License assignment time.
          examples:
          - 2017-11-29 20:15:42.738 +0000 UTC
      description: Device IMEI.
      examples:
      - deviceId: 15-digit IMEI
        assignmentTime: 2017-11-29 20:15:42.738 +0000 UTC
    V3LicenseAssignedRemovedResult:
      title: V3LicenseAssignedRemovedResult
      required:
      - accountName
      - licCount
      - licUsedCount
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        licCount:
          type: integer
          description: Total license count.
          contentEncoding: int32
          examples:
          - 1000
        licUsedCount:
          type: integer
          description: Assigned license count.
          contentEncoding: int32
          examples:
          - 2
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V3DeviceStatus'
          description: List of devices with id in IMEI.
          examples:
          - - deviceId: 15-digit IMEI
              status: UpgradePending
              resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
              updatedTime: 2022-08-05T21:05:27.129Z
              recentAttemptTime: 2022-10-05T21:05:01.19Z
              nextAttemptTime: 2022-10-06T18:35:00Z
      description: License assignment/removal response.
      examples:
      - accountName: 0000123456-00001
        licUsedCount: 2
        licCount: 1000
        deviceList:
        - deviceId: 15-digit IMEI
          status: UpgradePending
          resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
          updatedTime: 2022-08-05T21:05:27.129Z
          recentAttemptTime: 2022-10-05T21:05:01.19Z
          nextAttemptTime: 2022-10-06T18:35:00Z
    V3LicenseIMEI:
      title: V3LicenseIMEI
      required:
      - deviceList
      type: object
      properties:
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - 15-digit IMEI
            - 15-digit IMEI
      description: List of devices.
      examples:
      - deviceList:
        - 15-digit IMEI
        - 15-digit IMEI
    CampaignFirmwareUpgrade:
      title: CampaignFirmwareUpgrade
      required:
      - firmwareName
      - firmwareFrom
      - firmwareTo
      - protocol
      - startDate
      - endDate
      - deviceList
      type: object
      properties:
        campaignName:
          type: string
          description: Campaign name.
          examples:
          - Smart FOTA - test 4
        firmwareName:
          type: string
          description: Firmware name to upgrade to.
          examples:
          - SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
        firmwareFrom:
          type: string
          description: Old firmware version.
          examples:
          - SR1.2.0.0-10512
        firmwareTo:
          type: string
          description: New firmware version.
          examples:
          - SR1.2.0.0-10657
        protocol:
          type: string
          description: 'Valid values include: LWM2M, OMA and HTTP.'
          examples:
          - LWM2M
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2021-09-29
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2021-10-01
        campaignTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V3TimeWindow'
          description: List of allowed campaign time windows.
          examples:
          - - startTime: 18
              endTime: 22
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - 15-digit IMEI
      description: Firmware upgrade for devices.
      examples:
      - campaignName: Smart FOTA - test 4
        firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
        firmwareFrom: SR1.2.0.0-10512
        firmwareTo: SR1.2.0.0-10657
        protocol: LWM2M
        startDate: 2021-09-29
        endDate: 2021-10-01
        campaignTimeWindowList:
        - startTime: 18
          endTime: 22
        deviceList:
        - 15-digit IMEI
    FirmwareCampaign:
      title: FirmwareCampaign
      required:
      - id
      - accountName
      - firmwareFrom
      - firmwareTo
      - protocol
      - make
      - model
      - startDate
      - endDate
      - status
      type: object
      properties:
        id:
          type: string
          description: Upgrade identifier.
          examples:
          - f858b8c4-2153-11ec-8c44-aeb16d1aa652
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0000123456-00001
        campaignName:
          type: string
          description: Campaign name.
          examples:
          - Smart FOTA - test 4
        firmwareName:
          type: string
          description: Firmware name (for firmware upgrade only).
          examples:
          - SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
        firmwareFrom:
          type: string
          description: Old firmware version (for firmware upgrade only).
          examples:
          - SR1.2.0.0-10512
        firmwareTo:
          type: string
          description: New firmware version (for firmware upgrade only).
          examples:
          - SR1.2.0.0-10657
        protocol:
          type: string
          description: 'Available values: LWM2M.'
          examples:
          - LWM2M
        make:
          type: string
          examples:
          - SEQUANS Communications
        model:
          type: string
          examples:
          - GM01Q
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2021-09-29
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2021-10-01
        campaignTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V3TimeWindow'
          description: List of allowed campaign time windows.
          examples:
          - - startTime: 18
              endTime: 22
        status:
          type: string
          description: Campaign status.
          examples:
          - CampaignRequestPending
      description: Firmware upgrade information.
      examples:
      - id: f858b8c4-2153-11ec-8c44-aeb16d1aa652
        accountName: 0000123456-00001
        campaignName: Smart FOTA - test 4
        firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
        protocol: LWM2M
        firmwareFrom: SR1.2.0.0-10512
        firmwareTo: SR1.2.0.0-10657
        make: SEQUANS Communications
        model: GM01Q
        status: CampaignRequestPending
        startDate: 2021-09-29
        endDate: 2021-10-01
        campaignTimeWindowList:
        - startTime: 18
          endTime: 22
    DeviceFirmwareUpgrade:
      title: DeviceFirmwareUpgrade
      required:
      - deviceId
      - campaignId
      - accountName
      - startDate
      - status
      - reason
      type: object
      properties:
        deviceId:
          type: string
          description: Device identifier.
          examples:
          - 15-digit IMEI
        campaignId:
          type: string
          description: Campaign identifier.
          examples:
          - 252d7ffc-7e35-11ec-931d-76f56843c393
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0000123456-00001
        firmwareName:
          type: string
          description: Firmware name.
          examples:
          - SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512
        firmwareFrom:
          type: string
          description: Old firmware version.
          examples:
          - SR1.2.0.0-10657
        firmwareTo:
          type: string
          description: New firmware version.
          examples:
          - SR1.2.0.0-10512
        startDate:
          type: string
          description: Firmware upgrade start date.
          contentEncoding: date
          examples:
          - 2022-01-25
        status:
          type: string
          description: Firmware upgrade status.
          examples:
          - UpgradeSuccess
        reason:
          type: string
          description: Software upgrade result reason.
          examples:
          - Upgrade completed successfully
        reportUpdatedTime:
          type: string
          description: Report updated time.
          examples:
          - 2022-01-26 03:45:01.608 +0000 UTC
      description: Firmware upgrades information.
      examples:
      - deviceId: 15-digit IMEI
        campaignId: 252d7ffc-7e35-11ec-931d-76f56843c393
        accountName: 0000123456-00001
        firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10657_SR1.2.0.0-10512
        firmwareFrom: SR1.2.0.0-10657
        firmwareTo: SR1.2.0.0-10512
        startDate: 2022-01-25
        reportUpdatedTime: 2022-01-26 03:45:01.608 +0000 UTC
        status: UpgradeSuccess
        reason: Upgrade completed successfully
    DeviceIMEI:
      title: DeviceIMEI
      required:
      - deviceList
      type: object
      properties:
        deviceList:
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - 15-digit IMEI
      description: Device IMEI list.
      examples:
      - deviceList:
        - 15-digit IMEI
    FirmwareIMEI:
      title: FirmwareIMEI
      required:
      - deviceList
      type: object
      properties:
        deviceList:
          maxItems: 1000
          type: array
          items:
            type: string
          description: Device IMEI list.
          examples:
          - - 15-digit IMEI
      description: A list of IMEIs for devices to be synchronized between ThingSpace and the FOTA server.
      examples:
      - deviceList:
        - 15-digit IMEI
    DeviceFirmwareList:
      title: DeviceFirmwareList
      required:
      - accountName
      type: object
      properties:
        accountName:
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        deviceFirmwarVersionList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceFirmwareVersion'
          description: List of device & firmware.
          examples:
          - - deviceId: 15-digit IMEI
              status: FirmwareVersionUpdateSuccess
              firmwareVersion: SR1.2.0.0-10657
      description: Device Firmware Information.
      examples:
      - accountName: 0000123456-00001
        deviceFirmwarVersionList:
        - deviceId: 15-digit IMEI
          status: FirmwareVersionUpdateSuccess
          firmwareVersion: SR1.2.0.0-10657
    DeviceFirmwareVersion:
      title: DeviceFirmwareVersion
      required:
      - deviceId
      - firmwareVersion
      type: object
      properties:
        status:
          type: string
          examples:
          - FirmwareVersionUpdateSuccess
        reason:
          type: string
          examples:
          - Upgrade completed successfully
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - 15-digit IMEI
        firmwareVersion:
          type: string
          description: Device Firmware Version.
          examples:
          - SR1.2.0.0-10657
        firmwareVersionUpdateTime:
          type: string
          contentEncoding: date-time
          examples:
          - 2012-04-23T18:25:43.511Z
      description: Device and firmware information.
      examples:
      - deviceId: 15-digit IMEI
        status: FirmwareVersionUpdateSuccess
        firmwareVersion: SR1.2.0.0-10657
    V3CampaignHistory:
      title: V3CampaignHistory
      required:
      - hasMoreData
      - campaignList
      type: object
      properties:
        hasMoreData:
          type: boolean
          description: Has more report flag?
          examples:
          - true
        lastSeenCampaignId:
          type: string
          description: Campaign identifier.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        campaignList:
          type:
          - array
          - 'null'
          items:
            $ref: '#/components/schemas/V3CampaignMetaInfo'
          description: Firmware upgrade list.
          examples:
          - - accountName: 0000123456-00001
              id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
              campaignName: FOTA_Verizon_Upgrade
              firmwareName: FOTA_Verizon_Model-A_02To03_HF
              firmwareFrom: FOTA_Verizon_Model-A_00To01_HF
              firmwareTo: FOTA_Verizon_Model-A_02To03_HF
              make: Verizon
              model: Model-A
              status: CampaignEnded
              startDate: 2020-08-21
              endDate: 2020-08-22
              campaignTimeWindowList:
              - startTime: 20
                endTime: 21
      description: Campaign history.
      examples:
      - hasMoreData: true
        lastSeenCampaignId: 60b5d639-ccdc-4db8-8824-069bd94c95bf
        campaignList:
        - accountName: 0000123456-00001
          id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
          campaignName: FOTA_Verizon_Upgrade
          make: Verizon
          model: Model-A
          status: CampaignEnded
          startDate: 2020-08-21
          endDate: 2020-08-22
          campaignTimeWindowList:
          - startTime: 20
            endTime: 21
    V3CampaignMetaInfo:
      title: V3CampaignMetaInfo
      required:
      - accountName
      - id
      - make
      - model
      - startDate
      - endDate
      - status
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0000123456-00001
        id:
          type: string
          description: Campaign identifier.
          examples:
          - 60b5d639-ccdc-4db8-8824-069bd94c95bf
        campaignName:
          type: string
          description: Campaign name.
          examples:
          - FOTA_Verizon_Upgrade
        firmwareName:
          type: string
          description: Firmware name.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        firmwareFrom:
          type: string
          description: Old firmware version.
          examples:
          - FOTA_Verizon_Model-A_00To01_HF
        firmwareTo:
          type: string
          description: New software version.
          examples:
          - FOTA_Verizon_Model-A_02To03_HF
        protocol:
          allOf:
          - $ref: '#/components/schemas/CampaignMetaInfoProtocol'
          - description: 'Firmware protocol. Valid values include: LWM2M, OMD-DM.'
            examples:
            - LWM2M
        make:
          type: string
          description: Device make.
          examples:
          - Verizon
        model:
          type: string
          description: Device model.
          examples:
          - Model-A
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2020-08-21
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2020-08-22
        campaignTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V3TimeWindow'
          description: List of allowed campaign time windows.
          examples:
          - - startTime: 20
              endTime: 21
        status:
          type: string
          description: Firmware upgrade status.
          examples:
          - CampaignEnded
      description: Campaign and campaign details.
      examples:
      - accountName: 0000123456-00001
        id: 60b5d639-ccdc-4db8-8824-069bd94c95bf
        campaignName: FOTA_Verizon_Upgrade
        firmwareName: FOTA_Verizon_Model-A_02To03_HF
        firmwareFrom: FOTA_Verizon_Model-A_00To01_HF
        firmwareTo: FOTA_Verizon_Model-A_02To03_HF
        make: Verizon
        model: Model-A
        status: CampaignEnded
        startDate: 2020-08-21
        endDate: 2020-08-22
        campaignTimeWindowList:
        - startTime: 20
          endTime: 21
    DeviceListResult:
      title: DeviceListResult
      required:
      - accountName
      - deviceCount
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        deviceCount:
          type: integer
          description: Total device count.
          contentEncoding: int32
          examples:
          - 1
        deviceList:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/V3Device'
          description: List of devices with id in IMEI.
          examples:
          - - deviceId: 15-digit IMEI
              mdn: 10-digit MDN
              model: GM01Q
              make: SEQUANS COMMUNICATIONS
              firmware: SR1.2.0.0-10657
              fotaEligible: true
              licenseAssigned: true
              status: Active
              protocol: LWM2M
              createTime: 2021-06-03 00:03:56.079 +0000 UTC
              statusTime: 2021-06-03 00:03:56.079 +0000 UTC
              refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
              lastConnectionTime: 2012-04-23T18:25:43.511Z
      description: Device list information.
      examples:
      - accountName: 0000123456-00001
        deviceCount: 1
        deviceList:
        - deviceId: 15-digit IMEI
          mdn: 10-digit MDN
          model: GM01Q
          make: SEQUANS COMMUNICATIONS
          firmware: SR1.2.0.0-10657
          fotaEligible: true
          licenseAssigned: true
          status: Active
          protocol: LWM2M
          createTime: 2021-06-03 00:03:56.079 +0000 UTC
          statusTime: 2021-06-03 00:03:56.079 +0000 UTC
          refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
          lastConnectionTime: 2012-04-23T18:25:43.511Z
    V3Device:
      title: V3Device
      required:
      - deviceId
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - 15-digit IMEI
        requestStatus:
          type: string
          description: Success or failure.
          examples:
          - success
        resultReason:
          type: string
          examples:
          - Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
        mdn:
          type: string
          description: MDN.
          examples:
          - 10-digit MDN
        model:
          type: string
          description: Device model.
          examples:
          - GM01Q
        make:
          type: string
          description: Device make.
          examples:
          - SEQUANS COMMUNICATIONS
        firmware:
          type: string
          description: Device firmware version.
          examples:
          - SR1.2.0.0-10657
        fotaEligible:
          type: boolean
          description: Value=true if the device software can be upgraded over the air using the Software Management Services API.
          examples:
          - false
        status:
          type: string
          description: Device status.
          examples:
          - Active
        licenseAssigned:
          type: boolean
          description: License assigned device.
          examples:
          - true
        protocol:
          type: string
          description: 'Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.'
          examples:
          - LWM2M
        softwareList:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/V3SoftwareInfo'
          description: List of sofware.
          examples:
          - - name: VZ_MDM_IOT
              version: '0.14'
              upgradeTime: 2012-04-23T18:25:43.511Z
        fileList:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/V3SoftwareInfo'
          description: List of files.
          examples:
          - - name: VZ_MDM_IOT
              version: '0.14'
              upgradeTime: 2012-04-23T18:25:43.511Z
        createTime:
          type: string
          description: The date and time of when the device is created.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        statusTime:
          type: string
          description: The date and time of when the device firmware or software is updated.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        updateTime:
          type: string
          description: The date and time of when the device is updated.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        refreshTime:
          type: string
          description: The date and time of when the device is refreshed.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        lastConnectionTime:
          type: string
          description: The date and time of when the device reachability is checked.
          contentEncoding: date-time
          examples:
          - 2012-04-23T18:25:43.511Z
      description: Device information.
      examples:
      - deviceId: 15-digit IMEI
        mdn: 10-digit MDN
        model: GM01Q
        make: SEQUANS COMMUNICATIONS
        firmware: SR1.2.0.0-10657
        fotaEligible: true
        licenseAssigned: true
        status: Active
        protocol: LWM2M
        createTime: 2021-06-03 00:03:56.079 +0000 UTC
        statusTime: 2021-06-03 00:03:56.079 +0000 UTC
        refreshTime: 2021-06-03 00:03:56.079 +0000 UTC
        lastConnectionTime: 2012-04-23T18:25:43.511Z
    DeviceFirmwareVersionUpdateResult:
      title: DeviceFirmwareVersionUpdateResult
      required:
      - accountName
      - requestId
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier.
        requestId:
          type: string
          description: Request identifier.
      description: Device firmware version update response.
    Campaign:
      title: Campaign
      required:
      - id
      - accountName
      - protocol
      - make
      - model
      - startDate
      - endDate
      - status
      type: object
      properties:
        id:
          type: string
          description: Upgrade identifier.
          examples:
          - f858b8c4-2153-11ec-8c44-aeb16d1aa652
        accountName:
          type: string
          description: Account identifier.
          examples:
          - 0642233522-00001
        campaignName:
          type: string
          description: Campaign name.
          examples:
          - Smart FOTA - test 4
        firmwareName:
          type: string
          description: Name of firmware.
          examples:
          - SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
        firmwareFrom:
          type: string
          description: Old firmware version.
          examples:
          - SR1.2.0.0-10512
        firmwareTo:
          type: string
          description: New firmware version.
          examples:
          - SR1.2.0.0-10657
        protocol:
          type: string
          description: 'The protocol of the firmware distribution. Default: LWM2M.'
          examples:
          - LWM2M
        make:
          type: string
          description: Applicable make.
          examples:
          - SEQUANS Communications
        model:
          type: string
          description: Applicable model.
          examples:
          - GM01Q
        startDate:
          type: string
          description: Campaign start date.
          contentEncoding: date
          examples:
          - 2021-09-29
        endDate:
          type: string
          description: Campaign end date.
          contentEncoding: date
          examples:
          - 2021-10-01
        campaignTimeWindowList:
          type: array
          items:
            $ref: '#/components/schemas/V3TimeWindow'
          description: List of allowed campaign time windows.
          examples:
          - - startTime: 18
              endTime: 22
        status:
          type: string
          description: Firmware upgrade status.
          examples:
          - CampaignPreScheduled
      description: Firmware upgrade information.
      examples:
      - id: f858b8c4-2153-11ec-8c44-aeb16d1aa652
        accountName: 0642233522-00001
        campaignName: Smart FOTA - test 4
        protocol: LWM2M
        make: SEQUANS Communications
        model: GM01Q
        status: CampaignPreScheduled
        startDate: 2021-09-29
        endDate: 2021-10-01
        firmwareName: SEQUANSCommunications_GM01Q_SR1.2.0.0-10512_SR1.2.0.0-10657
        firmwareFrom: SR1.2.0.0-10512
        firmwareTo: SR1.2.0.0-10657
        campaignTimeWindowList:
        - startTime: 18
          endTime: 22
    FotaV3CallbackRegistrationRequest:
      title: FotaV3CallbackRegistrationRequest
      type: object
      properties:
        url:
          type: string
          description: Callback URL for an subscribed service.
          examples:
          - https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
      description: Callback URL where the listening service is running.
      examples:
      - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
    FotaV3CallbackRegistrationResult:
      title: FotaV3CallbackRegistrationResult
      type: object
      properties:
        url:
          type: string
          description: Callback URL.
          examples:
          - https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
      description: Callback registration information.
      examples:
      - url: https://255.255.11.135:50559/CallbackListener/FirmwareServiceMessages.asmx
    FotaV3CallbackSummary:
      title: FotaV3CallbackSummary
      type: object
      properties:
        url:
          type: string
          description: Callback URL for an subscribed service.
          examples:
          - http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
      description: Callback registration information.
      examples:
      - url: http://10.120.102.183:50559/CallbackListener/FirmwareServiceMessages.asmx
    FirmwarePackage:
      title: FirmwarePackage
      required:
      - firmwareName
      - firmwareFrom
      - firmwareTo
      - launchDate
      - releaseNote
      - model
      - make
      - protocol
      type: object
      properties:
        firmwareName:
          type: string
          description: Firmware name.
          examples:
          - VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B
        firmwareFrom:
          type: string
          description: Firmware from version.
          examples:
          - BG96MAR04A04M1G
        firmwareTo:
          type: string
          description: Firmware to version.
          examples:
          - BG96MAR04A04M1G_BETA0130B
        launchDate:
          type: string
          description: Firmware launch date.
          contentEncoding: date-time
          examples:
          - 2012-04-23T18:25:43.511Z
        releaseNote:
          type: string
          description: Firmware release note.
        model:
          type: string
          description: Firmware applicable device model.
          examples:
          - LCO-277C4N
        make:
          type: string
          description: Firmware applicable device make.
          examples:
          - Verizon Smart Communities
        protocol:
          allOf:
          - $ref: '#/components/schemas/CampaignMetaInfoProtocol'
          - description: 'Firmware protocol. Valid values include: LWM2M, OMD-DM.'
            examples:
            - LWM2M
      description: Available firmware.
      examples:
      - firmwareName: VerizonSmartCommunities_LCO-277C4N_BG96MAR04A04M1G_BG96MAR04A04M1G_BETA0130B
        firmwareFrom: BG96MAR04A04M1G
        firmwareTo: BG96MAR04A04M1G_BETA0130B
        launchDate: 2012-04-23T18:25:43.511Z
        releaseNote: ''
        model: LCO-277C4N
        make: Verizon Smart Communities
        protocol: LWM2M
    V3CampaignDevice:
      title: V3CampaignDevice
      required:
      - hasMoreData
      - maxPageSize
      - deviceList
      type: object
      properties:
        totalDevice:
          type: integer
          description: Total device count.
          contentEncoding: int32
          examples:
          - 2689
        hasMoreData:
          type: boolean
          description: Has more report flag.
          examples:
          - true
        lastSeenDeviceId:
          type: string
          description: Device identifier.
          examples:
          - 15-digit IMEI
        maxPageSize:
          type: integer
          description: Maximum page size.
          contentEncoding: int32
          examples:
          - 1000
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V3DeviceStatus'
          description: List of devices with id in IMEI.
          examples:
          - - deviceId: 15-digit IMEI
              status: UpgradePending
              resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
              updatedTime: 2022-08-05T21:05:27.129Z
              recentAttemptTime: 2022-10-05T21:05:01.19Z
              nextAttemptTime: 2022-10-06T18:35:00Z
      description: Campaign history.
      examples:
      - totalDevice: 2689
        hasMoreData: true
        lastSeenDeviceId: 15-digit IMEI
        maxPageSize: 1000
        deviceList:
        - deviceId: 15-digit IMEI
          status: UpgradePending
          resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
          updatedTime: 2022-08-05T21:05:27.129Z
          recentAttemptTime: 2022-10-05T21:05:01.19Z
          nextAttemptTime: 2022-10-06T18:35:00Z
    V3AccountDeviceList:
      title: V3AccountDeviceList
      required:
      - accountName
      - hasMoreData
      - maxPageSize
      - deviceList
      type: object
      properties:
        accountName:
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        hasMoreData:
          type: boolean
          description: Has more device flag?
          examples:
          - true
        lastSeenDeviceId:
          type: string
          description: Last seen device identifier.
          examples:
          - 15-digit IMEI
        maxPageSize:
          type: integer
          description: Maximum page size.
          contentEncoding: int32
          examples:
          - 1000
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/V3AccountDevice'
          description: Account device list.
      description: Array of devices.
    V3AccountDevice:
      title: V3AccountDevice
      required:
      - deviceId
      - mdn
      - model
      - make
      - firmware
      - fotaEligible
      - status
      - licenseAssigned
      - protocol
      - softwareList
      type: object
      properties:
        deviceId:
          type: string
          description: Device identifier.
          examples:
          - 15-digit device ID
        mdn:
          type: string
          description: MDN.
          examples:
          - 10-digit MDN
        model:
          type: string
          description: Device model.
          examples:
          - BG96
        make:
          type: string
          description: Device make.
          examples:
          - QUECTEL
        firmware:
          type: string
          description: Device firmware version.
          examples:
          - BG96MAR04A04M1G
        fotaEligible:
          type: boolean
          description: Value=true if the device software can be upgraded over the air using the Software Management Services API.
          examples:
          - false
        status:
          type: string
          description: Device status.
          examples:
          - Active
        licenseAssigned:
          type: boolean
          description: License assigned device.
          examples:
          - true
        protocol:
          type: string
          description: 'Firmware protocol. Valid values include: LWM2M, OMADM, HTTP or NONE.'
          examples:
          - LWM2M
        softwareList:
          type: array
          items:
            $ref: '#/components/schemas/V3SoftwareInfo'
          description: List of sofware.
          examples:
          - - name: VZ_MDM_IOT
              version: '0.14'
              upgradeTime: 2012-04-23T18:25:43.511Z
        fileList:
          type: array
          items:
            $ref: '#/components/schemas/V3SoftwareInfo'
          description: List of files.
          examples:
          - - name: VZ_MDM_IOT
              version: '0.14'
              upgradeTime: 2012-04-23T18:25:43.511Z
        createTime:
          type: string
          description: The date and time of when the device is created.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        upgradeTime:
          type: string
          description: The date and time of when the device firmware or software is updated.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        updateTime:
          type: string
          description: The date and time of when the device is updated.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
        refreshTime:
          type: string
          description: The date and time of when the device is refreshed.
          examples:
          - 2021-06-03 00:03:56.079 +0000 UTC
      description: Device information.
    V3SoftwareInfo:
      title: V3SoftwareInfo
      required:
      - name
      - version
      - upgradeTime
      type: object
      properties:
        name:
          type: string
          description: Software name.
          examples:
          - VZ_MDM_IOT
        version:
          type: string
          description: Software version.
          examples:
          - '0.14'
        upgradeTime:
          type: string
          description: Upgrade time.
          examples:
          - 2012-04-23T18:25:43.511Z
      description: Software information.
      examples:
      - name: VZ_MDM_IOT
        version: '0.14'
        upgradeTime: 2012-04-23T18:25:43.511Z
    V3DeviceStatus:
      title: V3DeviceStatus
      required:
      - deviceId
      - status
      type: object
      properties:
        deviceId:
          type: string
          description: Device IMEI.
          examples:
          - 15-digit IMEI
        status:
          type: string
          description: Success or failure.
          examples:
          - UpgradePending
        resultReason:
          type: string
          description: Result reason.
          examples:
          - Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
        updatedTime:
          type: string
          description: Updated Time.
          contentEncoding: date-time
          examples:
          - 2022-08-06T18:35:00Z
        recentAttemptTime:
          type: string
          description: The most recent attempt time.
          contentEncoding: date-time
          examples:
          - 2022-10-05T21:05:01.19Z
        nextAttemptTime:
          type: string
          description: Next attempt time.
          contentEncoding: date-time
          examples:
          - 2022-10-06T18:35:00Z
      description: Device status.
      examples:
      - deviceId: 15-digit IMEI
        status: UpgradePending
        resultReason: Upgrade pending, the device upgrade is estimated to be scheduled for 06 Oct 22 18:05 UTC
        updatedTime: 2022-08-05T21:05:27.129Z
        recentAttemptTime: 2022-10-05T21:05:01.19Z
        nextAttemptTime: 2022-10-06T18:35:00Z
    FotaV3SuccessResult:
      title: FotaV3SuccessResult
      required:
      - success
      type: object
      properties:
        success:
          type: boolean
          description: True or false.
          examples:
          - true
      description: Cancelation status.
      examples:
      - success: true
    FotaV3Result:
      title: FotaV3Result
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
          description: Error code string.
          examples:
          - error code string
        errorMessage:
          type: string
          description: Error message string.
          examples:
          - error message string
      description: Error response.
      examples:
      - errorCode: error code string
        errorMessage: error message string
    AssignLicenseRequest:
      title: AssignLicenseRequest
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          type: string
          description: The name of a billing account.This parameter is required only if the UWS account used for the current API session has access to multiple accounts. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 0000123456-00001
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/LicenseDeviceList'
          description: A list of 4G devices.
          examples:
          - - deviceIds:
              - id: '864508030109877'
                kind: IMEI
        skuNumber:
          maxLength: 32
          minLength: 3
          type: string
          description: 'The Stock Keeping Unit (SKU). Valid skuNumbers for license types: “SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.'
          examples:
          - SIMSec-IoT-Lt
      description: Request to assign license.
      examples:
      - accountName: 0000123456-00001
        skuNumber: SIMSec-IoT-Lt
        devices:
        - deviceIds:
          - id: '864508030109877'
            kind: IMEI
    SecuritySubscription:
      title: SecuritySubscription
      type: object
      properties:
        extendedAttributes:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/ExtendedAttributes'
          description: Attributes of the subscription.
        licenseAssigned:
          maximum: 10
          minimum: 0
          type: integer
          description: The total number of licenses for this license type that are assigned to device SIMs.
          contentEncoding: int32
          examples:
          - 7
        licenseAvailable:
          maximum: 10
          minimum: 0
          type: integer
          description: The total number of licenses for this license type that are available to assign to device SIMs.
          contentEncoding: int32
          examples:
          - 1
        licensePurchased:
          maximum: 10
          minimum: 0
          type: integer
          description: The total number of licenses purchased for the license type.
          contentEncoding: int32
          examples:
          - 9
        licenseType:
          type: string
          description: The license type associated with the skuNumber.
          examples:
          - Flexible Bundle
        skuNumber:
          type: string
          description: The skuNumber that identifies the license type.
          examples:
          - TS-BUNDLE-KTO-SIMSEC-MRC
      description: Subscription of the device.
      examples:
      - skuNumber: TS-BUNDLE-KTO-SIMSEC-MRC
        licenseType: Flexible Bundle
        licensePurchased: 9
        licenseAssigned: 7
        licenseAvailable: 1
    ExtendedAttributes:
      title: ExtendedAttributes
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      description: Additional properties associated with data.
    SecuritySubscriptionRequest:
      title: SecuritySubscriptionRequest
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: The name of a billing account.
          examples:
          - '000012345600001'
        skuNumber:
          maxLength: 32
          minLength: 3
          type: string
          description: The Stock Keeping Unit (SKU). Valid skuNumbers for SIM-Secure for IoT are:SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.*“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.
          examples:
          - SIMSec-IoT-Lt
      description: Request for a subscription.
      examples:
      - accountName: '000012345600001'
        skuNumber: SIMSec-IoT-Lt
    SecuritySubscriptionResult:
      title: SecuritySubscriptionResult
      type: object
      properties:
        accountName:
          type: string
          description: The name of a billing account.
          examples:
          - '000012345600001'
        subscriptionList:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/SecuritySubscription'
          description: The list of SKU numbers and counts for each license type specified in the request.
          examples:
          - - skuNumber: TS-BUNDLE-KTO-SIMSEC-MRC
              licenseType: Flexible Bundle
              licensePurchased: 9
              licenseAssigned: 7
              licenseAvailable: 1
      description: Response for a subscription request.
      examples:
      - accountName: '000012345600001'
        subscriptionList:
        - skuNumber: TS-BUNDLE-KTO-SIMSEC-MRC
          licenseType: Flexible Bundle
          licensePurchased: 9
          licenseAssigned: 7
          licenseAvailable: 1
    LicenseDeviceList:
      title: LicenseDeviceList
      type: object
      properties:
        deviceIds:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/LicenseDeviceId'
          description: For 4G devices, IMEI (decimal, up to 15 digits).
          examples:
          - - id: '864508030109877'
              kind: IMEI
        ipAddress:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9].[0-9].[0-9].[0-9]{3,32}$
          type: string
      description: List of all devices.
      examples:
      - deviceIds:
        - id: '864508030109877'
          kind: IMEI
    LicenseDeviceId:
      title: LicenseDeviceId
      type: object
      properties:
        id:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9]{3,32}$
          type: string
          description: For 4G devices, IMEI (decimal, up to 15 digits) for unassign and ICCID (decimal, up to 20 digits) for assign.
          examples:
          - '864508030109877'
        kind:
          maxLength: 6
          minLength: 3
          pattern: ^[A-Z]{3,6}$
          type: string
          description: For 4G devices, ICCID (decimal, up to 20 digits) for unassign and IMEI (decimal, up to 15 digits) for assign.
          examples:
          - IMEI
      description: Id of the devices.
      examples:
      - id: '864508030109877'
        kind: IMEI
    SecuritySuccessResult:
      title: SecuritySuccessResult
      type: object
      properties:
        requestId:
          type: string
          description: A unique string that associates the request with the results that are sent via a callback message.The ThingSpace Platform sends a separate callback message for each device that matches the request criteria, indicating whether the operation succeeded for that device and containing any requested information. All callback messages will have the same requestId.
          examples:
          - c3f3d17c-79ff-4b35-82df-94446785b6e0
      description: Success response.
      examples:
      - requestId: c3f3d17c-79ff-4b35-82df-94446785b6e0
    SecurityResult:
      title: SecurityResult
      type: object
      properties:
        errorCode:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3,3}$
          type: string
        errorMessage:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        errorUrl:
          maxLength: 64
          minLength: 3
          pattern: ^https://[A-Za-z0-9].[A-Za-z]{3,64}$
          type: string
      description: Error response.
    QueryMECPerformanceMetricsRequest:
      title: QueryMECPerformanceMetricsRequest
      required:
      - IMEI
      - MSISDN
      type: object
      properties:
        IMEI:
          type: string
          description: The 15-digit International Mobile Equipment Identifier.
          examples:
          - '440246108109673'
        MSISDN:
          type: string
          description: The 12-digit Mobile Station International Subscriber Directory Number.
          examples:
          - '10691876598'
      description: MEC performance metrics request.
      examples:
      - IMEI: '440246108109673'
        MSISDN: '10691876598'
    MECPerformanceMetrics:
      title: MECPerformanceMetrics
      type: object
      properties:
        QueryStatus:
          type: string
          description: Success or Failed.
          examples:
          - Success
        Start:
          type: string
          description: Timestamp of the query's start, format:mm/dd/yyyy,hr:min:sec.
          examples:
          - 1/28/2021 12:00:00
        End:
          type: string
          description: Timestamp of the query's end , format:mm/dd/yyyy, hr:min:sec.
          examples:
          - 1/28/2021 12:15:00
        QueryResult:
          type: array
          items:
            $ref: '#/components/schemas/MECPerformanceQueryResult'
          description: MEC performance query result.
          examples:
          - - name: NetworkAvailability
              data:
              - '100'
              - percent
              - high
      description: Response to query the most recent data for Key Performance Indicators (KPIs) like network availability, MEC hostnames and more.
      examples:
      - QueryStatus: Success
        Start: 1/28/2021 12:00:00
        End: 1/28/2021 12:15:00
        QueryResult:
        - name: NetworkAvailability
          data:
          - '100'
          - percent
          - high
    MECPerformanceQueryResult:
      title: MECPerformanceQueryResult
      type: object
      properties:
        name:
          type: string
          description: Name of the parameter.
          examples:
          - NetworkAvailability
        data:
          type: array
          items:
            type:
            - string
            - 'null'
          description: Parameter values.
          examples:
          - - '100'
            - percent
            - high
      description: Result of the query for obtaining MEC performance metrics.
      examples:
      - name: NetworkAvailability
        data:
        - '100'
        - percent
        - high
    EdgePerformanceResult:
      title: EdgePerformanceResult
      type: object
      properties:
        status:
          type: string
          description: HTTP status code.
          examples:
          - HTTP status code
        message:
          type: string
          description: Error details.
          examples:
          - Error details
      description: Types of errors in response.
      examples:
      - status: HTTP status code
        message: Error details
    DiagnosticsSubscription:
      title: DiagnosticsSubscription
      required:
      - accountName
      - createdOn
      - lastUpdated
      - totalAllowed
      - totalUsed
      - skuName
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####". An account name is usually numeric, and must include any leading zeros.
          examples:
          - 0000123456-00001
        createdOn:
          type: string
          description: The date and time of when the subscription was created.
          contentEncoding: date-time
          examples:
          - 2019-08-29T00:47:59.240Z
        lastUpdated:
          type: string
          description: The date and time of when the subscription was last updated.
          contentEncoding: date-time
          examples:
          - 2019-08-29T00:47:59.240Z
        totalAllowed:
          type: integer
          description: Number of licenses currently assigned to devices.
          contentEncoding: int32
          examples:
          - 100
        totalUsed:
          type: integer
          description: Number of licenses currently used by the devices.
          contentEncoding: int32
          examples:
          - 50
        skuName:
          type: string
          description: Name of the SKU for the account.
          examples:
          - TS-BUNDLE-KTO-DIAGNOSTIC-MRC
      description: Status of the diagnostic services subscription.
      examples:
      - accountName: TestQAAccount
        skuName: TS-BUNDLE-KTO-DIAGNOSTIC-MRC
        totalAllowed: 100
        totalUsed: 50
        createdOn: 2019-08-29T00:47:59.240Z
        lastUpdated: 2019-08-29T00:47:59.240Z
    ObservationRequest:
      title: ObservationRequest
      required:
      - accountName
      - devices
      - attributes
      type: object
      properties:
        accountName:
          type: string
          description: Account identifier in "##########-#####".
          examples:
          - 0000123456-00001
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          description: List of devices.
          examples:
          - - id: '864508030026238'
              kind: IMEI
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ObservationRequestAttribute'
          description: Attributes are streaming RF parameters that you want to observe.
          examples:
          - - name: RADIO_SIGNAL_STRENGTH
            - name: LINK_QUALITY
            - name: NETWORK_BEARER
            - name: CELL_ID
        frequency:
          allOf:
          - $ref: '#/components/schemas/NumericalData'
          - description: Describes value and unit of time.
            examples:
            - value: 5
              unit: SECOND
        duration:
          allOf:
          - $ref: '#/components/schemas/NumericalData'
          - description: Describes value and unit of time.
            examples:
            - value: 5
              unit: SECOND
      description: Used to define callbacks including the device identity, the attribute names, corresponding attribute values and the date/timestamp of when the observation was made.
      examples:
      - accountName: 0000123456-00001
        attributes:
        - name: RADIO_SIGNAL_STRENGTH
        - name: LINK_QUALITY
        - name: NETWORK_BEARER
        - name: CELL_ID
        devices:
        - id: '864508030026238'
          kind: IMEI
    ObservationRequestAttribute:
      title: ObservationRequestAttribute
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AttributeIdentifier'
          - description: Attribute identifier.
            examples:
            - RADIO_SIGNAL_STRENGTH
      description: Streaming RF parameter that you want to observe.
      examples:
      - name: RADIO_SIGNAL_STRENGTH
    DiagnosticsObservationResult:
      title: DiagnosticsObservationResult
      required:
      - transactionID
      - status
      - createdOn
      type: object
      properties:
        transactionID:
          type: string
          description: Transaction identifier.
          examples:
          - 9c7bb124-11f5-4ff3-8a88-0eec1ba99205
        status:
          type: string
          description: Status of the request.
          examples:
          - CANCEL_OBSERVE_PENDING
        createdOn:
          type: string
          description: The date and time of when this request was created.
          contentEncoding: date-time
          examples:
          - 2019-09-10T19:05:33.33Z
      description: A success response containing the current status of the request.
      examples:
      - createdOn: 2019-09-10T19:05:33.33Z
        transactionID: 9c7bb124-11f5-4ff3-8a88-0eec1ba99205
        status: CANCEL_OBSERVE_PENDING
    HistoryAttributeValue:
      title: HistoryAttributeValue
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AttributeIdentifier'
          - description: Attribute identifier.
            examples:
            - RADIO_SIGNAL_STRENGTH
        value:
          type: string
          description: Attribute value.
          examples:
          - '47'
        createdOn:
          type: string
          description: Date and time the request was created.
          contentEncoding: date-time
          examples:
          - 2022-02-10T16:02:21.406Z
      description: Streaming RF parameter for which you want to retrieve history data.
      examples:
      - createdOn: 2022-02-10T16:02:21.406Z
        name: LINK_QUALITY
        value: '47'
    CallbackRegistrationRequest:
      title: CallbackRegistrationRequest
      required:
      - accountName
      - serviceName
      - endpoint
      type: object
      properties:
        accountName:
          type: string
          description: 'The name of the billing account for which callback messages will be sent. Format: "##########-#####".'
          examples:
          - 0000123456-00001
        serviceName:
          type: string
          description: The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.
          examples:
          - Diagnostics
        endpoint:
          type: string
          description: The URL for your web server.
          examples:
          - https://yourwebsite.com
        httpHeaders:
          type: object
          description: Your HTTP headers.
          examples:
          - {}
      description: Specifies the callback service that is being subscribed to and the URL where the listening service is running.
      examples:
      - accountName: TestQAAccount
        serviceName: Diagnostics
        endpoint: https://yourwebsite.com
    DeviceDiagnosticsCallback:
      title: DeviceDiagnosticsCallback
      required:
      - accountName
      - serviceName
      - endpoint
      - createdOn
      type: object
      properties:
        accountName:
          type: string
          description: 'The name of the billing account for which callback messages will be sent. Format: "##########-#####".'
          examples:
          - 0000123456-00001
        serviceName:
          type: string
          description: The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.
          examples:
          - Diagnostics
        endpoint:
          type: string
          description: The URL for your web server.
          examples:
          - https://yourwebsite.com
        createdOn:
          type: string
          description: The date and time of when this request was created.
          contentEncoding: date-time
          examples:
          - 2019-09-07T23:57:53.292Z
        httpHeaders:
          type: object
          description: Your HTTP headers.
          examples:
          - {}
      description: Callback information of an existing diagnostics subscription.
      examples:
      - accountName: TestQAAccount
        serviceName: Diagnostics
        endpoint: https://yourwebsite.com
        createdOn: 2019-09-07T23:57:53.292Z
    AttributeIdentifier:
      title: AttributeIdentifier
      enum:
      - NETWORK_BEARER
      - RADIO_SIGNAL_STRENGTH
      - LINK_QUALITY
      - CELL_ID
      - MANUFACTURER
      type: string
      description: Attribute identifier.
      examples:
      - RADIO_SIGNAL_STRENGTH
    AttributeSetting:
      title: AttributeSetting
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AttributeIdentifier'
          - description: Attribute identifier.
            examples:
            - RADIO_SIGNAL_STRENGTH
        value:
          type: string
          description: Attribute value.
          examples:
          - string
        createdOn:
          type: string
          description: Date and time request was created.
          contentEncoding: date-time
          examples:
          - 2019-09-07T23:08:03.532Z
        isObservable:
          type: boolean
          description: Is the attribute observable?
          examples:
          - true
        isObserving:
          type: boolean
          description: Is the attribute being observed?
          examples:
          - true
        frequency:
          allOf:
          - $ref: '#/components/schemas/NumericalData'
          - description: Describes value and unit of time.
            examples:
            - value: 5
              unit: SECOND
      description: Describes an attribute being observed and the frequency with which the attribute is being observed.
      examples:
      - name: MANUFACTURER
        value: string
        createdOn: 2019-09-07T23:08:03.532Z
        isObservable: true
        isObserving: true
        frequency:
          value: 5
          unit: SECOND
    DiagnosticObservationSetting:
      title: DiagnosticObservationSetting
      type: object
      properties:
        accountName:
          type: string
          description: 'The name of the billing account for which callback messages will be sent. Format: "##########-#####".'
          examples:
          - 0000123456-00001
        device:
          allOf:
          - $ref: '#/components/schemas/Device'
          - description: Identifies a particular IoT device.
            examples:
            - id: '864508030026238'
              kind: IMEI
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/AttributeSetting'
          description: Streaming RF parameters for which you want to retrieve diagnostic settings.
          examples:
          - - name: MANUFACTURER
              value: string
              createdOn: 2019-09-07T23:08:03.532Z
              isObservable: true
              isObserving: true
              frequency:
                value: 5
                unit: SECOND
      description: Diagnostic observation settings and attributes for a device.
      examples:
      - accountName: string
        device:
          id: '864508030026238'
          kind: IMEI
        attributes:
        - name: MANUFACTURER
          value: string
          createdOn: 2019-09-07T23:08:03.532Z
          isObservable: true
          isObserving: true
          frequency:
            value: 5
            unit: SECOND
    HistorySearchFilter:
      title: HistorySearchFilter
      required:
      - accountName
      - device
      type: object
      properties:
        accountName:
          type: string
          description: Account name identifier.
          examples:
          - 0000123456-00001
        device:
          allOf:
          - $ref: '#/components/schemas/Device'
          - description: Identifies a particular IoT device.
            examples:
            - id: '864508030026238'
              kind: IMEI
        attributes:
          allOf:
          - $ref: '#/components/schemas/HistorySearchFilterAttributes'
          - description: Streaming RF parameters for which you want to retrieve history data.
            examples:
            - name: LINK_QUALITY
      description: The selected device and attributes for which a request should retrieve data.
      examples:
      - accountName: 0000123456-00001
        device:
          id: 15-digit IMEI
          kind: IMEI
        attributes:
          name: LINK_QUALITY
    HistorySearchFilterAttributes:
      title: HistorySearchFilterAttributes
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AttributeIdentifier'
          - description: Attribute identifier.
            examples:
            - RADIO_SIGNAL_STRENGTH
      description: Streaming RF parameters for which you want to retrieve history data.
      examples:
      - name: LINK_QUALITY
    HistorySearchLimitTime:
      title: HistorySearchLimitTime
      type: object
      properties:
        startOn:
          type: string
          description: The starting date-time for this request.
          contentEncoding: date-time
          examples:
          - 2019-08-29T00:47:59.240Z
        duration:
          allOf:
          - $ref: '#/components/schemas/NumericalData'
          - description: Describes value and unit of time.
            examples:
            - value: 5
              unit: SECOND
      description: The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration.
      examples:
      - startOn: 2019-08-29T00:47:59.240Z
        duration:
          value: 5
          unit: SECOND
    HistorySearchRequest:
      title: HistorySearchRequest
      required:
      - $filter
      type: object
      properties:
        $filter:
          allOf:
          - $ref: '#/components/schemas/HistorySearchFilter'
          - description: The selected device and attributes for which a request should retrieve data.
            examples:
            - accountName: 0000123456-00001
              device:
                id: 15-digit IMEI
                kind: IMEI
              attributes:
                name: LINK_QUALITY
        $limitNumber:
          type: integer
          description: The maximum number of historical attributes to include in the response. If the request matches more than this number of attributes, the response will contain an X-Next value in the header that can be used as the page value in the next request to retrieve the next page of events.
          contentEncoding: int32
          examples:
          - 3
        $limitTime:
          allOf:
          - $ref: '#/components/schemas/HistorySearchLimitTime'
          - description: The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration.
            examples:
            - startOn: 2019-08-29T00:47:59.240Z
              duration:
                value: 5
                unit: SECOND
        $page:
          type: string
          description: Page number for pagination purposes.
      description: Used to filter data by time period or number of devices.
      examples:
      - $filter:
          accountName: 0000123456-00001
          device:
            id: 15-digit IMEI
            kind: IMEI
    History:
      title: History
      required:
      - accountName
      - device
      type: object
      properties:
        accountName:
          type: string
          description: The name of the billing account for which you want retrieve history data. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 0000123456-00001
        device:
          allOf:
          - $ref: '#/components/schemas/Device'
          - description: Identifies a particular IoT device.
            examples:
            - id: '864508030026238'
              kind: IMEI
        attributes:
          allOf:
          - $ref: '#/components/schemas/HistoryAttributeValue'
          - description: Streaming RF parameter for which you want to retrieve history data.
            examples:
            - createdOn: 2022-02-10T16:02:21.406Z
              name: LINK_QUALITY
              value: '47'
      description: History data for a selected device and its attributes at a specific time.
      examples:
      - accountName: 0000123456-00001
        attributes:
          createdOn: 2022-02-10T16:02:21.406Z
          name: LINK_QUALITY
          value: '47'
        device:
          id: 15-digit IMEI
          kind: IMEI
    Device:
      title: Device
      required:
      - id
      - kind
      type: object
      properties:
        id:
          type: string
          description: Device identifier.
          examples:
          - '864508030026238'
        kind:
          type: string
          description: Device kind identifier.
          examples:
          - IMEI
      description: Identifies a particular IoT device.
      examples:
      - id: '864508030026238'
        kind: IMEI
    NumericalData:
      title: NumericalData
      type: object
      properties:
        value:
          type: integer
          description: Numerical value.
          contentEncoding: int32
          examples:
          - 5
        unit:
          allOf:
          - $ref: '#/components/schemas/NumericalDataUnit'
          - description: Unit of time.
            examples:
            - MINUTE
      description: Describes value and unit of time.
      examples:
      - value: 5
        unit: SECOND
    NumericalDataUnit:
      title: NumericalDataUnit
      enum:
      - SECOND
      - MINUTE
      - HOUR
      - DAY
      type: string
      description: Unit of time.
      examples:
      - MINUTE
    DeviceDiagnosticsResult:
      title: DeviceDiagnosticsResult
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
          description: Simple error code.
          examples:
          - INVALID_PARAMETER
        errorMessage:
          type: string
          description: Detailed error message.
          examples:
          - The request parameter is invalid.
      description: All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
      examples:
      - errorCode: INTERNAL_SYSTEM_ERROR
        errorMessage: The system encountered an internal error.
    DeviceResetRequest:
      title: DeviceResetRequest
      type: object
      properties:
        accountName:
          type: string
          description: The name of the account. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 0642233522-00003
        action:
          type: string
          description: The action you want to take on the device.
          examples:
          - reboot
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          description: The devices for which you want to perform a factory reset or reboot.
      description: Request body to Performs a device reboot.
    GenerateExternalIDResult:
      title: GenerateExternalIDResult
      type: object
      properties:
        externalid:
          type: string
          description: Newly created security string.
          examples:
          - ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
      description: A new external ID.
      examples:
      - externalid: ZlJnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
    GenerateExternalIDRequest:
      title: GenerateExternalIDRequest
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
      description: Authenticating account ID.
      examples:
      - accountidentifier:
          billingaccountid: 0000000000-00001
    Subscription:
      title: Subscription
      type: object
      properties:
        configurationfailures:
          type: integer
          description: The number of streaming failures due to faulty configuration.
          contentEncoding: int32
          examples:
          - 0
        createdon:
          type: string
          description: The number of streaming failures due to faulty configuration.
          examples:
          - 2018-12-21T05:05:02.134Z
        delegateid:
          type: string
          description: Not currently used.
          examples:
          - 00000000-0000-0000-0000-000000000000
        description:
          type: string
          description: Description of the subscription.
        disabled:
          type: boolean
          description: Whether the subscription is currently sending data.
          examples:
          - false
        email:
          type: string
          description: The address to which any error reports should be delivered.
          examples:
          - me@mycompany.com
        filter:
          type: string
          description: Filter for events.
        id:
          type: string
          description: ThingSpace unique ID for the subscription that was created.
          examples:
          - d8c145dd-6948-67ec-ed9b-6a298806bb4a
        kind:
          type: string
          description: Identifies the resource kind.
          examples:
          - ts.subscription
        laststreamingstatus:
          type: string
          description: 'Possible values: success or fail.'
          examples:
          - success
        laststreamingtime:
          type: string
          description: The date and time that the last stream send was attempted.
          examples:
          - 0001-01-01T00:00:00Z
        lastupdated:
          type: string
          description: The date the resource was last updated.
          examples:
          - 2018-12-21T05:22:12.178Z
        name:
          type: string
          description: Name of the subscription.
          examples:
          - Account subscription 1
        networkfailures:
          type: integer
          description: The number of failures due to network problems.
          contentEncoding: int32
          examples:
          - 0
        streamfailures:
          type: integer
          contentEncoding: int32
          examples:
          - 0
        streamkind:
          type: string
          description: The event type that will be sent in the data stream.
          examples:
          - ts.event
        targetid:
          type: string
          description: Target to be used for dispatching events.
          examples:
          - 4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8
        targettype:
          type: string
          examples:
          - Amazon Web Services
        version:
          type: string
          description: Version of the underlying schema resource.
          examples:
          - '1.0'
        versionid:
          type: string
          description: The version of the resource.
          examples:
          - 5ed6063f-04e0-11e9-8279-02420a5e1b0b
      description: Subscription resource definition.
      examples:
      - configurationfailures: 0
        createdon: 2018-12-21T05:05:02.134Z
        delegateid: 00000000-0000-0000-0000-000000000000
        id: d8c145dd-6948-67ec-ed9b-6a298806bb4a
        kind: ts.subscription
        laststreamingstatus: ''
        laststreamingtime: 0001-01-01T00:00:00Z
        lastupdated: 2018-12-21T05:22:12.178Z
        networkfailures: 0
        streamfailures: 0
        streamkind: ts.event
        targetid: 4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8
        version: '1.0'
        versionid: 5ed6063f-04e0-11e9-8279-02420a5e1b0b
    Target:
      title: Target
      type: object
      properties:
        address:
          type: string
          description: The endpoint for data streams.
          examples:
          - https://myhost.com:1825
        addressscheme:
          type: string
          description: The transport format.
          examples:
          - streamrest
        billingaccountid:
          type: string
          description: The billing account ID.
        createdon:
          type: string
          description: The date the resource was created.
          examples:
          - 2019-01-24T19:06:43.577Z
        externalid:
          type: string
          description: Security identification string.
          examples:
          - lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
        id:
          type: string
          description: ThingSpace unique ID for the target that was created.
          examples:
          - cea170cc-a58f-6531-fc4b-fae1ceb1a6c8
        kind:
          type: string
          description: Identifies the resource kind. Targets are ts.target.
          examples:
          - ts.target
        lastupdated:
          type: string
          description: The date the resource was last updated.
          examples:
          - 2019-01-24T19:32:31.841Z
        name:
          type: string
          description: Name of the target.
          examples:
          - AWS Target
        region:
          type: string
          description: AWS region value.
          examples:
          - us-east-1
        version:
          type: string
          description: Version of the underlying schema resource.
          examples:
          - '1.0'
        versionid:
          type: string
          description: The version of the resource.
          examples:
          - caf85ff7-200e-11e9-a85b-02420a621e0a
        description:
          type: string
          description: Description of the target.
      description: Target resource definition.
      examples:
      - address: arn:aws:iam::252156542789:role/ThingSpace
        addressscheme: streamawsiot
        createdon: 2019-01-24T19:06:43.577Z
        externalid: lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
        id: cea170cc-a58f-6531-fc4b-fae1ceb1a6c8
        kind: ts.target
        lastupdated: 2019-01-24T19:32:31.841Z
        name: AWS Target
        region: us-east-1
        version: '1.0'
        versionid: caf85ff7-200e-11e9-a85b-02420a621e0a
    QueryTargetRequest:
      title: QueryTargetRequest
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        $selection:
          type: object
          additionalProperties:
            type: string
          description: A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.
          examples:
          - addressscheme: streamawsiot
        resourceidentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
            examples:
            - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
      description: Search for targets by property values.
      examples:
      - accountidentifier:
          billingaccountid: 1223334444-00001
        resourceidentifier:
          id: dd1682d3-2d80-cefc-f3ee-25154800beff
    AccountIdentifier:
      title: AccountIdentifier
      type: object
      properties:
        billingaccountid:
          type: string
          examples:
          - 1223334444-00001
      description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
      examples:
      - billingaccountid: 0000000000-00001
    DeleteTargetRequest:
      title: DeleteTargetRequest
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        resourceidentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
            examples:
            - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
      description: Target to delete.
      examples:
      - accountidentifier:
          billingaccountid: 0000000000-00001
        resourceidentifier:
          id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
    ResourceIdentifier:
      title: ResourceIdentifier
      type: object
      properties:
        id:
          type: string
          description: Target ID.
          examples:
          - dd1682d3-2d80-cefc-f3ee-25154800beff
        imei:
          type: string
          description: Device IMEI.
      description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
      examples:
      - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
    CreateTargetRequest:
      title: CreateTargetRequest
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        billingaccountid:
          type: string
          description: The ID of the authenticating billing account.
          examples:
          - 1223334444-00001
        kind:
          type: string
          description: Identifies the resource kind. Targets are ts.target.
          examples:
          - ts.target
        address:
          type: string
          description: The endpoint for notifications or data streams. The format depends on the selected `addressscheme`.<br />`streamrest` requires a `host:port` value <br />`streamawsiot` requres a valid ARN.
          examples:
          - https://myhost.com:1825
        addressscheme:
          type: string
          description: 'The transport format. Valid values are: <br />streamawsiot - streamed data to an AWS account <br />streamrest - streamed REST data to a defined endpoint.'
          examples:
          - streamrest
        fields:
          allOf:
          - $ref: '#/components/schemas/CreateTargetRequestFields'
          - examples:
            - httpheaders:
                Authorization: SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410
              devicetypes:
              - cHeAssetTracker
              - cHeAssetTrackerV2
              - tgAssetTracker
              - tgAssetTrackerV2
        description:
          type: string
          description: Descriptive information about the target.
        externalid:
          type: string
          description: Security identification string created by a POST /targets/actions/newextid request.
          examples:
          - lJZnih8BfqsosZrEEkfPuR3aGOk2i-HIr6tXN275ioJF6bezIrQB9EbzpTRep8J7RmV7QH==
        name:
          type: string
          description: Name of the target.
          examples:
          - AWS Target
        region:
          type: string
          description: AWS region value.
          examples:
          - us-east-1
        key1:
          type: string
          description: OAuth 2.0 bearer token.
          examples:
          - Bearer MmY3ZefqefqDk4Ni00MzZmLWJkYzgtYTI4qfqBjNTc2
        oauth:
          allOf:
          - $ref: '#/components/schemas/TargetAuthentication'
          - description: OAuth 2 token and refresh token for TS to stream events to Target.
      description: Details of the target that you want to create.
      examples:
      - accountidentifier:
          billingaccountid: 0000000000-00001
        billingaccountid: 0000000000-00001
        kind: ts.target
        address: https://your_IoT_Central_Application.azureiotcentral.com
        addressscheme: streamazureiot
        fields:
          httpheaders:
            Authorization: SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410
          devicetypes:
          - cHeAssetTracker
          - cHeAssetTrackerV2
          - tgAssetTracker
          - tgAssetTrackerV2
    TargetAuthentication:
      title: TargetAuthentication
      type: object
      properties:
        body:
          allOf:
          - $ref: '#/components/schemas/TargetAuthenticationBody'
          - examples:
            - grant_type: refresh_token
              refresh_token: qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1
              headers:
                Authorization: Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk
                Content-Type: application/x-www-form-urlencoded
              host:
                hostandpath: https:// myhost.com:1825
        version:
          type: string
          examples:
          - '1.0'
      description: OAuth 2 token and refresh token for TS to stream events to Target.
    TargetAuthenticationBody:
      title: TargetAuthenticationBody
      type: object
      properties:
        grant_type:
          type: string
          description: Authentication grant type.
          examples:
          - refresh_token
        refresh_token:
          type: string
          description: Refresh token.
          examples:
          - qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1
        scope:
          type: string
          description: Authentication scopes.
        headers:
          allOf:
          - $ref: '#/components/schemas/TargetAuthenticationBodyHeaders'
          - description: Authentication headers.
            examples:
            - Authorization: Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk
              Content-Type: application/x-www-form-urlencoded
        host:
          allOf:
          - $ref: '#/components/schemas/TargetAuthenticationBodyHost'
          - description: Host information.
            examples:
            - hostandpath: https:// myhost.com:1825
      examples:
      - grant_type: refresh_token
        refresh_token: qfeqVjZTYzMmUtZWMzZqfq4ZDUtNzFhZWVkYTlmMjk1
        headers:
          Authorization: Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk
          Content-Type: application/x-www-form-urlencoded
        host:
          hostandpath: https:// myhost.com:1825
    TargetAuthenticationBodyHost:
      title: TargetAuthenticationBodyHost
      type: object
      properties:
        hostandpath:
          type: string
          examples:
          - https:// myhost.com:1825
      description: Host information.
      examples:
      - hostandpath: https:// myhost.com:1825
    TargetAuthenticationBodyHeaders:
      title: TargetAuthenticationBodyHeaders
      type: object
      properties:
        Authorization:
          type: string
          description: Authorization header.
          examples:
          - Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk
        Content-Type:
          type: string
          description: Content-Type header.
          examples:
          - application/x-www-form-urlencoded
      description: Authentication headers.
      examples:
      - Authorization: Basic RGFrqewfq2xpZW50QXBwVjI6YzM5YjqfqmI2LWI2MWQtNDRlZTQ5MmM1YTRk
        Content-Type: application/x-www-form-urlencoded
    CreateTargetRequestFields:
      title: CreateTargetRequestFields
      type: object
      properties:
        httpheaders:
          allOf:
          - $ref: '#/components/schemas/FieldsHttpHeaders'
          - examples:
            - Authorization: SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410
        devicetypes:
          type: array
          items:
            type: string
          description: List of device types.
          examples:
          - - cHeAssetTracker
            - cHeAssetTrackerV2
            - tgAssetTracker
            - tgAssetTrackerV2
      examples:
      - httpheaders:
          Authorization: SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410
        devicetypes:
        - cHeAssetTracker
        - cHeAssetTrackerV2
        - tgAssetTracker
        - tgAssetTrackerV2
    FieldsHttpHeaders:
      title: FieldsHttpHeaders
      type: object
      properties:
        Authorization:
          type: string
          examples:
          - SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410
      examples:
      - Authorization: SharedAccessSignature sr=d1f9b6bf-1380-41f6-b757-d9805e48392b&sig=EF5tnXClw3MWkb84OkIOUhMH%2FaS1DRD2nXT69QR8RD8%3D&skn=TSCCtoken&se=1648827260410
    CreateSubscriptionRequest:
      title: CreateSubscriptionRequest
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        description:
          type: string
          description: Descriptive information about the subscription.
        disabled:
          type: boolean
          description: Enable or disable the subscription. A disabled subscription will not send any data.
          examples:
          - false
        email:
          type: string
          description: The address to which any error reports should be delivered.
          examples:
          - me@mycompany.com
        filter:
          type: string
          description: String containing a $filter object with a property and value to filter out non-matching events.
        billingaccountid:
          type: string
          examples:
          - 1223334444-00001
        streamkind:
          type: string
          description: The type of event data to send via this subscription. This will be `ts.event` in most cases. Other event types are `ts.event.diagnostics` for device diagnostic data, `ts.event.configuration` for device configuration events, or `ts.event.security`. Note that the device ThingSpace client must support sending specific event types for anything other than `ts.event`.
          examples:
          - ts.event
        targetid:
          type: string
          description: The ID of the target resource to be used when dispatching events. The corresponding target should have a “stream” addressscheme.
          examples:
          - 4e211a0e-e39d-6c32-e15b-d6f07f9e2ec8
        name:
          type: string
          description: Name of the subscription.
          examples:
          - Account subscription 1
        allowaggregation:
          type: boolean
          description: Setting this value to `false` prevents the data returned from being aggregated and makes the data easier to parse.
          examples:
          - false
      description: The details of the subscription that you want to create.
      examples:
      - accountidentifier:
          billingaccountid: 0000000000-00001
        billingaccountid: 0000000000-00001
        streamkind: ts.event
        targetid: your target ID UUID such as ae110c40-2685-6c70-f46e-286f7370b8a9
        name: name your subscription
    QuerySubscriptionRequest:
      title: QuerySubscriptionRequest
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        $selection:
          type: object
          additionalProperties:
            type: string
          description: A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.
          examples:
          - addressscheme: streamawsiot
        resourceidentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
            examples:
            - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
      description: Fields and values to match.
      examples:
      - accountidentifier:
          billingaccountid: 1223334444-00001
        resourceidentifier:
          id: dd1682d3-2d80-cefc-f3ee-25154800beff
    DeleteSubscriptionRequest:
      title: DeleteSubscriptionRequest
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        resourceidentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
            examples:
            - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
      description: The subscription to delete.
      examples:
      - accountidentifier:
          billingaccountid: 1223334444-00001
        resourceidentifier:
          id: f8b112df-739c-6236-f059-106c67bafd99
    ChangeConfigurationRequest:
      title: ChangeConfigurationRequest
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        resourceidentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
            examples:
            - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
        configuration:
          allOf:
          - $ref: '#/components/schemas/configuration'
          - description: List of the field names and values to set.
            examples:
            - frequency: Low
      description: The request body identifies the device and the values to set.
      examples:
      - accountidentifier:
          billingaccountid: 1223334444-00001
        resourceidentifier:
          id: f8b112df-739c-6236-f059-106c67bafd99
        configuration:
          frequency: Low
    configuration:
      title: configuration
      type: object
      properties:
        frequency:
          type: string
          examples:
          - Low
      description: List of the field names and values to set.
      examples:
      - frequency: Low
    ChangeConfigurationResponse:
      title: ChangeConfigurationResponse
      type: object
      properties:
        action:
          type: string
          description: The action requested in this event; “change” for device configuration changes.
          examples:
          - set
        createdon:
          type: string
          description: The date and time of the change request.
          examples:
          - 2019-02-14T01:41:03.619217664Z
        deviceid:
          type: string
          description: The device’s ThingSpace UUID.
          examples:
          - 8461f530-2e31-6e87-e357-6c38251d4d01
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields'
          - description: List of fields affected by the event.
            examples:
            - configuration:
                frequency: Low
        foreignid:
          type: string
          description: foreign id
          examples:
          - e1f15861-7de7-69cb-ed7d-b4a92e091bc4
        id:
          type: string
          description: The unique ID of this ts.event.configuration event.
          examples:
          - 05c12adc-50c0-6ebb-feb0-b9f9637a1dba
        kind:
          type: string
          description: The kind of the ThingSpace resource that is being reported
          examples:
          - ts.event.configuration
        lastupdated:
          type: string
          description: The date and time that the event was last updated.
          examples:
          - 2019-02-14T01:41:03.619217727Z
        name:
          type: string
          description: The name of the event; “SetConfigurationReq” for device configuration changes.
          examples:
          - SetConfigurationReq
        state:
          type: string
          description: The current status of the request. The value will be “pending” until the device wakes up and ThingSpace can send the request to the device.
          examples:
          - pending
        transactionid:
          type: string
          description: transaction id
          examples:
          - 1d38aae7-558d-4cb9-8269-e8d4c0519045
        version:
          type: string
          description: version
          examples:
          - '1.0'
      description: Change Configuration resource definition.
    FindDeviceByPropertyResponse:
      title: FindDeviceByPropertyResponse
      type: object
      properties:
        billingaccountid:
          type: string
          description: Billing account ID of the resource.
          examples:
          - 1223334444-00001
        createdon:
          type: string
          description: The date the resource was created.
          examples:
          - 2018-12-19T06:45:41.496Z
        eventretention:
          type: string
          examples:
          - '90'
        iccid:
          type: string
          description: Cellular SIM card identifier.
          examples:
          - '20332350053095597842'
        id:
          type: string
          description: ThingSpace unique ID for the device that was added.
          examples:
          - 64612cb3-3685-6dad-fd2b-ea1adeb5a269
        imei:
          type: string
          description: 4G hardware device identifier.
          examples:
          - '320778042285497'
        kind:
          type: string
          description: Identifies the resource kind.
          examples:
          - ts.device
        lastupdated:
          type: string
          description: The date the resource was last updated.
          examples:
          - 2018-12-19T06:45:41.508Z
        providerid:
          type: string
          description: The device’s service provider.
          examples:
          - 8a314f07-849e-6568-e3c1-8381c1f61bfc
        refid:
          type: string
          description: The value of the refidtype identifier.
          examples:
          - '20332350053095597842'
        refidtype:
          type: string
          description: The device identifier type used to refer to this device.
          examples:
          - iccid
        state:
          type: string
          description: Service state of the device.
          examples:
          - registered
        version:
          type: string
          description: Version of the underlying schema resource.
          examples:
          - '1.0'
        versionid:
          type: string
          description: The version of the resource.
          examples:
          - b3cdaddb-0359-11e9-aba2-02420a4e1b0a
      description: Change Configuration resource definition.
    FindDeviceByPropertyResponseList:
      title: FindDeviceByPropertyResponseList
      type: object
      properties:
        DeviceProperty:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/FindDeviceByPropertyResponse'
          description: ''
      description: A success response includes an array of all matching devices. Each device includes the full device resource definition.
    SearchDeviceByPropertyResponseList:
      title: SearchDeviceByPropertyResponseList
      type: object
      properties:
        DeviceProperty:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/SearchDeviceByPropertyResponse'
          description: ''
      description: A success response includes an array of all matching devices.
    SearchDeviceByPropertyResponse:
      title: SearchDeviceByPropertyResponse
      type: object
      properties:
        billingaccountid:
          type: string
          description: Billing account ID of the resource.
          examples:
          - 1223334444-00001
        createdon:
          type: string
          description: The date the resource was created.
          examples:
          - 2018-12-19T06:45:41.496Z
        eventretention:
          type: string
          examples:
          - '90'
        fields:
          $ref: '#/components/schemas/Fields1'
        iccid:
          type: string
          description: Cellular SIM card identifier.
          examples:
          - '20332350053095597842'
        id:
          type: string
          description: ThingSpace unique ID for the device that was added.
          examples:
          - 64612cb3-3685-6dad-fd2b-ea1adeb5a269
        imei:
          type: string
          description: 4G hardware device identifier.
          examples:
          - '320778042285497'
        kind:
          type: string
          description: Identifies the resource kind.
          examples:
          - ts.device
        lastupdated:
          type: string
          description: The date the resource was last updated.
          examples:
          - 2018-12-19T06:45:41.508Z
        providerid:
          type: string
          description: The device’s service provider.
          examples:
          - 8a314f07-849e-6568-e3c1-8381c1f61bfc
        refid:
          type: string
          description: The value of the refidtype identifier.
          examples:
          - '20332350053095597842'
        refidtype:
          type: string
          description: The device identifier type used to refer to this device.
          examples:
          - iccid
        state:
          type: string
          description: Service state of the device.
          examples:
          - registered
        version:
          type: string
          description: Version of the underlying schema resource.
          examples:
          - '1.0'
        versionid:
          type: string
          description: The version of the resource.
          examples:
          - b3cdaddb-0359-11e9-aba2-02420a4e1b0a
      description: The device identifier and fields to match in the search.
    SearchDeviceByPropertyFields:
      title: SearchDeviceByPropertyFields
      type: object
      properties:
        acceleration:
          $ref: '#/components/schemas/acceleration'
        battery:
          type: string
          examples:
          - '95'
        humidity:
          type: string
          examples:
          - '29'
        light:
          type: string
          examples:
          - '150'
        pressure:
          type: string
          examples:
          - '888'
        signalStrength:
          type: string
          examples:
          - '-58'
        temperature:
          type: string
          examples:
          - '19.2'
        DevicePropertylocation:
          $ref: '#/components/schemas/DevicePropertylocation'
      description: List of device sensors and their most recently reported values.
    DevicePropertylocation:
      title: DevicePropertylocation
      type: object
      properties:
        latitude:
          type: string
          examples:
          - '37.2314796'
        longitude:
          type: string
          examples:
          - '-119.4692153'
    acceleration:
      title: acceleration
      type: object
      properties:
        x:
          type: string
          examples:
          - '0.0277'
        y:
          type: string
          examples:
          - '-1.0334'
        z:
          type: string
          examples:
          - '-0.0134'
    SearchDeviceEventHistoryRequest:
      title: SearchDeviceEventHistoryRequest
      required:
      - accountidentifier
      - resourceidentifier
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        $selection:
          type: object
          additionalProperties:
            type: string
          description: A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.
          examples:
          - addressscheme: streamawsiot
        resourceidentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
            examples:
            - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
        $limitnumber:
          type: integer
          description: The maximum number of events to include in the response.
          contentEncoding: int32
          examples:
          - 2
        $page:
          type: string
          description: The maximum number of events to include in the response.
      description: Search Device By Property resource definition.
    SearchDeviceEventHistoryResponseList:
      title: SearchDeviceEventHistoryResponseList
      type: object
      properties:
        SearchDeviceEventHistory:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/SearchDeviceResponse'
          description: ''
      description: A success response includes an array of all matching events.
    SearchDeviceResponse:
      title: SearchDeviceResponse
      type: object
      properties:
        action:
          type: string
          description: The action requested in this event; “change” for device configuration changes.
          examples:
          - set
        createdon:
          type: string
          description: The date and time of the change request.
          examples:
          - 2019-02-21T02:05:25.270417481Z
        deviceid:
          type: string
          description: The device’s ThingSpace UUID.
          examples:
          - 8461f530-2e31-6e87-e357-6c38251d4d01
        fields:
          allOf:
          - $ref: '#/components/schemas/Fields2'
          - description: List of fields affected by the event.
        id:
          type: string
          description: The unique ID of this ts.event.configuration event.
          examples:
          - e521b8ae-440d-6cc1-f687-7c80e085ff29
        kind:
          type: string
          description: The kind of the ThingSpace resource that is being reported; “ts.event.configuration” for device configuration changes.
          examples:
          - ts.event.configuration
        lastupdated:
          type: string
          description: The date and time that the event was last updated.
          examples:
          - 2019-02-21T02:05:25.394230017Z
        name:
          type: string
          description: The name of the event
          examples:
          - SetConfigurationReq
        state:
          type: string
          description: The current status of the request.
          examples:
          - update
        tagids:
          type: array
          items:
            type: string
          description: UUIDs of tag resources that are applied to this device.
          examples:
          - - 4d110e4f-7a7c-6b26-eaac-31cc34c6e1d4
            - cd81ed16-18ae-6c7d-eaba-2883b0395387
        transactionid:
          type: string
          description: transaction id
          examples:
          - c7a0a8cf-6856-4733-93ea-69913650e4ca
        version:
          type: string
          description: The version of the resource.
          examples:
          - '1.0'
        versionid:
          type: string
          description: The version of the resource.
          examples:
          - 270e4820-357d-11e9-9d6c-02420a470c06
      description: A success response includes an array of all matching events. Each event includes the full event resource definition.
    SearchSensorHistoryRequest:
      title: SearchSensorHistoryRequest
      required:
      - accountidentifier
      - resourceidentifier
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        resourceidentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
            examples:
            - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
        $limitnumber:
          type: integer
          description: The maximum number of events to include in the response.
          contentEncoding: int32
          examples:
          - 2
        $page:
          type: string
          description: The maximum number of events to include in the response.
      description: Search Device By Property resource definition.
    SearchSensorHistoryResponseList:
      title: SearchSensorHistoryResponseList
      type: object
      properties:
        SearchSensorHistory:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/SearchDeviceResponse'
          description: ''
      description: A success response includes an array of all matching events.
    RemoveDeviceRequest:
      title: RemoveDeviceRequest
      required:
      - accountidentifier
      - resourceidentifier
      type: object
      properties:
        accountidentifier:
          allOf:
          - $ref: '#/components/schemas/AccountIdentifier'
          - description: The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
            examples:
            - billingaccountid: 0000000000-00001
        resourceidentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          - description: 'The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.'
            examples:
            - id: 2e61a17d-8fd1-6816-e995-e4c2528bf535
      description: The request body identifies the device to delete.
    CreateIoTApplicationRequest:
      title: CreateIoTApplicationRequest
      type: object
      properties:
        appName:
          type: string
          description: A user defined name for the application being deployed in Azure IoT Central.
          examples:
          - newarmapp1
        billingAccountID:
          type: string
          description: The ThingSpace ID of the authenticating billing account
          examples:
          - 0000123456-00001
        clientID:
          type: string
          description: The Azure ClientID of the associated Azure target account
          examples:
          - UUID
        clientSecret:
          type: string
          description: The Azure Client Secret of the associated Azure target account
          examples:
          - client secret
        emailIDs:
          type: string
          description: The “email IDs” to be added to/sent to with this API.
          examples:
          - email@domain.com
        resourcegroup:
          type: string
          description: The Azure Resource group of the associated Azure target account
          examples:
          - Myresourcegroup
        sampleIOTcApp:
          type: string
          description: This is the reference Azure IoT Central application developed by Verizon.
          examples:
          - app ID
        subscriptionID:
          type: string
          description: The Azure Subscription ID of the associated Azure target account
          examples:
          - subscription ID
        tenantID:
          type: string
          description: The Azure Tenant ID of the associated Azure target account
          examples:
          - tenant ID
      description: The request body must include the UUID of the subscription that you want to update plus any properties that you want to change.
    CreateIoTApplicationResponse:
      title: CreateIoTApplicationResponse
      type: object
      properties:
        appName:
          type: string
          description: An application will be created under the user's Azure subscription with this name and of type IOT central.
          examples:
          - newarmapp1
        sharedSecret:
          type: string
          description: Part of the user credentials (from Azure) the user needs to use for calling further TS Core APIs for setting up Azure cloud connector.
          examples:
          - SharedAccessSignaturesr={client secret}
        url:
          type: string
          description: An IOT central endpoint the user can use to see the data that is being streamed.
          examples:
          - https://newarmapp1.azureiotcentral.com
      description: A success response includes an array of all matching events. Each event includes the full event resource definition.
    Fields:
      title: Fields
      type: object
      properties:
        configuration:
          allOf:
          - $ref: '#/components/schemas/configuration'
          - description: List of the field names and values to set.
            examples:
            - frequency: Low
      description: List of fields affected by the event.
      examples:
      - configuration:
          frequency: Low
    Fields1:
      title: Fields1
      type: object
      properties:
        item:
          allOf:
          - $ref: '#/components/schemas/SearchDeviceByPropertyFields'
          - description: List of device sensors and their most recently reported values.
    Fields2:
      title: Fields2
      type: object
      properties:
        temperature:
          type: string
          examples:
          - '18.4'
      description: List of fields affected by the event.
    BullseyeServiceResult:
      title: BullseyeServiceResult
      type: object
      properties:
        accountNumber:
          type: string
          description: The account the device belongs to.
          examples:
          - 0844021539-00001
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceServiceInformation'
          description: List of devices.
          examples:
          - - imei: '709312034493372'
              BullseyeEnable: true
        responseType:
          allOf:
          - $ref: '#/components/schemas/ApiResponseCode'
          - description: ResponseCode and/or a message indicating success or failure of the request.
      description: Status of Hyper Precise Location on the device.
      examples:
      - accountNumber: 0844021539-00001
        deviceList:
        - imei: '709312034493372'
          BullseyeEnable: true
    DeviceServiceInformation:
      title: DeviceServiceInformation
      required:
      - imei
      - BullseyeEnable
      type: object
      properties:
        responseType:
          allOf:
          - $ref: '#/components/schemas/ApiResponseCode'
          - description: ResponseCode and/or a message indicating success or failure of the request.
        imei:
          type: string
          description: The International Mobile Equipment Identifier of the device.
          examples:
          - '709312034493372'
        BullseyeEnable:
          type: boolean
          description: Shows if Hyper Precise is enabled (true) or disabled (false).
          examples:
          - true
      description: Device service information.
      examples:
      - imei: '709312034493372'
        BullseyeEnable: true
    BullseyeServiceRequest:
      title: BullseyeServiceRequest
      required:
      - deviceList
      - accountNumber
      type: object
      properties:
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceServiceRequest'
          description: A list of devices.
          examples:
          - - imei: '354658090356210'
              BullseyeEnable: true
        accountNumber:
          type: string
          description: A unique identifier for an account.
          examples:
          - 0242080353-00001
      description: Account number and list of devices.
      examples:
      - deviceList:
        - imei: '354658090356210'
          BullseyeEnable: true
        accountNumber: 0242080353-00001
    DeviceServiceRequest:
      title: DeviceServiceRequest
      required:
      - imei
      - BullseyeEnable
      type: object
      properties:
        imei:
          pattern: ^[0-9]{15}$
          type: string
          description: International Mobile Equipment Identifier. The unique ID of a device.
          examples:
          - '354658090356210'
        BullseyeEnable:
          type: boolean
          description: Set to Enable (true) or Disable (false).
          examples:
          - true
      description: Device information.
      examples:
      - imei: '354658090356210'
        BullseyeEnable: true
    ErrorResponseCode:
      title: ErrorResponseCode
      enum:
      - INVALID_ACCESS
      - INVALID_PARAMETER
      - INTERNAL_ERROR
      - SUCCESS
      type: string
      description: Error Code.
      examples:
      - INVALID_ACCESS
    HyperPreciseLocationResult:
      title: HyperPreciseLocationResult
      type: object
      properties:
        responseCode:
          allOf:
          - $ref: '#/components/schemas/ErrorResponseCode'
          - description: Error Code.
            examples:
            - INVALID_ACCESS
        message:
          type: string
          description: Error message.
        fault:
          allOf:
          - $ref: '#/components/schemas/HyperPreciseLocationFault'
          - description: Fault occurred while responding.
            examples:
            - code: '900906'
              message: No matching resource found in the API for the given request
              description: Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL.
        example: {}
      description: Error response.
    HyperPreciseLocationFault:
      title: HyperPreciseLocationFault
      type: object
      properties:
        code:
          type: string
          description: Hyper precise location fault code.
          examples:
          - '900906'
        message:
          type: string
          description: Hyper precise location fault message.
          examples:
          - No matching resource found in the API for the given request
        description:
          type: string
          description: Hyper precise location fault description.
          examples:
          - Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL
      description: Fault occurred while responding.
      examples:
      - code: '900906'
        message: No matching resource found in the API for the given request
        description: Access failure for API. Check the API documentation and add a proper REST resource path to the invocation URL.
    ApiResponseCode:
      title: ApiResponseCode
      required:
      - responseCode
      - message
      type: object
      properties:
        responseCode:
          allOf:
          - $ref: '#/components/schemas/ResponseCode'
          - description: Possible response codes.
            examples:
            - INVALID_ACCESS
        message:
          type: string
          description: More details about the responseCode received.
      description: ResponseCode and/or a message indicating success or failure of the request.
    ResponseCode:
      title: ResponseCode
      enum:
      - INVALID_ACCESS
      - INVALID_PARAMETER
      - INTERNAL_ERROR
      - SUCCESS
      type: string
      description: Possible response codes.
      examples:
      - INVALID_ACCESS
    AggregateSessionReportRequest:
      title: AggregateSessionReportRequest
      required:
      - accountNumber
      - imei
      type: object
      properties:
        accountNumber:
          type: string
          description: The unique identifier for the account.
          examples:
          - 0844021539-00001
        startDate:
          type: string
          description: Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.
          examples:
          - 2022-12-09T22:01:06.217Z
        endDate:
          type: string
          description: End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.
          examples:
          - 2022-12-09T22:01:08.734Z
        imei:
          type: array
          items:
            type: string
          description: Devices for which return usage info. Could be 0, 1 or more. In case of 0 will return all devices belonging to customer (except of filtered by other parameters).
          examples:
          - - '709312034493372'
        deviceGroup:
          type:
          - string
          - 'null'
          description: User defined group name the devices are a member of.
        deviceLabel:
          type:
          - string
          - 'null'
          description: Optional filter parameter.
        dataPlan:
          type:
          - string
          - 'null'
          description: The data plan the devices beign queried belong to.
        noSessionFlag:
          type: string
          description: Optional filter parameter which return only devices with no sessions.
          examples:
          - 'false'
      description: Request for getting an aggregated session report.
      examples:
      - accountNumber: 0844021539-00001
        startDate: 2022-12-09T22:01:06.217Z
        endDate: 2022-12-09T22:01:08.734Z
        imei:
        - '709312034493372'
        deviceGroup: null
        dataPlan: null
        noSessionFlag: 'false'
    AggregateUsageError:
      title: AggregateUsageError
      type: object
      properties:
        imei:
          type: string
          description: International Mobile Equipment Identifier. This is the ID of the device reporting errors.
        errorMessage:
          type: string
          description: A general error message.
        errorResponse:
          allOf:
          - $ref: '#/components/schemas/IErrorMessage'
          - description: Error message.
            examples:
            - httpStatusCode: 200 OK
              errorCode: INVALID_ACCESS
      description: Error reported by a device.
    AggregateUsageItem:
      title: AggregateUsageItem
      type: object
      properties:
        imei:
          type: string
          description: International Mobile Equipment Identifier. This is the ID of the device reporting usage.
          examples:
          - '709312034493372'
        numberOfSessions:
          type: integer
          description: Number of sessions established by the device reporting usage.
          contentEncoding: int32
          examples:
          - 1
        bytesTransferred:
          type: integer
          description: The amount of data transferred by the device reporting usage, measured in Bytes.
          contentEncoding: int32
          examples:
          - 2057
        example: {}
      description: Contains usage information per device.
    IErrorMessage:
      title: IErrorMessage
      type: object
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/ErrorResponseCode'
          - description: Error Code.
            examples:
            - INVALID_ACCESS
        errorMessage:
          type: string
          description: Details and additional information about the error code.
        httpStatusCode:
          allOf:
          - $ref: '#/components/schemas/HttpStatusCode'
          - description: HTML error code and description.
            examples:
            - 200 OK
        detailErrorMessage:
          type: string
          description: More detail and information about the HTML error code.
      description: Error message.
      examples:
      - httpStatusCode: 200 OK
        errorCode: INVALID_ACCESS
    HttpStatusCode:
      title: HttpStatusCode
      enum:
      - 100 CONTINUE
      - 101 SWITCHING_PROTOCOLS
      - 102 PROCESSING
      - 103 CHECKPOINT
      - 200 OK
      - 201 CREATED
      - 202 ACCEPTED
      - 203 NON_AUTHORITATIVE_INFORMATION
      - 204 NO_CONTENT
      - 205 RESET_CONTENT
      - 206 PARTIAL_CONTENT
      - 207 MULTI_STATUS
      - 208 ALREADY_REPORTED
      - 226 IM_USED
      - 300 MULTIPLE_CHOICES
      - 301 MOVED_PERMANENTLY
      - 302 FOUND
      - 302 MOVED_TEMPORARILY
      - 303 SEE_OTHER
      - 304 NOT_MODIFIED
      - 305 USE_PROXY
      - 307 TEMPORARY_REDIRECT
      - 308 PERMANENT_REDIRECT
      - 400 BAD_REQUEST
      - 401 UNAUTHORIZED
      - 402 PAYMENT_REQUIRED
      - 403 FORBIDDEN
      - 404 NOT_FOUND
      - 405 METHOD_NOT_ALLOWED
      - 406 NOT_ACCEPTABLE
      - 407 PROXY_AUTHENTICATION_REQUIRED
      - 408 REQUEST_TIMEOUT
      - 409 CONFLICT
      - 410 GONE
      - 411 LENGTH_REQUIRED
      - 412 PRECONDITION_FAILED
      - 413 PAYLOAD_TOO_LARGE
      - 413 REQUEST_ENTITY_TOO_LARGE
      - 414 URI_TOO_LONG
      - 414 REQUEST_URI_TOO_LONG
      - 415 UNSUPPORTED_MEDIA_TYPE
      - 416 REQUESTED_RANGE_NOT_SATISFIABLE
      - 417 EXPECTATION_FAILED
      - 418 I_AM_A_TEAPOT
      - 419 INSUFFICIENT_SPACE_ON_RESOURCE
      - 420 METHOD_FAILURE
      - 421 DESTINATION_LOCKED
      - 422 UNPROCESSABLE_ENTITY
      - 423 LOCKED
      - 424 FAILED_DEPENDENCY
      - 425 TOO_EARLY
      - 426 UPGRADE_REQUIRED
      - 428 PRECONDITION_REQUIRED
      - 429 TOO_MANY_REQUESTS
      - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
      - 451 UNAVAILABLE_FOR_LEGAL_REASONS
      - 500 INTERNAL_SERVER_ERROR
      - 501 NOT_IMPLEMENTED
      - 502 BAD_GATEWAY
      - 503 SERVICE_UNAVAILABLE
      - 504 GATEWAY_TIMEOUT
      - 505 HTTP_VERSION_NOT_SUPPORTED
      - 506 VARIANT_ALSO_NEGOTIATES
      - 507 INSUFFICIENT_STORAGE
      - 508 LOOP_DETECTED
      - 509 BANDWIDTH_LIMIT_EXCEEDED
      - 510 NOT_EXTENDED
      - 511 NETWORK_AUTHENTICATION_REQUIRED
      type: string
      description: HTML error code and description.
      examples:
      - 200 OK
    AggregateSessionReport:
      title: AggregateSessionReport
      required:
      - txid
      type: object
      properties:
        txid:
          type:
          - string
          - 'null'
          description: A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.
        usage:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AggregateUsageItem'
          description: Contains usage per device.
          examples:
          - - imei: '709312034493372'
              numberOfSessions: 1
              bytesTransferred: 2057
        errors:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AggregateUsageError'
          description: An object containing any errors reported by the device.
      description: Session and usage details for up to 10 devices.
      examples:
      - txid: null
        usage:
        - imei: '709312034493372'
          numberOfSessions: 1
          bytesTransferred: 2057
    AggregatedReportCallbackResult:
      title: AggregatedReportCallbackResult
      required:
      - txid
      type: object
      properties:
        txid:
          type: string
          description: A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.
          examples:
          - 60c07fff-470b-4d6d-afcc-75e6a7c238f6
        status:
          allOf:
          - $ref: '#/components/schemas/AggregatedReportCallbackStatus'
          - description: QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all other requests are QUEUED.
            examples:
            - QUEUED
      description: Aggregated usage report (Asynchronous).
      examples:
      - txid: 60c07fff-470b-4d6d-afcc-75e6a7c238f6
        status: QUEUED
    AggregatedReportCallbackStatus:
      title: AggregatedReportCallbackStatus
      enum:
      - QUEUED
      - COMPLETED
      type: string
      description: QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all other requests are QUEUED.
      examples:
      - QUEUED
    SessionReportRequest:
      title: SessionReportRequest
      required:
      - accountNumber
      - imei
      type: object
      properties:
        accountNumber:
          type: string
          description: Account Number.
          examples:
          - 0844021539-00001
        imei:
          type: string
          description: Device ids.
          examples:
          - '709312034493372'
        startDate:
          type: string
          description: Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.
          examples:
          - CURRENT_MONTH
        endDate:
          type: string
          description: End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.
          examples:
          - CURRENT_MONTH
        durationLow:
          type:
          - integer
          - 'null'
          description: The Low value of session duration.
          contentEncoding: int32
        durationHigh:
          type:
          - integer
          - 'null'
          description: The High value of session duration.
          contentEncoding: int32
      description: Request for obtaining a session report.
      examples:
      - accountNumber: 0844021539-00001
        startDate: 2022-12-09T22:01:06.217Z
        endDate: 2022-12-09T22:01:08.734Z
        imei: '709312034493372'
        durationLow: null
        durationHigh: null
    DailyUsageItem:
      title: DailyUsageItem
      type: object
      properties:
        startTime:
          type: string
          description: Start date of session. ISO 8601 format.
        endTime:
          type: string
          description: End date of session. ISO 8601 format.
        numBytes:
          type: integer
          description: Amount of data transferred, measured in Bytes.
          contentEncoding: int32
      description: Contains only dates when device had sessions.
    SessionReport:
      title: SessionReport
      required:
      - id
      - txid
      type: object
      properties:
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/DailyUsageItem'
          description: An object containing the start and end time of the session with the amount of data transferred.
        id:
          type: string
          description: The 10-digit ID of the device.
          examples:
          - '709312034493372'
        txid:
          type:
          - string
          - 'null'
          description: A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.
          examples:
          - 60c07fff-470b-4d6d-afcc-75e6a7c238f6
        example: {}
      description: Session report for a device.
      examples:
      - id: '709312034493372'
        txid: 60c07fff-470b-4d6d-afcc-75e6a7c238f6
    CallbackCreated:
      title: CallbackCreated
      required:
      - aname
      - name
      type: object
      properties:
        aname:
          type: string
          description: The billing account number for which callback messages will be sent.
          examples:
          - 0844021539-00001
        name:
          type: string
          description: The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.
          examples:
          - BullseyeReporting
        url:
          type: string
          description: The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.
          examples:
          - https://tsustgtests.mocklab.io/notifications/bullseye
      examples:
      - aname: 0844021539-00001
        name: BullseyeReporting
        url: https://tsustgtests.mocklab.io/notifications/bullseye
    CallbackRegistered:
      title: CallbackRegistered
      required:
      - accountName
      - name
      type: object
      properties:
        accountName:
          type: string
          description: The billing account number for which callback messages will be sent.
          examples:
          - 0844021539-00001
        name:
          type: string
          description: The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.
          examples:
          - BullseyeReporting
      description: Registered callback listener.
      examples:
      - accountName: 0844021539-00001
        name: BullseyeReporting
    HyperPreciseLocationCallback:
      title: HyperPreciseLocationCallback
      required:
      - name
      - url
      type: object
      properties:
        name:
          type: string
          description: The name of the callback service that you want to subscribe to.
          examples:
          - BullseyeReporting
        url:
          type: string
          description: The address on your server where you have enabled a listening service for the specific type of callback messages. Specify a URL that is reachable from the Verizon data centers. If your service is running on HTTPS, you should use a one-way authentication certificate with a white-listed IP address.
          examples:
          - https://tsustgtests.mocklab.io/notifications/bullseye
      description: Callback registration request.
      examples:
      - name: BullseyeReporting
        url: https://tsustgtests.mocklab.io/notifications/bullseye
    TriggerType1:
      title: TriggerType1
      type: object
      properties:
        name:
          type: string
          description: Trigger name.
          examples:
          - User defined name of the trigger
        triggerCategory:
          type: string
          description: This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.
          examples:
          - UsageAnomaly
        accountName:
          maxLength: 32
          minLength: 3
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        anomalyTriggerRequest:
          allOf:
          - $ref: '#/components/schemas/AnomalyTriggerRequest'
          - description: The details of the UsageAnomaly trigger.
            examples:
            - accountNames: 0000123456-00001
              includeAbnormal: true
              includeVeryAbnormal: true
              includeUnderExpectedUsage: true
              includeOverExpectedUsage: true
        notification:
          allOf:
          - $ref: '#/components/schemas/Notification'
          - description: The notification details of the trigger.
            examples:
            - notificationType: DailySummary
              callback: true
              emailNotification: false
              notificationGroupName: Anomaly Test API
              notificationFrequencyFactor: 3
              notificationFrequencyInterval: Hourly
              externalEmailRecipients: placeholder@verizon.com
              smsNotification: true
              smsNumbers:
              - carrier: US Cellular
                number: '9299280711'
              reminder: true
              severity: Critical
      description: Trigger details.
      examples:
      - name: Anomaly Daily Usage REST Test-Patch 1
        triggerCategory: UsageAnomaly
        accountName: 0000123456-00001
        anomalyTriggerRequest:
          accountNames: 0000123456-00001
          includeAbnormal: true
          includeVeryAbnormal: true
          includeUnderExpectedUsage: true
          includeOverExpectedUsage: true
        notification:
          notificationType: DailySummary
          callback: true
          emailNotification: false
          notificationGroupName: Anomaly Test API
          notificationFrequencyFactor: 3
          notificationFrequencyInterval: Hourly
          externalEmailRecipients: placeholder@verizon.com
          smsNotification: true
          smsNumbers:
          - carrier: US Cellular
            number: '9299280711'
          reminder: true
          severity: Critical
    TriggerType2:
      title: TriggerType2
      type: object
      properties:
        anomalyattributes:
          allOf:
          - $ref: '#/components/schemas/UsageAnomalyAttributes'
          - description: The details of the UsageAnomaly trigger.
            examples:
            - accountNames: 0000123456-00001
              deviceGroup: User Group 1
              includeAbnormal: true
              includeVeryAbnormal: true
              includeUnderExpectedUsage: true
              includeOverExpectedUsage: true
        notification:
          allOf:
          - $ref: '#/components/schemas/Notification'
          - description: The notification details of the trigger.
            examples:
            - notificationType: DailySummary
              callback: true
              emailNotification: false
              notificationGroupName: Anomaly Test API
              notificationFrequencyFactor: 3
              notificationFrequencyInterval: Hourly
              externalEmailRecipients: placeholder@verizon.com
              smsNotification: true
              smsNumbers:
              - carrier: US Cellular
                number: '9299280711'
              reminder: true
              severity: Critical
      description: Trigger details.
      examples:
      - anomalyattributes:
          accountNames: 0000123456-00001
          deviceGroup: User Group 1
          includeAbnormal: true
          includeVeryAbnormal: true
          includeUnderExpectedUsage: true
          includeOverExpectedUsage: true
        notification:
          notificationType: DailySummary
          callback: true
          emailNotification: true
          notificationGroupName: Anomaly Test API
          notificationFrequencyFactor: -2147483648
          externalEmailRecipients: placeholder@verizon.com
          smsNotification: true
          smsNumbers:
          - carrier: US Cellular
            number: '9299280711'
          reminder: false
          severity: Critical
    TriggerType3:
      title: TriggerType3
      type: object
      properties:
        triggerId:
          type: string
          description: Trigger ID.
          examples:
          - BE1B5958-3E11-41DB-9ABD-B1B7618C0035
        triggerName:
          type: string
          description: Trigger name.
          examples:
          - User defined name of the trigger
        triggerCategory:
          type: string
          description: This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.
          examples:
          - UsageAnomaly
        accountName:
          maxLength: 32
          minLength: 3
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        anomalyTriggerRequest:
          allOf:
          - $ref: '#/components/schemas/AnomalyTriggerRequest'
          - description: The details of the UsageAnomaly trigger.
            examples:
            - accountNames: 0000123456-00001
              includeAbnormal: true
              includeVeryAbnormal: true
              includeUnderExpectedUsage: true
              includeOverExpectedUsage: true
        notification:
          allOf:
          - $ref: '#/components/schemas/Notification'
          - description: The notification details of the trigger.
            examples:
            - notificationType: DailySummary
              callback: true
              emailNotification: false
              notificationGroupName: Anomaly Test API
              notificationFrequencyFactor: 3
              notificationFrequencyInterval: Hourly
              externalEmailRecipients: placeholder@verizon.com
              smsNotification: true
              smsNumbers:
              - carrier: US Cellular
                number: '9299280711'
              reminder: true
              severity: Critical
      description: Trigger details.
      examples:
      - triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
        triggerName: Anomaly Daily Usage REST Test-Patch Update 4
        accountName: 0000123456-00001
        triggerCategory: UsageAnomaly
        anomalyTriggerRequest:
          accountNames: 0000123456-00001
          includeAbnormal: true
          includeVeryAbnormal: true
          includeUnderExpectedUsage: false
          includeOverExpectedUsage: true
        notification:
          notificationType: DailySummary
          callback: true
          emailNotification: false
          notificationGroupName: Anomaly Test API
          notificationFrequencyFactor: 3
          notificationFrequencyInterval: Hourly
          externalEmailRecipients: placeholder@verizon.com
          smsNotification: true
          smsNumbers:
          - carrier: US Cellular
            number: '9299280711'
          reminder: true
          severity: Critical
    AnomalyTriggerRequest:
      title: AnomalyTriggerRequest
      type: object
      properties:
        accountNames:
          maxLength: 32
          minLength: 3
          type: string
          description: The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 0000123456-00001
        includeAbnormal:
          type: boolean
          description: Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.
          examples:
          - true
        includeVeryAbnormal:
          type: boolean
          description: Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.
          examples:
          - true
        includeUnderExpectedUsage:
          type: boolean
          description: Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.
          examples:
          - true
        includeOverExpectedUsage:
          type: boolean
          description: Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.
          examples:
          - true
      description: The details of the UsageAnomaly trigger.
      examples:
      - accountNames: 0000123456-00001
        includeAbnormal: true
        includeVeryAbnormal: true
        includeUnderExpectedUsage: true
        includeOverExpectedUsage: true
    UsageAnomalyAttributes:
      title: UsageAnomalyAttributes
      type: object
      properties:
        accountNames:
          maxLength: 32
          minLength: 3
          type: string
          description: The Verizon billing account associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 0000123456-00001
        deviceGroup:
          type: string
          description: The names of device groups associated with the anomaly triggers for this trigger to be active for devices in those groups.
          examples:
          - The group name for devices using this trigger (optional))
        includeAbnormal:
          type: boolean
          description: Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.
          examples:
          - true
        includeVeryAbnormal:
          type: boolean
          description: Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.
          examples:
          - true
        includeUnderExpectedUsage:
          type: boolean
          description: Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.
          examples:
          - true
        includeOverExpectedUsage:
          type: boolean
          description: Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.
          examples:
          - true
      description: The details of the UsageAnomaly trigger.
      examples:
      - accountNames: 0000123456-00001
        deviceGroup: User Group 1
        includeAbnormal: true
        includeVeryAbnormal: true
        includeUnderExpectedUsage: true
        includeOverExpectedUsage: true
    SMSNumber:
      title: SMSNumber
      type: object
      properties:
        carrier:
          type: string
          examples:
          - Verizon
        number:
          type: string
          examples:
          - '1234567890'
      description: Notification SMS details.
      examples:
      - carrier: US Cellular
        number: '9299280711'
    Notification:
      title: Notification
      type: object
      properties:
        notificationType:
          type: string
          description: The type of notification, i.e. 'DailySummary'.
          examples:
          - DailySummary
        callback:
          type: boolean
          description: Whether or not the notification should be sent via callback.<br />true<br />false.
          examples:
          - true
        emailNotification:
          type: boolean
          description: Whether or not the notification should be sent via e-mail.<br />true<br />false.
          examples:
          - false
        notificationGroupName:
          type: string
          description: Name for the notification group.
          examples:
          - Anomaly Test API
        notificationFrequencyFactor:
          type: integer
          description: Frequency factor for notification.
          contentEncoding: int32
          examples:
          - 3
        notificationFrequencyInterval:
          type: string
          description: Frequency interval for notification.
          examples:
          - Hourly
        externalEmailRecipients:
          type: string
          description: E-mail address(es) where the notification should be delivered.
          examples:
          - placeholder@gmail.com
        smsNotification:
          type: boolean
          description: SMS notification.
          examples:
          - true
        smsNumbers:
          maxItems: 10
          type: array
          items:
            $ref: '#/components/schemas/SMSNumber'
          description: List of SMS numbers.
          examples:
          - - carrier: US Cellular
              number: '9299280711'
        reminder:
          type: boolean
          examples:
          - true
        severity:
          type: string
          description: Severity level associated with the notification. Examples would be:<br />Major<br />Minor<br />Critical<br />NotApplicable.
          examples:
          - Critical
      description: The notification details of the trigger.
      examples:
      - notificationType: DailySummary
        callback: true
        emailNotification: false
        notificationGroupName: Anomaly Test API
        notificationFrequencyFactor: 3
        notificationFrequencyInterval: Hourly
        externalEmailRecipients: placeholder@verizon.com
        smsNotification: true
        smsNumbers:
        - carrier: US Cellular
          number: '9299280711'
        reminder: true
        severity: Critical
    UpdateTriggerRequest:
      title: UpdateTriggerRequest
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        active:
          type: boolean
        anomalyTriggerRequest:
          allOf:
          - $ref: '#/components/schemas/AnomalyTriggerRequest'
          - description: The details of the UsageAnomaly trigger.
            examples:
            - accountNames: 0000123456-00001
              includeAbnormal: true
              includeVeryAbnormal: true
              includeUnderExpectedUsage: true
              includeOverExpectedUsage: true
        cycleType:
          $ref: '#/components/schemas/CycleType'
        dataTriggerRequest:
          $ref: '#/components/schemas/DataTriggerRequest'
        groupName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        promoAlertTriggerRequest:
          $ref: '#/components/schemas/PromoAlertTriggerRequest'
        sessionTriggerRequest:
          $ref: '#/components/schemas/SessionTriggerRequest'
        smsTriggerRequest:
          $ref: '#/components/schemas/SMSTriggerRequest'
        triggerCategory:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        triggerId:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        triggerName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
    PromoAlertTriggerRequest:
      title: PromoAlertTriggerRequest
      type: object
      properties:
        dataPercentage50:
          type: boolean
        dataPercentage75:
          type: boolean
        dataPercentage90:
          type: boolean
        noOfDaysB4PromoExp:
          maximum: 180
          minimum: 0
          type: integer
          contentEncoding: int32
        smsPercentage50:
          type: boolean
        smsPercentage75:
          type: boolean
        smsPercentage90:
          type: boolean
    CreateTriggerRequest:
      title: CreateTriggerRequest
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        anomalyTriggerRequest:
          allOf:
          - $ref: '#/components/schemas/AnomalyTriggerRequest'
          - description: The details of the UsageAnomaly trigger.
            examples:
            - accountNames: 0000123456-00001
              includeAbnormal: true
              includeVeryAbnormal: true
              includeUnderExpectedUsage: true
              includeOverExpectedUsage: true
        dataTriggerRequest:
          $ref: '#/components/schemas/DataTriggerRequest'
        groupName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        name:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        sessionTriggerRequest:
          $ref: '#/components/schemas/SessionTriggerRequest'
        smsTriggerRequest:
          $ref: '#/components/schemas/SMSTriggerRequest'
        triggerCategory:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        triggerCycle:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
    DataTriggerRequest:
      title: DataTriggerRequest
      type: object
      properties:
        comparator:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        threshold:
          maximum: 100
          minimum: 0
          type: integer
          contentEncoding: int32
        thresholdUnit:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
    SessionTriggerRequest:
      title: SessionTriggerRequest
      type: object
      properties:
        comparator:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        threshold:
          maximum: 100
          minimum: 0
          type: integer
          contentEncoding: int32
    SMSTriggerRequest:
      title: SMSTriggerRequest
      type: object
      properties:
        comparator:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        smsType:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        threshold:
          maximum: 100
          minimum: 0
          type: integer
          contentEncoding: int32
    CreateTriggerRequestOptions:
      title: CreateTriggerRequestOptions
      type: object
      properties:
        name:
          type: string
          description: Trigger name.
          examples:
          - User defined name of the trigger
        triggerCategory:
          type: string
          description: This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.
          examples:
          - UsageAnomaly
        accountName:
          maxLength: 32
          minLength: 3
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        anomalyTriggerRequest:
          allOf:
          - $ref: '#/components/schemas/AnomalyTriggerRequest'
          - description: The details of the UsageAnomaly trigger.
            examples:
            - accountNames: 0000123456-00001
              includeAbnormal: true
              includeVeryAbnormal: true
              includeUnderExpectedUsage: true
              includeOverExpectedUsage: true
        notification:
          allOf:
          - $ref: '#/components/schemas/Notification'
          - description: The notification details of the trigger.
            examples:
            - notificationType: DailySummary
              callback: true
              emailNotification: false
              notificationGroupName: Anomaly Test API
              notificationFrequencyFactor: 3
              notificationFrequencyInterval: Hourly
              externalEmailRecipients: placeholder@verizon.com
              smsNotification: true
              smsNumbers:
              - carrier: US Cellular
                number: '9299280711'
              reminder: true
              severity: Critical
        active:
          type: boolean
          description: Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.
          examples:
          - true
      examples:
      - name: Anomaly Daily Usage REST Test-Patch 1
        triggerCategory: UsageAnomaly
        accountName: 0000123456-00001
        anomalyTriggerRequest:
          accountNames: 0000123456-00001
          includeAbnormal: true
          includeVeryAbnormal: true
          includeUnderExpectedUsage: true
          includeOverExpectedUsage: true
        notification:
          notificationType: DailySummary
          callback: true
          emailNotification: false
          notificationGroupName: Anomaly Test API
          notificationFrequencyFactor: 3
          notificationFrequencyInterval: Hourly
          externalEmailRecipients: placeholder@verizon.com
          smsNotification: true
          smsNumbers:
          - carrier: US Cellular
            number: '9299280711'
          reminder: true
          severity: Critical
    UpdateTriggerRequestOptions:
      title: UpdateTriggerRequestOptions
      type: object
      properties:
        triggerId:
          type: string
          description: Trigger ID.
          examples:
          - BE1B5958-3E11-41DB-9ABD-B1B7618C0035
        triggerName:
          type: string
          description: Trigger name.
          examples:
          - User defined name of the trigger
        triggerCategory:
          type: string
          description: This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.
          examples:
          - UsageAnomaly
        accountName:
          maxLength: 32
          minLength: 3
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        anomalyTriggerRequest:
          allOf:
          - $ref: '#/components/schemas/AnomalyTriggerRequest'
          - description: The details of the UsageAnomaly trigger.
            examples:
            - accountNames: 0000123456-00001
              includeAbnormal: true
              includeVeryAbnormal: true
              includeUnderExpectedUsage: true
              includeOverExpectedUsage: true
        notification:
          allOf:
          - $ref: '#/components/schemas/Notification'
          - description: The notification details of the trigger.
            examples:
            - notificationType: DailySummary
              callback: true
              emailNotification: false
              notificationGroupName: Anomaly Test API
              notificationFrequencyFactor: 3
              notificationFrequencyInterval: Hourly
              externalEmailRecipients: placeholder@verizon.com
              smsNotification: true
              smsNumbers:
              - carrier: US Cellular
                number: '9299280711'
              reminder: true
              severity: Critical
        active:
          type: boolean
          description: Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.
          examples:
          - true
      examples:
      - triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
        triggerName: Anomaly Daily Usage REST Test-Patch Update 4
        accountName: 0000123456-00001
        triggerCategory: UsageAnomaly
        anomalyTriggerRequest:
          accountNames: 0000123456-00001
          includeAbnormal: true
          includeVeryAbnormal: true
          includeUnderExpectedUsage: false
          includeOverExpectedUsage: true
        notification:
          notificationType: DailySummary
          callback: true
          emailNotification: false
          notificationGroupName: Anomaly Test API
          notificationFrequencyFactor: 3
          notificationFrequencyInterval: Hourly
          externalEmailRecipients: placeholder@verizon.com
          smsNotification: true
          smsNumbers:
          - carrier: US Cellular
            number: '9299280711'
          reminder: true
          severity: Critical
    GetTriggerResponse:
      title: GetTriggerResponse
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        comparator:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        createdAt:
          type: string
          contentEncoding: date-time
        groupName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        modifiedAt:
          type: string
          contentEncoding: date-time
        notificationGroupName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        organizationName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        smsType:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        threshold:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        thresholdUnit:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        triggerCategory:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        triggerCycle:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        triggerId:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        triggerName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
    GetTriggerResponseList:
      title: GetTriggerResponseList
      type: object
      properties:
        triggers:
          maxItems: 3
          type: array
          items:
            $ref: '#/components/schemas/GetTriggerResponse'
          description: ''
    ActiveAnomalyIndicator:
      title: ActiveAnomalyIndicator
      type: object
      properties:
        active:
          type: boolean
          description: Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.
          examples:
          - true
      description: Whether the anomaly detection is active or not.
      examples:
      - active: true
    ActiveTriggerIndicator:
      title: ActiveTriggerIndicator
      type: object
      properties:
        active:
          type: boolean
          description: Indicates if the trigger is active<br />True - trigger is active<br />False - trigger is not active.
          examples:
          - true
      description: Whether the trigger is active or not.
      examples:
      - active: true
    AnomalyTriggerResult:
      title: AnomalyTriggerResult
      type: object
      properties:
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/TriggersListOptions'
          description: Trigger value chunk details.
          examples:
          - - triggerId: BE1B5958-3E11-41DB-9ABD-B1B7618C0035
              triggerName: Anomaly Daily Usage REST Test-1
              organizationName: AnamolyDetectionRTRTest
              triggerCategory: UsageAnomaly
              triggerAttributes:
              - key: DataPercentage50
                value: false
              createdAt: 2021-10-21T23:57:03.397.0000Z
              modifiedAt: 2021-10-21T23:57:03.397.0000Z
              notification:
                notificationType: DailySummary
                callback: true
                emailNotification: true
                notificationGroupName: Anomaly Test API
                notificationFrequencyFactor: -2147483648
                externalEmailRecipients: placeholder@verizon.com
                smsNotification: true
                smsNumbers:
                - carrier: US Cellular
                  number: '9299280711'
                reminder: false
                severity: Critical
      description: A result containing a list of anomaly triggers.
      examples:
      - triggers:
        - triggerId: BE1B5958-3E11-41DB-9ABD-B1B7618C0035
          triggerName: Anomaly Daily Usage REST Test-1
          organizationName: AnamolyDetectionRTRTest
          triggerCategory: UsageAnomaly
          triggerAttributes:
          - key: DataPercentage50
            value: false
          createdAt: 2021-10-21T23:57:03.397.0000Z
          modifiedAt: 2021-10-21T23:57:03.397.0000Z
          notification:
            notificationType: DailySummary
            callback: true
            emailNotification: true
            notificationGroupName: Anomaly Test API
            notificationFrequencyFactor: -2147483648
            externalEmailRecipients: placeholder@verizon.com
            smsNotification: true
            smsNumbers:
            - carrier: US Cellular
              number: '9299280711'
            reminder: false
            severity: Critical
    TriggersListOptions:
      title: TriggersListOptions
      type: object
      properties:
        triggerId:
          type: string
          description: The system assigned name of the trigger being updated.
          examples:
          - BE1B5958-3E11-41DB-9ABD-B1B7618C0035
        triggerName:
          type: string
          description: The user defined name of the trigger.
          examples:
          - A user defined name of the trigger
        organizationName:
          type: string
          description: The user assigned name of the organization associated with the trigger.
          examples:
          - Group name the trigger is assigned to (optional)
        triggerCategory:
          type: string
          description: This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.
          examples:
          - UsageAnomaly
        triggerAttributes:
          type: array
          items:
            $ref: '#/components/schemas/TriggerAttributesOptions'
          description: Additional details and keys for the trigger.
          examples:
          - - key: DataPercentage50
              value: false
        createdAt:
          type: string
          description: Timestamp for whe the trigger was created.
          examples:
          - 2021-10-21T23:57:03.397.0000Z
        modifiedAt:
          type: string
          description: Timestamp for the most recent time the trigger was modified.
          examples:
          - 2021-10-21T23:57:03.397.0000Z
        anomalyattributes:
          allOf:
          - $ref: '#/components/schemas/UsageAnomalyAttributes'
          - description: The details of the UsageAnomaly trigger.
            examples:
            - accountNames: 0000123456-00001
              deviceGroup: User Group 1
              includeAbnormal: true
              includeVeryAbnormal: true
              includeUnderExpectedUsage: true
              includeOverExpectedUsage: true
        notification:
          allOf:
          - $ref: '#/components/schemas/Notification'
          - description: The notification details of the trigger.
            examples:
            - notificationType: DailySummary
              callback: true
              emailNotification: false
              notificationGroupName: Anomaly Test API
              notificationFrequencyFactor: 3
              notificationFrequencyInterval: Hourly
              externalEmailRecipients: placeholder@verizon.com
              smsNotification: true
              smsNumbers:
              - carrier: US Cellular
                number: '9299280711'
              reminder: true
              severity: Critical
      examples:
      - triggerId: BE1B5958-3E11-41DB-9ABD-B1B7618C0035
        triggerName: Anomaly Daily Usage REST Test-1
        organizationName: AnamolyDetectionRTRTest
        triggerCategory: UsageAnomaly
        triggerAttributes:
        - key: DataPercentage50
          value: false
        createdAt: 2021-10-21T23:57:03.397Z
        modifiedAt: 2021-10-21T23:57:03.397Z
    AnomalyTriggerValue:
      title: AnomalyTriggerValue
      type: object
      properties:
        triggerId:
          type: string
          description: The system assigned name of the trigger being updated.
          examples:
          - BE1B5958-3E11-41DB-9ABD-B1B7618C0035
        triggerName:
          type: string
          description: The user defined name of the trigger.
          examples:
          - A user defined name of the trigger
        organizationName:
          type: string
          description: The user assigned name of the organization associated with the trigger.
          examples:
          - Group name the trigger is assigned to (optional)
        triggerCategory:
          type: string
          description: This is the value to use in the request body to detect anomalous behaivior. The values in this table will only be relevant when this parameter is set to this value.
          examples:
          - UsageAnomaly
        triggerAttributes:
          type: array
          items:
            $ref: '#/components/schemas/TriggerAttributesOptions'
          description: Additional details and keys for the trigger.
          examples:
          - - key: DataPercentage50
              value: false
        createdAt:
          type: string
          description: Timestamp for whe the trigger was created.
          examples:
          - 2021-10-21T23:57:03.397.0000Z
        modifiedAt:
          type: string
          description: Timestamp for the most recent time the trigger was modified.
          examples:
          - 2021-10-21T23:57:03.397.0000Z
      description: Trigger details.
      examples:
      - triggerId: BE1B5958-3E11-41DB-9ABD-B1B7618C0035
        triggerName: Anomaly Daily Usage REST Test-1
        organizationName: AnamolyDetectionRTRTest
        triggerCategory: UsageAnomaly
        triggerAttributes:
        - key: DataPercentage50
          value: false
        createdAt: 2021-10-21T23:57:03.397.0000Z
        modifiedAt: 2021-10-21T23:57:03.397.0000Z
    TriggerAttributesOptions:
      title: TriggerAttributesOptions
      type: object
      properties:
        key:
          type: string
          description: If present, the NotificationGroupName will be listed here.
          examples:
          - NotificationGroupName
        value:
          type: boolean
          description: DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.
          examples:
          - false
      examples:
      - key: DataPercentage50
    NotificationGroupNameTriggerAttribute:
      title: NotificationGroupNameTriggerAttribute
      type: object
      properties:
        key:
          type: string
          description: If present, the NotificationGroupName will be listed here.
          examples:
          - NotificationGroupName
      description: Notification group name trigger attribute.
      examples:
      - key: NotificationGroupName
    ServicePlanTriggerAttribute:
      title: ServicePlanTriggerAttribute
      type: object
      properties:
        key:
          type: string
          description: The ServicePlan name will be listed here.
          examples:
          - ServicePlan
      description: Key service plan trigger attribute.
      examples:
      - key: ServicePlan
    DataPercentage50TriggerAttribute:
      title: DataPercentage50TriggerAttribute
      type: object
      properties:
        key:
          type: string
          description: Key data percentage 50.
          examples:
          - DataPercentage50
        value:
          type: boolean
          description: DataPercentage50<br />True - Trigger on Data percentage is over 50% used<br />False - Do not trigger when over 50% used.
          examples:
          - false
      description: Trigger attribute for when data percentage is over 50% used.
      examples:
      - key: DataPercentage50
        value: false
    DataPercentage75TriggerAttribute:
      title: DataPercentage75TriggerAttribute
      type: object
      properties:
        key:
          type: string
          description: Key data percentage 75.
          examples:
          - DataPercentage75
        value:
          type: boolean
          description: DataPercentage75<br />True - Trigger on Data percentage is over 75% used<br />False - Do not trigger when over 75% used.
          examples:
          - false
      description: Trigger attribute for when data percentage is over 75% used.
      examples:
      - key: DataPercentage75
        value: false
    DataPercentage90TriggerAttribute:
      title: DataPercentage90TriggerAttribute
      type: object
      properties:
        key:
          type: string
          description: Key data percentage 90.
          examples:
          - DataPercentage90
        value:
          type: boolean
          description: DataPercentage90<br />True - Trigger on Data percentage is over 90% used<br />False - Do not trigger when over 90% used.
          examples:
          - false
      description: Trigger attribute for when data percentage is over 90% used.
      examples:
      - key: DataPercentage90
        value: false
    DataPercentage100TriggerAttribute:
      title: DataPercentage100TriggerAttribute
      type: object
      properties:
        key:
          type: string
          description: Key data percentage 100.
          examples:
          - DataPercentage100
        value:
          type: boolean
          description: DataPercentage100<br />True - Trigger on Data percentage is over 100% used<br />False - Do not trigger when over 100% used.
          examples:
          - false
      description: Trigger attribute for when data percentage is over 100% used.
      examples:
      - key: DataPercentage100
        value: false
    AnomalyDetectionSettings:
      title: AnomalyDetectionSettings
      type: object
      properties:
        accountName:
          type: string
          description: Indicates if the account name used has anomaly detection.<br />Success - The account has anomaly detection.<br />Failure - The account does not have anomaly detection.
          examples:
          - Success
        sensitivityParameter:
          allOf:
          - $ref: '#/components/schemas/SensitivityParameters'
          - description: Details for sensitivity parameters.
            examples:
            - abnormalMaxValue: 1.1
              enableAbnormal: true
              enableVeryAbnormal: true
              veryAbnormalMaxValue: 0.55
        status:
          type: string
          description: Indicates if anomaly detection is active on the account<br />Active - Anomaly detection is active<br />Disabled- Anomaly detection is not active.
          examples:
          - Active
      description: Settings for anomaly detection.
      examples:
      - accountName: Success
        sensitivityParameter:
          abnormalMaxValue: 1.1
          enableAbnormal: true
          enableVeryAbnormal: true
          veryAbnormalMaxValue: 0.55
        status: Active
    AnomalyDetectionRequest:
      title: AnomalyDetectionRequest
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          type: string
          description: The name of a billing account. An account name is usually numeric, and must include any leading zeros.
          examples:
          - 0000123456-00001
        requestType:
          type: string
          description: The type of request being made. anomaly is the request to activate anomaly detection.
          examples:
          - anomaly
        sensitivityParameter:
          allOf:
          - $ref: '#/components/schemas/SensitivityParameters'
          - description: Details for sensitivity parameters.
            examples:
            - abnormalMaxValue: 1.1
              enableAbnormal: true
              enableVeryAbnormal: true
              veryAbnormalMaxValue: 0.55
      description: Anomaly detection request.
      examples:
      - accountName: 0000123456-00001
        requestType: anomaly
        sensitivityParameter:
          abnormalMaxValue: 1.1
          enableAbnormal: true
          enableVeryAbnormal: true
          veryAbnormalMaxValue: 0.55
    SensitivityParameters:
      title: SensitivityParameters
      type: object
      properties:
        abnormalMaxValue:
          type: number
          description: The maximum value of the threshold in the units being measured.
          examples:
          - 1.1
        enableAbnormal:
          type: boolean
          description: If abnormal values are being monitored.<br />true - Monitor for abnormal values<br />false - Do not monitor for abnormal values.
          examples:
          - true
        enableVeryAbnormal:
          type: boolean
          description: If very abnormal values are being monitored.<br />true - Monitor for very abnormal values<br />false - Do not monitor for very abnormal values.
          examples:
          - true
        veryAbnormalMaxValue:
          type: number
          description: The maximum value of the threshold in the units being measured.
          examples:
          - 0.55
      description: Details for sensitivity parameters.
      examples:
      - abnormalMaxValue: 1.1
        enableAbnormal: true
        enableVeryAbnormal: true
        veryAbnormalMaxValue: 0.55
    IntelligenceSuccessResult:
      title: IntelligenceSuccessResult
      type: object
      properties:
        status:
          type: string
          description: Anomaly detection status.
          examples:
          - Success
      description: Success response.
      examples:
      - status: Success
    AnomalyDetectionTrigger:
      title: AnomalyDetectionTrigger
      type: object
      properties:
        triggerId:
          type: string
          description: Trigger ID to identify the request in a callback.
          examples:
          - be1b5958-3e11-41db-9abd-b1b7618c0035
      description: Trigger for anomaly detection.
      examples:
      - triggerId: 595f5c44-c31c-4552-8670-020a1545a84d
    IntelligenceResult:
      title: IntelligenceResult
      type: object
      properties:
        errorCode:
          maxLength: 3
          pattern: ^[0-9]{3}$
          type: string
          description: The 3-digit HTML error code.
        errorMessage:
          maxLength: 1000
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          description: Error Message.
      description: An error occurred.
    CycleType:
      title: CycleType
      enum:
      - cycleone
      - cycletwo
      type: string
    GetDeviceExperienceScoreHistoryRequest:
      title: GetDeviceExperienceScoreHistoryRequest
      required:
      - accountName
      - deviceId
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9-]{3,32}$
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        deviceId:
          allOf:
          - $ref: '#/components/schemas/DeviceIdentifier'
          - description: Device Id details.
      description: Get device experience score history.
    GetDeviceExperienceScoreBulkRequest:
      title: GetDeviceExperienceScoreBulkRequest
      required:
      - accountName
      - deviceList
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9-]{3,32}$
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        deviceList:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeviceIdentifier'
          description: ''
      description: Get device experience score bulk request.
    GetNetworkConditionsRequest:
      title: GetNetworkConditionsRequest
      required:
      - accountName
      - locationType
      - coordinates
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9-]{3,32}$
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        locationType:
          maxLength: 10
          minLength: 3
          pattern: ^[A-Za-z]{3,10}$
          type: string
          description: Type of location detail.
          examples:
          - LONGLAT
        coordinates:
          allOf:
          - $ref: '#/components/schemas/Coordinates'
          - description: Coordinates information.
      description: Get network conditions.
    GetWirelessCoverageRequest:
      title: GetWirelessCoverageRequest
      required:
      - accountName
      - requestType
      - locationType
      - locations
      - networkTypesList
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9-]{3,32}$
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        requestType:
          maxLength: 12
          minLength: 2
          pattern: ^[A-Za-z]{2,12}$
          type: string
          description: Type of request.
          examples:
          - NW
        locationType:
          maxLength: 12
          minLength: 3
          pattern: ^[A-Za-z]{3,12}$
          type: string
          description: Type of location detail.
          examples:
          - LONGLAT
        locations:
          allOf:
          - $ref: '#/components/schemas/Locationscoord'
          - description: Location coordinates.
        networkTypesList:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/NetworkType'
          description: ''
      description: Get wireless coverage.
    GetWirelessCoverageRequestFWA:
      title: GetWirelessCoverageRequestFWA
      required:
      - accountName
      - requestType
      - locationType
      - locations
      - networkTypesList
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9-]{3,32}$
          type: string
          description: Account name.
          examples:
          - 0000123456-00001
        requestType:
          maxLength: 12
          minLength: 3
          pattern: ^[A-Za-z]{3,12}$
          type: string
          description: Type of request.
          examples:
          - FWA
        locationType:
          maxLength: 12
          minLength: 3
          pattern: ^[A-Za-z]{3,12}$
          type: string
          description: Type of location detail.
          examples:
          - ADDRESS
        locations:
          allOf:
          - $ref: '#/components/schemas/Locations'
          - description: Location details.
        networkTypesList:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/NetworkType'
          description: ''
      description: Get wireless coverage FWA.
    Locationscoord:
      title: Locationscoord
      required:
      - coordinatesList
      type: object
      properties:
        coordinatesList:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/Coordinates'
          description: ''
      description: Location coordinates.
    Locations:
      title: Locations
      type: object
      properties:
        addressList:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/AddressItem'
          description: ''
      description: Location details.
    NetworkType:
      title: NetworkType
      type: object
      properties:
        networkType:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          examples:
          - LTE
      description: Network type.
    Coordinates:
      title: Coordinates
      type: object
      properties:
        latitude:
          maxLength: 12
          minLength: 3
          pattern: ^[-+]?([0-9.]{3,12})$
          type: string
          description: Latitude value of location.
          examples:
          - '-33.84819'
        longitude:
          maxLength: 12
          minLength: 3
          pattern: ^[-+]?([0-9.]{3,12})$
          type: string
          description: Longitude value of location.
          examples:
          - '151.22049'
      description: Coordinates information.
    AddressItem:
      title: AddressItem
      type: object
      properties:
        addressLine1:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9 ,]{3,32}$
          type: string
          description: Street Address.
          examples:
          - street number and name
        addressLine2:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9 ,]{3,32}$
          type: string
          description: Optional address information.
          examples:
          - optional address information
        city:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          description: Name of the city.
          examples:
          - name of the city
        state:
          maxLength: 3
          minLength: 2
          pattern: ^[A-Za-z]{2,3}$
          type: string
          description: State code.
          examples:
          - NY
        country:
          maxLength: 3
          minLength: 3
          pattern: ^[A-Za-z]{3,3}$
          type: string
          description: Country.
          examples:
          - USA
        zip:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5,5}$
          type: string
          description: Five digit zipcode.
          examples:
          - '10001'
        zip4:
          maxLength: 4
          minLength: 4
          pattern: ^[0-9]{4,4}$
          type: string
          description: Four digit zip code.
          examples:
          - '0727'
      description: Address details.
    DeviceIdentifier:
      title: DeviceIdentifier
      required:
      - kind
      - id
      type: object
      properties:
        kind:
          maxLength: 6
          minLength: 3
          pattern: ^[A-Za-z]{3,6}$
          type: string
          description: Kind of device.
          examples:
          - iccid
        id:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9]{3,32}$
          type: string
          description: Device Identity number.
          examples:
          - '01234567899876543210'
        mdn:
          maxLength: 10
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,10}$
          type: string
          description: Device MDN number.
          examples:
          - '0123456789'
      description: Device Id details.
    WNPRequestResponse:
      title: WNPRequestResponse
      type: object
      properties:
        requestId:
          maxLength: 64
          minLength: 3
          pattern: ^[A-Za-z0-9-]{3,64}$
          type: string
          description: Request id.
          examples:
          - d1f08526-5443-4054-9a29-4456490ea9f8
      description: Wireless network performance request response.
    WNPRestErrorResponse:
      title: WNPRestErrorResponse
      type: object
      properties:
        errorCode:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3,3}$
          type: string
          description: Rest error response.
          examples:
          - '400'
        errorMessage:
          maxLength: 64
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,64}$
          type: string
          description: Error message details.
          examples:
          - A brief description of the error code
      description: Wireless network performance rest error response.
    StatusResponse:
      title: StatusResponse
      type: object
      properties:
        requestId:
          maxLength: 64
          minLength: 3
          pattern: ^[a-z-0-9]{3,64}$
          type: string
          examples:
          - d1f08526-5443-4054-9a29-4456490ea9f8
        status:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          examples:
          - Success
        subrequests:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/Subrequest'
          description: ''
    Subrequest:
      title: Subrequest
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/GIODeviceId'
        status:
          maxLength: 8
          minLength: 3
          pattern: ^[A-Za-z]{3,8}$
          type: string
          examples:
          - Success
    ProvhistoryRequest:
      title: ProvhistoryRequest
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Z a-z 0-9 \-]{3,32}$
          type: string
          examples:
          - 0000123456-00001
        deviceFilter:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/GIODeviceId'
          description: ''
        earliest:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-10-15T04:49:35-00:00
        latest:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-10-15T04:49:49-00:00
    GetDeviceListWithProfilesRequest:
      title: GetDeviceListWithProfilesRequest
      required:
      - accountName
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9\-]{3,32}$
          type: string
          examples:
          - 0000123456-00001
        provisioningStatusFilter:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          examples:
          - ACTIVE
        profileStatusFilter:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
          examples:
          - UNKNOWN
        carrierNameFilter:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        deviceFilter:
          maxItems: 50
          type: array
          items:
            $ref: '#/components/schemas/GIODeviceId'
          description: ''
    SMSEventHistoryRequest:
      title: SMSEventHistoryRequest
      required:
      - deviceId
      type: object
      properties:
        deviceId:
          $ref: '#/components/schemas/GIODeviceId'
        earliest:
          type: string
          contentEncoding: date-time
        latest:
          type: string
          contentEncoding: date-time
    SmsMessagesResponse:
      title: SmsMessagesResponse
      type: object
      properties:
        messages:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/GIOSmsMessage'
          description: ''
        hasMoreData:
          type: boolean
          examples:
          - false
    GIOSmsMessage:
      title: GIOSmsMessage
      type: object
      properties:
        deviceIds:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/GIODeviceId'
          description: ''
        message:
          maxLength: 120
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,120}$
          type: string
          examples:
          - a text message
        timestamp:
          type: string
          contentEncoding: date-time
    GIOSMSSendRequest:
      title: GIOSMSSendRequest
      required:
      - deviceIds
      - smsMessage
      type: object
      properties:
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        customFields:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/KvPair'
          description: ''
        dataEncoding:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        groupName:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        servicePlan:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        timeToLive:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        deviceIds:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/GIODeviceId'
          description: ''
        smsMessage:
          maxLength: 64
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,64}$
          type: string
          examples:
          - A text message
    KvPair:
      title: KvPair
      type: object
      properties:
        key:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
        value:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9]{3,32}$
          type: string
    SMSOptionsSendRequest:
      title: SMSOptionsSendRequest
      type: object
      properties:
        servicePlan:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          examples:
          - the name of a service plan
        smsMessage:
          maxLength: 64
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,64}$
          type: string
          examples:
          - A text message
    GIOProfileRequest:
      title: GIOProfileRequest
      required:
      - devices
      - accountName
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/GIODeviceList'
          description: ''
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9\-]{3,32}$
          type: string
          examples:
          - 0000123456-00001
        mdnZipCode:
          maxLength: 5
          minLength: 5
          pattern: ^[0-9]{5,5}$
          type: string
          examples:
          - '12345'
        servicePlan:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          examples:
          - service plan name
    GIODeactivateDeviceProfileRequest:
      title: GIODeactivateDeviceProfileRequest
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/GIODeviceList'
          description: ''
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9\-]{3,32}$
          type: string
          examples:
          - 0000123456-00001
        servicePlan:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          examples:
          - service plan name
        etfWaiver:
          type: boolean
          default: false
        reasonCode:
          maxLength: 32
          minLength: 2
          pattern: ^[0-9A-Z]{2,32}$
          type: string
          examples:
          - FF
    DeviceProfileRequest:
      title: DeviceProfileRequest
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/GIODeviceList'
          description: ''
        accountName:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9\-]{3,32}$
          type: string
          examples:
          - 0000123456-00001
        servicePlan:
          maxLength: 32
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          examples:
          - service plan name
    GIODeviceId:
      title: GIODeviceId
      type: object
      properties:
        kind:
          maxLength: 6
          minLength: 3
          pattern: ^[A-Za-z]{3,6}$
          type: string
          examples:
          - eid
        id:
          maxLength: 32
          minLength: 3
          pattern: ^[0-9]{3,32}$
          type: string
          examples:
          - '12345678901234567890123456789012'
    GIODeviceList:
      title: GIODeviceList
      type: object
      properties:
        deviceIds:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/GIODeviceId'
          description: ''
    GIORequestResponse:
      title: GIORequestResponse
      type: object
      properties:
        requestId:
          maxLength: 64
          minLength: 3
          pattern: ^[A-Za-z0-9\-]{3,64}$
          type: string
          examples:
          - d1f08526-5443-4054-9a29-4456490ea9f8
    SuccessResponse:
      title: SuccessResponse
      type: object
      properties:
        success:
          type: boolean
          examples:
          - true
    GIORestErrorResponse:
      title: GIORestErrorResponse
      type: object
      properties:
        errorCode:
          maxLength: 3
          minLength: 3
          pattern: ^[0-9]{3,3}$
          type: string
          examples:
          - '400'
        errorMessage:
          maxLength: 1000
          minLength: 3
          pattern: ^[A-Za-z0-9 ]{3,32}$
          type: string
          examples:
          - a brief description of the error
    subscribeRequest:
      title: subscribeRequest
      required:
      - accountName
      - deviceInfo
      type: object
      properties:
        accountName:
          type: string
          examples:
          - 0000123456-00001
        deviceInfo:
          type: array
          items:
            $ref: '#/components/schemas/QOSdeviceInfo'
          description: ''
    QOSdeviceId:
      title: QOSdeviceId
      type: object
      properties:
        id:
          type: string
          examples:
          - 10-digit phone number
        kind:
          type: string
          examples:
          - mdn
    DefaultResponse:
      title: DefaultResponse
      type: object
      properties:
        errorCode:
          type: string
          examples:
          - 3 or 4 digit error code
        errorMessage:
          type: string
          examples:
          - A short description of the error
    201success:
      title: 201success
      type: object
      properties:
        requestId:
          type: string
          examples:
          - be36accb-0a9a-4367-93ab-0af6c4ed256a
    FlowInfo:
      title: FlowInfo
      type: object
      properties:
        flowServer:
          type: string
          examples:
          - '[IPv6 address]:port'
        flowDevice:
          type: string
          examples:
          - '[IPv6 address]:port'
        flowDirection:
          type: string
          examples:
          - UPLINK
        flowProtocol:
          type: string
          examples:
          - UDP
        qciOption:
          type: string
          examples:
          - Premium
    QOSdeviceInfo:
      title: QOSdeviceInfo
      required:
      - deviceId
      - flowInfo
      type: object
      properties:
        deviceId:
          $ref: '#/components/schemas/QOSdeviceId'
        deviceIPv6Addr:
          type: string
          examples:
          - IPv6 address
        flowInfo:
          type: array
          items:
            $ref: '#/components/schemas/FlowInfo'
          description: ''
    ChangePmecDeviceState-ActivateRequest:
      title: ChangePmecDeviceState-ActivateRequest
      required:
      - accountName
      - deviceList
      - activate
      type: object
      properties:
        accountName:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceList'
          description: ''
        activate:
          allOf:
          - $ref: '#/components/schemas/Activate'
          - examples:
            - profile: HSS EsmProfile Enterprise 5G
      examples:
      - accountName: 0342351414-00001
        deviceList:
        - deviceIds:
          - id: '99948099913024600001'
            kind: iccid
        activate:
          profile: HSS EsmProfile Enterprise 5G
    MECDeviceList:
      title: MECDeviceList
      required:
      - deviceIds
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceId'
          description: ''
      examples:
      - deviceIds:
        - id: '99948099913024600001'
          kind: iccid
    MECDeviceId:
      title: MECDeviceId
      required:
      - id
      - kind
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
      examples:
      - id: '99948099913024600001'
        kind: iccid
    Activate:
      title: Activate
      required:
      - profile
      type: object
      properties:
        profile:
          type: string
      examples:
      - profile: HSS EsmProfile Enterprise 5G
    ChangePmecDeviceState-BulkActivateRequest:
      title: ChangePmecDeviceState-BulkActivateRequest
      required:
      - accountName
      - deviceList
      - activate
      type: object
      properties:
        accountName:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList1'
          description: ''
        activate:
          allOf:
          - $ref: '#/components/schemas/Activate'
          - examples:
            - profile: HSS EsmProfile Enterprise 5G
      examples:
      - accountName: 0342351414-00001
        deviceList:
        - deviceIds:
          - id: '99948099913031600000'
            kind: iccid
          ipAddress: 10.3.4.9
          apn: '1'
        - deviceIds:
          - id: '99948099913031700000'
            kind: iccid
          ipAddress: 10.4.5.2
          apn: '2'
        activate:
          profile: HSS EsmProfile Enterprise 5G internet
    DeviceList1:
      title: DeviceList1
      required:
      - deviceIds
      - ipAddress
      - apn
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceId'
          description: ''
        ipAddress:
          type: string
        apn:
          type: string
      examples:
      - deviceIds:
        - id: '99948099913031600000'
          kind: iccid
        ipAddress: 10.3.4.9
        apn: '1'
    ChangePmecDeviceState-BulkDeactivateRequest:
      title: ChangePmecDeviceState-BulkDeactivateRequest
      required:
      - accountName
      - deviceList
      type: object
      properties:
        accountName:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceList'
          description: ''
      examples:
      - accountName: 0342351414-00001
        deviceList:
        - deviceIds:
          - id: '99948099913031600000'
            kind: iccid
        - deviceIds:
          - id: '99948099913031700000'
            kind: iccid
    ChangePmecDeviceState-DeactivateRequest:
      title: ChangePmecDeviceState-DeactivateRequest
      required:
      - accountName
      - deviceList
      type: object
      properties:
        accountName:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceList'
          description: ''
      examples:
      - accountName: 0342351414-00001
        deviceList:
        - deviceIds:
          - id: '99948099913024600000'
            kind: iccid
    ChangePmecDeviceProfileRequest:
      title: ChangePmecDeviceProfileRequest
      required:
      - accountName
      - deviceList
      - newProfile
      type: object
      properties:
        accountName:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceList'
          description: ''
        newProfile:
          type: string
      examples:
      - accountName: 0342351414-00001
        deviceList:
        - deviceIds:
          - id: '99948099913024600000'
            kind: iccid
        newProfile: HSS EsmProfile Enterprise 5G internet
    ChangePmecDeviceProfileBulkRequest:
      title: ChangePmecDeviceProfileBulkRequest
      required:
      - accountName
      - deviceList
      - newProfile
      type: object
      properties:
        accountName:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceList'
          description: ''
        newProfile:
          type: string
      examples:
      - accountName: 0342351414-00001
        deviceList:
        - deviceIds:
          - id: '99948099913032000000'
            kind: iccid
        - deviceIds:
          - id: '99948099913032100000'
            kind: iccid
        newProfile: HSS EsmProfile Enterprise 5G
    ChangePmecDeviceIPaddressBulkRequest:
      title: ChangePmecDeviceIPaddressBulkRequest
      required:
      - accountName
      - deviceList
      type: object
      properties:
        accountName:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceList'
          description: ''
      examples:
      - accountName: 0342351414-00001
        deviceList:
        - deviceIds:
          - id: '99948099913031600000'
            kind: iccid
        - deviceIds:
          - id: '99948099913031700000'
            kind: iccid
    ChangePmecDeviceIPaddressRequest:
      title: ChangePmecDeviceIPaddressRequest
      required:
      - accountName
      - deviceList
      type: object
      properties:
        accountName:
          type: string
        deviceList:
          type: array
          items:
            $ref: '#/components/schemas/DeviceList7'
          description: ''
      examples:
      - accountName: 0342351414-00001
        deviceList:
        - deviceIds:
          - id: '99948099913024600000'
            kind: iccid
          ipAddress: 10.3.4.5
        - deviceIds:
          - id: '999480500019111000001'
            kind: iccid
          ipAddress: 10.4.5.7
    DeviceList7:
      title: DeviceList7
      required:
      - deviceIds
      - ipAddress
      type: object
      properties:
        deviceIds:
          type: array
          items:
            $ref: '#/components/schemas/MECDeviceId'
          description: ''
        ipAddress:
          type: string
      examples:
      - deviceIds:
        - id: '99948099913024600000'
          kind: iccid
        ipAddress: 10.3.4.5
    ChangeMecDeviceStateResponse:
      title: ChangeMecDeviceStateResponse
      type: object
      properties:
        requestId:
          type: string
          description: A unique string that associates the request with the results that are sent via a callback service.
          examples:
          - 24da9f9a-d110-4a54-86b4-93fb76aab83cs
      description: Response to change mec device state
      examples:
      - requestId: 24da9f9a-d110-4a54-86b4-93fb76aab83c
    ChangeMecDeviceProfileResponse:
      title: ChangeMecDeviceProfileResponse
      type: object
      properties:
        requestId:
          type: string
          description: A unique string that associates the request with the results that are sent via a callback service.
          examples:
          - 24da9f9a-d110-4a54-86b4-93fb76aab83cs
      description: Response to change mec device profile
      examples:
      - requestId: 24da9f9a-d110-4a54-86b4-93fb76aab83c
    ChangeMecDeviceIPAddressResponse:
      title: ChangeMecDeviceIPAddressResponse
      type: object
      properties:
        requestId:
          type: string
          description: A unique string that associates the request with the results that are sent via a callback service.
          examples:
          - 24da9f9a-d110-4a54-86b4-93fb76aab83cs
      description: Response to change mec device ip address.
      examples:
      - requestId: 24da9f9a-d110-4a54-86b4-93fb76aab83c
    GetMECPerformanceConsentResponse:
      title: GetMECPerformanceConsentResponse
      type: object
      properties:
        consent:
          type: string
          description: MEC Performance Consent Response.
          examples:
          - 'false'
      description: MEC Performance Consent Response
      examples:
      - consent: 'false'
    KPIInfo:
      title: KPIInfo
      type: object
      properties:
        name:
          type: string
          examples:
          - DOWNLINK_THROUGHPUT
        value:
          type: string
          examples:
          - '23.2'
        nodeName:
          type: string
          examples:
          - 132924_ENB_VZ_EULESS_OLTE_RD-01
        nodeType:
          type: string
          examples:
          - BASEBAND
        description:
          type: string
          examples:
          - Downlink throughput (4G)
        unit:
          type: string
          examples:
          - Mbps
        category:
          type: string
          examples:
          - Network Performance Radio
        timeOfLastUpdate:
          type: string
          examples:
          - 2022-12-07T08:39:59.228Z
      description: KPI Info Object
      examples:
      - name: DOWNLINK_THROUGHPUT
        value: '23.2'
        nodeName: 132924_ENB_VZ_EULESS_OLTE_RD-01
        nodeType: BASEBAND
        description: Downlink throughput (4G)
        unit: Mbps
        category: Network Performance Radio
        timeOfLastUpdate: 2022-12-07T08:39:59.228Z
    KPIInfoList:
      title: KPIInfoList
      type: object
      properties:
        KpiInfoList:
          type: array
          items:
            $ref: '#/components/schemas/KPIInfo'
          description: ''
      examples:
      - KpiInfoList:
        - name: DOWNLINK_THROUGHPUT
          value: '23.2'
          nodeName: 132924_ENB_VZ_EULESS_OLTE_RD-01
          nodeType: BASEBAND
          description: Downlink throughput (4G)
          unit: Mbps
          category: Network Performance Radio
          timeOfLastUpdate: 2022-12-07T08:39:59.228Z
    MECProfileList:
      title: MECProfileList
      type: object
      properties:
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/MECProfile'
          description: ''
      examples:
      - profiles:
        - profileId: HSS-EsmProfile_Enterprise
          profileName: HSS EsmProfile Enterprise
    MECProfile:
      title: MECProfile
      type: object
      properties:
        profileId:
          type: string
        profileName:
          type: string
      examples:
      - profileId: HSS-EsmProfile_Enterprise
        profileName: HSS EsmProfile Enterprise
    ResponsetoUsageQuery:
      title: ResponsetoUsageQuery
      type: object
      properties:
        hasmoredata:
          type: boolean
          examples:
          - false
        deviceId:
          $ref: '#/components/schemas/ReadySimDeviceId'
        usageHistory:
          type: array
          items:
            $ref: '#/components/schemas/usagehistory'
          description: ''
    RequestBodyforUsage:
      title: RequestBodyforUsage
      type: object
      properties:
        accountId:
          type: string
          examples:
          - 0000123456-000001
        deviceId:
          type: array
          items:
            $ref: '#/components/schemas/ReadySimDeviceId'
          description: ''
        startTime:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-08-15T05:00:00Z
        endTime:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-08-16T05:00:00Z
    RequestBodyforUsage1:
      title: RequestBodyforUsage1
      type: object
      properties:
        deviceId:
          type: array
          items:
            $ref: '#/components/schemas/ReadySimDeviceId'
          description: ''
        startTime:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-08-15T05:00:00Z
        endTime:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-08-16T05:00:00Z
    ReadySimDeviceId:
      title: ReadySimDeviceId
      type: object
      properties:
        kind:
          type: string
          examples:
          - iccid
        id:
          type: string
          examples:
          - 20-digit iccid
    usagehistory:
      title: usagehistory
      type: object
      properties:
        bytesUsed:
          type: integer
          contentEncoding: int32
          examples:
          - 3072
        serviceplan:
          type: string
          examples:
          - The serviceplan name
        smsUsed:
          type: integer
          contentEncoding: int32
        moSMS:
          type: integer
          contentEncoding: int32
        mtSMS:
          type: integer
          contentEncoding: int32
        source:
          type: string
          examples:
          - Raw Usage
        eventDateTime:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-08-15T05:00:00Z
    TriggerValueResponse:
      title: TriggerValueResponse
      type: object
      properties:
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/Triggervalues'
          description: ''
    Triggervalues:
      title: Triggervalues
      type: object
      properties:
        triggerId:
          type: string
          examples:
          - 2874DEC7-26CF-4797-9C6A-B5A2AC72D526
        triggerName:
          type: string
          examples:
          - PromoAlerts_0000000000-00001_23456789
        accountName:
          type: string
          examples:
          - 0000123456-000001
        organizationName:
          type: string
          examples:
          - Optional group name
        triggerCategory:
          type: string
          examples:
          - PromoAlerts
        triggerAttributes:
          type: array
          items:
            $ref: '#/components/schemas/keyDataPercentage50'
          description: ''
        createdAt:
          type: string
          contentEncoding: date-time
        modifiedAt:
          type: string
          contentEncoding: date-time
    TriggerValueResponse2:
      title: TriggerValueResponse2
      type: object
      properties:
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/Triggervalues2'
          description: ''
    Triggervalues2:
      title: Triggervalues2
      type: object
      properties:
        triggerId:
          type: string
          examples:
          - 2874DEC7-26CF-4797-9C6A-B5A2AC72D526
        triggerName:
          type: string
          examples:
          - PromoAlerts_0000000000-00001_23456789
        accountName:
          type: string
          examples:
          - 0000123456-000001
        organizationName:
          type: string
          examples:
          - Optional group name
        triggerCategory:
          type: string
          examples:
          - PromoAlerts
        promoAlerts:
          type: array
          items:
            $ref: '#/components/schemas/PromoAlert'
          description: ''
        active:
          type: boolean
        createdAt:
          type: string
          contentEncoding: date-time
        modifiedAt:
          type: string
          contentEncoding: date-time
    requestTrigger:
      title: requestTrigger
      type: object
      properties:
        triggerId:
          type: string
          examples:
          - 2874DEC7-26CF-4797-9C6A-B5A2AC72D526
        triggerName:
          type: string
          examples:
          - PromoAlerts_0000000000-00001_23456789
        accountName:
          type: string
          examples:
          - 0000123456-000001
        organizationName:
          type: string
          examples:
          - Optional group name
        triggerCategory:
          type: string
          examples:
          - PromoAlerts
        promoAlerts:
          type: array
          items:
            $ref: '#/components/schemas/PromoAlert1'
          description: ''
    condition:
      title: condition
      type: object
      properties:
        condition:
          type: array
          items:
            $ref: '#/components/schemas/keyschunk2'
          description: ''
    keyschunk2:
      title: keyschunk2
      type: object
      properties:
        dataPercentage50:
          type: boolean
          examples:
          - false
        dataPercentage75:
          type: boolean
          examples:
          - false
        dataPercentage90:
          type: boolean
          examples:
          - false
        dataPercentage100:
          type: boolean
          examples:
          - false
        smsPercentage50:
          type: boolean
          examples:
          - false
        smsPercentage75:
          type: boolean
          examples:
          - false
        smsPercentage90:
          type: boolean
          examples:
          - false
        smsPercentage100:
          type: boolean
          examples:
          - true
        NoOfDaysB4PromoExp:
          type: integer
          contentEncoding: int32
          examples:
          - 5
    enablePromoExp:
      title: enablePromoExp
      type: object
      properties:
        enablePromoExp:
          type: boolean
          examples:
          - true
    filtercriteria:
      title: filtercriteria
      type: object
      properties:
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/ReadySimServicePlan'
          description: ''
    filtercriteria2:
      title: filtercriteria2
      type: object
      properties:
        filterCriteria:
          type: array
          items:
            type: object
          description: ''
    ReadySimServicePlan:
      title: ReadySimServicePlan
      type: object
      properties:
        servicePlan:
          type: string
          examples:
          - '123456'
    keyServicePlan:
      title: keyServicePlan
      type: object
      properties:
        key:
          type: string
          examples:
          - ServicePlan
    keyDataPercentage50:
      title: keyDataPercentage50
      type: object
      properties:
        key:
          type: string
          examples:
          - DataPercentage50
        value:
          type: boolean
          examples:
          - false
    keysmsPercentage50:
      title: keysmsPercentage50
      type: object
      properties:
        key:
          type: string
          examples:
          - SmsPercentage50
        value:
          type: boolean
          examples:
          - false
    NoOfDaysB4PromoExp:
      title: NoOfDaysB4PromoExp
      type: object
      properties:
        key:
          type: string
          examples:
          - NoOfDaysB4PromoExp
        value:
          type: integer
          contentEncoding: int32
          examples:
          - 5
    EnablePromoExp1:
      title: EnablePromoExp1
      type: object
      properties:
        key:
          type: string
          examples:
          - EnablePromoExp
        value:
          type: boolean
          examples:
          - true
    usageRequestResponse:
      title: usageRequestResponse
      type: object
      properties:
        requestId:
          type: string
          examples:
          - be1b5958-3e11-41db-9abd-b1b7618c0035
    success:
      title: success
      type: object
      properties:
        status:
          type: string
          examples:
          - Success
    ReadySimRestErrorResponse:
      title: ReadySimRestErrorResponse
      type: object
      properties:
        errorCode:
          type: string
          examples:
          - The 3-digit HTML error code
        errorMessage:
          type: string
          examples:
          - More details about the error
    PromoAlert:
      title: PromoAlert
      type: object
      properties:
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/ReadySimServicePlan'
          description: ''
        condition:
          type: array
          items:
            $ref: '#/components/schemas/keyschunk2'
          description: ''
        enablePromoExp:
          type: boolean
          examples:
          - true
    PromoAlert1:
      title: PromoAlert1
      type: object
      properties:
        filterCriteria:
          type: array
          items:
            type: object
          description: ''
        condition:
          type: array
          items:
            $ref: '#/components/schemas/keyschunk2'
          description: ''
        enablePromoExp:
          type: boolean
          examples:
          - true
    status:
      title: status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status1'
    eSIMDeviceId:
      title: eSIMDeviceId
      type: object
      properties:
        id:
          type: string
          examples:
          - 32-digit EID
        kind:
          type: string
          examples:
          - eid
    DeviceId2:
      title: DeviceId2
      type: object
      properties:
        id:
          type: string
          examples:
          - 15-digit IMEI
        kind:
          type: string
          examples:
          - imei
    eSIMDeviceList:
      title: eSIMDeviceList
      type: object
      properties:
        deviceIds:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/eSIMDeviceId'
          description: ''
    DeviceList2:
      title: DeviceList2
      type: object
      properties:
        ids:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/eSIMDeviceId'
          description: ''
    eSIMProfileRequest:
      title: eSIMProfileRequest
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/eSIMDeviceList'
          description: ''
        carrierName:
          type: string
          examples:
          - name of the mobile service provider
        accountName:
          type: string
          examples:
          - 0000123456-00001
        servicePlan:
          type: string
          examples:
          - The service plan name (The value used for Consumer eSIM for Enterprise will be HybridESim)
        mdnZipCode:
          type: string
          examples:
          - five digit zip code
    ProfileRequest2:
      title: ProfileRequest2
      type: object
      properties:
        devices:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeviceList2'
          description: ''
        accountName:
          type: string
          examples:
          - 0000123456-00001
        carrierName:
          type: string
          examples:
          - Verizon Wireless
        reasonCode:
          type: string
          examples:
          - FF
        etfWaiver:
          type: boolean
          default: true
        checkFallbackProfile:
          type: boolean
          default: false
    eSIMRequestResponse:
      title: eSIMRequestResponse
      type: object
      properties:
        requestId:
          type: string
          examples:
          - d1f08526-5443-4054-9a29-4456490ea9f8
    eSIMRestErrorResponse:
      title: eSIMRestErrorResponse
      type: object
      properties:
        errorCode:
          type: string
          examples:
          - The 3-digit HTML error code
        errorMessage:
          type: string
          examples:
          - a description of the error
    eSIMProvhistoryRequest:
      title: eSIMProvhistoryRequest
      type: object
      properties:
        accountName:
          type: string
          examples:
          - 0000123456-00001
        deviceFilter:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/DeviceId2'
          description: ''
        earliest:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-10-15T04:49:35-00:00
        latest:
          type: string
          contentEncoding: date-time
          examples:
          - 2021-10-15T04:49:49-00:00
    eSIMStatusResponse:
      title: eSIMStatusResponse
      type: object
      properties:
        requestId:
          type: string
          examples:
          - d1f08526-5443-4054-9a29-4456490ea9f8
        status:
          type: string
          examples:
          - Success
        subrequests:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/eSIMsubrequest'
          description: ''
    eSIMsubrequest:
      title: eSIMsubrequest
      type: object
      properties:
        id:
          type: string
          examples:
          - 32-digit EID
        kind:
          type: string
          examples:
          - eid
        status:
          $ref: '#/components/schemas/Status1'
    Status1:
      title: Status1
      enum:
      - success
      - failed
      type: string
    VendorRegistrationRequest:
      title: VendorRegistrationRequest
      required:
      - VendorID
      - ThingSpaceBillingAccount
      type: object
      properties:
        VendorID:
          maxLength: 64
          pattern: ^[a-zA-Z0-9]+$
          type: string
          description: The ID the vendor wants it's devices to be registered under. E.g. Verizon, GM, Ford, etc.
          examples:
          - VerizonIMP
        ThingSpaceBillingAccount:
          maxLength: 16
          pattern: ^\d{10}-\d{5}$
          type: string
          description: The ThingSpace Billing Account number.
          examples:
          - 0242080520-00001
      description: Request for /vendors/registration endpoint. It requires the VendorID and ThingSpace Billing Account number to be defined.
      examples:
      - VendorID: VerizonIMP
        ThingSpaceBillingAccount: 0242080520-00001
    VendorRegistrationResponse:
      title: VendorRegistrationResponse
      required:
      - ActionType
      type: object
      properties:
        ActionType:
          allOf:
          - $ref: '#/components/schemas/ActionType'
          - description: >-
              The type of action the vendor registration service took for the request


              Values:

              - **Added** - A new vendor was added to the system

              - **Updated** - The existing vendor was updated with the newly provided properties
            examples:
            - Added
      description: Response for /vendors/registration. It provides a response if the vendor wa added to the system or updated with the new data.
    ClientRegistrationRequest:
      title: ClientRegistrationRequest
      required:
      - ClientType
      - ClientSubtype
      - VendorID
      type: object
      properties:
        ClientType: {}
        ClientSubtype:
          allOf:
          - $ref: '#/components/schemas/ClientSubtype'
          - description: The subtype or subgroup of the client type. This further specifies the client type. For example it will specify if the client is a passenger car or a truck. See the ClientType description for the supported Subtypes for each client type.
        VendorID:
          maxLength: 64
          pattern: ^[a-zA-Z0-9]+$
          type: string
          description: The vendor that the client belongs to. E.g. Verizon, GM, Ford, etc.
          examples:
          - Verizon
      description: Request for /clients/registration endpoint. It requires the Client Type, Subtype and Vendor to be defined.
    ClientRegistrationResponse:
      title: ClientRegistrationResponse
      required:
      - DeviceID
      - Certificate
      type: object
      properties:
        DeviceID:
          type: string
          description: The generated ID for the device. It has to be used as the MQTT Client ID when connecting to the Message Exchange system or when asking for the connection endpoint.
          contentEncoding: uuid
          examples:
          - a4fcd16a-343d-4527-8203-2f46e3e4ff4b
        Certificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          - description: Structure for the credentials required to connect to the IMP MQTT Message Exchange.
      description: Response for /clients/registration. It provides a generated device ID and the certificates needed to connect the IMP Message Exchange.
    ConnectionRequest:
      title: ConnectionRequest
      required:
      - DeviceID
      - Geolocation
      - NetworkType
      type: object
      properties:
        DeviceID:
          type: string
          description: The device ID acquired through the registration API.
          contentEncoding: uuid
          examples:
          - 976c4bad-03d3-4dcb-9688-ee57db7890e4
        Geolocation:
          allOf:
          - $ref: '#/components/schemas/Geolocation'
          - description: Geolocation of the device at the time of the connection request in GPS coordinates.
            examples:
            - Latitude: 42.36
              Longitude: -71.06
        NetworkType: {}
      description: Request for /clients/connection. It requires the device ID acquired in the registration request call; the geolocation of the device at the time of the request; and the network type (Verizon or non-Verizon). The system uses this information to determine with MQTT endpoint the device should use to connect the IMP Message Exchange.
      examples:
      - DeviceID: 976c4bad-03d3-4dcb-9688-ee57db7890e4
        Geolocation:
          Latitude: 42.36
          Longitude: -71.06
        NetworkType: non-VZ
    ConnectionResponse:
      title: ConnectionResponse
      required:
      - MqttURL
      type: object
      properties:
        MqttURL:
          maxLength: 1024
          pattern: ^(http?mqtt)://[^\s/$.?#].[^\s]*$
          type: string
      description: response for /clients/connection
    Certificate:
      title: Certificate
      required:
      - cert.pem
      - key.pem
      type: object
      properties:
        cert.pem:
          maxLength: 4096
          minLength: 0
          pattern: ^[a-zA-Z0-9~\+\-!@#$%^&*()\`\[\]{=};\"':,.\/<>?|\s]+$
          type: string
          description: The string containing the certificate
          examples:
          - "\"-----BEGIN CERTIFICATE-----\nMIIDrjCCApagAwIBAgICEAEwDQYJKoZIhvcNAQELBQAwUjELMAkGA1UEBhMCQVUx\n...\nuuA1Zog3aBOeeEzp9SEJBMTJRYPXbK4e8Xer+7m98OL/3g==\n-----END CERTIFICATE-----\" \n"
        key.pem:
          maxLength: 4096
          minLength: 0
          pattern: ^[a-zA-Z0-9~\+\-!@#$%^&*()\`\[\]{=};\"':,.\/<>?|\s]+$
          type: string
          description: The string containing the private key
          examples:
          - >
            "-----BEGIN PRIVATE KEY-----

            MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDa1lF7DWudshQ5

            ...

            JbjD2hacWGzpKzTfn5Mt1frE

            -----END PRIVATE KEY-----"
      description: Structure for the credentials required to connect to the IMP MQTT Message Exchange.
    Geolocation:
      title: Geolocation
      required:
      - Latitude
      - Longitude
      type: object
      properties:
        Latitude:
          maximum: 90
          minimum: -90
          type: number
          description: The GPS Latitude value
          examples:
          - 42.36
        Longitude:
          maximum: 180
          minimum: -180
          type: number
          description: The GPS Longitude value
          examples:
          - -71.06
      description: Geolocation of the device at the time of the connection request in GPS coordinates.
      examples:
      - Latitude: 42.36
        Longitude: -71.06
    IMPResponseError:
      title: IMPResponseError
      required:
      - error
      - description
      type: object
      properties:
        error:
          maxLength: 1024
          minLength: 0
          pattern: ^[a-zA-Z0-9~\+\-!@#$%^&*()\`\[\]{=};\"':,.\/<>?|\s]+$
          type: string
          description: The short summary of the error
          examples:
          - Error Summary
        description:
          maxLength: 4096
          minLength: 0
          pattern: ^[a-zA-Z0-9~\+\-!@#$%^&*()\`\[\]{=};\"':,.\/<>?|\s]+$
          type: string
          description: The detailed description of the error
          examples:
          - Error Description
      description: error response structure
    IMPClientType:
      title: IMPClientType
      enum:
      - Vehicle
      - VulnerableRoadUser
      - TrafficLightController
      - InfrastructureSensor
      - OnboardSensor
      - Software
      type: string
      description: >-
        The type of the client that is to be registered. This is one of the major traffic participant groups considered in V2X communication. The system uses this value to define which topics the client will be able to publish and subscribe to.


        Values:

        - **Vehicle** - Vehicle with an enclosure around the passengers. (Subtypes: PassengerCar, Truck, Bus, EmergencyVehicle, SchoolBus, MaintenanceVehicle)

        - **VulnerableRoadUser** - Traffic participants without a protecting enclosure. (Subtypes: Motorcycle, Bicycle, Pedestrian, Scooter)

        - **TrafficLightController** - A Traffic light controller system. (Subtypes: NA)

        - **InfrastructureSensor** - Sensors that are deployed in the infrastructure. (Subtypes: RoadSideUnit, Camera, Lidar, Radar, InductiveLoop, MagneticSensor)

        - **OnboardSensor** - Sensors that are onboard on a vehicle(Subtypes: Camera, Lidar, Radar)

        - **Software** - A software system or application. (Subtypes: NA)
    IMPNetworkType:
      title: IMPNetworkType
      enum:
      - VZ
      - non-VZ
      type: string
      description: >-
        The type of the device's network connection at the time of the request. If the device is on the Verizon cellular network it should use the "VZ" value otherwise the "non-VZ" value.


        Devices on the Verizon network can directly access the IMP Message Exchange on the MEC (Mobile Edge Compute server)
      examples:
      - non-VZ
    ActionType:
      title: ActionType
      enum:
      - Added
      - Updated
      type: string
      description: >-
        The type of action the vendor registration service took for the request


        Values:

        - **Added** - A new vendor was added to the system

        - **Updated** - The existing vendor was updated with the newly provided properties
      examples:
      - Added
    ClientSubtype:
      title: ClientSubtype
      enum:
      - PassengerCar
      - Truck
      - Bus
      - EmergencyVehicle
      - SchoolBus
      - MaintenanceVehicle
      - Pedestrian
      - Bicycle
      - Scooter
      - Motorcycle
      - RoadSideUnit
      - Camera
      - Lidar
      - Radar
      - InductiveLoop
      - MagneticSensor
      - NA
      type: string
      description: The subtype or subgroup of the client type. This further specifies the client type. For example it will specify if the client is a passenger car or a truck. See the ClientType description for the supported Subtypes for each client type.
    Polygon:
      title: Polygon
      type: object
      properties:
        type:
          maxLength: 10
          pattern: ^[a-zA-Z0-9]*$
          type: string
          examples:
          - Polygon
        coordinates:
          maxItems: 20
          type: array
          items:
            $ref: '#/components/schemas/Coordinate'
          description: ''
    MapDataResponseError:
      title: MapDataResponseError
      required:
      - error
      - description
      type: object
      properties:
        error:
          maxLength: 1024
          minLength: 0
          pattern: ^[a-zA-Z0-9~\+\-!@#$%^&*()\`\[\]{=};"'':,.\/<>?|\s]+$
          type: string
          description: The short summary of the error
          examples:
          - Error Summary
        description:
          maxLength: 4096
          minLength: 0
          pattern: ^[a-zA-Z0-9~\+\-!@#$%^&*()\`\[\]{=};"'':,.\/<>?|\s]+$
          type: string
          description: The detailed description of the error
          examples:
          - Error Description
      description: error response structure
    Coordinate:
      title: Coordinate
      type: object
      properties:
        latitude:
          maxLength: 10
          pattern: ^\d2\.\d*$
          type: string
        longitude:
          maxLength: 10
          pattern: ^\d2\.\d*$
          type: string
  securitySchemes:
    thingspace_oauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://thingspace.verizon.com/api/ts/v1/oauth2/token
          scopes:
            discovery:read: Grant read-only access to discovery data
            serviceprofile:read: Grant read-only access to service profile data
            serviceprofile:write: Grant write access to service profile data
            serviceregistry:read: Grant read-only access to Service registry data
            serviceregistry:write: Grant write access to Service registry data
            ts.mec.fullaccess: Full access for /serviceprofiles and /serviceendpoints.
            ts.mec.limitaccess: Limited access. Will not allow use of /serviceprofiles and /serviceendpoints but will allow discovery.
            ts.application.ro: ''
            edge:discovery:read: ''
            edge:serviceprofile:read: ''
            edge:serviceprofile:write: ''
            edge:serviceregistry:read: ''
            edge:serviceregistry:write: ''
            read: read access
            write: read/write access
    VZ-M2M-Token:
      type: apiKey
      description: M2M Session Token ([How to generate an M2M session token?](page:getting-started/5g-edge-developer-creds-token#obtaining-a-vz-m2m-sessiontoken-programmatically))
      name: VZ-M2M-Token
      in: header
security:
- thingspace_oauth:
  - edge:discovery:read
  - edge:serviceprofile:read
  - edge:serviceprofile:write
  - edge:serviceregistry:read
  - edge:serviceregistry:write
  - ts.application.ro
  - ts.mec.fullaccess
  - ts.mec.limitaccess
  VZ-M2M-Token: []
tags:
- name: 5G Edge Platforms
  description: Discover the regions in the 5G Edge service and find the optimal MEC platforms for your Edge applications.
- name: Service Endpoints
  description: Register the routable endpoints of your deployed Edge application services. After registering, use service endpoint discovery to find the optimal service endpoints for application clients to connect to for each session.
- name: Service Profiles
  description: Create and manage profiles that describe the service characteristics of your 5G Edge applications, such as the required connection bandwidth andmaximum latency.<br/>**Note:** For the initial release of the Edge Discovery Service API,`latency`is the only service profile property that is compared with 5G Edge platform capabilities.</p>
- name: Device Management
  description: Manage device connectivity and get device history.
- name: Accounts
  description: Get information about an account or account leads.
- name: Device Groups
  description: Manage device groups.
- name: SMS
  description: Exchange Short Message Service (SMS) messages with devices.
- name: Session Management
  description: Start and end Connectivity Management sessions.
- name: Connectivity Callbacks
  description: Manage subscriptions to asynchronous webhook messages.
- name: Account Requests
  description: Get the status of asynchronous reqeusts.
- name: Service Plans
  description: Get a list of service plans in an account.
- name: Device Diagnostics
  description: Helps to create & manage diagnostics
- name: Device Profile Management
  description: ''
- name: Device Monitoring
  description: ''
- name: eUICC Device Profile Management
  description: ''
- name: Devices Locations
  description: Locate devices.
- name: Exclusions
  description: Exclude devices from location services.
- name: Devices Location Subscriptions
  description: Get an account's location service subscription status and usage.
- name: Device Location Callbacks
  description: Receive notifications from the API.
- name: Usage Trigger Management
  description: ''
- name: Billing
  description: ''
- name: Software Management Subscriptions V1
  description: View Software Management Services subscription status.
- name: Software Management Licenses V1
  description: Assign Software Management Services license to devices **Note:**These endpoints have been deprecated. Please use the **v3** endpoints.
- name: Firmware V1
  description: Schedule and monitor firmware upgrades.
- name: Software Management Callbacks V1
  description: Register and deregister callback endpoints.
- name: Software Management Reports V1
  description: Status and history information.
- name: Software Management Subscriptions V2
  description: Information about current FOTA subscriptions.
- name: Software Management Licenses V2
  description: License status and assignment.
- name: Campaigns V2
  description: Schedule, retreive or cancel scheduled FOTA campaigns.
- name: Software Management Callbacks V2
  description: Find registered callbacks or create, update and delete a registered callback.
- name: Software Management Reports V2
  description: Status of a campaign per device.
- name: Client Logging
  description: Device logs stored on the device itself.
- name: Server Logging
  description: Device logs on the server.
- name: Configuration Files
  description: ''
- name: Software Management Subscriptions V3
  description: Information about current FOTA subscriptions.
- name: Software Management Licenses V3
  description: License status and assignment.
- name: Campaigns V3
  description: Schedule, retreive or cancel scheduled FOTA campaigns.
- name: Software Management Reports V3
  description: Status of a campaign per device.
- name: Firmware V3
  description: State of Firmware across devices in the account.
- name: Account Devices
  description: Device information for an account.
- name: Software Management Callbacks V3
  description: Find registered callbacks or create, update and delete a registered callback.
- name: SIM Secure for IoT Licenses
  description: ''
- name: Account Subscriptions
  description: ''
- name: Performance Metrics
  description: This API is for use by clients and OEMs to measure the performance of Verizon's Mobile Edge Compute (MEC) solution.
- name: Diagnostics Subscriptions
  description: ''
- name: Diagnostics Observations
  description: ''
- name: Diagnostics History
  description: ''
- name: Diagnostics Settings
  description: ''
- name: Diagnostics Callbacks
  description: ''
- name: Diagnostics Factory Reset
  description: ''
- name: Targets
- name: Cloud Connector Subscriptions
- name: Cloud Connector Devices
  description: ''
- name: Device Service Management
  description: ''
- name: Device Reports
  description: ''
- name: Hyper Precise Location Callbacks
  description: ''
- name: Anomaly Settings
  description: Choose what level and interval of alerting for anomalies detected.
- name: Anomaly Triggers
  description: Set the threshold of notification for anomalies detected.
- name: Anomaly Triggers V2
  description: ''
- name: Wireless Network Performance
  description: ''
- name: Fixed Wireless Qualification
  description: ''
- name: Managing eSIM Profiles
  description: Manage Global IoT Orchestration device profiles for either Verizon (lead) or Global (local).
- name: Device SMS Messaging
  description: Send Short Message Service (SMS) messages to devices
- name: Device Actions
  description: Device management for either Verizon (lead) or Global (local) profiles.
- name: ThingSpace Quality of Service API Actions
  description: Subscribe or Unsubscribe to the ThingSpace Quality of Service API.
- name: MEC
- name: Promotion Period Information
  description: Retrieve status and information about the promotion period for using a pseudo-MDN (Mobile Device Number))
- name: Retrieve the Triggers
  description: Retrieve the triggers associated with the feature and the account.
- name: Update Triggers
  description: Updates the trigger threshold values for alerts.
- name: SIM Actions
  description: Activate and Deactivate the SIM.
- name: Global Reporting
  description: 'Use these endpoints to determine the status of requests or the history of device provisioning.  '
- name: Registration
  description: ''
- name: Map Data Manager
  description: ''
externalDocs:
  description: Verizon Terms of Service
  url: https://www.verizon.com/business/5g-edge-portal/legal.html
